THEORY ProofList IS
  _f(1) & _f(2) & _f(9) & _f(49) & largest.4,(_f(50) & _f(4) => _f(54));
  _f(1) & _f(2) & _f(9) & _f(49) & largest.3,(_f(50) & _f(4) => _f(53));
  _f(1) & _f(2) & _f(9) & _f(49) & largest.2,(_f(50) & _f(4) => _f(52));
  _f(1) & _f(2) & _f(9) & _f(49) & largest.1,(_f(50) & _f(4) => _f(51));
  _f(1) & _f(2) & _f(9) & _f(10) & add.31,(_f(46) & _f(47) => _f(48));
  _f(1) & _f(2) & _f(9) & _f(10) & add.30,(_f(44) & _f(4) => _f(45));
  _f(1) & _f(2) & _f(9) & _f(10) & add.29,(_f(42) & _f(4) => _f(43));
  _f(1) & _f(2) & _f(9) & _f(10) & add.28,(_f(41) & _f(4) => _f(40));
  _f(1) & _f(2) & _f(9) & _f(10) & add.27,(_f(41) & _f(4) => _f(38));
  _f(1) & _f(2) & _f(9) & _f(10) & add.26,(_f(39) & _f(4) => _f(40));
  _f(1) & _f(2) & _f(9) & _f(10) & add.25,(_f(39) & _f(4) => _f(38));
  _f(1) & _f(2) & _f(9) & _f(10) & add.24,(_f(37) & _f(4) => _f(38));
  _f(1) & _f(2) & _f(9) & _f(10) & add.23,(_f(36) & _f(4) => _f(18));
  _f(1) & _f(2) & _f(9) & _f(10) & add.22,(_f(36) & _f(4) => _f(17));
  _f(1) & _f(2) & _f(9) & _f(10) & add.21,(_f(35) & _f(4) => _f(30));
  _f(1) & _f(2) & _f(9) & _f(10) & add.20,(_f(34) & _f(4) => _f(24));
  _f(1) & _f(2) & _f(9) & _f(10) & add.19,(_f(31) & _f(4) => _f(15));
  _f(1) & _f(2) & _f(9) & _f(10) & add.18,(_f(31) & _f(4) => _f(33));
  _f(1) & _f(2) & _f(9) & _f(10) & add.17,(_f(31) & _f(4) => _f(32));
  _f(1) & _f(2) & _f(9) & _f(10) & add.16,(_f(29) & _f(4) => _f(30));
  _f(1) & _f(2) & _f(9) & _f(10) & add.15,(_f(28) & _f(4) => _f(24));
  _f(1) & _f(2) & _f(9) & _f(10) & add.14,(_f(27) & _f(4) => _f(18));
  _f(1) & _f(2) & _f(9) & _f(10) & add.13,(_f(27) & _f(4) => _f(17));
  _f(1) & _f(2) & _f(9) & _f(10) & add.12,(_f(25) & _f(4) => _f(26));
  _f(1) & _f(2) & _f(9) & _f(10) & add.11,(_f(23) & _f(4) => _f(24));
  _f(1) & _f(2) & _f(9) & _f(10) & add.10,(_f(23) & _f(4) => _f(22));
  _f(1) & _f(2) & _f(9) & _f(10) & add.9,(_f(23) & _f(4) => _f(20));
  _f(1) & _f(2) & _f(9) & _f(10) & add.8,(_f(21) & _f(4) => _f(22));
  _f(1) & _f(2) & _f(9) & _f(10) & add.7,(_f(21) & _f(4) => _f(20));
  _f(1) & _f(2) & _f(9) & _f(10) & add.6,(_f(19) & _f(4) => _f(20));
  _f(1) & _f(2) & _f(9) & _f(10) & add.5,(_f(16) & _f(4) => _f(18));
  _f(1) & _f(2) & _f(9) & _f(10) & add.4,(_f(16) & _f(4) => _f(17));
  _f(1) & _f(2) & _f(9) & _f(10) & add.3,(_f(14) & _f(4) => _f(15));
  _f(1) & _f(2) & _f(9) & _f(10) & add.2,(_f(11) & _f(4) => _f(13));
  _f(1) & _f(2) & _f(9) & _f(10) & add.1,(_f(11) & _f(4) => _f(12));
  _f(1) & _f(2) & Initialisation.2,(_f(6) & _f(7) => _f(8));
  _f(1) & _f(2) & Initialisation.1,(_f(3) & _f(4) => _f(5))
END
&
THEORY Formulas IS
  ("`Seen and used machines properties'" & uint32 : POW(INTEGER) & uint32 = 0..2147483647 & uint16 : POW(INTEGER) & uint16 = 0..65535);
  ("`Included,imported and extended machines invariants'" & ucmem$1 : NATURAL +-> uint32 & dom(ucmem$1) = NATURAL & ucpc$1 : INTEGER & 0<=ucpc$1 & ucend$1 : INTEGER & 0<=ucend$1 & ucpc$1<=ucend$1);
  ("`Local hypotheses'" & mem$0 : NATURAL +-> uint32 & dom(mem$0) = NATURAL & end$0 : INTEGER & 0<=end$0);
  "`Check preconditions of called operation, or While loop construction, or Assert predicates'";
  (0 : uint32);
  ("`Local hypotheses'" & mem$0 : NATURAL +-> uint32 & dom(mem$0) = NATURAL & end$0 : INTEGER & 0<=end$0 & mem$0<+{0|->0} : NATURAL +-> uint32 & dom(mem$0<+{0|->0}) = NATURAL & 1 : INTEGER);
  "`Check that the invariant (max(st) = ucmem(0)) is established by the initialisation - ref 4.3, 5.4'";
  (max({}) = (mem$0<+{0|->0})(0));
  ("`Previous components invariants'" & st : POW(uint32) & "`Component invariant'" & max(st) = ucmem$1(0));
  ("`add preconditions in previous components'" & v : uint32 & not(v : st));
  ("`add preconditions in this component'" & v : uint32 & not(v : st) & "`Local hypotheses'" & 0<=ucpc$2 & ucpc$2<=3 & (ucpc$2 = 0 => ucmem$2(0) = max(st)) & (ucpc$2 = 1 => ucmem$2(0) = max(st) & ucmem$2(1) = v) & (ucpc$2 = 2 => ucmem$2(0) = max(st) & ucmem$2(1) = v & max(st)+1<=v) & (ucpc$2 = 3 => ucmem$2(0) = max({v}\/{max(st)})));
  (3-ucpc$2 : INTEGER);
  (0<=3-ucpc$2);
  ("`add preconditions in this component'" & v : uint32 & not(v : st) & "`Local hypotheses'" & 0<=ucpc$2 & ucpc$2<=3 & (ucpc$2 = 0 => ucmem$2(0) = max(st)) & (ucpc$2 = 1 => ucmem$2(0) = max(st) & ucmem$2(1) = v) & (ucpc$2 = 2 => ucmem$2(0) = max(st) & ucmem$2(1) = v & max(st)+1<=v) & (ucpc$2 = 3 => ucmem$2(0) = max({v}\/{max(st)})) & ucpc$2+1<=3 & not(ucpc$2 = 0) & not(ucpc$2 = 2) & ucpc$2 = 1 & ucmem$2(1)<=ucmem$2(0));
  (ucpc$2+2<=3);
  ("`add preconditions in this component'" & v : uint32 & not(v : st) & "`Local hypotheses'" & 0<=ucpc$2 & ucpc$2<=3 & (ucpc$2 = 0 => ucmem$2(0) = max(st)) & (ucpc$2 = 1 => ucmem$2(0) = max(st) & ucmem$2(1) = v) & (ucpc$2 = 2 => ucmem$2(0) = max(st) & ucmem$2(1) = v & max(st)+1<=v) & (ucpc$2 = 3 => ucmem$2(0) = max({v}\/{max(st)})) & ucpc$2+1<=3 & not(ucpc$2 = 2) & not(ucpc$2 = 1) & ucpc$2 = 0);
  (3-(ucpc$2+1)+1<=3-ucpc$2);
  (0<=ucpc$2+1);
  ("`add preconditions in this component'" & v : uint32 & not(v : st) & "`Local hypotheses'" & 0<=ucpc$2 & ucpc$2<=3 & (ucpc$2 = 0 => ucmem$2(0) = max(st)) & (ucpc$2 = 1 => ucmem$2(0) = max(st) & ucmem$2(1) = v) & (ucpc$2 = 2 => ucmem$2(0) = max(st) & ucmem$2(1) = v & max(st)+1<=v) & (ucpc$2 = 3 => ucmem$2(0) = max({v}\/{max(st)})) & ucpc$2+1<=3 & not(ucpc$2 = 2) & not(ucpc$2 = 1) & ucpc$2 = 0 & ucpc$2+1 = 0);
  ((ucmem$2<+{1|->v})(0) = max(st));
  ("`add preconditions in this component'" & v : uint32 & not(v : st) & "`Local hypotheses'" & 0<=ucpc$2 & ucpc$2<=3 & (ucpc$2 = 0 => ucmem$2(0) = max(st)) & (ucpc$2 = 1 => ucmem$2(0) = max(st) & ucmem$2(1) = v) & (ucpc$2 = 2 => ucmem$2(0) = max(st) & ucmem$2(1) = v & max(st)+1<=v) & (ucpc$2 = 3 => ucmem$2(0) = max({v}\/{max(st)})) & ucpc$2+1<=3 & not(ucpc$2 = 2) & not(ucpc$2 = 1) & ucpc$2 = 0 & ucpc$2+1 = 1);
  ((ucmem$2<+{1|->v})(1) = v);
  ("`add preconditions in this component'" & v : uint32 & not(v : st) & "`Local hypotheses'" & 0<=ucpc$2 & ucpc$2<=3 & (ucpc$2 = 0 => ucmem$2(0) = max(st)) & (ucpc$2 = 1 => ucmem$2(0) = max(st) & ucmem$2(1) = v) & (ucpc$2 = 2 => ucmem$2(0) = max(st) & ucmem$2(1) = v & max(st)+1<=v) & (ucpc$2 = 3 => ucmem$2(0) = max({v}\/{max(st)})) & ucpc$2+1<=3 & not(ucpc$2 = 2) & not(ucpc$2 = 1) & ucpc$2 = 0 & ucpc$2+1 = 2);
  (max(st)+1<=v);
  ("`add preconditions in this component'" & v : uint32 & not(v : st) & "`Local hypotheses'" & 0<=ucpc$2 & ucpc$2<=3 & (ucpc$2 = 0 => ucmem$2(0) = max(st)) & (ucpc$2 = 1 => ucmem$2(0) = max(st) & ucmem$2(1) = v) & (ucpc$2 = 2 => ucmem$2(0) = max(st) & ucmem$2(1) = v & max(st)+1<=v) & (ucpc$2 = 3 => ucmem$2(0) = max({v}\/{max(st)})) & ucpc$2+1<=3 & not(ucpc$2 = 2) & not(ucpc$2 = 1) & ucpc$2 = 0 & ucpc$2+1 = 3);
  ((ucmem$2<+{1|->v})(0) = max({v}\/{max(st)}));
  ("`add preconditions in this component'" & v : uint32 & not(v : st) & "`Local hypotheses'" & 0<=ucpc$2 & ucpc$2<=3 & (ucpc$2 = 0 => ucmem$2(0) = max(st)) & (ucpc$2 = 1 => ucmem$2(0) = max(st) & ucmem$2(1) = v) & (ucpc$2 = 2 => ucmem$2(0) = max(st) & ucmem$2(1) = v & max(st)+1<=v) & (ucpc$2 = 3 => ucmem$2(0) = max({v}\/{max(st)})) & ucpc$2+1<=3 & not(ucpc$2 = 0) & not(ucpc$2 = 2) & ucmem$2(0)+1<=ucmem$2(1) & ucpc$2 = 1);
  ("`add preconditions in this component'" & v : uint32 & not(v : st) & "`Local hypotheses'" & 0<=ucpc$2 & ucpc$2<=3 & (ucpc$2 = 0 => ucmem$2(0) = max(st)) & (ucpc$2 = 1 => ucmem$2(0) = max(st) & ucmem$2(1) = v) & (ucpc$2 = 2 => ucmem$2(0) = max(st) & ucmem$2(1) = v & max(st)+1<=v) & (ucpc$2 = 3 => ucmem$2(0) = max({v}\/{max(st)})) & ucpc$2+1<=3 & not(ucpc$2 = 0) & not(ucpc$2 = 2) & ucmem$2(0)+1<=ucmem$2(1) & ucpc$2 = 1 & ucpc$2+1 = 2);
  ("`add preconditions in this component'" & v : uint32 & not(v : st) & "`Local hypotheses'" & 0<=ucpc$2 & ucpc$2<=3 & (ucpc$2 = 0 => ucmem$2(0) = max(st)) & (ucpc$2 = 1 => ucmem$2(0) = max(st) & ucmem$2(1) = v) & (ucpc$2 = 2 => ucmem$2(0) = max(st) & ucmem$2(1) = v & max(st)+1<=v) & (ucpc$2 = 3 => ucmem$2(0) = max({v}\/{max(st)})) & ucpc$2+1<=3 & not(ucpc$2 = 0) & not(ucpc$2 = 2) & ucmem$2(0)+1<=ucmem$2(1) & ucpc$2 = 1 & ucpc$2+1 = 3);
  (ucmem$2(0) = max({v}\/{max(st)}));
  ("`add preconditions in this component'" & v : uint32 & not(v : st) & "`Local hypotheses'" & 0<=ucpc$2 & ucpc$2<=3 & (ucpc$2 = 0 => ucmem$2(0) = max(st)) & (ucpc$2 = 1 => ucmem$2(0) = max(st) & ucmem$2(1) = v) & (ucpc$2 = 2 => ucmem$2(0) = max(st) & ucmem$2(1) = v & max(st)+1<=v) & (ucpc$2 = 3 => ucmem$2(0) = max({v}\/{max(st)})) & ucpc$2+1<=3 & not(ucpc$2 = 0) & not(ucpc$2 = 2) & not(ucmem$2(0)+1<=ucmem$2(1)) & ucpc$2 = 1);
  (3-(ucpc$2+2)+1<=3-ucpc$2);
  (0<=ucpc$2+2);
  ("`add preconditions in this component'" & v : uint32 & not(v : st) & "`Local hypotheses'" & 0<=ucpc$2 & ucpc$2<=3 & (ucpc$2 = 0 => ucmem$2(0) = max(st)) & (ucpc$2 = 1 => ucmem$2(0) = max(st) & ucmem$2(1) = v) & (ucpc$2 = 2 => ucmem$2(0) = max(st) & ucmem$2(1) = v & max(st)+1<=v) & (ucpc$2 = 3 => ucmem$2(0) = max({v}\/{max(st)})) & ucpc$2+1<=3 & not(ucpc$2 = 0) & not(ucpc$2 = 2) & not(ucmem$2(0)+1<=ucmem$2(1)) & ucpc$2 = 1 & ucpc$2+2 = 2);
  ("`add preconditions in this component'" & v : uint32 & not(v : st) & "`Local hypotheses'" & 0<=ucpc$2 & ucpc$2<=3 & (ucpc$2 = 0 => ucmem$2(0) = max(st)) & (ucpc$2 = 1 => ucmem$2(0) = max(st) & ucmem$2(1) = v) & (ucpc$2 = 2 => ucmem$2(0) = max(st) & ucmem$2(1) = v & max(st)+1<=v) & (ucpc$2 = 3 => ucmem$2(0) = max({v}\/{max(st)})) & ucpc$2+1<=3 & not(ucpc$2 = 0) & not(ucpc$2 = 2) & not(ucmem$2(0)+1<=ucmem$2(1)) & ucpc$2 = 1 & ucpc$2+2 = 3);
  ("`add preconditions in this component'" & v : uint32 & not(v : st) & "`Local hypotheses'" & 0<=ucpc$2 & ucpc$2<=3 & (ucpc$2 = 0 => ucmem$2(0) = max(st)) & (ucpc$2 = 1 => ucmem$2(0) = max(st) & ucmem$2(1) = v) & (ucpc$2 = 2 => ucmem$2(0) = max(st) & ucmem$2(1) = v & max(st)+1<=v) & (ucpc$2 = 3 => ucmem$2(0) = max({v}\/{max(st)})) & ucpc$2+1<=3 & not(ucpc$2 = 0) & not(ucpc$2 = 1) & ucpc$2 = 2);
  ("`add preconditions in this component'" & v : uint32 & not(v : st) & "`Local hypotheses'" & 0<=ucpc$2 & ucpc$2<=3 & (ucpc$2 = 0 => ucmem$2(0) = max(st)) & (ucpc$2 = 1 => ucmem$2(0) = max(st) & ucmem$2(1) = v) & (ucpc$2 = 2 => ucmem$2(0) = max(st) & ucmem$2(1) = v & max(st)+1<=v) & (ucpc$2 = 3 => ucmem$2(0) = max({v}\/{max(st)})) & ucpc$2+1<=3 & not(ucpc$2 = 0) & not(ucpc$2 = 1) & ucpc$2 = 2 & ucpc$2+1 = 0);
  ((ucmem$2<+{0|->ucmem$2(1)})(0) = max(st));
  ("`add preconditions in this component'" & v : uint32 & not(v : st) & "`Local hypotheses'" & 0<=ucpc$2 & ucpc$2<=3 & (ucpc$2 = 0 => ucmem$2(0) = max(st)) & (ucpc$2 = 1 => ucmem$2(0) = max(st) & ucmem$2(1) = v) & (ucpc$2 = 2 => ucmem$2(0) = max(st) & ucmem$2(1) = v & max(st)+1<=v) & (ucpc$2 = 3 => ucmem$2(0) = max({v}\/{max(st)})) & ucpc$2+1<=3 & not(ucpc$2 = 0) & not(ucpc$2 = 1) & ucpc$2 = 2 & ucpc$2+1 = 1);
  ((ucmem$2<+{0|->ucmem$2(1)})(1) = v);
  ("`add preconditions in this component'" & v : uint32 & not(v : st) & "`Local hypotheses'" & 0<=ucpc$2 & ucpc$2<=3 & (ucpc$2 = 0 => ucmem$2(0) = max(st)) & (ucpc$2 = 1 => ucmem$2(0) = max(st) & ucmem$2(1) = v) & (ucpc$2 = 2 => ucmem$2(0) = max(st) & ucmem$2(1) = v & max(st)+1<=v) & (ucpc$2 = 3 => ucmem$2(0) = max({v}\/{max(st)})) & ucpc$2+1<=3 & not(ucpc$2 = 0) & not(ucpc$2 = 1) & ucpc$2 = 2 & ucpc$2+1 = 2);
  ("`add preconditions in this component'" & v : uint32 & not(v : st) & "`Local hypotheses'" & 0<=ucpc$2 & ucpc$2<=3 & (ucpc$2 = 0 => ucmem$2(0) = max(st)) & (ucpc$2 = 1 => ucmem$2(0) = max(st) & ucmem$2(1) = v) & (ucpc$2 = 2 => ucmem$2(0) = max(st) & ucmem$2(1) = v & max(st)+1<=v) & (ucpc$2 = 3 => ucmem$2(0) = max({v}\/{max(st)})) & ucpc$2+1<=3 & not(ucpc$2 = 0) & not(ucpc$2 = 1) & ucpc$2 = 2 & ucpc$2+1 = 3);
  ((ucmem$2<+{0|->ucmem$2(1)})(0) = max({v}\/{max(st)}));
  ("`add preconditions in this component'" & v : uint32 & not(v : st) & "`Local hypotheses'" & 0<=ucpc$2 & ucpc$2<=3 & (ucpc$2 = 0 => ucmem$2(0) = max(st)) & (ucpc$2 = 1 => ucmem$2(0) = max(st) & ucmem$2(1) = v) & (ucpc$2 = 2 => ucmem$2(0) = max(st) & ucmem$2(1) = v & max(st)+1<=v) & (ucpc$2 = 3 => ucmem$2(0) = max({v}\/{max(st)})) & ucpc$2+1<=3 & not(ucpc$2 = 0) & not(ucpc$2 = 1) & not(ucpc$2 = 2));
  (3-ucpc$2+1<=3-ucpc$2);
  ("`add preconditions in this component'" & v : uint32 & not(v : st) & "`Local hypotheses'" & not(ucpcz$7777+1<=3) & 0<=ucpcz$7777 & ucpcz$7777<=3 & (ucpcz$7777 = 0 => ucmemz$7777(0) = max(st)) & (ucpcz$7777 = 1 => ucmemz$7777(0) = max(st) & ucmemz$7777(1) = v) & (ucpcz$7777 = 2 => ucmemz$7777(0) = max(st) & ucmemz$7777(1) = v & max(st)+1<=v) & (ucpcz$7777 = 3 => ucmemz$7777(0) = max({v}\/{max(st)})) & ucmemz$7777 : NATURAL +-> uint32 & dom(ucmemz$7777) = NATURAL & ucpcz$7777 : INTEGER & 3 : INTEGER);
  "`Check that the invariant (max(st) = ucmem(0)) is preserved by the operation - ref 4.4, 5.5'";
  (max(st\/{v}) = ucmemz$7777(0));
  ("`largest preconditions in previous components'" & not(st = {}));
  ("`largest preconditions in this component'" & not(st = {}));
  (ucmem$1(0) : INTEGER);
  (ucmem$1(0)<=2147483647);
  (-2147483647<=ucmem$1(0));
  (0 : dom(ucmem$1));
  ("`Variables conservation'" & ucend = ucend$1 & ucpc = ucpc$1 & ucmem = ucmem$1);
  ("`Included,imported and extended machines invariants'" & ucmem : NATURAL +-> uint32 & dom(ucmem) = NATURAL & ucpc : INTEGER & 0<=ucpc & ucend : INTEGER & 0<=ucend & ucpc<=ucend)
END
&
THEORY EnumerateX 
END
&
THEORY Version IS
  POVersion(V3.8.3)(CLT == "V3.7.6")(local_op == OK)
END
