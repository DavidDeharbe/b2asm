THEORY ProofList IS
  _f(1) & _f(2) & _f(6) & run.23,(_f(32) & _f(33) => _f(34));
  _f(1) & _f(2) & _f(6) & run.22,(_f(30) & _f(7) => _f(31));
  _f(1) & _f(2) & _f(6) & run.21,(_f(13) & _f(7) => _f(29));
  _f(1) & _f(2) & _f(6) & run.20,(_f(13) & _f(7) => _f(28));
  _f(1) & _f(2) & _f(6) & run.19,(_f(13) & _f(7) => _f(27));
  _f(1) & _f(2) & _f(6) & run.18,(_f(13) & _f(7) => _f(26));
  _f(1) & _f(2) & _f(6) & run.17,(_f(13) & _f(7) => _f(25));
  _f(1) & _f(2) & _f(6) & run.16,(_f(13) & _f(7) => _f(24));
  _f(1) & _f(2) & _f(6) & run.15,(_f(13) & _f(7) => _f(23));
  _f(1) & _f(2) & _f(6) & run.14,(_f(13) & _f(7) => _f(22));
  _f(1) & _f(2) & _f(6) & run.13,(_f(13) & _f(7) => _f(21));
  _f(1) & _f(2) & _f(6) & run.12,(_f(13) & _f(7) => _f(20));
  _f(1) & _f(2) & _f(6) & run.11,(_f(13) & _f(7) => _f(19));
  _f(1) & _f(2) & _f(6) & run.10,(_f(13) & _f(7) => _f(18));
  _f(1) & _f(2) & _f(6) & run.9,(_f(13) & _f(7) => _f(17));
  _f(1) & _f(2) & _f(6) & run.8,(_f(13) & _f(7) => _f(16));
  _f(1) & _f(2) & _f(6) & run.7,(_f(13) & _f(7) => _f(15));
  _f(1) & _f(2) & _f(6) & run.6,(_f(13) & _f(7) => _f(14));
  _f(1) & _f(2) & _f(6) & run.5,(_f(10) & _f(7) => _f(12));
  _f(1) & _f(2) & _f(6) & run.4,(_f(10) & _f(7) => _f(11));
  _f(1) & _f(2) & _f(6) & run.3,(_f(7) => _f(9));
  _f(1) & _f(2) & _f(6) & run.2,(_f(7) => _f(8));
  _f(1) & _f(2) & _f(6) & run.1,(_f(7) => _f(5));
  _f(1) & _f(2) & Initialisation.1,(_f(3) & _f(4) => _f(5))
END
&
THEORY Formulas IS
  ("`Seen and used machines properties'" & uint32 : POW(INTEGER) & uint32 = 0..2147483647 & uint16 : POW(INTEGER) & uint16 = 0..65535);
  ("`Included,imported and extended machines invariants'" & aivalue$1 : uint32 & bivalue$1 : uint32 & sivalue$1 : uint32);
  ("`Local hypotheses'" & value$0 : uint32 & value$1 : uint32 & value$2 : uint32);
  "`Check preconditions of called operation, or While loop construction, or Assert predicates'" & "`Check preconditions of called operation, or While loop construction, or Assert predicates'" & "`Check preconditions of called operation, or While loop construction, or Assert predicates'";
  (0 : uint32);
  ("`Previous components invariants'" & a : uint32 & b : uint32 & s : uint32 & a+b : uint32 & s = a+b & "`Component invariant'" & aivalue$1 = a & bivalue$1 = b & sivalue$1 = s);
  "`Check preconditions of called operation, or While loop construction, or Assert predicates'";
  (0<=bivalue$1);
  (aivalue$1 = aivalue$1+0);
  ("`Local hypotheses'" & v : uint32 & v<=bivalue$1 & sv = aivalue$1+v);
  (bivalue$1-v : INTEGER);
  (0<=bivalue$1-v);
  ("`Local hypotheses'" & v : uint32 & v<=bivalue$1 & sv = aivalue$1+v & not(v = bivalue$1));
  (sv+1 : INTEGER);
  (sv+1<=2147483647);
  (-2147483647<=sv+1);
  (sv : INTEGER);
  (sv<=2147483647);
  (-2147483647<=sv);
  (v+1 : INTEGER);
  (v+1<=2147483647);
  (-2147483647<=v+1);
  (v : INTEGER);
  (v<=2147483647);
  (-2147483647<=v);
  (bivalue$1-(v+1)+1<=bivalue$1-v);
  (v+1 : uint32);
  (v+1<=bivalue$1);
  (sv+1 = aivalue$1+(v+1));
  ("`Local hypotheses'" & v$7777 = bivalue$1 & v$7777 : uint32 & v$7777<=bivalue$1);
  (aivalue$1+v$7777 : uint32);
  ("`Local hypotheses'" & v$7777 = bivalue$1 & v$7777 : uint32 & v$7777<=bivalue$1 & aivalue$1+v$7777 : uint32);
  "`Check that the invariant (sivalue = s) is preserved by the operation - ref 4.4, 5.5'" & "`Check operation refinement - ref 4.4, 5.5'";
  (aivalue$1+v$7777 = a+b);
  ("`Variables conservation'" & aivalue = aivalue$1 & bivalue = bivalue$1 & sivalue = sivalue$1);
  ("`Included,imported and extended machines invariants'" & aivalue : uint32 & bivalue : uint32 & sivalue : uint32)
END
&
THEORY EnumerateX 
END
&
THEORY Version IS
  POVersion(V3.8.3)(CLT == "V3.7.6")(local_op == OK)
END
