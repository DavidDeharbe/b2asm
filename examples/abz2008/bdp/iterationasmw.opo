THEORY OPOBalanceX IS
  iterationasmw,138;
  ValuesLemmas,1;
  InstanciatedConstraintsLemmas,0;
  Initialisation,8;
  run,129
END
&
THEORY OPOProofList IS
  _f(1) & _f(2) & _f(13) & run.129,(_f(144) & _of(83) => _of(84));
  _f(1) & _f(2) & _f(13) & run.128,(_f(144) & _of(81) => _of(82));
  _f(1) & _f(2) & _f(13) & run.127,(_f(142) & _of(4) => _of(80));
  _f(1) & _f(2) & _f(13) & run.126,(_f(142) & _of(4) => _of(79));
  _f(1) & _f(2) & _f(13) & run.125,(_f(142) & _of(4) => _of(78));
  _f(1) & _f(2) & _f(13) & run.124,(_f(142) & _of(4) => _of(77));
  _f(1) & _f(2) & _f(13) & run.123,(_f(142) & _of(4) => _of(76));
  _f(1) & _f(2) & _f(13) & run.122,(_f(142) & _of(4) => _of(75));
  _f(1) & _f(2) & _f(13) & run.121,(_f(142) & _of(4) => _of(74));
  _f(1) & _f(2) & _f(13) & run.120,(_f(142) & _of(4) => _of(73));
  _f(1) & _f(2) & _f(13) & run.119,(_f(142) & _of(4) => _of(56));
  _f(1) & _f(2) & _f(13) & run.118,(_f(142) & _of(4) => _of(55));
  _f(1) & _f(2) & _f(13) & run.117,(_f(142) & _of(4) => _of(54));
  _f(1) & _f(2) & _f(13) & run.116,(_f(142) & _of(4) => _of(53));
  _f(1) & _f(2) & _f(13) & run.115,(_f(142) & _of(4) => _of(47));
  _f(1) & _f(2) & _f(13) & run.114,(_f(142) & _of(4) => _of(45));
  _f(1) & _f(2) & _f(13) & run.113,(_f(142) & _of(4) => _of(72));
  _f(1) & _f(2) & _f(13) & run.112,(_f(142) & _of(4) => _of(71));
  _f(1) & _f(2) & _f(13) & run.111,(_f(26) & _of(4) => _f(51));
  _f(1) & _f(2) & _f(13) & run.110,(_f(26) & _of(4) => _f(88));
  _f(1) & _f(2) & _f(13) & run.109,(_f(26) & _of(4) => _of(58));
  _f(1) & _f(2) & _f(13) & run.108,(_f(26) & _of(69) => _of(2));
  _f(1) & _f(2) & _f(13) & run.107,(_f(26) & _of(4) => _of(56));
  _f(1) & _f(2) & _f(13) & run.106,(_f(26) & _of(4) => _of(55));
  _f(1) & _f(2) & _f(13) & run.105,(_f(26) & _of(4) => _of(54));
  _f(1) & _f(2) & _f(13) & run.104,(_f(26) & _of(4) => _of(53));
  _f(1) & _f(2) & _f(13) & run.103,(_f(26) & _of(4) => _of(70));
  _f(1) & _f(2) & _f(13) & run.102,(_f(137) & _of(4) => _f(51));
  _f(1) & _f(2) & _f(13) & run.101,(_f(135) & _of(4) => _f(51));
  _f(1) & _f(2) & _f(13) & run.100,(_f(134) & _of(4) => _f(51));
  _f(1) & _f(2) & _f(13) & run.99,(_f(24) & _of(4) => _of(47));
  _f(1) & _f(2) & _f(13) & run.98,(_f(24) & _of(4) => _of(45));
  _f(1) & _f(2) & _f(13) & run.97,(_f(118) & _of(4) => _f(51));
  _f(1) & _f(2) & _f(13) & run.96,(_f(116) & _of(4) => _f(51));
  _f(1) & _f(2) & _f(13) & run.95,(_f(115) & _of(4) => _f(51));
  _f(1) & _f(2) & _f(13) & run.94,(_f(22) & _of(4) => _of(47));
  _f(1) & _f(2) & _f(13) & run.93,(_f(22) & _of(4) => _of(45));
  _f(1) & _f(2) & _f(13) & run.92,(_f(100) & _of(4) => _f(49));
  _f(1) & _f(2) & _f(13) & run.91,(_f(100) & _of(4) => _of(59));
  _f(1) & _f(2) & _f(13) & run.90,(_f(100) & _of(4) => _of(58));
  _f(1) & _f(2) & _f(13) & run.89,(_f(100) & _of(69) => _of(2));
  _f(1) & _f(2) & _f(13) & run.88,(_f(100) & _of(4) => _of(56));
  _f(1) & _f(2) & _f(13) & run.87,(_f(100) & _of(4) => _of(55));
  _f(1) & _f(2) & _f(13) & run.86,(_f(100) & _of(4) => _of(54));
  _f(1) & _f(2) & _f(13) & run.85,(_f(100) & _of(4) => _of(53));
  _f(1) & _f(2) & _f(13) & run.84,(_f(100) & _of(4) => _of(47));
  _f(1) & _f(2) & _f(13) & run.83,(_f(100) & _of(4) => _of(45));
  _f(1) & _f(2) & _f(13) & run.82,(_f(100) & _of(4) => _of(16));
  _f(1) & _f(2) & _f(13) & run.81,(_of(68) & _of(4) => _of(59));
  _f(1) & _f(2) & _f(13) & run.80,(_of(68) & _of(4) => _of(58));
  _f(1) & _f(2) & _f(13) & run.79,(_of(67) & _of(4) => _of(58));
  _f(1) & _f(2) & _f(13) & run.78,(_f(97) & _of(4) => _of(59));
  _f(1) & _f(2) & _f(13) & run.77,(_of(66) & _of(4) => _of(59));
  _f(1) & _f(2) & _f(13) & run.76,(_of(66) & _of(4) => _of(58));
  _f(1) & _f(2) & _f(13) & run.75,(_of(65) & _of(4) => _of(59));
  _f(1) & _f(2) & _f(13) & run.74,(_of(65) & _of(4) => _of(58));
  _f(1) & _f(2) & _f(13) & run.73,(_of(64) & _of(4) => _f(47));
  _f(1) & _f(2) & _f(13) & run.72,(_of(64) & _of(4) => _of(59));
  _f(1) & _f(2) & _f(13) & run.71,(_of(64) & _of(4) => _of(58));
  _f(1) & _f(2) & _f(13) & run.70,(_f(90) & _of(4) => _of(56));
  _f(1) & _f(2) & _f(13) & run.69,(_f(90) & _of(4) => _of(55));
  _f(1) & _f(2) & _f(13) & run.68,(_f(90) & _of(4) => _of(54));
  _f(1) & _f(2) & _f(13) & run.67,(_f(90) & _of(4) => _of(53));
  _f(1) & _f(2) & _f(13) & run.66,(_f(90) & _of(4) => _of(47));
  _f(1) & _f(2) & _f(13) & run.65,(_f(90) & _of(4) => _of(45));
  _f(1) & _f(2) & _f(13) & run.64,(_of(63) & _of(4) => _of(59));
  _f(1) & _f(2) & _f(13) & run.63,(_of(63) & _of(4) => _of(58));
  _f(1) & _f(2) & _f(13) & run.62,(_of(62) & _of(4) => _of(58));
  _f(1) & _f(2) & _f(13) & run.61,(_f(85) & _of(4) => _of(59));
  _f(1) & _f(2) & _f(13) & run.60,(_of(61) & _of(4) => _of(59));
  _f(1) & _f(2) & _f(13) & run.59,(_of(61) & _of(4) => _of(58));
  _f(1) & _f(2) & _f(13) & run.58,(_of(60) & _of(4) => _of(59));
  _f(1) & _f(2) & _f(13) & run.57,(_of(60) & _of(4) => _of(58));
  _f(1) & _f(2) & _f(13) & run.56,(_of(57) & _of(4) => _f(47));
  _f(1) & _f(2) & _f(13) & run.55,(_of(57) & _of(4) => _of(59));
  _f(1) & _f(2) & _f(13) & run.54,(_of(57) & _of(4) => _of(58));
  _f(1) & _f(2) & _f(13) & run.53,(_f(76) & _of(4) => _of(56));
  _f(1) & _f(2) & _f(13) & run.52,(_f(76) & _of(4) => _of(55));
  _f(1) & _f(2) & _f(13) & run.51,(_f(76) & _of(4) => _of(54));
  _f(1) & _f(2) & _f(13) & run.50,(_f(76) & _of(4) => _of(53));
  _f(1) & _f(2) & _f(13) & run.49,(_f(76) & _of(4) => _of(47));
  _f(1) & _f(2) & _f(13) & run.48,(_f(76) & _of(4) => _of(45));
  _f(1) & _f(2) & _f(13) & run.47,(_f(76) & _of(4) => _of(35));
  _f(1) & _f(2) & _f(13) & run.46,(_of(52) & _of(4) => _of(49));
  _f(1) & _f(2) & _f(13) & run.45,(_of(51) & _of(4) => _of(49));
  _f(1) & _f(2) & _f(13) & run.44,(_f(19) & _of(4) => _of(47));
  _f(1) & _f(2) & _f(13) & run.43,(_f(19) & _of(4) => _of(45));
  _f(1) & _f(2) & _f(13) & run.42,(_of(50) & _of(4) => _of(49));
  _f(1) & _f(2) & _f(13) & run.41,(_of(48) & _of(4) => _of(49));
  _f(1) & _f(2) & _f(13) & run.40,(_f(33) & _of(4) => _of(47));
  _f(1) & _f(2) & _f(13) & run.39,(_f(33) & _of(4) => _of(45));
  _f(1) & _f(2) & _f(13) & run.38,(_f(26) & _of(4) => _of(46));
  _f(1) & _f(2) & _f(13) & run.37,(_f(26) & _of(4) => _of(45));
  _f(1) & _f(2) & _f(13) & run.36,(_of(43) & _of(28) => _of(44));
  _f(1) & _f(2) & _f(13) & run.35,(_of(43) & _of(4) => _of(10));
  _f(1) & _f(2) & _f(13) & run.34,(_of(42) & _of(28) => _of(35));
  _f(1) & _f(2) & _f(13) & run.33,(_of(42) & _of(4) => _of(5));
  _f(1) & _f(2) & _f(13) & run.32,(_of(41) & _of(28) => _of(35));
  _f(1) & _f(2) & _f(13) & run.31,(_of(41) & _of(4) => _of(10));
  _f(1) & _f(2) & _f(13) & run.30,(_of(39) & _of(28) => _of(40));
  _f(1) & _f(2) & _f(13) & run.29,(_of(39) & _of(4) => _of(14));
  _f(1) & _f(2) & _f(13) & run.28,(_of(37) & _of(4) => _of(38));
  _f(1) & _f(2) & _f(13) & run.27,(_of(37) & _of(4) => _of(5));
  _f(1) & _f(2) & _f(13) & run.26,(_of(37) & _of(4) => _of(8));
  _f(1) & _f(2) & _f(13) & run.25,(_f(19) & _of(28) => _of(35));
  _f(1) & _f(2) & _f(13) & run.24,(_of(36) & _of(4) => _of(5));
  _f(1) & _f(2) & _f(13) & run.23,(_of(34) & _of(28) => _of(35));
  _f(1) & _f(2) & _f(13) & run.22,(_of(34) & _of(4) => _of(10));
  _f(1) & _f(2) & _f(13) & run.21,(_of(34) & _of(4) => _of(6));
  _f(1) & _f(2) & _f(13) & run.20,(_of(22) & _of(4) => _of(33));
  _f(1) & _f(2) & _f(13) & run.19,(_of(22) & _of(4) => _of(32));
  _f(1) & _f(2) & _f(13) & run.18,(_of(22) & _of(30) => _of(31));
  _f(1) & _f(2) & _f(13) & run.17,(_of(22) & _of(28) => _of(29));
  _f(1) & _f(2) & _f(13) & run.16,(_of(22) & _of(4) => _of(27));
  _f(1) & _f(2) & _f(13) & run.15,(_of(22) & _of(24) => _of(26));
  _f(1) & _f(2) & _f(13) & run.14,(_of(22) & _of(24) => _of(25));
  _f(1) & _f(2) & _f(13) & run.13,(_of(22) & _of(4) => _of(23));
  _f(1) & _f(2) & _f(13) & run.12,(_of(22) & _of(4) => _of(20));
  _f(1) & _f(2) & _f(13) & run.11,(_of(4) => _of(21));
  _f(1) & _f(2) & _f(13) & run.10,(_of(4) => _of(20));
  _f(1) & _f(2) & _f(13) & run.9,(_of(4) => _of(19));
  _f(1) & _f(2) & _f(13) & run.8,(_of(4) => _of(18));
  _f(1) & _f(2) & _f(13) & run.7,(_of(4) => _of(17));
  _f(1) & _f(2) & _f(13) & run.6,(_of(4) => _of(6));
  _f(1) & _f(2) & _f(13) & run.5,(_of(4) => _of(16));
  _f(1) & _f(2) & _f(13) & run.4,(_of(4) => _of(15));
  _f(1) & _f(2) & _f(13) & run.3,(_of(4) => _of(14));
  _f(1) & _f(2) & _f(13) & run.2,(_of(4) => _of(2));
  _f(1) & _f(2) & _f(13) & run.1,(_of(13) => _of(2));
  _f(1) & _f(2) & Initialisation.8,(_f(6) & _of(12) => _of(2));
  _f(1) & _f(2) & Initialisation.7,(_f(3) & _of(4) => _of(11));
  _f(1) & _f(2) & Initialisation.6,(_f(3) & _of(4) => _of(10));
  _f(1) & _f(2) & Initialisation.5,(_f(3) & _of(4) => _of(9));
  _f(1) & _f(2) & Initialisation.4,(_f(3) & _of(4) => _of(8));
  _f(1) & _f(2) & Initialisation.3,(_f(3) & _of(4) => _of(7));
  _f(1) & _f(2) & Initialisation.2,(_of(3) & _of(4) => _of(6));
  _f(1) & _f(2) & Initialisation.1,(_of(3) & _of(4) => _of(5));
  _f(1) & ValuesLemmas.1,(_of(1) => _of(2))
END
&
THEORY OPOFormulas IS
  "`Check that the property (btrue) is preserved by the valuations - ref 5.2'";
  (btrue);
  ("`Local hypotheses'" & mem$0 : NATURAL +-> uint32 & dom(mem$0) = NATURAL & end$0 : INTEGER & 0<=end$0);
  "`Check preconditions of called operation, or While loop construction, or Assert predicates'";
  (3 : NATURAL);
  (0 : NATURAL);
  (1<=3);
  (1 : NATURAL);
  (2<=3);
  (2 : NATURAL);
  (3<=3);
  "`Check that the invariant (s = ucmem(2)) is established by the initialisation - ref 4.3, 5.4'" & "`Check initialisation refinement - ref 4.3, 5.4'";
  "`Check precondition (btrue) deduction'";
  (7 : NATURAL);
  (0<=0);
  (0<=7);
  (dom(ucmem$1) = NATURAL);
  (ucmem$1(0) = a);
  (ucmem$1(1) = b);
  (0 = 0);
  (ucmem$1(2) = s);
  ("`Local hypotheses'" & bfalse);
  (ucmem$1(2) = a);
  "`Check preconditions of called operation, or While loop construction, or Assert predicates'" & "`Check preconditions of called operation, or While loop construction, or Assert predicates'" & "`Check preconditions of called operation, or While loop construction, or Assert predicates'" & "`Check preconditions of called operation, or While loop construction, or Assert predicates'" & "`Check preconditions of called operation, or While loop construction, or Assert predicates'";
  (ucmem$1(2) = a+ucmem$1(3));
  (ucmem$1(3) = 0);
  (0<=b);
  "`Check preconditions of called operation, or While loop construction, or Assert predicates'" & "`Check preconditions of called operation, or While loop construction, or Assert predicates'";
  (0 = b);
  "`Check preconditions of called operation, or While loop construction, or Assert predicates'" & "`Check preconditions of called operation, or While loop construction, or Assert predicates'" & "`Check preconditions of called operation, or While loop construction, or Assert predicates'";
  (0<b);
  (ucmem$1(2) = a+ucmem$1(3)+1);
  (ucmem$1(3) = 1);
  ("`Local hypotheses'" & 0<=ucpc$2 & ucpc$2<=7 & loopvar$0 : INTEGER & 0<=loopvar$0 & ucmem$2 : NATURAL +-> NATURAL & dom(ucmem$2) = NATURAL & ucmem$2(0) = a & ucmem$2(1) = b & (ucpc$2 = 0 => loopvar$0 = 0 & ucmem$2(2) = s) & (ucpc$2 = 1 => loopvar$0 = 0 & ucmem$2(2) = a) & (ucpc$2 = 2 => ucmem$2(2) = a+ucmem$2(3) & ucmem$2(3) = loopvar$0 & loopvar$0<=b) & (ucpc$2 = 3 => ucmem$2(2) = a+ucmem$2(3) & ucmem$2(3) = loopvar$0 & loopvar$0 = b) & (ucpc$2 = 4 => ucmem$2(2) = a+ucmem$2(3) & ucmem$2(3) = loopvar$0 & loopvar$0+1<=b) & (ucpc$2 = 5 => ucmem$2(2) = a+ucmem$2(3)+1 & ucmem$2(3) = loopvar$0 & loopvar$0+1<=b) & (ucpc$2 = 6 => ucmem$2(2) = a+ucmem$2(3) & ucmem$2(3) = loopvar$0+1 & loopvar$0+1<=b) & (ucpc$2 = 7 => ucmem$2(2) = a+ucmem$2(3) & ucmem$2(3) = loopvar$0 & loopvar$0 = b) & ucpc$2+1<=7 & not(ucpc$2 = 6) & not(ucpc$2 = 5) & not(ucpc$2 = 4) & not(ucpc$2 = 3) & not(ucpc$2 = 2) & not(ucpc$2 = 1) & ucpc$2 = 0);
  (ucpc$2+1<=7);
  ("`Local hypotheses'" & 0<=ucpc$2 & ucpc$2<=7 & loopvar$0 : INTEGER & 0<=loopvar$0 & ucmem$2 : NATURAL +-> NATURAL & dom(ucmem$2) = NATURAL & ucmem$2(0) = a & ucmem$2(1) = b & (ucpc$2 = 0 => loopvar$0 = 0 & ucmem$2(2) = s) & (ucpc$2 = 1 => loopvar$0 = 0 & ucmem$2(2) = a) & (ucpc$2 = 2 => ucmem$2(2) = a+ucmem$2(3) & ucmem$2(3) = loopvar$0 & loopvar$0<=b) & (ucpc$2 = 3 => ucmem$2(2) = a+ucmem$2(3) & ucmem$2(3) = loopvar$0 & loopvar$0 = b) & (ucpc$2 = 4 => ucmem$2(2) = a+ucmem$2(3) & ucmem$2(3) = loopvar$0 & loopvar$0+1<=b) & (ucpc$2 = 5 => ucmem$2(2) = a+ucmem$2(3)+1 & ucmem$2(3) = loopvar$0 & loopvar$0+1<=b) & (ucpc$2 = 6 => ucmem$2(2) = a+ucmem$2(3) & ucmem$2(3) = loopvar$0+1 & loopvar$0+1<=b) & (ucpc$2 = 7 => ucmem$2(2) = a+ucmem$2(3) & ucmem$2(3) = loopvar$0 & loopvar$0 = b) & ucpc$2+1<=7 & not(ucpc$2 = 0) & not(ucpc$2 = 6) & not(ucpc$2 = 5) & not(ucpc$2 = 4) & not(ucpc$2 = 3) & not(ucpc$2 = 2) & ucpc$2 = 1);
  ("`Local hypotheses'" & 0<=ucpc$2 & ucpc$2<=7 & loopvar$0 : INTEGER & 0<=loopvar$0 & ucmem$2 : NATURAL +-> NATURAL & dom(ucmem$2) = NATURAL & ucmem$2(0) = a & ucmem$2(1) = b & (ucpc$2 = 0 => loopvar$0 = 0 & ucmem$2(2) = s) & (ucpc$2 = 1 => loopvar$0 = 0 & ucmem$2(2) = a) & (ucpc$2 = 2 => ucmem$2(2) = a+ucmem$2(3) & ucmem$2(3) = loopvar$0 & loopvar$0<=b) & (ucpc$2 = 3 => ucmem$2(2) = a+ucmem$2(3) & ucmem$2(3) = loopvar$0 & loopvar$0 = b) & (ucpc$2 = 4 => ucmem$2(2) = a+ucmem$2(3) & ucmem$2(3) = loopvar$0 & loopvar$0+1<=b) & (ucpc$2 = 5 => ucmem$2(2) = a+ucmem$2(3)+1 & ucmem$2(3) = loopvar$0 & loopvar$0+1<=b) & (ucpc$2 = 6 => ucmem$2(2) = a+ucmem$2(3) & ucmem$2(3) = loopvar$0+1 & loopvar$0+1<=b) & (ucpc$2 = 7 => ucmem$2(2) = a+ucmem$2(3) & ucmem$2(3) = loopvar$0 & loopvar$0 = b) & ucpc$2+1<=7 & not(ucpc$2 = 0) & not(ucpc$2 = 1) & not(ucpc$2 = 6) & not(ucpc$2 = 5) & not(ucpc$2 = 4) & not(ucpc$2 = 3) & ucpc$2 = 2);
  (ucmem$2(1) = ucmem$2(3) => ucpc$2+1<=7);
  ("`Local hypotheses'" & 0<=ucpc$2 & ucpc$2<=7 & loopvar$0 : INTEGER & 0<=loopvar$0 & ucmem$2 : NATURAL +-> NATURAL & dom(ucmem$2) = NATURAL & ucmem$2(0) = a & ucmem$2(1) = b & (ucpc$2 = 0 => loopvar$0 = 0 & ucmem$2(2) = s) & (ucpc$2 = 1 => loopvar$0 = 0 & ucmem$2(2) = a) & (ucpc$2 = 2 => ucmem$2(2) = a+ucmem$2(3) & ucmem$2(3) = loopvar$0 & loopvar$0<=b) & (ucpc$2 = 3 => ucmem$2(2) = a+ucmem$2(3) & ucmem$2(3) = loopvar$0 & loopvar$0 = b) & (ucpc$2 = 4 => ucmem$2(2) = a+ucmem$2(3) & ucmem$2(3) = loopvar$0 & loopvar$0+1<=b) & (ucpc$2 = 5 => ucmem$2(2) = a+ucmem$2(3)+1 & ucmem$2(3) = loopvar$0 & loopvar$0+1<=b) & (ucpc$2 = 6 => ucmem$2(2) = a+ucmem$2(3) & ucmem$2(3) = loopvar$0+1 & loopvar$0+1<=b) & (ucpc$2 = 7 => ucmem$2(2) = a+ucmem$2(3) & ucmem$2(3) = loopvar$0 & loopvar$0 = b) & ucpc$2+1<=7 & not(ucpc$2 = 0) & not(ucpc$2 = 1) & not(ucpc$2 = 2) & not(ucpc$2 = 6) & not(ucpc$2 = 5) & not(ucpc$2 = 4) & ucpc$2 = 3);
  (7<=7);
  ("`Local hypotheses'" & 0<=ucpc$2 & ucpc$2<=7 & loopvar$0 : INTEGER & 0<=loopvar$0 & ucmem$2 : NATURAL +-> NATURAL & dom(ucmem$2) = NATURAL & ucmem$2(0) = a & ucmem$2(1) = b & (ucpc$2 = 0 => loopvar$0 = 0 & ucmem$2(2) = s) & (ucpc$2 = 1 => loopvar$0 = 0 & ucmem$2(2) = a) & (ucpc$2 = 2 => ucmem$2(2) = a+ucmem$2(3) & ucmem$2(3) = loopvar$0 & loopvar$0<=b) & (ucpc$2 = 3 => ucmem$2(2) = a+ucmem$2(3) & ucmem$2(3) = loopvar$0 & loopvar$0 = b) & (ucpc$2 = 4 => ucmem$2(2) = a+ucmem$2(3) & ucmem$2(3) = loopvar$0 & loopvar$0+1<=b) & (ucpc$2 = 5 => ucmem$2(2) = a+ucmem$2(3)+1 & ucmem$2(3) = loopvar$0 & loopvar$0+1<=b) & (ucpc$2 = 6 => ucmem$2(2) = a+ucmem$2(3) & ucmem$2(3) = loopvar$0+1 & loopvar$0+1<=b) & (ucpc$2 = 7 => ucmem$2(2) = a+ucmem$2(3) & ucmem$2(3) = loopvar$0 & loopvar$0 = b) & ucpc$2+1<=7 & not(ucpc$2 = 0) & not(ucpc$2 = 1) & not(ucpc$2 = 2) & not(ucpc$2 = 3) & not(ucpc$2 = 6) & not(ucpc$2 = 5) & ucpc$2 = 4);
  ("`Local hypotheses'" & 0<=ucpc$2 & ucpc$2<=7 & loopvar$0 : INTEGER & 0<=loopvar$0 & ucmem$2 : NATURAL +-> NATURAL & dom(ucmem$2) = NATURAL & ucmem$2(0) = a & ucmem$2(1) = b & (ucpc$2 = 0 => loopvar$0 = 0 & ucmem$2(2) = s) & (ucpc$2 = 1 => loopvar$0 = 0 & ucmem$2(2) = a) & (ucpc$2 = 2 => ucmem$2(2) = a+ucmem$2(3) & ucmem$2(3) = loopvar$0 & loopvar$0<=b) & (ucpc$2 = 3 => ucmem$2(2) = a+ucmem$2(3) & ucmem$2(3) = loopvar$0 & loopvar$0 = b) & (ucpc$2 = 4 => ucmem$2(2) = a+ucmem$2(3) & ucmem$2(3) = loopvar$0 & loopvar$0+1<=b) & (ucpc$2 = 5 => ucmem$2(2) = a+ucmem$2(3)+1 & ucmem$2(3) = loopvar$0 & loopvar$0+1<=b) & (ucpc$2 = 6 => ucmem$2(2) = a+ucmem$2(3) & ucmem$2(3) = loopvar$0+1 & loopvar$0+1<=b) & (ucpc$2 = 7 => ucmem$2(2) = a+ucmem$2(3) & ucmem$2(3) = loopvar$0 & loopvar$0 = b) & ucpc$2+1<=7 & not(ucpc$2 = 0) & not(ucpc$2 = 1) & not(ucpc$2 = 2) & not(ucpc$2 = 3) & not(ucpc$2 = 4) & not(ucpc$2 = 6) & ucpc$2 = 5);
  ("`Local hypotheses'" & 0<=ucpc$2 & ucpc$2<=7 & loopvar$0 : INTEGER & 0<=loopvar$0 & ucmem$2 : NATURAL +-> NATURAL & dom(ucmem$2) = NATURAL & ucmem$2(0) = a & ucmem$2(1) = b & (ucpc$2 = 0 => loopvar$0 = 0 & ucmem$2(2) = s) & (ucpc$2 = 1 => loopvar$0 = 0 & ucmem$2(2) = a) & (ucpc$2 = 2 => ucmem$2(2) = a+ucmem$2(3) & ucmem$2(3) = loopvar$0 & loopvar$0<=b) & (ucpc$2 = 3 => ucmem$2(2) = a+ucmem$2(3) & ucmem$2(3) = loopvar$0 & loopvar$0 = b) & (ucpc$2 = 4 => ucmem$2(2) = a+ucmem$2(3) & ucmem$2(3) = loopvar$0 & loopvar$0+1<=b) & (ucpc$2 = 5 => ucmem$2(2) = a+ucmem$2(3)+1 & ucmem$2(3) = loopvar$0 & loopvar$0+1<=b) & (ucpc$2 = 6 => ucmem$2(2) = a+ucmem$2(3) & ucmem$2(3) = loopvar$0+1 & loopvar$0+1<=b) & (ucpc$2 = 7 => ucmem$2(2) = a+ucmem$2(3) & ucmem$2(3) = loopvar$0 & loopvar$0 = b) & ucpc$2+1<=7 & not(ucpc$2 = 0) & not(ucpc$2 = 1) & not(ucpc$2 = 2) & not(ucpc$2 = 3) & not(ucpc$2 = 4) & not(ucpc$2 = 5) & ucpc$2 = 6);
  (2<=7);
  (loopvar$0 : INTEGER);
  (1 : INT);
  (0<=loopvar$0);
  ("`Local hypotheses'" & 0<=ucpc$2 & ucpc$2<=7 & loopvar$0 : INTEGER & 0<=loopvar$0 & ucmem$2 : NATURAL +-> NATURAL & dom(ucmem$2) = NATURAL & ucmem$2(0) = a & ucmem$2(1) = b & (ucpc$2 = 0 => loopvar$0 = 0 & ucmem$2(2) = s) & (ucpc$2 = 1 => loopvar$0 = 0 & ucmem$2(2) = a) & (ucpc$2 = 2 => ucmem$2(2) = a+ucmem$2(3) & ucmem$2(3) = loopvar$0 & loopvar$0<=b) & (ucpc$2 = 3 => ucmem$2(2) = a+ucmem$2(3) & ucmem$2(3) = loopvar$0 & loopvar$0 = b) & (ucpc$2 = 4 => ucmem$2(2) = a+ucmem$2(3) & ucmem$2(3) = loopvar$0 & loopvar$0+1<=b) & (ucpc$2 = 5 => ucmem$2(2) = a+ucmem$2(3)+1 & ucmem$2(3) = loopvar$0 & loopvar$0+1<=b) & (ucpc$2 = 6 => ucmem$2(2) = a+ucmem$2(3) & ucmem$2(3) = loopvar$0+1 & loopvar$0+1<=b) & (ucpc$2 = 7 => ucmem$2(2) = a+ucmem$2(3) & ucmem$2(3) = loopvar$0 & loopvar$0 = b) & ucpc$2+1<=7 & not(ucpc$2 = 6) & not(ucpc$2 = 5) & not(ucpc$2 = 4) & not(ucpc$2 = 3) & not(ucpc$2 = 2) & not(ucpc$2 = 1) & ucpc$2 = 0 & ucpc$2+1 = 0);
  (loopvar$0 = 0);
  ("`Local hypotheses'" & 0<=ucpc$2 & ucpc$2<=7 & loopvar$0 : INTEGER & 0<=loopvar$0 & ucmem$2 : NATURAL +-> NATURAL & dom(ucmem$2) = NATURAL & ucmem$2(0) = a & ucmem$2(1) = b & (ucpc$2 = 0 => loopvar$0 = 0 & ucmem$2(2) = s) & (ucpc$2 = 1 => loopvar$0 = 0 & ucmem$2(2) = a) & (ucpc$2 = 2 => ucmem$2(2) = a+ucmem$2(3) & ucmem$2(3) = loopvar$0 & loopvar$0<=b) & (ucpc$2 = 3 => ucmem$2(2) = a+ucmem$2(3) & ucmem$2(3) = loopvar$0 & loopvar$0 = b) & (ucpc$2 = 4 => ucmem$2(2) = a+ucmem$2(3) & ucmem$2(3) = loopvar$0 & loopvar$0+1<=b) & (ucpc$2 = 5 => ucmem$2(2) = a+ucmem$2(3)+1 & ucmem$2(3) = loopvar$0 & loopvar$0+1<=b) & (ucpc$2 = 6 => ucmem$2(2) = a+ucmem$2(3) & ucmem$2(3) = loopvar$0+1 & loopvar$0+1<=b) & (ucpc$2 = 7 => ucmem$2(2) = a+ucmem$2(3) & ucmem$2(3) = loopvar$0 & loopvar$0 = b) & ucpc$2+1<=7 & not(ucpc$2 = 6) & not(ucpc$2 = 5) & not(ucpc$2 = 4) & not(ucpc$2 = 3) & not(ucpc$2 = 2) & not(ucpc$2 = 1) & ucpc$2 = 0 & ucpc$2+1 = 1);
  ("`Local hypotheses'" & 0<=ucpc$2 & ucpc$2<=7 & loopvar$0 : INTEGER & 0<=loopvar$0 & ucmem$2 : NATURAL +-> NATURAL & dom(ucmem$2) = NATURAL & ucmem$2(0) = a & ucmem$2(1) = b & (ucpc$2 = 0 => loopvar$0 = 0 & ucmem$2(2) = s) & (ucpc$2 = 1 => loopvar$0 = 0 & ucmem$2(2) = a) & (ucpc$2 = 2 => ucmem$2(2) = a+ucmem$2(3) & ucmem$2(3) = loopvar$0 & loopvar$0<=b) & (ucpc$2 = 3 => ucmem$2(2) = a+ucmem$2(3) & ucmem$2(3) = loopvar$0 & loopvar$0 = b) & (ucpc$2 = 4 => ucmem$2(2) = a+ucmem$2(3) & ucmem$2(3) = loopvar$0 & loopvar$0+1<=b) & (ucpc$2 = 5 => ucmem$2(2) = a+ucmem$2(3)+1 & ucmem$2(3) = loopvar$0 & loopvar$0+1<=b) & (ucpc$2 = 6 => ucmem$2(2) = a+ucmem$2(3) & ucmem$2(3) = loopvar$0+1 & loopvar$0+1<=b) & (ucpc$2 = 7 => ucmem$2(2) = a+ucmem$2(3) & ucmem$2(3) = loopvar$0 & loopvar$0 = b) & ucpc$2+1<=7 & not(ucpc$2 = 0) & not(ucpc$2 = 6) & not(ucpc$2 = 5) & not(ucpc$2 = 4) & not(ucpc$2 = 3) & not(ucpc$2 = 2) & ucpc$2 = 1 & ucpc$2+1 = 0);
  ("`Local hypotheses'" & 0<=ucpc$2 & ucpc$2<=7 & loopvar$0 : INTEGER & 0<=loopvar$0 & ucmem$2 : NATURAL +-> NATURAL & dom(ucmem$2) = NATURAL & ucmem$2(0) = a & ucmem$2(1) = b & (ucpc$2 = 0 => loopvar$0 = 0 & ucmem$2(2) = s) & (ucpc$2 = 1 => loopvar$0 = 0 & ucmem$2(2) = a) & (ucpc$2 = 2 => ucmem$2(2) = a+ucmem$2(3) & ucmem$2(3) = loopvar$0 & loopvar$0<=b) & (ucpc$2 = 3 => ucmem$2(2) = a+ucmem$2(3) & ucmem$2(3) = loopvar$0 & loopvar$0 = b) & (ucpc$2 = 4 => ucmem$2(2) = a+ucmem$2(3) & ucmem$2(3) = loopvar$0 & loopvar$0+1<=b) & (ucpc$2 = 5 => ucmem$2(2) = a+ucmem$2(3)+1 & ucmem$2(3) = loopvar$0 & loopvar$0+1<=b) & (ucpc$2 = 6 => ucmem$2(2) = a+ucmem$2(3) & ucmem$2(3) = loopvar$0+1 & loopvar$0+1<=b) & (ucpc$2 = 7 => ucmem$2(2) = a+ucmem$2(3) & ucmem$2(3) = loopvar$0 & loopvar$0 = b) & ucpc$2+1<=7 & not(ucpc$2 = 0) & not(ucpc$2 = 6) & not(ucpc$2 = 5) & not(ucpc$2 = 4) & not(ucpc$2 = 3) & not(ucpc$2 = 2) & ucpc$2 = 1 & ucpc$2+1 = 1);
  (ucmem$2 : NATURAL +-> NATURAL);
  (dom(ucmem$2) = NATURAL);
  (ucmem$2(0) = a);
  (ucmem$2(1) = b);
  ("`Local hypotheses'" & 0<=ucpc$2 & ucpc$2<=7 & loopvar$0 : INTEGER & 0<=loopvar$0 & ucmem$2 : NATURAL +-> NATURAL & dom(ucmem$2) = NATURAL & ucmem$2(0) = a & ucmem$2(1) = b & (ucpc$2 = 0 => loopvar$0 = 0 & ucmem$2(2) = s) & (ucpc$2 = 1 => loopvar$0 = 0 & ucmem$2(2) = a) & (ucpc$2 = 2 => ucmem$2(2) = a+ucmem$2(3) & ucmem$2(3) = loopvar$0 & loopvar$0<=b) & (ucpc$2 = 3 => ucmem$2(2) = a+ucmem$2(3) & ucmem$2(3) = loopvar$0 & loopvar$0 = b) & (ucpc$2 = 4 => ucmem$2(2) = a+ucmem$2(3) & ucmem$2(3) = loopvar$0 & loopvar$0+1<=b) & (ucpc$2 = 5 => ucmem$2(2) = a+ucmem$2(3)+1 & ucmem$2(3) = loopvar$0 & loopvar$0+1<=b) & (ucpc$2 = 6 => ucmem$2(2) = a+ucmem$2(3) & ucmem$2(3) = loopvar$0+1 & loopvar$0+1<=b) & (ucpc$2 = 7 => ucmem$2(2) = a+ucmem$2(3) & ucmem$2(3) = loopvar$0 & loopvar$0 = b) & ucpc$2+1<=7 & not(ucpc$2 = 0) & not(ucpc$2 = 1) & not(ucpc$2 = 6) & not(ucpc$2 = 5) & not(ucpc$2 = 4) & not(ucpc$2 = 3) & ucmem$2(1) = ucmem$2(3) & ucpc$2 = 2 & ucpc$2+1 = 2);
  (ucmem$2(2) = a+ucmem$2(3));
  (ucmem$2(3) = loopvar$0);
  ("`Local hypotheses'" & 0<=ucpc$2 & ucpc$2<=7 & loopvar$0 : INTEGER & 0<=loopvar$0 & ucmem$2 : NATURAL +-> NATURAL & dom(ucmem$2) = NATURAL & ucmem$2(0) = a & ucmem$2(1) = b & (ucpc$2 = 0 => loopvar$0 = 0 & ucmem$2(2) = s) & (ucpc$2 = 1 => loopvar$0 = 0 & ucmem$2(2) = a) & (ucpc$2 = 2 => ucmem$2(2) = a+ucmem$2(3) & ucmem$2(3) = loopvar$0 & loopvar$0<=b) & (ucpc$2 = 3 => ucmem$2(2) = a+ucmem$2(3) & ucmem$2(3) = loopvar$0 & loopvar$0 = b) & (ucpc$2 = 4 => ucmem$2(2) = a+ucmem$2(3) & ucmem$2(3) = loopvar$0 & loopvar$0+1<=b) & (ucpc$2 = 5 => ucmem$2(2) = a+ucmem$2(3)+1 & ucmem$2(3) = loopvar$0 & loopvar$0+1<=b) & (ucpc$2 = 6 => ucmem$2(2) = a+ucmem$2(3) & ucmem$2(3) = loopvar$0+1 & loopvar$0+1<=b) & (ucpc$2 = 7 => ucmem$2(2) = a+ucmem$2(3) & ucmem$2(3) = loopvar$0 & loopvar$0 = b) & ucpc$2+1<=7 & not(ucpc$2 = 0) & not(ucpc$2 = 1) & not(ucpc$2 = 6) & not(ucpc$2 = 5) & not(ucpc$2 = 4) & not(ucpc$2 = 3) & ucmem$2(1) = ucmem$2(3) & ucpc$2 = 2 & ucpc$2+1 = 3);
  ("`Local hypotheses'" & 0<=ucpc$2 & ucpc$2<=7 & loopvar$0 : INTEGER & 0<=loopvar$0 & ucmem$2 : NATURAL +-> NATURAL & dom(ucmem$2) = NATURAL & ucmem$2(0) = a & ucmem$2(1) = b & (ucpc$2 = 0 => loopvar$0 = 0 & ucmem$2(2) = s) & (ucpc$2 = 1 => loopvar$0 = 0 & ucmem$2(2) = a) & (ucpc$2 = 2 => ucmem$2(2) = a+ucmem$2(3) & ucmem$2(3) = loopvar$0 & loopvar$0<=b) & (ucpc$2 = 3 => ucmem$2(2) = a+ucmem$2(3) & ucmem$2(3) = loopvar$0 & loopvar$0 = b) & (ucpc$2 = 4 => ucmem$2(2) = a+ucmem$2(3) & ucmem$2(3) = loopvar$0 & loopvar$0+1<=b) & (ucpc$2 = 5 => ucmem$2(2) = a+ucmem$2(3)+1 & ucmem$2(3) = loopvar$0 & loopvar$0+1<=b) & (ucpc$2 = 6 => ucmem$2(2) = a+ucmem$2(3) & ucmem$2(3) = loopvar$0+1 & loopvar$0+1<=b) & (ucpc$2 = 7 => ucmem$2(2) = a+ucmem$2(3) & ucmem$2(3) = loopvar$0 & loopvar$0 = b) & ucpc$2+1<=7 & not(ucpc$2 = 0) & not(ucpc$2 = 1) & not(ucpc$2 = 6) & not(ucpc$2 = 5) & not(ucpc$2 = 4) & not(ucpc$2 = 3) & ucmem$2(1) = ucmem$2(3) & ucpc$2 = 2 & ucpc$2+1 = 4);
  ("`Local hypotheses'" & 0<=ucpc$2 & ucpc$2<=7 & loopvar$0 : INTEGER & 0<=loopvar$0 & ucmem$2 : NATURAL +-> NATURAL & dom(ucmem$2) = NATURAL & ucmem$2(0) = a & ucmem$2(1) = b & (ucpc$2 = 0 => loopvar$0 = 0 & ucmem$2(2) = s) & (ucpc$2 = 1 => loopvar$0 = 0 & ucmem$2(2) = a) & (ucpc$2 = 2 => ucmem$2(2) = a+ucmem$2(3) & ucmem$2(3) = loopvar$0 & loopvar$0<=b) & (ucpc$2 = 3 => ucmem$2(2) = a+ucmem$2(3) & ucmem$2(3) = loopvar$0 & loopvar$0 = b) & (ucpc$2 = 4 => ucmem$2(2) = a+ucmem$2(3) & ucmem$2(3) = loopvar$0 & loopvar$0+1<=b) & (ucpc$2 = 5 => ucmem$2(2) = a+ucmem$2(3)+1 & ucmem$2(3) = loopvar$0 & loopvar$0+1<=b) & (ucpc$2 = 6 => ucmem$2(2) = a+ucmem$2(3) & ucmem$2(3) = loopvar$0+1 & loopvar$0+1<=b) & (ucpc$2 = 7 => ucmem$2(2) = a+ucmem$2(3) & ucmem$2(3) = loopvar$0 & loopvar$0 = b) & ucpc$2+1<=7 & not(ucpc$2 = 0) & not(ucpc$2 = 1) & not(ucpc$2 = 6) & not(ucpc$2 = 5) & not(ucpc$2 = 4) & not(ucpc$2 = 3) & ucmem$2(1) = ucmem$2(3) & ucpc$2 = 2 & ucpc$2+1 = 6);
  ("`Local hypotheses'" & 0<=ucpc$2 & ucpc$2<=7 & loopvar$0 : INTEGER & 0<=loopvar$0 & ucmem$2 : NATURAL +-> NATURAL & dom(ucmem$2) = NATURAL & ucmem$2(0) = a & ucmem$2(1) = b & (ucpc$2 = 0 => loopvar$0 = 0 & ucmem$2(2) = s) & (ucpc$2 = 1 => loopvar$0 = 0 & ucmem$2(2) = a) & (ucpc$2 = 2 => ucmem$2(2) = a+ucmem$2(3) & ucmem$2(3) = loopvar$0 & loopvar$0<=b) & (ucpc$2 = 3 => ucmem$2(2) = a+ucmem$2(3) & ucmem$2(3) = loopvar$0 & loopvar$0 = b) & (ucpc$2 = 4 => ucmem$2(2) = a+ucmem$2(3) & ucmem$2(3) = loopvar$0 & loopvar$0+1<=b) & (ucpc$2 = 5 => ucmem$2(2) = a+ucmem$2(3)+1 & ucmem$2(3) = loopvar$0 & loopvar$0+1<=b) & (ucpc$2 = 6 => ucmem$2(2) = a+ucmem$2(3) & ucmem$2(3) = loopvar$0+1 & loopvar$0+1<=b) & (ucpc$2 = 7 => ucmem$2(2) = a+ucmem$2(3) & ucmem$2(3) = loopvar$0 & loopvar$0 = b) & ucpc$2+1<=7 & not(ucpc$2 = 0) & not(ucpc$2 = 1) & not(ucpc$2 = 6) & not(ucpc$2 = 5) & not(ucpc$2 = 4) & not(ucpc$2 = 3) & ucmem$2(1) = ucmem$2(3) & ucpc$2 = 2 & ucpc$2+1 = 7);
  ("`Local hypotheses'" & 0<=ucpc$2 & ucpc$2<=7 & loopvar$0 : INTEGER & 0<=loopvar$0 & ucmem$2 : NATURAL +-> NATURAL & dom(ucmem$2) = NATURAL & ucmem$2(0) = a & ucmem$2(1) = b & (ucpc$2 = 0 => loopvar$0 = 0 & ucmem$2(2) = s) & (ucpc$2 = 1 => loopvar$0 = 0 & ucmem$2(2) = a) & (ucpc$2 = 2 => ucmem$2(2) = a+ucmem$2(3) & ucmem$2(3) = loopvar$0 & loopvar$0<=b) & (ucpc$2 = 3 => ucmem$2(2) = a+ucmem$2(3) & ucmem$2(3) = loopvar$0 & loopvar$0 = b) & (ucpc$2 = 4 => ucmem$2(2) = a+ucmem$2(3) & ucmem$2(3) = loopvar$0 & loopvar$0+1<=b) & (ucpc$2 = 5 => ucmem$2(2) = a+ucmem$2(3)+1 & ucmem$2(3) = loopvar$0 & loopvar$0+1<=b) & (ucpc$2 = 6 => ucmem$2(2) = a+ucmem$2(3) & ucmem$2(3) = loopvar$0+1 & loopvar$0+1<=b) & (ucpc$2 = 7 => ucmem$2(2) = a+ucmem$2(3) & ucmem$2(3) = loopvar$0 & loopvar$0 = b) & ucpc$2+1<=7 & not(ucpc$2 = 0) & not(ucpc$2 = 1) & not(ucpc$2 = 6) & not(ucpc$2 = 5) & not(ucpc$2 = 4) & not(ucpc$2 = 3) & not(ucmem$2(1) = ucmem$2(3)) & ucpc$2 = 2 & ucpc$2+2 = 2);
  ("`Local hypotheses'" & 0<=ucpc$2 & ucpc$2<=7 & loopvar$0 : INTEGER & 0<=loopvar$0 & ucmem$2 : NATURAL +-> NATURAL & dom(ucmem$2) = NATURAL & ucmem$2(0) = a & ucmem$2(1) = b & (ucpc$2 = 0 => loopvar$0 = 0 & ucmem$2(2) = s) & (ucpc$2 = 1 => loopvar$0 = 0 & ucmem$2(2) = a) & (ucpc$2 = 2 => ucmem$2(2) = a+ucmem$2(3) & ucmem$2(3) = loopvar$0 & loopvar$0<=b) & (ucpc$2 = 3 => ucmem$2(2) = a+ucmem$2(3) & ucmem$2(3) = loopvar$0 & loopvar$0 = b) & (ucpc$2 = 4 => ucmem$2(2) = a+ucmem$2(3) & ucmem$2(3) = loopvar$0 & loopvar$0+1<=b) & (ucpc$2 = 5 => ucmem$2(2) = a+ucmem$2(3)+1 & ucmem$2(3) = loopvar$0 & loopvar$0+1<=b) & (ucpc$2 = 6 => ucmem$2(2) = a+ucmem$2(3) & ucmem$2(3) = loopvar$0+1 & loopvar$0+1<=b) & (ucpc$2 = 7 => ucmem$2(2) = a+ucmem$2(3) & ucmem$2(3) = loopvar$0 & loopvar$0 = b) & ucpc$2+1<=7 & not(ucpc$2 = 0) & not(ucpc$2 = 1) & not(ucpc$2 = 6) & not(ucpc$2 = 5) & not(ucpc$2 = 4) & not(ucpc$2 = 3) & not(ucmem$2(1) = ucmem$2(3)) & ucpc$2 = 2 & ucpc$2+2 = 3);
  ("`Local hypotheses'" & 0<=ucpc$2 & ucpc$2<=7 & loopvar$0 : INTEGER & 0<=loopvar$0 & ucmem$2 : NATURAL +-> NATURAL & dom(ucmem$2) = NATURAL & ucmem$2(0) = a & ucmem$2(1) = b & (ucpc$2 = 0 => loopvar$0 = 0 & ucmem$2(2) = s) & (ucpc$2 = 1 => loopvar$0 = 0 & ucmem$2(2) = a) & (ucpc$2 = 2 => ucmem$2(2) = a+ucmem$2(3) & ucmem$2(3) = loopvar$0 & loopvar$0<=b) & (ucpc$2 = 3 => ucmem$2(2) = a+ucmem$2(3) & ucmem$2(3) = loopvar$0 & loopvar$0 = b) & (ucpc$2 = 4 => ucmem$2(2) = a+ucmem$2(3) & ucmem$2(3) = loopvar$0 & loopvar$0+1<=b) & (ucpc$2 = 5 => ucmem$2(2) = a+ucmem$2(3)+1 & ucmem$2(3) = loopvar$0 & loopvar$0+1<=b) & (ucpc$2 = 6 => ucmem$2(2) = a+ucmem$2(3) & ucmem$2(3) = loopvar$0+1 & loopvar$0+1<=b) & (ucpc$2 = 7 => ucmem$2(2) = a+ucmem$2(3) & ucmem$2(3) = loopvar$0 & loopvar$0 = b) & ucpc$2+1<=7 & not(ucpc$2 = 0) & not(ucpc$2 = 1) & not(ucpc$2 = 6) & not(ucpc$2 = 5) & not(ucpc$2 = 4) & not(ucpc$2 = 3) & not(ucmem$2(1) = ucmem$2(3)) & ucpc$2 = 2 & ucpc$2+2 = 4);
  ("`Local hypotheses'" & 0<=ucpc$2 & ucpc$2<=7 & loopvar$0 : INTEGER & 0<=loopvar$0 & ucmem$2 : NATURAL +-> NATURAL & dom(ucmem$2) = NATURAL & ucmem$2(0) = a & ucmem$2(1) = b & (ucpc$2 = 0 => loopvar$0 = 0 & ucmem$2(2) = s) & (ucpc$2 = 1 => loopvar$0 = 0 & ucmem$2(2) = a) & (ucpc$2 = 2 => ucmem$2(2) = a+ucmem$2(3) & ucmem$2(3) = loopvar$0 & loopvar$0<=b) & (ucpc$2 = 3 => ucmem$2(2) = a+ucmem$2(3) & ucmem$2(3) = loopvar$0 & loopvar$0 = b) & (ucpc$2 = 4 => ucmem$2(2) = a+ucmem$2(3) & ucmem$2(3) = loopvar$0 & loopvar$0+1<=b) & (ucpc$2 = 5 => ucmem$2(2) = a+ucmem$2(3)+1 & ucmem$2(3) = loopvar$0 & loopvar$0+1<=b) & (ucpc$2 = 6 => ucmem$2(2) = a+ucmem$2(3) & ucmem$2(3) = loopvar$0+1 & loopvar$0+1<=b) & (ucpc$2 = 7 => ucmem$2(2) = a+ucmem$2(3) & ucmem$2(3) = loopvar$0 & loopvar$0 = b) & ucpc$2+1<=7 & not(ucpc$2 = 0) & not(ucpc$2 = 1) & not(ucpc$2 = 6) & not(ucpc$2 = 5) & not(ucpc$2 = 4) & not(ucpc$2 = 3) & not(ucmem$2(1) = ucmem$2(3)) & ucpc$2 = 2 & ucpc$2+2 = 6);
  ("`Local hypotheses'" & 0<=ucpc$2 & ucpc$2<=7 & loopvar$0 : INTEGER & 0<=loopvar$0 & ucmem$2 : NATURAL +-> NATURAL & dom(ucmem$2) = NATURAL & ucmem$2(0) = a & ucmem$2(1) = b & (ucpc$2 = 0 => loopvar$0 = 0 & ucmem$2(2) = s) & (ucpc$2 = 1 => loopvar$0 = 0 & ucmem$2(2) = a) & (ucpc$2 = 2 => ucmem$2(2) = a+ucmem$2(3) & ucmem$2(3) = loopvar$0 & loopvar$0<=b) & (ucpc$2 = 3 => ucmem$2(2) = a+ucmem$2(3) & ucmem$2(3) = loopvar$0 & loopvar$0 = b) & (ucpc$2 = 4 => ucmem$2(2) = a+ucmem$2(3) & ucmem$2(3) = loopvar$0 & loopvar$0+1<=b) & (ucpc$2 = 5 => ucmem$2(2) = a+ucmem$2(3)+1 & ucmem$2(3) = loopvar$0 & loopvar$0+1<=b) & (ucpc$2 = 6 => ucmem$2(2) = a+ucmem$2(3) & ucmem$2(3) = loopvar$0+1 & loopvar$0+1<=b) & (ucpc$2 = 7 => ucmem$2(2) = a+ucmem$2(3) & ucmem$2(3) = loopvar$0 & loopvar$0 = b) & ucpc$2+1<=7 & not(ucpc$2 = 0) & not(ucpc$2 = 1) & not(ucpc$2 = 6) & not(ucpc$2 = 5) & not(ucpc$2 = 4) & not(ucpc$2 = 3) & not(ucmem$2(1) = ucmem$2(3)) & ucpc$2 = 2 & ucpc$2+2 = 7);
  "`Check preconditions of called operation, or While loop construction, or Assert predicates'" & "`Check preconditions of called operation, or While loop construction, or Assert predicates'" & "`Check preconditions of called operation, or While loop construction, or Assert predicates'" & "`Check preconditions of called operation, or While loop construction, or Assert predicates'" & "`Check preconditions of called operation, or While loop construction, or Assert predicates'" & "`Check preconditions of called operation, or While loop construction, or Assert predicates'" & "`Check preconditions of called operation, or While loop construction, or Assert predicates'";
  (0<=2);
  (0<=ucpc$2);
  (ucpc$2<=7);
  (ucpc$2 = 0 => loopvar$0 = 0 & ucmem$2(2) = s);
  (ucpc$2 = 1 => loopvar$0 = 0 & ucmem$2(2) = a);
  (ucpc$2 = 2 => ucmem$2(2) = a+ucmem$2(3) & ucmem$2(3) = loopvar$0 & loopvar$0<=b);
  (ucpc$2 = 3 => ucmem$2(2) = a+ucmem$2(3) & ucmem$2(3) = loopvar$0 & loopvar$0 = b);
  (ucpc$2 = 4 => ucmem$2(2) = a+ucmem$2(3) & ucmem$2(3) = loopvar$0 & loopvar$0+1<=b);
  (ucpc$2 = 5 => ucmem$2(2) = a+ucmem$2(3)+1 & ucmem$2(3) = loopvar$0 & loopvar$0+1<=b);
  (ucpc$2 = 6 => ucmem$2(2) = a+ucmem$2(3) & ucmem$2(3) = loopvar$0+1 & loopvar$0+1<=b);
  (ucpc$2 = 7 => ucmem$2(2) = a+ucmem$2(3) & ucmem$2(3) = loopvar$0 & loopvar$0 = b);
  "`Check that the invariant (a = ucmem(0)) is preserved by the operation - ref 4.4, 5.5'";
  (a = ucmemz$7777(0));
  "`Check that the invariant (b = ucmem(1)) is preserved by the operation - ref 4.4, 5.5'";
  (b = ucmemz$7777(1))
END
&
THEORY Version IS
  POVersion(V3.8.3)(CLT == "V3.7.6")(local_op == OK)
END
