THEORY OPOBalanceX IS
  traffic_light_asm_z80_auto,186;
  ValuesLemmas,1;
  InstanciatedConstraintsLemmas,0;
  AssertionLemmas,10;
  Initialisation,1;
  advance,174
END
&
THEORY OPOProofList IS
  _f(2) & _f(3) & _f(9) & _f(18) & advance.174,(_of(138) & _of(115) => _of(137));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.173,(_of(136) & _of(115) => _of(137));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.172,(_of(135) & _of(115) => _of(132));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.171,(_of(134) & _of(115) => _of(132));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.170,(_of(133) & _of(115) => _of(132));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.169,(_of(131) & _of(115) => _of(132));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.168,(_of(44) & _of(106) => _of(130));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.167,(_of(44) & _of(104) => _of(129));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.166,(_of(44) & _of(106) => _of(128));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.165,(_of(44) & _of(104) => _of(127));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.164,(_of(44) & _of(106) => _of(126));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.163,(_of(44) & _of(104) => _of(125));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.162,(_of(44) & _of(106) => _of(124));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.161,(_of(44) & _of(104) => _of(123));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.160,(_of(122) & _of(115) => _of(121));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.159,(_of(120) & _of(115) => _of(121));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.158,(_of(119) & _of(115) => _of(116));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.157,(_of(118) & _of(115) => _of(116));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.156,(_of(117) & _of(115) => _of(116));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.155,(_of(114) & _of(115) => _of(116));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.154,(_of(44) & _of(106) => _of(113));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.153,(_of(44) & _of(104) => _of(112));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.152,(_of(44) & _of(106) => _of(111));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.151,(_of(44) & _of(104) => _of(110));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.150,(_of(44) & _of(106) => _of(109));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.149,(_of(44) & _of(104) => _of(108));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.148,(_of(44) & _of(106) => _of(107));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.147,(_of(44) & _of(104) => _of(105));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.146,(_of(103) & _of(3) => _of(79));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.145,(_of(103) & _of(3) => _of(78));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.144,(_of(103) & _of(3) => _of(77));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.143,(_of(102) & _of(3) => _of(79));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.142,(_of(102) & _of(3) => _of(78));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.141,(_of(102) & _of(3) => _of(77));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.140,(_of(101) & _of(3) => _of(79));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.139,(_of(101) & _of(3) => _of(78));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.138,(_of(101) & _of(3) => _of(77));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.137,(_of(100) & _of(3) => _of(79));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.136,(_of(100) & _of(3) => _of(78));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.135,(_of(100) & _of(3) => _of(77));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.134,(_of(99) & _of(3) => _of(79));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.133,(_of(99) & _of(3) => _of(78));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.132,(_of(99) & _of(3) => _of(77));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.131,(_of(98) & _of(3) => _of(79));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.130,(_of(98) & _of(3) => _of(78));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.129,(_of(98) & _of(3) => _of(77));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.128,(_of(97) & _of(3) => _of(79));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.127,(_of(97) & _of(3) => _of(78));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.126,(_of(97) & _of(3) => _of(77));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.125,(_of(96) & _of(3) => _of(79));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.124,(_of(96) & _of(3) => _of(78));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.123,(_of(96) & _of(3) => _of(77));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.122,(_of(95) & _of(3) => _of(79));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.121,(_of(95) & _of(3) => _of(78));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.120,(_of(95) & _of(3) => _of(77));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.119,(_of(94) & _of(3) => _of(79));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.118,(_of(94) & _of(3) => _of(78));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.117,(_of(94) & _of(3) => _of(77));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.116,(_of(93) & _of(3) => _of(79));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.115,(_of(93) & _of(3) => _of(78));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.114,(_of(93) & _of(3) => _of(77));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.113,(_of(92) & _of(3) => _of(79));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.112,(_of(92) & _of(3) => _of(78));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.111,(_of(92) & _of(3) => _of(77));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.110,(_of(91) & _of(3) => _of(85));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.109,(_of(90) & _of(3) => _of(85));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.108,(_of(89) & _of(3) => _of(85));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.107,(_of(88) & _of(3) => _of(85));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.106,(_of(87) & _of(3) => _of(85));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.105,(_of(86) & _of(3) => _of(85));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.104,(_of(44) & _of(45) => _of(85));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.103,(_of(84) & _of(3) => _of(79));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.102,(_of(84) & _of(3) => _of(78));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.101,(_of(84) & _of(3) => _of(77));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.100,(_of(83) & _of(3) => _of(79));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.99,(_of(83) & _of(3) => _of(78));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.98,(_of(83) & _of(3) => _of(77));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.97,(_of(82) & _of(3) => _of(79));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.96,(_of(82) & _of(3) => _of(78));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.95,(_of(82) & _of(3) => _of(77));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.94,(_of(81) & _of(3) => _of(79));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.93,(_of(81) & _of(3) => _of(78));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.92,(_of(81) & _of(3) => _of(77));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.91,(_of(80) & _of(3) => _of(79));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.90,(_of(80) & _of(3) => _of(78));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.89,(_of(80) & _of(3) => _of(77));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.88,(_of(76) & _of(3) => _of(79));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.87,(_of(76) & _of(3) => _of(78));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.86,(_of(76) & _of(3) => _of(77));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.85,(_of(44) & _of(74) => _of(75));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.84,(_of(73) & _of(3) => _of(28));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.83,(_of(72) & _of(3) => _of(28));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.82,(_of(71) & _of(3) => _of(28));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.81,(_of(70) & _of(3) => _of(28));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.80,(_of(69) & _of(3) => _of(28));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.79,(_of(68) & _of(3) => _of(28));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.78,(_of(67) & _of(3) => _of(28));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.77,(_of(66) & _of(3) => _of(28));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.76,(_of(65) & _of(3) => _of(28));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.75,(_of(64) & _of(3) => _of(28));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.74,(_of(63) & _of(3) => _of(28));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.73,(_of(62) & _of(3) => _of(28));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.72,(_of(52) & _of(3) => _of(28));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.71,(_of(51) & _of(3) => _of(28));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.70,(_of(50) & _of(3) => _of(28));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.69,(_of(49) & _of(3) => _of(28));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.68,(_of(48) & _of(3) => _of(28));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.67,(_of(47) & _of(3) => _of(28));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.66,(_of(61) & _of(3) => _of(28));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.65,(_of(60) & _of(3) => _of(28));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.64,(_of(59) & _of(3) => _of(28));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.63,(_of(58) & _of(3) => _of(28));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.62,(_of(57) & _of(3) => _of(28));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.61,(_of(56) & _of(3) => _of(28));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.60,(_of(44) & _of(55) => _of(28));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.59,(_f(50) & _of(3) => _of(28));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.58,(_f(49) & _of(3) => _of(28));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.57,(_f(48) & _of(3) => _of(28));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.56,(_f(47) & _of(3) => _of(28));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.55,(_f(46) & _of(3) => _of(28));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.54,(_f(43) & _of(3) => _of(28));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.53,(_of(43) & _of(3) => _of(54));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.52,(_of(43) & _of(3) => _of(53));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.51,(_of(41) & _of(3) => _of(54));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.50,(_of(41) & _of(3) => _of(53));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.49,(_of(40) & _of(3) => _of(54));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.48,(_of(40) & _of(3) => _of(53));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.47,(_of(39) & _of(3) => _of(54));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.46,(_of(39) & _of(3) => _of(53));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.45,(_of(38) & _of(3) => _of(54));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.44,(_of(38) & _of(3) => _of(53));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.43,(_of(34) & _of(3) => _of(54));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.42,(_of(34) & _of(3) => _of(53));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.41,(_of(52) & _of(3) => _of(46));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.40,(_of(51) & _of(3) => _of(46));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.39,(_of(50) & _of(3) => _of(46));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.38,(_of(49) & _of(3) => _of(46));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.37,(_of(48) & _of(3) => _of(46));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.36,(_of(47) & _of(3) => _of(46));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.35,(_of(44) & _of(45) => _of(46));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.34,(_f(42) & _of(3) => _of(28));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.33,(_f(41) & _of(3) => _of(28));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.32,(_f(40) & _of(3) => _of(28));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.31,(_f(39) & _of(3) => _of(28));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.30,(_f(38) & _of(3) => _of(28));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.29,(_f(35) & _of(3) => _of(28));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.28,(_of(43) & _of(3) => _of(42));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.27,(_of(43) & _of(3) => _of(36));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.26,(_of(43) & _of(3) => _of(35));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.25,(_of(41) & _of(3) => _of(42));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.24,(_of(41) & _of(3) => _of(36));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.23,(_of(41) & _of(3) => _of(35));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.22,(_of(40) & _of(3) => _of(37));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.21,(_of(40) & _of(3) => _of(36));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.20,(_of(40) & _of(3) => _of(35));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.19,(_of(39) & _of(3) => _of(37));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.18,(_of(39) & _of(3) => _of(36));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.17,(_of(39) & _of(3) => _of(35));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.16,(_of(38) & _of(3) => _of(37));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.15,(_of(38) & _of(3) => _of(36));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.14,(_of(38) & _of(3) => _of(35));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.13,(_of(34) & _of(3) => _of(37));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.12,(_of(34) & _of(3) => _of(36));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.11,(_of(34) & _of(3) => _of(35));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.10,(_of(33) & _of(3) => _of(28));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.9,(_of(32) & _of(3) => _of(28));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.8,(_of(31) & _of(3) => _of(28));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.7,(_of(30) & _of(3) => _of(28));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.6,(_of(29) & _of(3) => _of(28));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.5,(_of(27) & _of(3) => _of(28));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.4,(_of(3) => _of(26));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.3,(_of(3) => _of(25));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.2,(_of(3) => _of(2));
  _f(2) & _f(3) & _f(9) & _f(18) & advance.1,(_of(24) => _of(2));
  _f(2) & _f(3) & _f(9) & AssertionLemmas.10,(_of(22) => _of(23));
  _f(2) & _f(3) & _f(9) & AssertionLemmas.9,(_of(20) => _of(21));
  _f(2) & _f(3) & _f(9) & AssertionLemmas.8,(_of(18) => _of(19));
  _f(2) & _f(3) & _f(9) & AssertionLemmas.7,(_of(16) => _of(17));
  _f(2) & _f(3) & _f(9) & AssertionLemmas.6,(_of(14) => _of(15));
  _f(2) & _f(3) & _f(9) & AssertionLemmas.5,(_of(12) => _of(13));
  _f(2) & _f(3) & _f(9) & AssertionLemmas.4,(_of(10) => _of(11));
  _f(2) & _f(3) & _f(9) & AssertionLemmas.3,(_of(8) => _of(9));
  _f(2) & _f(3) & _f(9) & AssertionLemmas.2,(_of(6) => _of(7));
  _f(2) & _f(3) & _f(9) & AssertionLemmas.1,(_of(4) => _of(5));
  _f(2) & _f(3) & Initialisation.1,(_of(3) => _of(2));
  _f(1) & ValuesLemmas.1,(_of(1) => _of(2))
END
&
THEORY OPOFormulas IS
  "`Check that the property (btrue) is preserved by the valuations - ref 5.2'";
  (btrue);
  "`Check preconditions of called operation, or While loop construction, or Assert predicates'";
  "`Check assertion (INSTRUCTION_NEXT(9) = 10) deduction - ref 3.2, 4.2, 5.3'";
  (INSTRUCTION_NEXT(9) = 10);
  "`Check assertion (INSTRUCTION_NEXT(8) = 9) deduction - ref 3.2, 4.2, 5.3'";
  (INSTRUCTION_NEXT(8) = 9);
  "`Check assertion (INSTRUCTION_NEXT(7) = 8) deduction - ref 3.2, 4.2, 5.3'";
  (INSTRUCTION_NEXT(7) = 8);
  "`Check assertion (INSTRUCTION_NEXT(6) = 7) deduction - ref 3.2, 4.2, 5.3'";
  (INSTRUCTION_NEXT(6) = 7);
  "`Check assertion (INSTRUCTION_NEXT(5) = 6) deduction - ref 3.2, 4.2, 5.3'";
  (INSTRUCTION_NEXT(5) = 6);
  "`Check assertion (INSTRUCTION_NEXT(4) = 5) deduction - ref 3.2, 4.2, 5.3'";
  (INSTRUCTION_NEXT(4) = 5);
  "`Check assertion (INSTRUCTION_NEXT(3) = 4) deduction - ref 3.2, 4.2, 5.3'";
  (INSTRUCTION_NEXT(3) = 4);
  "`Check assertion (INSTRUCTION_NEXT(2) = 3) deduction - ref 3.2, 4.2, 5.3'";
  (INSTRUCTION_NEXT(2) = 3);
  "`Check assertion (INSTRUCTION_NEXT(1) = 2) deduction - ref 3.2, 4.2, 5.3'";
  (INSTRUCTION_NEXT(1) = 2);
  "`Check assertion (INSTRUCTION_NEXT(0) = 1) deduction - ref 3.2, 4.2, 5.3'";
  (INSTRUCTION_NEXT(0) = 1);
  "`Check precondition (btrue) deduction'";
  (h : id_register8);
  (l : id_register8);
  ("`Local hypotheses'" & address : WORD16 & ib : BIT & nw8 : BV8 & address = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(14|->id_register8)) & ib = WORD8_TO_BV8(mpmem$1(address))(1) & nw8 = BV8_SET_BIT(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(3|->id_register8)),6,ib) & address$0 : WORD16 & ib$0 : BIT & nw8$0 : BV8 & WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(3|->id_register8))(6) = 0 & 4 = INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(0)))) & WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)}<+{3|->id_register8|->BV8_TO_WORD8(nw8$0)})(3|->id_register8))(6) = 0 & address$0 = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(14|->id_register8)) & ib$0 = WORD8_TO_BV8(mpmem$1(address$0))(0) & nw8$0 = BV8_SET_BIT(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(3|->id_register8)),6,ib$0) & INSTRUCTION_NEXT(INSTRUCTION_NEXT(7)) = 5);
  (a : id_register8);
  ("`Local hypotheses'" & address : WORD16 & ib : BIT & nw8 : BV8 & address = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(14|->id_register8)) & ib = WORD8_TO_BV8(mpmem$1(address))(1) & nw8 = BV8_SET_BIT(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(3|->id_register8)),6,ib) & address$0 : WORD16 & ib$0 : BIT & nw8$0 : BV8 & WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(3|->id_register8))(6) = 0 & 4 = INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(0)))) & not(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)}<+{3|->id_register8|->BV8_TO_WORD8(nw8$0)})(3|->id_register8))(6) = 0) & address$0 = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(14|->id_register8)) & ib$0 = WORD8_TO_BV8(mpmem$1(address$0))(0) & nw8$0 = BV8_SET_BIT(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(3|->id_register8)),6,ib$0) & INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(7))) = 5);
  ("`Local hypotheses'" & address : WORD16 & ib : BIT & nw8 : BV8 & address = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(14|->id_register8)) & ib = WORD8_TO_BV8(mpmem$1(address))(1) & nw8 = BV8_SET_BIT(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(3|->id_register8)),6,ib) & address$0 : WORD16 & ib$0 : BIT & nw8$0 : BV8 & not(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(3|->id_register8))(6) = 0) & 4 = INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(0))))) & WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)}<+{3|->id_register8|->BV8_TO_WORD8(nw8$0)})(3|->id_register8))(6) = 0 & address$0 = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(14|->id_register8)) & ib$0 = WORD8_TO_BV8(mpmem$1(address$0))(0) & nw8$0 = BV8_SET_BIT(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(3|->id_register8)),6,ib$0) & INSTRUCTION_NEXT(INSTRUCTION_NEXT(7)) = 5);
  ("`Local hypotheses'" & address : WORD16 & ib : BIT & nw8 : BV8 & address = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(14|->id_register8)) & ib = WORD8_TO_BV8(mpmem$1(address))(1) & nw8 = BV8_SET_BIT(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(3|->id_register8)),6,ib) & address$0 : WORD16 & ib$0 : BIT & nw8$0 : BV8 & not(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(3|->id_register8))(6) = 0) & 4 = INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(0))))) & not(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)}<+{3|->id_register8|->BV8_TO_WORD8(nw8$0)})(3|->id_register8))(6) = 0) & address$0 = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(14|->id_register8)) & ib$0 = WORD8_TO_BV8(mpmem$1(address$0))(0) & nw8$0 = BV8_SET_BIT(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(3|->id_register8)),6,ib$0) & INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(7))) = 5);
  ("`Local hypotheses'" & address : WORD16 & ib : BIT & nw8 : BV8 & address = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(14|->id_register8)) & ib = WORD8_TO_BV8(mpmem$1(address))(1) & nw8 = BV8_SET_BIT(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(3|->id_register8)),6,ib) & not(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(0)))) = 4) & WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(3|->id_register8))(6) = 0 & INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(0)))) = 5);
  ("`Local hypotheses'" & address : WORD16 & ib : BIT & nw8 : BV8 & address = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(14|->id_register8)) & ib = WORD8_TO_BV8(mpmem$1(address))(1) & nw8 = BV8_SET_BIT(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(3|->id_register8)),6,ib) & not(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(0))))) = 4) & not(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(3|->id_register8))(6) = 0) & INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(0))))) = 5);
  ("`Local hypotheses'" & address : WORD16 & ib : BIT & nw8 : BV8 & address = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(14|->id_register8)) & ib = WORD8_TO_BV8(mpmem$1(address))(1) & nw8 = BV8_SET_BIT(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(3|->id_register8)),6,ib) & address$0 : WORD16 & ib$0 : BIT & nw8$0 : BV8 & WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(3|->id_register8))(6) = 0 & 4 = INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(0)))) & WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)}<+{3|->id_register8|->BV8_TO_WORD8(nw8$0)})(3|->id_register8))(6) = 0 & 5 = INSTRUCTION_NEXT(INSTRUCTION_NEXT(7)) & address$0 = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(14|->id_register8)) & ib$0 = WORD8_TO_BV8(mpmem$1(address$0))(0) & nw8$0 = BV8_SET_BIT(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(3|->id_register8)),6,ib$0) & bfalse);
  (11 : INSTRUCTION);
  (mppcz$7777 = 11 => a : id_register8 & 1 : WORD8);
  (!(mprgs8z$7779,mppcz$7779).(#(mppcz$7780).(mppcz$7780 = 11 & (mprgs8z$7779 = mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{f_|->BV8_TO_WORD8(nw8$0)}<+{a|->0}<+{a|->1} & mppcz$7779 = INSTRUCTION_NEXT(mppcz$7780))) => 14 : INSTRUCTION));
  ("`Local hypotheses'" & address : WORD16 & ib : BIT & nw8 : BV8 & address = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(14|->id_register8)) & ib = WORD8_TO_BV8(mpmem$1(address))(1) & nw8 = BV8_SET_BIT(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(3|->id_register8)),6,ib) & address$0 : WORD16 & ib$0 : BIT & nw8$0 : BV8 & WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(3|->id_register8))(6) = 0 & 4 = INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(0)))) & not(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)}<+{3|->id_register8|->BV8_TO_WORD8(nw8$0)})(3|->id_register8))(6) = 0) & 5 = INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(7))) & address$0 = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(14|->id_register8)) & ib$0 = WORD8_TO_BV8(mpmem$1(address$0))(0) & nw8$0 = BV8_SET_BIT(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(3|->id_register8)),6,ib$0) & bfalse);
  ("`Local hypotheses'" & address : WORD16 & ib : BIT & nw8 : BV8 & address = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(14|->id_register8)) & ib = WORD8_TO_BV8(mpmem$1(address))(1) & nw8 = BV8_SET_BIT(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(3|->id_register8)),6,ib) & address$0 : WORD16 & ib$0 : BIT & nw8$0 : BV8 & not(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(3|->id_register8))(6) = 0) & 4 = INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(0))))) & WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)}<+{3|->id_register8|->BV8_TO_WORD8(nw8$0)})(3|->id_register8))(6) = 0 & 5 = INSTRUCTION_NEXT(INSTRUCTION_NEXT(7)) & address$0 = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(14|->id_register8)) & ib$0 = WORD8_TO_BV8(mpmem$1(address$0))(0) & nw8$0 = BV8_SET_BIT(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(3|->id_register8)),6,ib$0) & bfalse);
  ("`Local hypotheses'" & address : WORD16 & ib : BIT & nw8 : BV8 & address = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(14|->id_register8)) & ib = WORD8_TO_BV8(mpmem$1(address))(1) & nw8 = BV8_SET_BIT(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(3|->id_register8)),6,ib) & address$0 : WORD16 & ib$0 : BIT & nw8$0 : BV8 & not(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(3|->id_register8))(6) = 0) & 4 = INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(0))))) & not(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)}<+{3|->id_register8|->BV8_TO_WORD8(nw8$0)})(3|->id_register8))(6) = 0) & 5 = INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(7))) & address$0 = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(14|->id_register8)) & ib$0 = WORD8_TO_BV8(mpmem$1(address$0))(0) & nw8$0 = BV8_SET_BIT(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(3|->id_register8)),6,ib$0) & bfalse);
  ("`Local hypotheses'" & address : WORD16 & ib : BIT & nw8 : BV8 & address = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(14|->id_register8)) & ib = WORD8_TO_BV8(mpmem$1(address))(1) & nw8 = BV8_SET_BIT(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(3|->id_register8)),6,ib) & not(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(0)))) = 4) & 5 = INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(0)))) & WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(3|->id_register8))(6) = 0 & bfalse);
  (!(mprgs8z$7779,mppcz$7779).(#(mppcz$7780).(mppcz$7780 = 11 & (mprgs8z$7779 = mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{a|->0}<+{a|->1} & mppcz$7779 = INSTRUCTION_NEXT(mppcz$7780))) => 14 : INSTRUCTION));
  ("`Local hypotheses'" & address : WORD16 & ib : BIT & nw8 : BV8 & address = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(14|->id_register8)) & ib = WORD8_TO_BV8(mpmem$1(address))(1) & nw8 = BV8_SET_BIT(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(3|->id_register8)),6,ib) & not(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(0))))) = 4) & 5 = INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(0))))) & not(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(3|->id_register8))(6) = 0) & bfalse);
  ("`Local hypotheses'" & bfalse);
  "`Check preconditions of called operation, or While loop construction, or Assert predicates'" & "`Check preconditions of called operation, or While loop construction, or Assert predicates'" & "`Check preconditions of called operation, or While loop construction, or Assert predicates'" & "`Check preconditions of called operation, or While loop construction, or Assert predicates'" & "`Check preconditions of called operation, or While loop construction, or Assert predicates'" & "`Check preconditions of called operation, or While loop construction, or Assert predicates'";
  (14 = 10 => 13 : INSTRUCTION & !(mppcz$7777).(mppcz$7777 = 13 => a : id_register8 & 2 : WORD8));
  ("`Local hypotheses'" & address : WORD16 & ib : BIT & nw8 : BV8 & address = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(14|->id_register8)) & ib = WORD8_TO_BV8(mpmem$1(address))(1) & nw8 = BV8_SET_BIT(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(3|->id_register8)),6,ib) & 11 = INSTRUCTION_NEXT(11) & not(INSTRUCTION_NEXT(INSTRUCTION_NEXT(7)) = 5) & 9 = INSTRUCTION_NEXT(INSTRUCTION_NEXT(7)) & address$0 : WORD16 & ib$0 : BIT & nw8$0 : BV8 & WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(3|->id_register8))(6) = 0 & 4 = INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(0)))) & WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)}<+{3|->id_register8|->BV8_TO_WORD8(nw8$0)})(3|->id_register8))(6) = 0 & address$0 = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(14|->id_register8)) & ib$0 = WORD8_TO_BV8(mpmem$1(address$0))(0) & nw8$0 = BV8_SET_BIT(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(3|->id_register8)),6,ib$0));
  ("`Local hypotheses'" & address : WORD16 & ib : BIT & nw8 : BV8 & address = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(14|->id_register8)) & ib = WORD8_TO_BV8(mpmem$1(address))(1) & nw8 = BV8_SET_BIT(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(3|->id_register8)),6,ib) & 11 = INSTRUCTION_NEXT(11) & not(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(7))) = 5) & 9 = INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(7))) & address$0 : WORD16 & ib$0 : BIT & nw8$0 : BV8 & WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(3|->id_register8))(6) = 0 & 4 = INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(0)))) & not(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)}<+{3|->id_register8|->BV8_TO_WORD8(nw8$0)})(3|->id_register8))(6) = 0) & address$0 = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(14|->id_register8)) & ib$0 = WORD8_TO_BV8(mpmem$1(address$0))(0) & nw8$0 = BV8_SET_BIT(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(3|->id_register8)),6,ib$0));
  ("`Local hypotheses'" & address : WORD16 & ib : BIT & nw8 : BV8 & address = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(14|->id_register8)) & ib = WORD8_TO_BV8(mpmem$1(address))(1) & nw8 = BV8_SET_BIT(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(3|->id_register8)),6,ib) & 11 = INSTRUCTION_NEXT(11) & not(INSTRUCTION_NEXT(INSTRUCTION_NEXT(7)) = 5) & 9 = INSTRUCTION_NEXT(INSTRUCTION_NEXT(7)) & address$0 : WORD16 & ib$0 : BIT & nw8$0 : BV8 & not(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(3|->id_register8))(6) = 0) & 4 = INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(0))))) & WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)}<+{3|->id_register8|->BV8_TO_WORD8(nw8$0)})(3|->id_register8))(6) = 0 & address$0 = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(14|->id_register8)) & ib$0 = WORD8_TO_BV8(mpmem$1(address$0))(0) & nw8$0 = BV8_SET_BIT(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(3|->id_register8)),6,ib$0));
  ("`Local hypotheses'" & address : WORD16 & ib : BIT & nw8 : BV8 & address = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(14|->id_register8)) & ib = WORD8_TO_BV8(mpmem$1(address))(1) & nw8 = BV8_SET_BIT(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(3|->id_register8)),6,ib) & 11 = INSTRUCTION_NEXT(11) & not(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(7))) = 5) & 9 = INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(7))) & address$0 : WORD16 & ib$0 : BIT & nw8$0 : BV8 & not(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(3|->id_register8))(6) = 0) & 4 = INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(0))))) & not(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)}<+{3|->id_register8|->BV8_TO_WORD8(nw8$0)})(3|->id_register8))(6) = 0) & address$0 = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(14|->id_register8)) & ib$0 = WORD8_TO_BV8(mpmem$1(address$0))(0) & nw8$0 = BV8_SET_BIT(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(3|->id_register8)),6,ib$0));
  ("`Local hypotheses'" & address : WORD16 & ib : BIT & nw8 : BV8 & address = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(14|->id_register8)) & ib = WORD8_TO_BV8(mpmem$1(address))(1) & nw8 = BV8_SET_BIT(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(3|->id_register8)),6,ib) & 11 = INSTRUCTION_NEXT(11) & not(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(0)))) = 5) & 9 = INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(0)))) & not(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(0)))) = 4) & WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(3|->id_register8))(6) = 0);
  ("`Local hypotheses'" & address : WORD16 & ib : BIT & nw8 : BV8 & address = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(14|->id_register8)) & ib = WORD8_TO_BV8(mpmem$1(address))(1) & nw8 = BV8_SET_BIT(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(3|->id_register8)),6,ib) & 11 = INSTRUCTION_NEXT(11) & not(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(0))))) = 5) & 9 = INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(0))))) & not(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(0))))) = 4) & not(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(3|->id_register8))(6) = 0));
  (13 : INSTRUCTION);
  (mppcz$7777 = 13 => a : id_register8 & 2 : WORD8);
  "`Check preconditions of called operation, or While loop construction, or Assert predicates'" & "`Check preconditions of called operation, or While loop construction, or Assert predicates'" & "`Check preconditions of called operation, or While loop construction, or Assert predicates'" & "`Check preconditions of called operation, or While loop construction, or Assert predicates'" & "`Check preconditions of called operation, or While loop construction, or Assert predicates'" & "`Check preconditions of called operation, or While loop construction, or Assert predicates'" & "`Check preconditions of called operation, or While loop construction, or Assert predicates'" & "`Check preconditions of called operation, or While loop construction, or Assert predicates'" & "`Check preconditions of called operation, or While loop construction, or Assert predicates'" & "`Check preconditions of called operation, or While loop construction, or Assert predicates'" & "`Check preconditions of called operation, or While loop construction, or Assert predicates'" & "`Check preconditions of called operation, or While loop construction, or Assert predicates'" & "`Check preconditions of called operation, or While loop construction, or Assert predicates'" & "`Check preconditions of called operation, or While loop construction, or Assert predicates'" & "`Check preconditions of called operation, or While loop construction, or Assert predicates'" & "`Check preconditions of called operation, or While loop construction, or Assert predicates'" & "`Check preconditions of called operation, or While loop construction, or Assert predicates'" & "`Check preconditions of called operation, or While loop construction, or Assert predicates'" & "`Check preconditions of called operation, or While loop construction, or Assert predicates'" & "`Check preconditions of called operation, or While loop construction, or Assert predicates'" & "`Check preconditions of called operation, or While loop construction, or Assert predicates'" & "`Check preconditions of called operation, or While loop construction, or Assert predicates'" & "`Check preconditions of called operation, or While loop construction, or Assert predicates'" & "`Check preconditions of called operation, or While loop construction, or Assert predicates'";
  ("`Local hypotheses'" & address : WORD16 & ib : BIT & nw8 : BV8 & address = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(14|->id_register8)) & ib = WORD8_TO_BV8(mpmem$1(address))(1) & nw8 = BV8_SET_BIT(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(3|->id_register8)),6,ib) & not(INSTRUCTION_NEXT(INSTRUCTION_NEXT(7)) = 9) & 10 = INSTRUCTION_NEXT(INSTRUCTION_NEXT(7)) & not(INSTRUCTION_NEXT(INSTRUCTION_NEXT(7)) = 5) & address$0 : WORD16 & ib$0 : BIT & nw8$0 : BV8 & WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(3|->id_register8))(6) = 0 & 4 = INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(0)))) & WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)}<+{3|->id_register8|->BV8_TO_WORD8(nw8$0)})(3|->id_register8))(6) = 0 & address$0 = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(14|->id_register8)) & ib$0 = WORD8_TO_BV8(mpmem$1(address$0))(0) & nw8$0 = BV8_SET_BIT(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(3|->id_register8)),6,ib$0));
  ("`Local hypotheses'" & address : WORD16 & ib : BIT & nw8 : BV8 & address = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(14|->id_register8)) & ib = WORD8_TO_BV8(mpmem$1(address))(1) & nw8 = BV8_SET_BIT(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(3|->id_register8)),6,ib) & not(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(7))) = 9) & 10 = INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(7))) & not(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(7))) = 5) & address$0 : WORD16 & ib$0 : BIT & nw8$0 : BV8 & WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(3|->id_register8))(6) = 0 & 4 = INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(0)))) & not(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)}<+{3|->id_register8|->BV8_TO_WORD8(nw8$0)})(3|->id_register8))(6) = 0) & address$0 = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(14|->id_register8)) & ib$0 = WORD8_TO_BV8(mpmem$1(address$0))(0) & nw8$0 = BV8_SET_BIT(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(3|->id_register8)),6,ib$0));
  ("`Local hypotheses'" & address : WORD16 & ib : BIT & nw8 : BV8 & address = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(14|->id_register8)) & ib = WORD8_TO_BV8(mpmem$1(address))(1) & nw8 = BV8_SET_BIT(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(3|->id_register8)),6,ib) & not(INSTRUCTION_NEXT(INSTRUCTION_NEXT(7)) = 9) & 10 = INSTRUCTION_NEXT(INSTRUCTION_NEXT(7)) & not(INSTRUCTION_NEXT(INSTRUCTION_NEXT(7)) = 5) & address$0 : WORD16 & ib$0 : BIT & nw8$0 : BV8 & not(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(3|->id_register8))(6) = 0) & 4 = INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(0))))) & WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)}<+{3|->id_register8|->BV8_TO_WORD8(nw8$0)})(3|->id_register8))(6) = 0 & address$0 = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(14|->id_register8)) & ib$0 = WORD8_TO_BV8(mpmem$1(address$0))(0) & nw8$0 = BV8_SET_BIT(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(3|->id_register8)),6,ib$0));
  ("`Local hypotheses'" & address : WORD16 & ib : BIT & nw8 : BV8 & address = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(14|->id_register8)) & ib = WORD8_TO_BV8(mpmem$1(address))(1) & nw8 = BV8_SET_BIT(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(3|->id_register8)),6,ib) & not(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(7))) = 9) & 10 = INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(7))) & not(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(7))) = 5) & address$0 : WORD16 & ib$0 : BIT & nw8$0 : BV8 & not(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(3|->id_register8))(6) = 0) & 4 = INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(0))))) & not(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)}<+{3|->id_register8|->BV8_TO_WORD8(nw8$0)})(3|->id_register8))(6) = 0) & address$0 = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(14|->id_register8)) & ib$0 = WORD8_TO_BV8(mpmem$1(address$0))(0) & nw8$0 = BV8_SET_BIT(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(3|->id_register8)),6,ib$0));
  ("`Local hypotheses'" & address : WORD16 & ib : BIT & nw8 : BV8 & address = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(14|->id_register8)) & ib = WORD8_TO_BV8(mpmem$1(address))(1) & nw8 = BV8_SET_BIT(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(3|->id_register8)),6,ib) & not(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(0)))) = 9) & 10 = INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(0)))) & not(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(0)))) = 5) & not(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(0)))) = 4) & WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(3|->id_register8))(6) = 0);
  ("`Local hypotheses'" & address : WORD16 & ib : BIT & nw8 : BV8 & address = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(14|->id_register8)) & ib = WORD8_TO_BV8(mpmem$1(address))(1) & nw8 = BV8_SET_BIT(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(3|->id_register8)),6,ib) & not(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(0))))) = 9) & 10 = INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(0))))) & not(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(0))))) = 5) & not(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(0))))) = 4) & not(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(3|->id_register8))(6) = 0));
  ("`Local hypotheses'" & address : WORD16 & ib : BIT & nw8 : BV8 & address = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(14|->id_register8)) & ib = WORD8_TO_BV8(mpmem$1(address))(1) & nw8 = BV8_SET_BIT(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(3|->id_register8)),6,ib) & address$0 : WORD16 & ib$0 : BIT & nw8$0 : BV8 & WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(3|->id_register8))(6) = 0 & 4 = INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(0)))) & WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)}<+{3|->id_register8|->BV8_TO_WORD8(nw8$0)})(3|->id_register8))(6) = 0 & 5 = INSTRUCTION_NEXT(INSTRUCTION_NEXT(7)) & address$0 = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(14|->id_register8)) & ib$0 = WORD8_TO_BV8(mpmem$1(address$0))(0) & nw8$0 = BV8_SET_BIT(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(3|->id_register8)),6,ib$0));
  ("`Local hypotheses'" & address : WORD16 & ib : BIT & nw8 : BV8 & address = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(14|->id_register8)) & ib = WORD8_TO_BV8(mpmem$1(address))(1) & nw8 = BV8_SET_BIT(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(3|->id_register8)),6,ib) & address$0 : WORD16 & ib$0 : BIT & nw8$0 : BV8 & WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(3|->id_register8))(6) = 0 & 4 = INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(0)))) & not(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)}<+{3|->id_register8|->BV8_TO_WORD8(nw8$0)})(3|->id_register8))(6) = 0) & 5 = INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(7))) & address$0 = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(14|->id_register8)) & ib$0 = WORD8_TO_BV8(mpmem$1(address$0))(0) & nw8$0 = BV8_SET_BIT(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(3|->id_register8)),6,ib$0));
  ("`Local hypotheses'" & address : WORD16 & ib : BIT & nw8 : BV8 & address = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(14|->id_register8)) & ib = WORD8_TO_BV8(mpmem$1(address))(1) & nw8 = BV8_SET_BIT(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(3|->id_register8)),6,ib) & address$0 : WORD16 & ib$0 : BIT & nw8$0 : BV8 & not(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(3|->id_register8))(6) = 0) & 4 = INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(0))))) & WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)}<+{3|->id_register8|->BV8_TO_WORD8(nw8$0)})(3|->id_register8))(6) = 0 & 5 = INSTRUCTION_NEXT(INSTRUCTION_NEXT(7)) & address$0 = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(14|->id_register8)) & ib$0 = WORD8_TO_BV8(mpmem$1(address$0))(0) & nw8$0 = BV8_SET_BIT(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(3|->id_register8)),6,ib$0));
  ("`Local hypotheses'" & address : WORD16 & ib : BIT & nw8 : BV8 & address = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(14|->id_register8)) & ib = WORD8_TO_BV8(mpmem$1(address))(1) & nw8 = BV8_SET_BIT(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(3|->id_register8)),6,ib) & address$0 : WORD16 & ib$0 : BIT & nw8$0 : BV8 & not(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(3|->id_register8))(6) = 0) & 4 = INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(0))))) & not(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)}<+{3|->id_register8|->BV8_TO_WORD8(nw8$0)})(3|->id_register8))(6) = 0) & 5 = INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(7))) & address$0 = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(14|->id_register8)) & ib$0 = WORD8_TO_BV8(mpmem$1(address$0))(0) & nw8$0 = BV8_SET_BIT(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(3|->id_register8)),6,ib$0));
  ("`Local hypotheses'" & address : WORD16 & ib : BIT & nw8 : BV8 & address = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(14|->id_register8)) & ib = WORD8_TO_BV8(mpmem$1(address))(1) & nw8 = BV8_SET_BIT(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(3|->id_register8)),6,ib) & not(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(0)))) = 4) & 5 = INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(0)))) & WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(3|->id_register8))(6) = 0);
  ("`Local hypotheses'" & address : WORD16 & ib : BIT & nw8 : BV8 & address = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(14|->id_register8)) & ib = WORD8_TO_BV8(mpmem$1(address))(1) & nw8 = BV8_SET_BIT(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(3|->id_register8)),6,ib) & not(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(0))))) = 4) & 5 = INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(0))))) & not(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(3|->id_register8))(6) = 0));
  ("`Local hypotheses'" & address : WORD16 & ib : BIT & nw8 : BV8 & address = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(14|->id_register8)) & ib = WORD8_TO_BV8(mpmem$1(address))(1) & nw8 = BV8_SET_BIT(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(3|->id_register8)),6,ib) & not(INSTRUCTION_NEXT(INSTRUCTION_NEXT(7)) = 10) & not(INSTRUCTION_NEXT(INSTRUCTION_NEXT(7)) = 9) & not(INSTRUCTION_NEXT(INSTRUCTION_NEXT(7)) = 5) & address$0 : WORD16 & ib$0 : BIT & nw8$0 : BV8 & WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(3|->id_register8))(6) = 0 & 4 = INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(0)))) & WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)}<+{3|->id_register8|->BV8_TO_WORD8(nw8$0)})(3|->id_register8))(6) = 0 & address$0 = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(14|->id_register8)) & ib$0 = WORD8_TO_BV8(mpmem$1(address$0))(0) & nw8$0 = BV8_SET_BIT(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(3|->id_register8)),6,ib$0));
  ("`Local hypotheses'" & address : WORD16 & ib : BIT & nw8 : BV8 & address = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(14|->id_register8)) & ib = WORD8_TO_BV8(mpmem$1(address))(1) & nw8 = BV8_SET_BIT(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(3|->id_register8)),6,ib) & not(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(7))) = 10) & not(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(7))) = 9) & not(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(7))) = 5) & address$0 : WORD16 & ib$0 : BIT & nw8$0 : BV8 & WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(3|->id_register8))(6) = 0 & 4 = INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(0)))) & not(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)}<+{3|->id_register8|->BV8_TO_WORD8(nw8$0)})(3|->id_register8))(6) = 0) & address$0 = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(14|->id_register8)) & ib$0 = WORD8_TO_BV8(mpmem$1(address$0))(0) & nw8$0 = BV8_SET_BIT(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(3|->id_register8)),6,ib$0));
  ("`Local hypotheses'" & address : WORD16 & ib : BIT & nw8 : BV8 & address = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(14|->id_register8)) & ib = WORD8_TO_BV8(mpmem$1(address))(1) & nw8 = BV8_SET_BIT(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(3|->id_register8)),6,ib) & not(INSTRUCTION_NEXT(INSTRUCTION_NEXT(7)) = 10) & not(INSTRUCTION_NEXT(INSTRUCTION_NEXT(7)) = 9) & not(INSTRUCTION_NEXT(INSTRUCTION_NEXT(7)) = 5) & address$0 : WORD16 & ib$0 : BIT & nw8$0 : BV8 & not(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(3|->id_register8))(6) = 0) & 4 = INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(0))))) & WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)}<+{3|->id_register8|->BV8_TO_WORD8(nw8$0)})(3|->id_register8))(6) = 0 & address$0 = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(14|->id_register8)) & ib$0 = WORD8_TO_BV8(mpmem$1(address$0))(0) & nw8$0 = BV8_SET_BIT(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(3|->id_register8)),6,ib$0));
  ("`Local hypotheses'" & address : WORD16 & ib : BIT & nw8 : BV8 & address = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(14|->id_register8)) & ib = WORD8_TO_BV8(mpmem$1(address))(1) & nw8 = BV8_SET_BIT(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(3|->id_register8)),6,ib) & not(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(7))) = 10) & not(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(7))) = 9) & not(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(7))) = 5) & address$0 : WORD16 & ib$0 : BIT & nw8$0 : BV8 & not(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(3|->id_register8))(6) = 0) & 4 = INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(0))))) & not(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)}<+{3|->id_register8|->BV8_TO_WORD8(nw8$0)})(3|->id_register8))(6) = 0) & address$0 = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(14|->id_register8)) & ib$0 = WORD8_TO_BV8(mpmem$1(address$0))(0) & nw8$0 = BV8_SET_BIT(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(3|->id_register8)),6,ib$0));
  ("`Local hypotheses'" & address : WORD16 & ib : BIT & nw8 : BV8 & address = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(14|->id_register8)) & ib = WORD8_TO_BV8(mpmem$1(address))(1) & nw8 = BV8_SET_BIT(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(3|->id_register8)),6,ib) & not(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(0)))) = 10) & not(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(0)))) = 9) & not(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(0)))) = 5) & not(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(0)))) = 4) & WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(3|->id_register8))(6) = 0);
  ("`Local hypotheses'" & address : WORD16 & ib : BIT & nw8 : BV8 & address = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(14|->id_register8)) & ib = WORD8_TO_BV8(mpmem$1(address))(1) & nw8 = BV8_SET_BIT(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(3|->id_register8)),6,ib) & not(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(0))))) = 10) & not(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(0))))) = 9) & not(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(0))))) = 5) & not(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(0))))) = 4) & not(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(3|->id_register8))(6) = 0));
  "`Check preconditions of called operation, or While loop construction, or Assert predicates'" & "`Check preconditions of called operation, or While loop construction, or Assert predicates'" & "`Check preconditions of called operation, or While loop construction, or Assert predicates'" & "`Check preconditions of called operation, or While loop construction, or Assert predicates'" & "`Check preconditions of called operation, or While loop construction, or Assert predicates'" & "`Check preconditions of called operation, or While loop construction, or Assert predicates'" & "`Check preconditions of called operation, or While loop construction, or Assert predicates'" & "`Check preconditions of called operation, or While loop construction, or Assert predicates'" & "`Check preconditions of called operation, or While loop construction, or Assert predicates'" & "`Check preconditions of called operation, or While loop construction, or Assert predicates'" & "`Check preconditions of called operation, or While loop construction, or Assert predicates'" & "`Check preconditions of called operation, or While loop construction, or Assert predicates'" & "`Check preconditions of called operation, or While loop construction, or Assert predicates'" & "`Check preconditions of called operation, or While loop construction, or Assert predicates'" & "`Check preconditions of called operation, or While loop construction, or Assert predicates'" & "`Check preconditions of called operation, or While loop construction, or Assert predicates'" & "`Check preconditions of called operation, or While loop construction, or Assert predicates'" & "`Check preconditions of called operation, or While loop construction, or Assert predicates'";
  (INSTRUCTION_NEXT(INSTRUCTION_NEXT(13))/=15 => -1 : INT & 0 : INT & 1 : INT & -1 : INSTRUCTION);
  ("`Local hypotheses'" & address : WORD16 & address = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)}<+{3|->id_register8|->BV8_TO_WORD8(nw8$0)}<+{1|->id_register8|->2})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)}<+{3|->id_register8|->BV8_TO_WORD8(nw8$0)}<+{1|->id_register8|->2})(14|->id_register8)) & address$0 : WORD16 & ib : BIT & nw8 : BV8 & ib = WORD8_TO_BV8(mpmem$1(address$0))(1) & nw8 = BV8_SET_BIT(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(3|->id_register8)),6,ib) & not(INSTRUCTION_NEXT(INSTRUCTION_NEXT(7)) = 9) & 10 = INSTRUCTION_NEXT(INSTRUCTION_NEXT(7)) & not(INSTRUCTION_NEXT(INSTRUCTION_NEXT(7)) = 5) & address$1 : WORD16 & ib$0 : BIT & nw8$0 : BV8 & WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(3|->id_register8))(6) = 0 & 4 = INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(0)))) & WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)}<+{3|->id_register8|->BV8_TO_WORD8(nw8$0)})(3|->id_register8))(6) = 0 & address$0 = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(14|->id_register8)) & address$1 = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(14|->id_register8)) & ib$0 = WORD8_TO_BV8(mpmem$1(address$1))(0) & nw8$0 = BV8_SET_BIT(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(3|->id_register8)),6,ib$0) & not(INSTRUCTION_NEXT(INSTRUCTION_NEXT(13)) = 15));
  (-1 : INT);
  (0 : INT);
  (1 : INT);
  ("`Local hypotheses'" & address : WORD16 & address = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)}<+{3|->id_register8|->BV8_TO_WORD8(nw8$0)}<+{1|->id_register8|->2})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)}<+{3|->id_register8|->BV8_TO_WORD8(nw8$0)}<+{1|->id_register8|->2})(14|->id_register8)) & address$0 : WORD16 & ib : BIT & nw8 : BV8 & ib = WORD8_TO_BV8(mpmem$1(address$0))(1) & nw8 = BV8_SET_BIT(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(3|->id_register8)),6,ib) & not(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(7))) = 9) & 10 = INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(7))) & not(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(7))) = 5) & address$1 : WORD16 & ib$0 : BIT & nw8$0 : BV8 & WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(3|->id_register8))(6) = 0 & 4 = INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(0)))) & not(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)}<+{3|->id_register8|->BV8_TO_WORD8(nw8$0)})(3|->id_register8))(6) = 0) & address$0 = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(14|->id_register8)) & address$1 = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(14|->id_register8)) & ib$0 = WORD8_TO_BV8(mpmem$1(address$1))(0) & nw8$0 = BV8_SET_BIT(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(3|->id_register8)),6,ib$0) & not(INSTRUCTION_NEXT(INSTRUCTION_NEXT(13)) = 15));
  ("`Local hypotheses'" & address : WORD16 & address = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)}<+{3|->id_register8|->BV8_TO_WORD8(nw8$0)}<+{1|->id_register8|->2})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)}<+{3|->id_register8|->BV8_TO_WORD8(nw8$0)}<+{1|->id_register8|->2})(14|->id_register8)) & address$0 : WORD16 & ib : BIT & nw8 : BV8 & ib = WORD8_TO_BV8(mpmem$1(address$0))(1) & nw8 = BV8_SET_BIT(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(3|->id_register8)),6,ib) & not(INSTRUCTION_NEXT(INSTRUCTION_NEXT(7)) = 9) & 10 = INSTRUCTION_NEXT(INSTRUCTION_NEXT(7)) & not(INSTRUCTION_NEXT(INSTRUCTION_NEXT(7)) = 5) & address$1 : WORD16 & ib$0 : BIT & nw8$0 : BV8 & not(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(3|->id_register8))(6) = 0) & 4 = INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(0))))) & WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)}<+{3|->id_register8|->BV8_TO_WORD8(nw8$0)})(3|->id_register8))(6) = 0 & address$0 = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(14|->id_register8)) & address$1 = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(14|->id_register8)) & ib$0 = WORD8_TO_BV8(mpmem$1(address$1))(0) & nw8$0 = BV8_SET_BIT(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(3|->id_register8)),6,ib$0) & not(INSTRUCTION_NEXT(INSTRUCTION_NEXT(13)) = 15));
  ("`Local hypotheses'" & address : WORD16 & address = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)}<+{3|->id_register8|->BV8_TO_WORD8(nw8$0)}<+{1|->id_register8|->2})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)}<+{3|->id_register8|->BV8_TO_WORD8(nw8$0)}<+{1|->id_register8|->2})(14|->id_register8)) & address$0 : WORD16 & ib : BIT & nw8 : BV8 & ib = WORD8_TO_BV8(mpmem$1(address$0))(1) & nw8 = BV8_SET_BIT(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(3|->id_register8)),6,ib) & not(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(7))) = 9) & 10 = INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(7))) & not(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(7))) = 5) & address$1 : WORD16 & ib$0 : BIT & nw8$0 : BV8 & not(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(3|->id_register8))(6) = 0) & 4 = INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(0))))) & not(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)}<+{3|->id_register8|->BV8_TO_WORD8(nw8$0)})(3|->id_register8))(6) = 0) & address$0 = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(14|->id_register8)) & address$1 = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(14|->id_register8)) & ib$0 = WORD8_TO_BV8(mpmem$1(address$1))(0) & nw8$0 = BV8_SET_BIT(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(3|->id_register8)),6,ib$0) & not(INSTRUCTION_NEXT(INSTRUCTION_NEXT(13)) = 15));
  ("`Local hypotheses'" & address : WORD16 & address = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)}<+{1|->id_register8|->2})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)}<+{1|->id_register8|->2})(14|->id_register8)) & address$0 : WORD16 & ib : BIT & nw8 : BV8 & ib = WORD8_TO_BV8(mpmem$1(address$0))(1) & nw8 = BV8_SET_BIT(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(3|->id_register8)),6,ib) & not(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(0)))) = 9) & 10 = INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(0)))) & not(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(0)))) = 5) & not(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(0)))) = 4) & WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(3|->id_register8))(6) = 0 & address$0 = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(14|->id_register8)) & not(INSTRUCTION_NEXT(INSTRUCTION_NEXT(13)) = 15));
  ("`Local hypotheses'" & address : WORD16 & address = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)}<+{1|->id_register8|->2})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)}<+{1|->id_register8|->2})(14|->id_register8)) & address$0 : WORD16 & ib : BIT & nw8 : BV8 & ib = WORD8_TO_BV8(mpmem$1(address$0))(1) & nw8 = BV8_SET_BIT(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(3|->id_register8)),6,ib) & not(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(0))))) = 9) & 10 = INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(0))))) & not(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(0))))) = 5) & not(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(0))))) = 4) & not(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(3|->id_register8))(6) = 0) & address$0 = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(14|->id_register8)) & not(INSTRUCTION_NEXT(INSTRUCTION_NEXT(13)) = 15));
  (INSTRUCTION_NEXT(14)/=15 => -1 : INT & 0 : INT & 1 : INT & -1 : INSTRUCTION);
  ("`Local hypotheses'" & address : WORD16 & address = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)}<+{3|->id_register8|->BV8_TO_WORD8(nw8$0)}<+{1|->id_register8|->1})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)}<+{3|->id_register8|->BV8_TO_WORD8(nw8$0)}<+{1|->id_register8|->1})(14|->id_register8)) & address$0 : WORD16 & ib : BIT & nw8 : BV8 & ib = WORD8_TO_BV8(mpmem$1(address$0))(1) & nw8 = BV8_SET_BIT(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(3|->id_register8)),6,ib) & 11 = INSTRUCTION_NEXT(11) & not(INSTRUCTION_NEXT(INSTRUCTION_NEXT(7)) = 5) & 9 = INSTRUCTION_NEXT(INSTRUCTION_NEXT(7)) & address$1 : WORD16 & ib$0 : BIT & nw8$0 : BV8 & WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(3|->id_register8))(6) = 0 & 4 = INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(0)))) & WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)}<+{3|->id_register8|->BV8_TO_WORD8(nw8$0)})(3|->id_register8))(6) = 0 & address$0 = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(14|->id_register8)) & address$1 = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(14|->id_register8)) & ib$0 = WORD8_TO_BV8(mpmem$1(address$1))(0) & nw8$0 = BV8_SET_BIT(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(3|->id_register8)),6,ib$0));
  ("`Local hypotheses'" & address : WORD16 & address = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)}<+{3|->id_register8|->BV8_TO_WORD8(nw8$0)}<+{1|->id_register8|->1})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)}<+{3|->id_register8|->BV8_TO_WORD8(nw8$0)}<+{1|->id_register8|->1})(14|->id_register8)) & address$0 : WORD16 & ib : BIT & nw8 : BV8 & ib = WORD8_TO_BV8(mpmem$1(address$0))(1) & nw8 = BV8_SET_BIT(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(3|->id_register8)),6,ib) & 11 = INSTRUCTION_NEXT(11) & not(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(7))) = 5) & 9 = INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(7))) & address$1 : WORD16 & ib$0 : BIT & nw8$0 : BV8 & WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(3|->id_register8))(6) = 0 & 4 = INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(0)))) & not(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)}<+{3|->id_register8|->BV8_TO_WORD8(nw8$0)})(3|->id_register8))(6) = 0) & address$0 = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(14|->id_register8)) & address$1 = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(14|->id_register8)) & ib$0 = WORD8_TO_BV8(mpmem$1(address$1))(0) & nw8$0 = BV8_SET_BIT(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(3|->id_register8)),6,ib$0));
  ("`Local hypotheses'" & address : WORD16 & address = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)}<+{3|->id_register8|->BV8_TO_WORD8(nw8$0)}<+{1|->id_register8|->1})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)}<+{3|->id_register8|->BV8_TO_WORD8(nw8$0)}<+{1|->id_register8|->1})(14|->id_register8)) & address$0 : WORD16 & ib : BIT & nw8 : BV8 & ib = WORD8_TO_BV8(mpmem$1(address$0))(1) & nw8 = BV8_SET_BIT(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(3|->id_register8)),6,ib) & 11 = INSTRUCTION_NEXT(11) & not(INSTRUCTION_NEXT(INSTRUCTION_NEXT(7)) = 5) & 9 = INSTRUCTION_NEXT(INSTRUCTION_NEXT(7)) & address$1 : WORD16 & ib$0 : BIT & nw8$0 : BV8 & not(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(3|->id_register8))(6) = 0) & 4 = INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(0))))) & WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)}<+{3|->id_register8|->BV8_TO_WORD8(nw8$0)})(3|->id_register8))(6) = 0 & address$0 = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(14|->id_register8)) & address$1 = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(14|->id_register8)) & ib$0 = WORD8_TO_BV8(mpmem$1(address$1))(0) & nw8$0 = BV8_SET_BIT(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(3|->id_register8)),6,ib$0));
  ("`Local hypotheses'" & address : WORD16 & address = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)}<+{3|->id_register8|->BV8_TO_WORD8(nw8$0)}<+{1|->id_register8|->1})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)}<+{3|->id_register8|->BV8_TO_WORD8(nw8$0)}<+{1|->id_register8|->1})(14|->id_register8)) & address$0 : WORD16 & ib : BIT & nw8 : BV8 & ib = WORD8_TO_BV8(mpmem$1(address$0))(1) & nw8 = BV8_SET_BIT(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(3|->id_register8)),6,ib) & 11 = INSTRUCTION_NEXT(11) & not(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(7))) = 5) & 9 = INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(7))) & address$1 : WORD16 & ib$0 : BIT & nw8$0 : BV8 & not(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(3|->id_register8))(6) = 0) & 4 = INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(0))))) & not(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)}<+{3|->id_register8|->BV8_TO_WORD8(nw8$0)})(3|->id_register8))(6) = 0) & address$0 = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(14|->id_register8)) & address$1 = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(14|->id_register8)) & ib$0 = WORD8_TO_BV8(mpmem$1(address$1))(0) & nw8$0 = BV8_SET_BIT(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(3|->id_register8)),6,ib$0));
  ("`Local hypotheses'" & address : WORD16 & address = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)}<+{1|->id_register8|->1})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)}<+{1|->id_register8|->1})(14|->id_register8)) & address$0 : WORD16 & ib : BIT & nw8 : BV8 & ib = WORD8_TO_BV8(mpmem$1(address$0))(1) & nw8 = BV8_SET_BIT(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(3|->id_register8)),6,ib) & 11 = INSTRUCTION_NEXT(11) & not(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(0)))) = 5) & 9 = INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(0)))) & not(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(0)))) = 4) & WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(3|->id_register8))(6) = 0 & address$0 = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(14|->id_register8)));
  ("`Local hypotheses'" & address : WORD16 & address = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)}<+{1|->id_register8|->1})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)}<+{1|->id_register8|->1})(14|->id_register8)) & address$0 : WORD16 & ib : BIT & nw8 : BV8 & ib = WORD8_TO_BV8(mpmem$1(address$0))(1) & nw8 = BV8_SET_BIT(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(3|->id_register8)),6,ib) & 11 = INSTRUCTION_NEXT(11) & not(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(0))))) = 5) & 9 = INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(0))))) & not(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(0))))) = 4) & not(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(3|->id_register8))(6) = 0) & address$0 = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(14|->id_register8)));
  ("`Local hypotheses'" & address : WORD16 & address = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)}<+{3|->id_register8|->BV8_TO_WORD8(nw8$0)}<+{1|->id_register8|->0})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)}<+{3|->id_register8|->BV8_TO_WORD8(nw8$0)}<+{1|->id_register8|->0})(14|->id_register8)) & address$0 : WORD16 & ib : BIT & nw8 : BV8 & ib = WORD8_TO_BV8(mpmem$1(address$0))(1) & nw8 = BV8_SET_BIT(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(3|->id_register8)),6,ib) & address$1 : WORD16 & ib$0 : BIT & nw8$0 : BV8 & WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(3|->id_register8))(6) = 0 & 4 = INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(0)))) & WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)}<+{3|->id_register8|->BV8_TO_WORD8(nw8$0)})(3|->id_register8))(6) = 0 & 5 = INSTRUCTION_NEXT(INSTRUCTION_NEXT(7)) & address$0 = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(14|->id_register8)) & address$1 = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(14|->id_register8)) & ib$0 = WORD8_TO_BV8(mpmem$1(address$1))(0) & nw8$0 = BV8_SET_BIT(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(3|->id_register8)),6,ib$0) & not(INSTRUCTION_NEXT(14) = 15));
  ("`Local hypotheses'" & address : WORD16 & address = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)}<+{3|->id_register8|->BV8_TO_WORD8(nw8$0)}<+{1|->id_register8|->0})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)}<+{3|->id_register8|->BV8_TO_WORD8(nw8$0)}<+{1|->id_register8|->0})(14|->id_register8)) & address$0 : WORD16 & ib : BIT & nw8 : BV8 & ib = WORD8_TO_BV8(mpmem$1(address$0))(1) & nw8 = BV8_SET_BIT(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(3|->id_register8)),6,ib) & address$1 : WORD16 & ib$0 : BIT & nw8$0 : BV8 & WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(3|->id_register8))(6) = 0 & 4 = INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(0)))) & not(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)}<+{3|->id_register8|->BV8_TO_WORD8(nw8$0)})(3|->id_register8))(6) = 0) & 5 = INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(7))) & address$0 = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(14|->id_register8)) & address$1 = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(14|->id_register8)) & ib$0 = WORD8_TO_BV8(mpmem$1(address$1))(0) & nw8$0 = BV8_SET_BIT(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(3|->id_register8)),6,ib$0) & not(INSTRUCTION_NEXT(14) = 15));
  ("`Local hypotheses'" & address : WORD16 & address = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)}<+{3|->id_register8|->BV8_TO_WORD8(nw8$0)}<+{1|->id_register8|->0})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)}<+{3|->id_register8|->BV8_TO_WORD8(nw8$0)}<+{1|->id_register8|->0})(14|->id_register8)) & address$0 : WORD16 & ib : BIT & nw8 : BV8 & ib = WORD8_TO_BV8(mpmem$1(address$0))(1) & nw8 = BV8_SET_BIT(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(3|->id_register8)),6,ib) & address$1 : WORD16 & ib$0 : BIT & nw8$0 : BV8 & not(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(3|->id_register8))(6) = 0) & 4 = INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(0))))) & WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)}<+{3|->id_register8|->BV8_TO_WORD8(nw8$0)})(3|->id_register8))(6) = 0 & 5 = INSTRUCTION_NEXT(INSTRUCTION_NEXT(7)) & address$0 = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(14|->id_register8)) & address$1 = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(14|->id_register8)) & ib$0 = WORD8_TO_BV8(mpmem$1(address$1))(0) & nw8$0 = BV8_SET_BIT(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(3|->id_register8)),6,ib$0) & not(INSTRUCTION_NEXT(14) = 15));
  ("`Local hypotheses'" & address : WORD16 & address = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)}<+{3|->id_register8|->BV8_TO_WORD8(nw8$0)}<+{1|->id_register8|->0})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)}<+{3|->id_register8|->BV8_TO_WORD8(nw8$0)}<+{1|->id_register8|->0})(14|->id_register8)) & address$0 : WORD16 & ib : BIT & nw8 : BV8 & ib = WORD8_TO_BV8(mpmem$1(address$0))(1) & nw8 = BV8_SET_BIT(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(3|->id_register8)),6,ib) & address$1 : WORD16 & ib$0 : BIT & nw8$0 : BV8 & not(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(3|->id_register8))(6) = 0) & 4 = INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(0))))) & not(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)}<+{3|->id_register8|->BV8_TO_WORD8(nw8$0)})(3|->id_register8))(6) = 0) & 5 = INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(7))) & address$0 = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(14|->id_register8)) & address$1 = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(14|->id_register8)) & ib$0 = WORD8_TO_BV8(mpmem$1(address$1))(0) & nw8$0 = BV8_SET_BIT(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(3|->id_register8)),6,ib$0) & not(INSTRUCTION_NEXT(14) = 15));
  ("`Local hypotheses'" & address : WORD16 & address = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)}<+{1|->id_register8|->0})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)}<+{1|->id_register8|->0})(14|->id_register8)) & address$0 : WORD16 & ib : BIT & nw8 : BV8 & ib = WORD8_TO_BV8(mpmem$1(address$0))(1) & nw8 = BV8_SET_BIT(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(3|->id_register8)),6,ib) & not(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(0)))) = 4) & 5 = INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(0)))) & WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(3|->id_register8))(6) = 0 & address$0 = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(14|->id_register8)) & not(INSTRUCTION_NEXT(14) = 15));
  ("`Local hypotheses'" & address : WORD16 & address = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)}<+{1|->id_register8|->0})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)}<+{1|->id_register8|->0})(14|->id_register8)) & address$0 : WORD16 & ib : BIT & nw8 : BV8 & ib = WORD8_TO_BV8(mpmem$1(address$0))(1) & nw8 = BV8_SET_BIT(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(3|->id_register8)),6,ib) & not(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(0))))) = 4) & 5 = INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(0))))) & not(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(3|->id_register8))(6) = 0) & address$0 = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(14|->id_register8)) & not(INSTRUCTION_NEXT(14) = 15));
  ("`Local hypotheses'" & address : WORD16 & address = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)}<+{3|->id_register8|->BV8_TO_WORD8(nw8$0)})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)}<+{3|->id_register8|->BV8_TO_WORD8(nw8$0)})(14|->id_register8)) & address$0 : WORD16 & ib : BIT & nw8 : BV8 & ib = WORD8_TO_BV8(mpmem$1(address$0))(1) & nw8 = BV8_SET_BIT(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(3|->id_register8)),6,ib) & not(INSTRUCTION_NEXT(INSTRUCTION_NEXT(7)) = 10) & not(INSTRUCTION_NEXT(INSTRUCTION_NEXT(7)) = 9) & not(INSTRUCTION_NEXT(INSTRUCTION_NEXT(7)) = 5) & address$1 : WORD16 & ib$0 : BIT & nw8$0 : BV8 & WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(3|->id_register8))(6) = 0 & 4 = INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(0)))) & WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)}<+{3|->id_register8|->BV8_TO_WORD8(nw8$0)})(3|->id_register8))(6) = 0 & address$0 = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(14|->id_register8)) & address$1 = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(14|->id_register8)) & ib$0 = WORD8_TO_BV8(mpmem$1(address$1))(0) & nw8$0 = BV8_SET_BIT(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(3|->id_register8)),6,ib$0) & not(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(7))) = 15));
  ("`Local hypotheses'" & address : WORD16 & address = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)}<+{3|->id_register8|->BV8_TO_WORD8(nw8$0)})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)}<+{3|->id_register8|->BV8_TO_WORD8(nw8$0)})(14|->id_register8)) & address$0 : WORD16 & ib : BIT & nw8 : BV8 & ib = WORD8_TO_BV8(mpmem$1(address$0))(1) & nw8 = BV8_SET_BIT(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(3|->id_register8)),6,ib) & not(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(7))) = 10) & not(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(7))) = 9) & not(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(7))) = 5) & address$1 : WORD16 & ib$0 : BIT & nw8$0 : BV8 & WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(3|->id_register8))(6) = 0 & 4 = INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(0)))) & not(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)}<+{3|->id_register8|->BV8_TO_WORD8(nw8$0)})(3|->id_register8))(6) = 0) & address$0 = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(14|->id_register8)) & address$1 = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(14|->id_register8)) & ib$0 = WORD8_TO_BV8(mpmem$1(address$1))(0) & nw8$0 = BV8_SET_BIT(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(3|->id_register8)),6,ib$0) & not(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(7)))) = 15));
  ("`Local hypotheses'" & address : WORD16 & address = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)}<+{3|->id_register8|->BV8_TO_WORD8(nw8$0)})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)}<+{3|->id_register8|->BV8_TO_WORD8(nw8$0)})(14|->id_register8)) & address$0 : WORD16 & ib : BIT & nw8 : BV8 & ib = WORD8_TO_BV8(mpmem$1(address$0))(1) & nw8 = BV8_SET_BIT(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(3|->id_register8)),6,ib) & not(INSTRUCTION_NEXT(INSTRUCTION_NEXT(7)) = 10) & not(INSTRUCTION_NEXT(INSTRUCTION_NEXT(7)) = 9) & not(INSTRUCTION_NEXT(INSTRUCTION_NEXT(7)) = 5) & address$1 : WORD16 & ib$0 : BIT & nw8$0 : BV8 & not(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(3|->id_register8))(6) = 0) & 4 = INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(0))))) & WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)}<+{3|->id_register8|->BV8_TO_WORD8(nw8$0)})(3|->id_register8))(6) = 0 & address$0 = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(14|->id_register8)) & address$1 = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(14|->id_register8)) & ib$0 = WORD8_TO_BV8(mpmem$1(address$1))(0) & nw8$0 = BV8_SET_BIT(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(3|->id_register8)),6,ib$0) & not(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(7))) = 15));
  ("`Local hypotheses'" & address : WORD16 & address = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)}<+{3|->id_register8|->BV8_TO_WORD8(nw8$0)})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)}<+{3|->id_register8|->BV8_TO_WORD8(nw8$0)})(14|->id_register8)) & address$0 : WORD16 & ib : BIT & nw8 : BV8 & ib = WORD8_TO_BV8(mpmem$1(address$0))(1) & nw8 = BV8_SET_BIT(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(3|->id_register8)),6,ib) & not(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(7))) = 10) & not(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(7))) = 9) & not(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(7))) = 5) & address$1 : WORD16 & ib$0 : BIT & nw8$0 : BV8 & not(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(3|->id_register8))(6) = 0) & 4 = INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(0))))) & not(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)}<+{3|->id_register8|->BV8_TO_WORD8(nw8$0)})(3|->id_register8))(6) = 0) & address$0 = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(14|->id_register8)) & address$1 = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(14|->id_register8)) & ib$0 = WORD8_TO_BV8(mpmem$1(address$1))(0) & nw8$0 = BV8_SET_BIT(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(3|->id_register8)),6,ib$0) & not(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(7)))) = 15));
  ("`Local hypotheses'" & address : WORD16 & address = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(14|->id_register8)) & address$0 : WORD16 & ib : BIT & nw8 : BV8 & ib = WORD8_TO_BV8(mpmem$1(address$0))(1) & nw8 = BV8_SET_BIT(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(3|->id_register8)),6,ib) & not(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(0)))) = 10) & not(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(0)))) = 9) & not(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(0)))) = 5) & not(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(0)))) = 4) & WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(3|->id_register8))(6) = 0 & address$0 = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(14|->id_register8)) & not(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(0))))) = 15));
  ("`Local hypotheses'" & address : WORD16 & address = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(14|->id_register8)) & address$0 : WORD16 & ib : BIT & nw8 : BV8 & ib = WORD8_TO_BV8(mpmem$1(address$0))(1) & nw8 = BV8_SET_BIT(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(3|->id_register8)),6,ib) & not(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(0))))) = 10) & not(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(0))))) = 9) & not(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(0))))) = 5) & not(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(0))))) = 4) & not(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(3|->id_register8))(6) = 0) & address$0 = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(14|->id_register8)) & not(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(0)))))) = 15));
  "`Check that the invariant (mpmem(0) : 0..2 & mpmem(0) = counter) is preserved by the operation - ref 4.4, 5.5'" & "`Check that the invariant (mpmem(0) : 0..2 & mpmem(0) = counter) is preserved by the operation - ref 4.4, 5.5'" & "`Check that the invariant (mpmem(0) : 0..2 & mpmem(0) = counter) is preserved by the operation - ref 4.4, 5.5'" & "`Check that the invariant (mpmem(0) : 0..2 & mpmem(0) = counter) is preserved by the operation - ref 4.4, 5.5'";
  (not(btrue & mpstack$1<+{mpsp$1|->INSTRUCTION_NEXT(mppc$1)} : WORD16 +-> WORD16 & dom(mpstack$1<+{mpsp$1|->INSTRUCTION_NEXT(mppc$1)}) = WORD16 & mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{f_|->BV8_TO_WORD8(nw8$0)}<+{a|->0}<+{a|->1}<+{a|->2} : id_register8 +-> WORD8 & dom(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{f_|->BV8_TO_WORD8(nw8$0)}<+{a|->0}<+{a|->1}<+{a|->2}) = id_register8 & mpmem$1<+{address|->(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{f_|->BV8_TO_WORD8(nw8$0)}<+{a|->0}<+{a|->1}<+{a|->2})(a)} : WORD16 +-> WORD8 & dom(mpmem$1<+{address|->(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{f_|->BV8_TO_WORD8(nw8$0)}<+{a|->0}<+{a|->1}<+{a|->2})(a)}) = WORD16 & -1 : WORD16 & mpsp$1+1 : WORD16 & mpix$1 : WORD16 & mpiy$1 : WORD16 & dom(mpstack$1<+{mpsp$1|->INSTRUCTION_NEXT(mppc$1)}) = WORD16 & ran(mpstack$1<+{mpsp$1|->INSTRUCTION_NEXT(mppc$1)}) : POW(WORD16) & ran(mpmem$1<+{address|->(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{f_|->BV8_TO_WORD8(nw8$0)}<+{a|->0}<+{a|->1}<+{a|->2})(a)}) : POW(WORD8) & dom(mpmem$1<+{address|->(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{f_|->BV8_TO_WORD8(nw8$0)}<+{a|->0}<+{a|->1}<+{a|->2})(a)}) = WORD16 & ran(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{f_|->BV8_TO_WORD8(nw8$0)}<+{a|->0}<+{a|->1}<+{a|->2}) : POW(WORD8) & dom(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{f_|->BV8_TO_WORD8(nw8$0)}<+{a|->0}<+{a|->1}<+{a|->2}) = id_register8 & INSTRUCTION_NEXT(0) = 1 & INSTRUCTION_NEXT(1) = 2 & INSTRUCTION_NEXT(2) = 3 & INSTRUCTION_NEXT(3) = 4 & INSTRUCTION_NEXT(4) = 5 & INSTRUCTION_NEXT(5) = 6 & INSTRUCTION_NEXT(6) = 7 & INSTRUCTION_NEXT(7) = 8 & INSTRUCTION_NEXT(8) = 9 & INSTRUCTION_NEXT(9) = 10 & !c.(c : COLOR => c = green or c = yellow or c = red) & NB_WORD8S = 256 & !n.(n : WORD8 => 0<=n) & !n.(n : WORD8 => n<=255) & WORD8_POSITION = BV8_INDEX & BIT_FLIP(0) = 1 & BIT_FLIP(1) = 0 & BIT_AND(0,0) = 0 & BIT_AND(0,1) = 0 & BIT_AND(1,0) = 0 & BIT_AND(1,1) = 1 & BIT_IOR(0,0) = 0 & BIT_IOR(0,1) = 0 & BIT_IOR(1,0) = 0 & BIT_IOR(1,1) = 1 & BIT_XOR(0,0) = 0 & BIT_XOR(0,1) = 1 & BIT_XOR(1,0) = 1 & BIT_XOR(1,1) = 0 & dom(add) = WORD8*WORD8 & ran(add) : POW(WORD8*BOOL*BOOL) & dom(substract) = WORD8*WORD8 & ran(substract) : POW(WORD8*BOOL*BOOL) & dom(and) = WORD8*WORD8 & ran(and) : POW(WORD8*BOOL) & dom(ior) = WORD8*WORD8 & ran(ior) : POW(WORD8*BOOL) & dom(xor) = WORD8*WORD8 & ran(xor) : POW(WORD8*BOOL) & dom(bitclear) = WORD8*WORD8_POSITION & ran(bitclear) : POW(WORD8) & dom(bitset) = WORD8*WORD8_POSITION & ran(bitset) : POW(WORD8) & dom(bitget) = WORD8*WORD8_POSITION & ran(bitget) : POW(BIT) & dom(complement) = WORD8 & ran(complement) : POW(WORD8) & dom(swap) = WORD8 & ran(swap) : POW(WORD8) & ran(rotateleft) : POW(WORD8*BOOL) & dom(rotateleft) = WORD8 & dom(rotateright) = WORD8 & ran(rotateright) : POW(WORD8*BOOL) & color_refine(green) = 0 & color_refine(yellow) = 1 & color_refine(red) = 2 & color_step(0) = 1 & color_step(1) = 2 & color_step(2) = 0 & btrue & !(counter$7777).(counter$7777 = color_step(counter) => not((mpmem$1<+{address|->(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{f_|->BV8_TO_WORD8(nw8$0)}<+{a|->0}<+{a|->1}<+{a|->2})(a)})(0) : 0..2 & (mpmem$1<+{address|->(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{f_|->BV8_TO_WORD8(nw8$0)}<+{a|->0}<+{a|->1}<+{a|->2})(a)})(0) = counter$7777 & btrue))));
  "`Check that the invariant (mpmem(0) : 0..2 & mpmem(0) = counter) is preserved by the operation - ref 4.4, 5.5'" & "`Check that the invariant (mpmem(0) : 0..2 & mpmem(0) = counter) is preserved by the operation - ref 4.4, 5.5'";
  (not(btrue & mpstack$1<+{mpsp$1|->INSTRUCTION_NEXT(mppc$1)} : WORD16 +-> WORD16 & dom(mpstack$1<+{mpsp$1|->INSTRUCTION_NEXT(mppc$1)}) = WORD16 & mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{a|->0}<+{a|->1}<+{a|->2} : id_register8 +-> WORD8 & dom(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{a|->0}<+{a|->1}<+{a|->2}) = id_register8 & mpmem$1<+{address|->(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{a|->0}<+{a|->1}<+{a|->2})(a)} : WORD16 +-> WORD8 & dom(mpmem$1<+{address|->(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{a|->0}<+{a|->1}<+{a|->2})(a)}) = WORD16 & -1 : WORD16 & mpsp$1+1 : WORD16 & mpix$1 : WORD16 & mpiy$1 : WORD16 & dom(mpstack$1<+{mpsp$1|->INSTRUCTION_NEXT(mppc$1)}) = WORD16 & ran(mpstack$1<+{mpsp$1|->INSTRUCTION_NEXT(mppc$1)}) : POW(WORD16) & ran(mpmem$1<+{address|->(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{a|->0}<+{a|->1}<+{a|->2})(a)}) : POW(WORD8) & dom(mpmem$1<+{address|->(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{a|->0}<+{a|->1}<+{a|->2})(a)}) = WORD16 & ran(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{a|->0}<+{a|->1}<+{a|->2}) : POW(WORD8) & dom(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{a|->0}<+{a|->1}<+{a|->2}) = id_register8 & INSTRUCTION_NEXT(0) = 1 & INSTRUCTION_NEXT(1) = 2 & INSTRUCTION_NEXT(2) = 3 & INSTRUCTION_NEXT(3) = 4 & INSTRUCTION_NEXT(4) = 5 & INSTRUCTION_NEXT(5) = 6 & INSTRUCTION_NEXT(6) = 7 & INSTRUCTION_NEXT(7) = 8 & INSTRUCTION_NEXT(8) = 9 & INSTRUCTION_NEXT(9) = 10 & !c.(c : COLOR => c = green or c = yellow or c = red) & NB_WORD8S = 256 & !n.(n : WORD8 => 0<=n) & !n.(n : WORD8 => n<=255) & WORD8_POSITION = BV8_INDEX & BIT_FLIP(0) = 1 & BIT_FLIP(1) = 0 & BIT_AND(0,0) = 0 & BIT_AND(0,1) = 0 & BIT_AND(1,0) = 0 & BIT_AND(1,1) = 1 & BIT_IOR(0,0) = 0 & BIT_IOR(0,1) = 0 & BIT_IOR(1,0) = 0 & BIT_IOR(1,1) = 1 & BIT_XOR(0,0) = 0 & BIT_XOR(0,1) = 1 & BIT_XOR(1,0) = 1 & BIT_XOR(1,1) = 0 & dom(add) = WORD8*WORD8 & ran(add) : POW(WORD8*BOOL*BOOL) & dom(substract) = WORD8*WORD8 & ran(substract) : POW(WORD8*BOOL*BOOL) & dom(and) = WORD8*WORD8 & ran(and) : POW(WORD8*BOOL) & dom(ior) = WORD8*WORD8 & ran(ior) : POW(WORD8*BOOL) & dom(xor) = WORD8*WORD8 & ran(xor) : POW(WORD8*BOOL) & dom(bitclear) = WORD8*WORD8_POSITION & ran(bitclear) : POW(WORD8) & dom(bitset) = WORD8*WORD8_POSITION & ran(bitset) : POW(WORD8) & dom(bitget) = WORD8*WORD8_POSITION & ran(bitget) : POW(BIT) & dom(complement) = WORD8 & ran(complement) : POW(WORD8) & dom(swap) = WORD8 & ran(swap) : POW(WORD8) & ran(rotateleft) : POW(WORD8*BOOL) & dom(rotateleft) = WORD8 & dom(rotateright) = WORD8 & ran(rotateright) : POW(WORD8*BOOL) & color_refine(green) = 0 & color_refine(yellow) = 1 & color_refine(red) = 2 & color_step(0) = 1 & color_step(1) = 2 & color_step(2) = 0 & btrue & !(counter$7777).(counter$7777 = color_step(counter) => not((mpmem$1<+{address|->(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{a|->0}<+{a|->1}<+{a|->2})(a)})(0) : 0..2 & (mpmem$1<+{address|->(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{a|->0}<+{a|->1}<+{a|->2})(a)})(0) = counter$7777 & btrue))));
  (not(btrue & mpstack$1<+{mpsp$1|->INSTRUCTION_NEXT(mppc$1)} : WORD16 +-> WORD16 & dom(mpstack$1<+{mpsp$1|->INSTRUCTION_NEXT(mppc$1)}) = WORD16 & mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{f_|->BV8_TO_WORD8(nw8$0)}<+{a|->1}<+{a|->2} : id_register8 +-> WORD8 & dom(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{f_|->BV8_TO_WORD8(nw8$0)}<+{a|->1}<+{a|->2}) = id_register8 & mpmem$1<+{address|->(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{f_|->BV8_TO_WORD8(nw8$0)}<+{a|->1}<+{a|->2})(a)} : WORD16 +-> WORD8 & dom(mpmem$1<+{address|->(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{f_|->BV8_TO_WORD8(nw8$0)}<+{a|->1}<+{a|->2})(a)}) = WORD16 & -1 : WORD16 & mpsp$1+1 : WORD16 & mpix$1 : WORD16 & mpiy$1 : WORD16 & dom(mpstack$1<+{mpsp$1|->INSTRUCTION_NEXT(mppc$1)}) = WORD16 & ran(mpstack$1<+{mpsp$1|->INSTRUCTION_NEXT(mppc$1)}) : POW(WORD16) & ran(mpmem$1<+{address|->(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{f_|->BV8_TO_WORD8(nw8$0)}<+{a|->1}<+{a|->2})(a)}) : POW(WORD8) & dom(mpmem$1<+{address|->(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{f_|->BV8_TO_WORD8(nw8$0)}<+{a|->1}<+{a|->2})(a)}) = WORD16 & ran(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{f_|->BV8_TO_WORD8(nw8$0)}<+{a|->1}<+{a|->2}) : POW(WORD8) & dom(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{f_|->BV8_TO_WORD8(nw8$0)}<+{a|->1}<+{a|->2}) = id_register8 & INSTRUCTION_NEXT(0) = 1 & INSTRUCTION_NEXT(1) = 2 & INSTRUCTION_NEXT(2) = 3 & INSTRUCTION_NEXT(3) = 4 & INSTRUCTION_NEXT(4) = 5 & INSTRUCTION_NEXT(5) = 6 & INSTRUCTION_NEXT(6) = 7 & INSTRUCTION_NEXT(7) = 8 & INSTRUCTION_NEXT(8) = 9 & INSTRUCTION_NEXT(9) = 10 & !c.(c : COLOR => c = green or c = yellow or c = red) & NB_WORD8S = 256 & !n.(n : WORD8 => 0<=n) & !n.(n : WORD8 => n<=255) & WORD8_POSITION = BV8_INDEX & BIT_FLIP(0) = 1 & BIT_FLIP(1) = 0 & BIT_AND(0,0) = 0 & BIT_AND(0,1) = 0 & BIT_AND(1,0) = 0 & BIT_AND(1,1) = 1 & BIT_IOR(0,0) = 0 & BIT_IOR(0,1) = 0 & BIT_IOR(1,0) = 0 & BIT_IOR(1,1) = 1 & BIT_XOR(0,0) = 0 & BIT_XOR(0,1) = 1 & BIT_XOR(1,0) = 1 & BIT_XOR(1,1) = 0 & dom(add) = WORD8*WORD8 & ran(add) : POW(WORD8*BOOL*BOOL) & dom(substract) = WORD8*WORD8 & ran(substract) : POW(WORD8*BOOL*BOOL) & dom(and) = WORD8*WORD8 & ran(and) : POW(WORD8*BOOL) & dom(ior) = WORD8*WORD8 & ran(ior) : POW(WORD8*BOOL) & dom(xor) = WORD8*WORD8 & ran(xor) : POW(WORD8*BOOL) & dom(bitclear) = WORD8*WORD8_POSITION & ran(bitclear) : POW(WORD8) & dom(bitset) = WORD8*WORD8_POSITION & ran(bitset) : POW(WORD8) & dom(bitget) = WORD8*WORD8_POSITION & ran(bitget) : POW(BIT) & dom(complement) = WORD8 & ran(complement) : POW(WORD8) & dom(swap) = WORD8 & ran(swap) : POW(WORD8) & ran(rotateleft) : POW(WORD8*BOOL) & dom(rotateleft) = WORD8 & dom(rotateright) = WORD8 & ran(rotateright) : POW(WORD8*BOOL) & color_refine(green) = 0 & color_refine(yellow) = 1 & color_refine(red) = 2 & color_step(0) = 1 & color_step(1) = 2 & color_step(2) = 0 & btrue & !(counter$7777).(counter$7777 = color_step(counter) => not((mpmem$1<+{address|->(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{f_|->BV8_TO_WORD8(nw8$0)}<+{a|->1}<+{a|->2})(a)})(0) : 0..2 & (mpmem$1<+{address|->(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{f_|->BV8_TO_WORD8(nw8$0)}<+{a|->1}<+{a|->2})(a)})(0) = counter$7777 & btrue))));
  (not(btrue & mpstack$1<+{mpsp$1|->INSTRUCTION_NEXT(mppc$1)} : WORD16 +-> WORD16 & dom(mpstack$1<+{mpsp$1|->INSTRUCTION_NEXT(mppc$1)}) = WORD16 & mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{a|->1}<+{a|->2} : id_register8 +-> WORD8 & dom(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{a|->1}<+{a|->2}) = id_register8 & mpmem$1<+{address|->(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{a|->1}<+{a|->2})(a)} : WORD16 +-> WORD8 & dom(mpmem$1<+{address|->(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{a|->1}<+{a|->2})(a)}) = WORD16 & -1 : WORD16 & mpsp$1+1 : WORD16 & mpix$1 : WORD16 & mpiy$1 : WORD16 & dom(mpstack$1<+{mpsp$1|->INSTRUCTION_NEXT(mppc$1)}) = WORD16 & ran(mpstack$1<+{mpsp$1|->INSTRUCTION_NEXT(mppc$1)}) : POW(WORD16) & ran(mpmem$1<+{address|->(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{a|->1}<+{a|->2})(a)}) : POW(WORD8) & dom(mpmem$1<+{address|->(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{a|->1}<+{a|->2})(a)}) = WORD16 & ran(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{a|->1}<+{a|->2}) : POW(WORD8) & dom(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{a|->1}<+{a|->2}) = id_register8 & INSTRUCTION_NEXT(0) = 1 & INSTRUCTION_NEXT(1) = 2 & INSTRUCTION_NEXT(2) = 3 & INSTRUCTION_NEXT(3) = 4 & INSTRUCTION_NEXT(4) = 5 & INSTRUCTION_NEXT(5) = 6 & INSTRUCTION_NEXT(6) = 7 & INSTRUCTION_NEXT(7) = 8 & INSTRUCTION_NEXT(8) = 9 & INSTRUCTION_NEXT(9) = 10 & !c.(c : COLOR => c = green or c = yellow or c = red) & NB_WORD8S = 256 & !n.(n : WORD8 => 0<=n) & !n.(n : WORD8 => n<=255) & WORD8_POSITION = BV8_INDEX & BIT_FLIP(0) = 1 & BIT_FLIP(1) = 0 & BIT_AND(0,0) = 0 & BIT_AND(0,1) = 0 & BIT_AND(1,0) = 0 & BIT_AND(1,1) = 1 & BIT_IOR(0,0) = 0 & BIT_IOR(0,1) = 0 & BIT_IOR(1,0) = 0 & BIT_IOR(1,1) = 1 & BIT_XOR(0,0) = 0 & BIT_XOR(0,1) = 1 & BIT_XOR(1,0) = 1 & BIT_XOR(1,1) = 0 & dom(add) = WORD8*WORD8 & ran(add) : POW(WORD8*BOOL*BOOL) & dom(substract) = WORD8*WORD8 & ran(substract) : POW(WORD8*BOOL*BOOL) & dom(and) = WORD8*WORD8 & ran(and) : POW(WORD8*BOOL) & dom(ior) = WORD8*WORD8 & ran(ior) : POW(WORD8*BOOL) & dom(xor) = WORD8*WORD8 & ran(xor) : POW(WORD8*BOOL) & dom(bitclear) = WORD8*WORD8_POSITION & ran(bitclear) : POW(WORD8) & dom(bitset) = WORD8*WORD8_POSITION & ran(bitset) : POW(WORD8) & dom(bitget) = WORD8*WORD8_POSITION & ran(bitget) : POW(BIT) & dom(complement) = WORD8 & ran(complement) : POW(WORD8) & dom(swap) = WORD8 & ran(swap) : POW(WORD8) & ran(rotateleft) : POW(WORD8*BOOL) & dom(rotateleft) = WORD8 & dom(rotateright) = WORD8 & ran(rotateright) : POW(WORD8*BOOL) & color_refine(green) = 0 & color_refine(yellow) = 1 & color_refine(red) = 2 & color_step(0) = 1 & color_step(1) = 2 & color_step(2) = 0 & btrue & !(counter$7777).(counter$7777 = color_step(counter) => not((mpmem$1<+{address|->(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{a|->1}<+{a|->2})(a)})(0) : 0..2 & (mpmem$1<+{address|->(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{a|->1}<+{a|->2})(a)})(0) = counter$7777 & btrue))));
  (not(btrue & mpstack$1<+{mpsp$1|->INSTRUCTION_NEXT(mppc$1)} : WORD16 +-> WORD16 & dom(mpstack$1<+{mpsp$1|->INSTRUCTION_NEXT(mppc$1)}) = WORD16 & mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{f_|->BV8_TO_WORD8(nw8$0)}<+{a|->0}<+{a|->2} : id_register8 +-> WORD8 & dom(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{f_|->BV8_TO_WORD8(nw8$0)}<+{a|->0}<+{a|->2}) = id_register8 & mpmem$1<+{address|->(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{f_|->BV8_TO_WORD8(nw8$0)}<+{a|->0}<+{a|->2})(a)} : WORD16 +-> WORD8 & dom(mpmem$1<+{address|->(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{f_|->BV8_TO_WORD8(nw8$0)}<+{a|->0}<+{a|->2})(a)}) = WORD16 & -1 : WORD16 & mpsp$1+1 : WORD16 & mpix$1 : WORD16 & mpiy$1 : WORD16 & dom(mpstack$1<+{mpsp$1|->INSTRUCTION_NEXT(mppc$1)}) = WORD16 & ran(mpstack$1<+{mpsp$1|->INSTRUCTION_NEXT(mppc$1)}) : POW(WORD16) & ran(mpmem$1<+{address|->(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{f_|->BV8_TO_WORD8(nw8$0)}<+{a|->0}<+{a|->2})(a)}) : POW(WORD8) & dom(mpmem$1<+{address|->(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{f_|->BV8_TO_WORD8(nw8$0)}<+{a|->0}<+{a|->2})(a)}) = WORD16 & ran(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{f_|->BV8_TO_WORD8(nw8$0)}<+{a|->0}<+{a|->2}) : POW(WORD8) & dom(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{f_|->BV8_TO_WORD8(nw8$0)}<+{a|->0}<+{a|->2}) = id_register8 & INSTRUCTION_NEXT(0) = 1 & INSTRUCTION_NEXT(1) = 2 & INSTRUCTION_NEXT(2) = 3 & INSTRUCTION_NEXT(3) = 4 & INSTRUCTION_NEXT(4) = 5 & INSTRUCTION_NEXT(5) = 6 & INSTRUCTION_NEXT(6) = 7 & INSTRUCTION_NEXT(7) = 8 & INSTRUCTION_NEXT(8) = 9 & INSTRUCTION_NEXT(9) = 10 & !c.(c : COLOR => c = green or c = yellow or c = red) & NB_WORD8S = 256 & !n.(n : WORD8 => 0<=n) & !n.(n : WORD8 => n<=255) & WORD8_POSITION = BV8_INDEX & BIT_FLIP(0) = 1 & BIT_FLIP(1) = 0 & BIT_AND(0,0) = 0 & BIT_AND(0,1) = 0 & BIT_AND(1,0) = 0 & BIT_AND(1,1) = 1 & BIT_IOR(0,0) = 0 & BIT_IOR(0,1) = 0 & BIT_IOR(1,0) = 0 & BIT_IOR(1,1) = 1 & BIT_XOR(0,0) = 0 & BIT_XOR(0,1) = 1 & BIT_XOR(1,0) = 1 & BIT_XOR(1,1) = 0 & dom(add) = WORD8*WORD8 & ran(add) : POW(WORD8*BOOL*BOOL) & dom(substract) = WORD8*WORD8 & ran(substract) : POW(WORD8*BOOL*BOOL) & dom(and) = WORD8*WORD8 & ran(and) : POW(WORD8*BOOL) & dom(ior) = WORD8*WORD8 & ran(ior) : POW(WORD8*BOOL) & dom(xor) = WORD8*WORD8 & ran(xor) : POW(WORD8*BOOL) & dom(bitclear) = WORD8*WORD8_POSITION & ran(bitclear) : POW(WORD8) & dom(bitset) = WORD8*WORD8_POSITION & ran(bitset) : POW(WORD8) & dom(bitget) = WORD8*WORD8_POSITION & ran(bitget) : POW(BIT) & dom(complement) = WORD8 & ran(complement) : POW(WORD8) & dom(swap) = WORD8 & ran(swap) : POW(WORD8) & ran(rotateleft) : POW(WORD8*BOOL) & dom(rotateleft) = WORD8 & dom(rotateright) = WORD8 & ran(rotateright) : POW(WORD8*BOOL) & color_refine(green) = 0 & color_refine(yellow) = 1 & color_refine(red) = 2 & color_step(0) = 1 & color_step(1) = 2 & color_step(2) = 0 & btrue & !(counter$7777).(counter$7777 = color_step(counter) => not((mpmem$1<+{address|->(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{f_|->BV8_TO_WORD8(nw8$0)}<+{a|->0}<+{a|->2})(a)})(0) : 0..2 & (mpmem$1<+{address|->(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{f_|->BV8_TO_WORD8(nw8$0)}<+{a|->0}<+{a|->2})(a)})(0) = counter$7777 & btrue))));
  (not(btrue & mpstack$1<+{mpsp$1|->INSTRUCTION_NEXT(mppc$1)} : WORD16 +-> WORD16 & dom(mpstack$1<+{mpsp$1|->INSTRUCTION_NEXT(mppc$1)}) = WORD16 & mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{a|->0}<+{a|->2} : id_register8 +-> WORD8 & dom(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{a|->0}<+{a|->2}) = id_register8 & mpmem$1<+{address|->(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{a|->0}<+{a|->2})(a)} : WORD16 +-> WORD8 & dom(mpmem$1<+{address|->(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{a|->0}<+{a|->2})(a)}) = WORD16 & -1 : WORD16 & mpsp$1+1 : WORD16 & mpix$1 : WORD16 & mpiy$1 : WORD16 & dom(mpstack$1<+{mpsp$1|->INSTRUCTION_NEXT(mppc$1)}) = WORD16 & ran(mpstack$1<+{mpsp$1|->INSTRUCTION_NEXT(mppc$1)}) : POW(WORD16) & ran(mpmem$1<+{address|->(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{a|->0}<+{a|->2})(a)}) : POW(WORD8) & dom(mpmem$1<+{address|->(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{a|->0}<+{a|->2})(a)}) = WORD16 & ran(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{a|->0}<+{a|->2}) : POW(WORD8) & dom(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{a|->0}<+{a|->2}) = id_register8 & INSTRUCTION_NEXT(0) = 1 & INSTRUCTION_NEXT(1) = 2 & INSTRUCTION_NEXT(2) = 3 & INSTRUCTION_NEXT(3) = 4 & INSTRUCTION_NEXT(4) = 5 & INSTRUCTION_NEXT(5) = 6 & INSTRUCTION_NEXT(6) = 7 & INSTRUCTION_NEXT(7) = 8 & INSTRUCTION_NEXT(8) = 9 & INSTRUCTION_NEXT(9) = 10 & !c.(c : COLOR => c = green or c = yellow or c = red) & NB_WORD8S = 256 & !n.(n : WORD8 => 0<=n) & !n.(n : WORD8 => n<=255) & WORD8_POSITION = BV8_INDEX & BIT_FLIP(0) = 1 & BIT_FLIP(1) = 0 & BIT_AND(0,0) = 0 & BIT_AND(0,1) = 0 & BIT_AND(1,0) = 0 & BIT_AND(1,1) = 1 & BIT_IOR(0,0) = 0 & BIT_IOR(0,1) = 0 & BIT_IOR(1,0) = 0 & BIT_IOR(1,1) = 1 & BIT_XOR(0,0) = 0 & BIT_XOR(0,1) = 1 & BIT_XOR(1,0) = 1 & BIT_XOR(1,1) = 0 & dom(add) = WORD8*WORD8 & ran(add) : POW(WORD8*BOOL*BOOL) & dom(substract) = WORD8*WORD8 & ran(substract) : POW(WORD8*BOOL*BOOL) & dom(and) = WORD8*WORD8 & ran(and) : POW(WORD8*BOOL) & dom(ior) = WORD8*WORD8 & ran(ior) : POW(WORD8*BOOL) & dom(xor) = WORD8*WORD8 & ran(xor) : POW(WORD8*BOOL) & dom(bitclear) = WORD8*WORD8_POSITION & ran(bitclear) : POW(WORD8) & dom(bitset) = WORD8*WORD8_POSITION & ran(bitset) : POW(WORD8) & dom(bitget) = WORD8*WORD8_POSITION & ran(bitget) : POW(BIT) & dom(complement) = WORD8 & ran(complement) : POW(WORD8) & dom(swap) = WORD8 & ran(swap) : POW(WORD8) & ran(rotateleft) : POW(WORD8*BOOL) & dom(rotateleft) = WORD8 & dom(rotateright) = WORD8 & ran(rotateright) : POW(WORD8*BOOL) & color_refine(green) = 0 & color_refine(yellow) = 1 & color_refine(red) = 2 & color_step(0) = 1 & color_step(1) = 2 & color_step(2) = 0 & btrue & !(counter$7777).(counter$7777 = color_step(counter) => not((mpmem$1<+{address|->(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{a|->0}<+{a|->2})(a)})(0) : 0..2 & (mpmem$1<+{address|->(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{a|->0}<+{a|->2})(a)})(0) = counter$7777 & btrue))));
  (not(btrue & mpstack$1<+{mpsp$1|->INSTRUCTION_NEXT(mppc$1)} : WORD16 +-> WORD16 & dom(mpstack$1<+{mpsp$1|->INSTRUCTION_NEXT(mppc$1)}) = WORD16 & mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{f_|->BV8_TO_WORD8(nw8$0)}<+{a|->0}<+{a|->1} : id_register8 +-> WORD8 & dom(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{f_|->BV8_TO_WORD8(nw8$0)}<+{a|->0}<+{a|->1}) = id_register8 & mpmem$1<+{address|->(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{f_|->BV8_TO_WORD8(nw8$0)}<+{a|->0}<+{a|->1})(a)} : WORD16 +-> WORD8 & dom(mpmem$1<+{address|->(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{f_|->BV8_TO_WORD8(nw8$0)}<+{a|->0}<+{a|->1})(a)}) = WORD16 & -1 : WORD16 & mpsp$1+1 : WORD16 & mpix$1 : WORD16 & mpiy$1 : WORD16 & dom(mpstack$1<+{mpsp$1|->INSTRUCTION_NEXT(mppc$1)}) = WORD16 & ran(mpstack$1<+{mpsp$1|->INSTRUCTION_NEXT(mppc$1)}) : POW(WORD16) & ran(mpmem$1<+{address|->(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{f_|->BV8_TO_WORD8(nw8$0)}<+{a|->0}<+{a|->1})(a)}) : POW(WORD8) & dom(mpmem$1<+{address|->(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{f_|->BV8_TO_WORD8(nw8$0)}<+{a|->0}<+{a|->1})(a)}) = WORD16 & ran(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{f_|->BV8_TO_WORD8(nw8$0)}<+{a|->0}<+{a|->1}) : POW(WORD8) & dom(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{f_|->BV8_TO_WORD8(nw8$0)}<+{a|->0}<+{a|->1}) = id_register8 & INSTRUCTION_NEXT(0) = 1 & INSTRUCTION_NEXT(1) = 2 & INSTRUCTION_NEXT(2) = 3 & INSTRUCTION_NEXT(3) = 4 & INSTRUCTION_NEXT(4) = 5 & INSTRUCTION_NEXT(5) = 6 & INSTRUCTION_NEXT(6) = 7 & INSTRUCTION_NEXT(7) = 8 & INSTRUCTION_NEXT(8) = 9 & INSTRUCTION_NEXT(9) = 10 & !c.(c : COLOR => c = green or c = yellow or c = red) & NB_WORD8S = 256 & !n.(n : WORD8 => 0<=n) & !n.(n : WORD8 => n<=255) & WORD8_POSITION = BV8_INDEX & BIT_FLIP(0) = 1 & BIT_FLIP(1) = 0 & BIT_AND(0,0) = 0 & BIT_AND(0,1) = 0 & BIT_AND(1,0) = 0 & BIT_AND(1,1) = 1 & BIT_IOR(0,0) = 0 & BIT_IOR(0,1) = 0 & BIT_IOR(1,0) = 0 & BIT_IOR(1,1) = 1 & BIT_XOR(0,0) = 0 & BIT_XOR(0,1) = 1 & BIT_XOR(1,0) = 1 & BIT_XOR(1,1) = 0 & dom(add) = WORD8*WORD8 & ran(add) : POW(WORD8*BOOL*BOOL) & dom(substract) = WORD8*WORD8 & ran(substract) : POW(WORD8*BOOL*BOOL) & dom(and) = WORD8*WORD8 & ran(and) : POW(WORD8*BOOL) & dom(ior) = WORD8*WORD8 & ran(ior) : POW(WORD8*BOOL) & dom(xor) = WORD8*WORD8 & ran(xor) : POW(WORD8*BOOL) & dom(bitclear) = WORD8*WORD8_POSITION & ran(bitclear) : POW(WORD8) & dom(bitset) = WORD8*WORD8_POSITION & ran(bitset) : POW(WORD8) & dom(bitget) = WORD8*WORD8_POSITION & ran(bitget) : POW(BIT) & dom(complement) = WORD8 & ran(complement) : POW(WORD8) & dom(swap) = WORD8 & ran(swap) : POW(WORD8) & ran(rotateleft) : POW(WORD8*BOOL) & dom(rotateleft) = WORD8 & dom(rotateright) = WORD8 & ran(rotateright) : POW(WORD8*BOOL) & color_refine(green) = 0 & color_refine(yellow) = 1 & color_refine(red) = 2 & color_step(0) = 1 & color_step(1) = 2 & color_step(2) = 0 & btrue & !(counter$7777).(counter$7777 = color_step(counter) => not((mpmem$1<+{address|->(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{f_|->BV8_TO_WORD8(nw8$0)}<+{a|->0}<+{a|->1})(a)})(0) : 0..2 & (mpmem$1<+{address|->(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{f_|->BV8_TO_WORD8(nw8$0)}<+{a|->0}<+{a|->1})(a)})(0) = counter$7777 & btrue))));
  (not(btrue & mpstack$1<+{mpsp$1|->INSTRUCTION_NEXT(mppc$1)} : WORD16 +-> WORD16 & dom(mpstack$1<+{mpsp$1|->INSTRUCTION_NEXT(mppc$1)}) = WORD16 & mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{a|->0}<+{a|->1} : id_register8 +-> WORD8 & dom(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{a|->0}<+{a|->1}) = id_register8 & mpmem$1<+{address|->(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{a|->0}<+{a|->1})(a)} : WORD16 +-> WORD8 & dom(mpmem$1<+{address|->(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{a|->0}<+{a|->1})(a)}) = WORD16 & -1 : WORD16 & mpsp$1+1 : WORD16 & mpix$1 : WORD16 & mpiy$1 : WORD16 & dom(mpstack$1<+{mpsp$1|->INSTRUCTION_NEXT(mppc$1)}) = WORD16 & ran(mpstack$1<+{mpsp$1|->INSTRUCTION_NEXT(mppc$1)}) : POW(WORD16) & ran(mpmem$1<+{address|->(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{a|->0}<+{a|->1})(a)}) : POW(WORD8) & dom(mpmem$1<+{address|->(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{a|->0}<+{a|->1})(a)}) = WORD16 & ran(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{a|->0}<+{a|->1}) : POW(WORD8) & dom(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{a|->0}<+{a|->1}) = id_register8 & INSTRUCTION_NEXT(0) = 1 & INSTRUCTION_NEXT(1) = 2 & INSTRUCTION_NEXT(2) = 3 & INSTRUCTION_NEXT(3) = 4 & INSTRUCTION_NEXT(4) = 5 & INSTRUCTION_NEXT(5) = 6 & INSTRUCTION_NEXT(6) = 7 & INSTRUCTION_NEXT(7) = 8 & INSTRUCTION_NEXT(8) = 9 & INSTRUCTION_NEXT(9) = 10 & !c.(c : COLOR => c = green or c = yellow or c = red) & NB_WORD8S = 256 & !n.(n : WORD8 => 0<=n) & !n.(n : WORD8 => n<=255) & WORD8_POSITION = BV8_INDEX & BIT_FLIP(0) = 1 & BIT_FLIP(1) = 0 & BIT_AND(0,0) = 0 & BIT_AND(0,1) = 0 & BIT_AND(1,0) = 0 & BIT_AND(1,1) = 1 & BIT_IOR(0,0) = 0 & BIT_IOR(0,1) = 0 & BIT_IOR(1,0) = 0 & BIT_IOR(1,1) = 1 & BIT_XOR(0,0) = 0 & BIT_XOR(0,1) = 1 & BIT_XOR(1,0) = 1 & BIT_XOR(1,1) = 0 & dom(add) = WORD8*WORD8 & ran(add) : POW(WORD8*BOOL*BOOL) & dom(substract) = WORD8*WORD8 & ran(substract) : POW(WORD8*BOOL*BOOL) & dom(and) = WORD8*WORD8 & ran(and) : POW(WORD8*BOOL) & dom(ior) = WORD8*WORD8 & ran(ior) : POW(WORD8*BOOL) & dom(xor) = WORD8*WORD8 & ran(xor) : POW(WORD8*BOOL) & dom(bitclear) = WORD8*WORD8_POSITION & ran(bitclear) : POW(WORD8) & dom(bitset) = WORD8*WORD8_POSITION & ran(bitset) : POW(WORD8) & dom(bitget) = WORD8*WORD8_POSITION & ran(bitget) : POW(BIT) & dom(complement) = WORD8 & ran(complement) : POW(WORD8) & dom(swap) = WORD8 & ran(swap) : POW(WORD8) & ran(rotateleft) : POW(WORD8*BOOL) & dom(rotateleft) = WORD8 & dom(rotateright) = WORD8 & ran(rotateright) : POW(WORD8*BOOL) & color_refine(green) = 0 & color_refine(yellow) = 1 & color_refine(red) = 2 & color_step(0) = 1 & color_step(1) = 2 & color_step(2) = 0 & btrue & !(counter$7777).(counter$7777 = color_step(counter) => not((mpmem$1<+{address|->(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{a|->0}<+{a|->1})(a)})(0) : 0..2 & (mpmem$1<+{address|->(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{a|->0}<+{a|->1})(a)})(0) = counter$7777 & btrue))));
  ("`Local hypotheses'" & address : WORD16 & address = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)}<+{3|->id_register8|->BV8_TO_WORD8(nw8$0)}<+{1|->id_register8|->1})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)}<+{3|->id_register8|->BV8_TO_WORD8(nw8$0)}<+{1|->id_register8|->1})(14|->id_register8)) & address$0 : WORD16 & ib : BIT & nw8 : BV8 & ib = WORD8_TO_BV8(mpmem$1(address$0))(1) & nw8 = BV8_SET_BIT(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(3|->id_register8)),6,ib) & not(INSTRUCTION_NEXT(14) = 15) & 11 = INSTRUCTION_NEXT(11) & not(INSTRUCTION_NEXT(INSTRUCTION_NEXT(7)) = 5) & 9 = INSTRUCTION_NEXT(INSTRUCTION_NEXT(7)) & address$1 : WORD16 & ib$0 : BIT & nw8$0 : BV8 & WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(3|->id_register8))(6) = 0 & 4 = INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(0)))) & WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)}<+{3|->id_register8|->BV8_TO_WORD8(nw8$0)})(3|->id_register8))(6) = 0 & address$0 = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(14|->id_register8)) & address$1 = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(14|->id_register8)) & ib$0 = WORD8_TO_BV8(mpmem$1(address$1))(0) & nw8$0 = BV8_SET_BIT(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(3|->id_register8)),6,ib$0));
  "`Check that the invariant (mpmem(0) : 0..2 & mpmem(0) = counter) is preserved by the operation - ref 4.4, 5.5'";
  (not(btrue & mpstack$1<+{mpsp$1|->INSTRUCTION_NEXT(mppc$1)} : WORD16 +-> WORD16 & dom(mpstack$1<+{mpsp$1|->INSTRUCTION_NEXT(mppc$1)}) = WORD16 & mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{f_|->BV8_TO_WORD8(nw8$0)}<+{a|->1} : id_register8 +-> WORD8 & dom(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{f_|->BV8_TO_WORD8(nw8$0)}<+{a|->1}) = id_register8 & mpmem$1<+{address|->(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{f_|->BV8_TO_WORD8(nw8$0)}<+{a|->1})(a)} : WORD16 +-> WORD8 & dom(mpmem$1<+{address|->(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{f_|->BV8_TO_WORD8(nw8$0)}<+{a|->1})(a)}) = WORD16 & -1 : WORD16 & mpsp$1+1 : WORD16 & mpix$1 : WORD16 & mpiy$1 : WORD16 & dom(mpstack$1<+{mpsp$1|->INSTRUCTION_NEXT(mppc$1)}) = WORD16 & ran(mpstack$1<+{mpsp$1|->INSTRUCTION_NEXT(mppc$1)}) : POW(WORD16) & ran(mpmem$1<+{address|->(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{f_|->BV8_TO_WORD8(nw8$0)}<+{a|->1})(a)}) : POW(WORD8) & dom(mpmem$1<+{address|->(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{f_|->BV8_TO_WORD8(nw8$0)}<+{a|->1})(a)}) = WORD16 & ran(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{f_|->BV8_TO_WORD8(nw8$0)}<+{a|->1}) : POW(WORD8) & dom(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{f_|->BV8_TO_WORD8(nw8$0)}<+{a|->1}) = id_register8 & INSTRUCTION_NEXT(0) = 1 & INSTRUCTION_NEXT(1) = 2 & INSTRUCTION_NEXT(2) = 3 & INSTRUCTION_NEXT(3) = 4 & INSTRUCTION_NEXT(4) = 5 & INSTRUCTION_NEXT(5) = 6 & INSTRUCTION_NEXT(6) = 7 & INSTRUCTION_NEXT(7) = 8 & INSTRUCTION_NEXT(8) = 9 & INSTRUCTION_NEXT(9) = 10 & !c.(c : COLOR => c = green or c = yellow or c = red) & NB_WORD8S = 256 & !n.(n : WORD8 => 0<=n) & !n.(n : WORD8 => n<=255) & WORD8_POSITION = BV8_INDEX & BIT_FLIP(0) = 1 & BIT_FLIP(1) = 0 & BIT_AND(0,0) = 0 & BIT_AND(0,1) = 0 & BIT_AND(1,0) = 0 & BIT_AND(1,1) = 1 & BIT_IOR(0,0) = 0 & BIT_IOR(0,1) = 0 & BIT_IOR(1,0) = 0 & BIT_IOR(1,1) = 1 & BIT_XOR(0,0) = 0 & BIT_XOR(0,1) = 1 & BIT_XOR(1,0) = 1 & BIT_XOR(1,1) = 0 & dom(add) = WORD8*WORD8 & ran(add) : POW(WORD8*BOOL*BOOL) & dom(substract) = WORD8*WORD8 & ran(substract) : POW(WORD8*BOOL*BOOL) & dom(and) = WORD8*WORD8 & ran(and) : POW(WORD8*BOOL) & dom(ior) = WORD8*WORD8 & ran(ior) : POW(WORD8*BOOL) & dom(xor) = WORD8*WORD8 & ran(xor) : POW(WORD8*BOOL) & dom(bitclear) = WORD8*WORD8_POSITION & ran(bitclear) : POW(WORD8) & dom(bitset) = WORD8*WORD8_POSITION & ran(bitset) : POW(WORD8) & dom(bitget) = WORD8*WORD8_POSITION & ran(bitget) : POW(BIT) & dom(complement) = WORD8 & ran(complement) : POW(WORD8) & dom(swap) = WORD8 & ran(swap) : POW(WORD8) & ran(rotateleft) : POW(WORD8*BOOL) & dom(rotateleft) = WORD8 & dom(rotateright) = WORD8 & ran(rotateright) : POW(WORD8*BOOL) & color_refine(green) = 0 & color_refine(yellow) = 1 & color_refine(red) = 2 & color_step(0) = 1 & color_step(1) = 2 & color_step(2) = 0 & btrue & !(counter$7777).(counter$7777 = color_step(counter) => not((mpmem$1<+{address|->(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{f_|->BV8_TO_WORD8(nw8$0)}<+{a|->1})(a)})(0) : 0..2 & (mpmem$1<+{address|->(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{f_|->BV8_TO_WORD8(nw8$0)}<+{a|->1})(a)})(0) = counter$7777 & btrue))));
  ("`Local hypotheses'" & address : WORD16 & address = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)}<+{3|->id_register8|->BV8_TO_WORD8(nw8$0)}<+{1|->id_register8|->1})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)}<+{3|->id_register8|->BV8_TO_WORD8(nw8$0)}<+{1|->id_register8|->1})(14|->id_register8)) & address$0 : WORD16 & ib : BIT & nw8 : BV8 & ib = WORD8_TO_BV8(mpmem$1(address$0))(1) & nw8 = BV8_SET_BIT(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(3|->id_register8)),6,ib) & not(INSTRUCTION_NEXT(14) = 15) & 11 = INSTRUCTION_NEXT(11) & not(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(7))) = 5) & 9 = INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(7))) & address$1 : WORD16 & ib$0 : BIT & nw8$0 : BV8 & WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(3|->id_register8))(6) = 0 & 4 = INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(0)))) & not(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)}<+{3|->id_register8|->BV8_TO_WORD8(nw8$0)})(3|->id_register8))(6) = 0) & address$0 = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(14|->id_register8)) & address$1 = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(14|->id_register8)) & ib$0 = WORD8_TO_BV8(mpmem$1(address$1))(0) & nw8$0 = BV8_SET_BIT(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(3|->id_register8)),6,ib$0));
  ("`Local hypotheses'" & address : WORD16 & address = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)}<+{3|->id_register8|->BV8_TO_WORD8(nw8$0)}<+{1|->id_register8|->1})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)}<+{3|->id_register8|->BV8_TO_WORD8(nw8$0)}<+{1|->id_register8|->1})(14|->id_register8)) & address$0 : WORD16 & ib : BIT & nw8 : BV8 & ib = WORD8_TO_BV8(mpmem$1(address$0))(1) & nw8 = BV8_SET_BIT(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(3|->id_register8)),6,ib) & not(INSTRUCTION_NEXT(14) = 15) & 11 = INSTRUCTION_NEXT(11) & not(INSTRUCTION_NEXT(INSTRUCTION_NEXT(7)) = 5) & 9 = INSTRUCTION_NEXT(INSTRUCTION_NEXT(7)) & address$1 : WORD16 & ib$0 : BIT & nw8$0 : BV8 & not(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(3|->id_register8))(6) = 0) & 4 = INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(0))))) & WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)}<+{3|->id_register8|->BV8_TO_WORD8(nw8$0)})(3|->id_register8))(6) = 0 & address$0 = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(14|->id_register8)) & address$1 = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(14|->id_register8)) & ib$0 = WORD8_TO_BV8(mpmem$1(address$1))(0) & nw8$0 = BV8_SET_BIT(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(3|->id_register8)),6,ib$0));
  ("`Local hypotheses'" & address : WORD16 & address = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)}<+{3|->id_register8|->BV8_TO_WORD8(nw8$0)}<+{1|->id_register8|->1})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)}<+{3|->id_register8|->BV8_TO_WORD8(nw8$0)}<+{1|->id_register8|->1})(14|->id_register8)) & address$0 : WORD16 & ib : BIT & nw8 : BV8 & ib = WORD8_TO_BV8(mpmem$1(address$0))(1) & nw8 = BV8_SET_BIT(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(3|->id_register8)),6,ib) & not(INSTRUCTION_NEXT(14) = 15) & 11 = INSTRUCTION_NEXT(11) & not(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(7))) = 5) & 9 = INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(7))) & address$1 : WORD16 & ib$0 : BIT & nw8$0 : BV8 & not(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(3|->id_register8))(6) = 0) & 4 = INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(0))))) & not(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)}<+{3|->id_register8|->BV8_TO_WORD8(nw8$0)})(3|->id_register8))(6) = 0) & address$0 = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(14|->id_register8)) & address$1 = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(14|->id_register8)) & ib$0 = WORD8_TO_BV8(mpmem$1(address$1))(0) & nw8$0 = BV8_SET_BIT(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(3|->id_register8)),6,ib$0));
  ("`Local hypotheses'" & address : WORD16 & address = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)}<+{1|->id_register8|->1})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)}<+{1|->id_register8|->1})(14|->id_register8)) & address$0 : WORD16 & ib : BIT & nw8 : BV8 & ib = WORD8_TO_BV8(mpmem$1(address$0))(1) & nw8 = BV8_SET_BIT(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(3|->id_register8)),6,ib) & not(INSTRUCTION_NEXT(14) = 15) & 11 = INSTRUCTION_NEXT(11) & not(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(0)))) = 5) & 9 = INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(0)))) & not(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(0)))) = 4) & WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(3|->id_register8))(6) = 0 & address$0 = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(14|->id_register8)));
  (not(btrue & mpstack$1<+{mpsp$1|->INSTRUCTION_NEXT(mppc$1)} : WORD16 +-> WORD16 & dom(mpstack$1<+{mpsp$1|->INSTRUCTION_NEXT(mppc$1)}) = WORD16 & mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{a|->1} : id_register8 +-> WORD8 & dom(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{a|->1}) = id_register8 & mpmem$1<+{address|->(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{a|->1})(a)} : WORD16 +-> WORD8 & dom(mpmem$1<+{address|->(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{a|->1})(a)}) = WORD16 & -1 : WORD16 & mpsp$1+1 : WORD16 & mpix$1 : WORD16 & mpiy$1 : WORD16 & dom(mpstack$1<+{mpsp$1|->INSTRUCTION_NEXT(mppc$1)}) = WORD16 & ran(mpstack$1<+{mpsp$1|->INSTRUCTION_NEXT(mppc$1)}) : POW(WORD16) & ran(mpmem$1<+{address|->(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{a|->1})(a)}) : POW(WORD8) & dom(mpmem$1<+{address|->(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{a|->1})(a)}) = WORD16 & ran(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{a|->1}) : POW(WORD8) & dom(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{a|->1}) = id_register8 & INSTRUCTION_NEXT(0) = 1 & INSTRUCTION_NEXT(1) = 2 & INSTRUCTION_NEXT(2) = 3 & INSTRUCTION_NEXT(3) = 4 & INSTRUCTION_NEXT(4) = 5 & INSTRUCTION_NEXT(5) = 6 & INSTRUCTION_NEXT(6) = 7 & INSTRUCTION_NEXT(7) = 8 & INSTRUCTION_NEXT(8) = 9 & INSTRUCTION_NEXT(9) = 10 & !c.(c : COLOR => c = green or c = yellow or c = red) & NB_WORD8S = 256 & !n.(n : WORD8 => 0<=n) & !n.(n : WORD8 => n<=255) & WORD8_POSITION = BV8_INDEX & BIT_FLIP(0) = 1 & BIT_FLIP(1) = 0 & BIT_AND(0,0) = 0 & BIT_AND(0,1) = 0 & BIT_AND(1,0) = 0 & BIT_AND(1,1) = 1 & BIT_IOR(0,0) = 0 & BIT_IOR(0,1) = 0 & BIT_IOR(1,0) = 0 & BIT_IOR(1,1) = 1 & BIT_XOR(0,0) = 0 & BIT_XOR(0,1) = 1 & BIT_XOR(1,0) = 1 & BIT_XOR(1,1) = 0 & dom(add) = WORD8*WORD8 & ran(add) : POW(WORD8*BOOL*BOOL) & dom(substract) = WORD8*WORD8 & ran(substract) : POW(WORD8*BOOL*BOOL) & dom(and) = WORD8*WORD8 & ran(and) : POW(WORD8*BOOL) & dom(ior) = WORD8*WORD8 & ran(ior) : POW(WORD8*BOOL) & dom(xor) = WORD8*WORD8 & ran(xor) : POW(WORD8*BOOL) & dom(bitclear) = WORD8*WORD8_POSITION & ran(bitclear) : POW(WORD8) & dom(bitset) = WORD8*WORD8_POSITION & ran(bitset) : POW(WORD8) & dom(bitget) = WORD8*WORD8_POSITION & ran(bitget) : POW(BIT) & dom(complement) = WORD8 & ran(complement) : POW(WORD8) & dom(swap) = WORD8 & ran(swap) : POW(WORD8) & ran(rotateleft) : POW(WORD8*BOOL) & dom(rotateleft) = WORD8 & dom(rotateright) = WORD8 & ran(rotateright) : POW(WORD8*BOOL) & color_refine(green) = 0 & color_refine(yellow) = 1 & color_refine(red) = 2 & color_step(0) = 1 & color_step(1) = 2 & color_step(2) = 0 & btrue & !(counter$7777).(counter$7777 = color_step(counter) => not((mpmem$1<+{address|->(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{a|->1})(a)})(0) : 0..2 & (mpmem$1<+{address|->(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{a|->1})(a)})(0) = counter$7777 & btrue))));
  ("`Local hypotheses'" & address : WORD16 & address = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)}<+{1|->id_register8|->1})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)}<+{1|->id_register8|->1})(14|->id_register8)) & address$0 : WORD16 & ib : BIT & nw8 : BV8 & ib = WORD8_TO_BV8(mpmem$1(address$0))(1) & nw8 = BV8_SET_BIT(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(3|->id_register8)),6,ib) & not(INSTRUCTION_NEXT(14) = 15) & 11 = INSTRUCTION_NEXT(11) & not(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(0))))) = 5) & 9 = INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(0))))) & not(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(0))))) = 4) & not(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(3|->id_register8))(6) = 0) & address$0 = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(14|->id_register8)));
  (not(btrue & mpstack$1<+{mpsp$1|->INSTRUCTION_NEXT(mppc$1)} : WORD16 +-> WORD16 & dom(mpstack$1<+{mpsp$1|->INSTRUCTION_NEXT(mppc$1)}) = WORD16 & mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{f_|->BV8_TO_WORD8(nw8$0)}<+{a|->0}<+{a|->1}<+{a|->2} : id_register8 +-> WORD8 & dom(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{f_|->BV8_TO_WORD8(nw8$0)}<+{a|->0}<+{a|->1}<+{a|->2}) = id_register8 & mpmem$1<+{address|->(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{f_|->BV8_TO_WORD8(nw8$0)}<+{a|->0}<+{a|->1}<+{a|->2})(a)} : WORD16 +-> WORD8 & dom(mpmem$1<+{address|->(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{f_|->BV8_TO_WORD8(nw8$0)}<+{a|->0}<+{a|->1}<+{a|->2})(a)}) = WORD16 & INSTRUCTION_NEXT(INSTRUCTION_NEXT(13)) : WORD16 & mpsp$1+1 : WORD16 & mpix$1 : WORD16 & mpiy$1 : WORD16 & dom(mpstack$1<+{mpsp$1|->INSTRUCTION_NEXT(mppc$1)}) = WORD16 & ran(mpstack$1<+{mpsp$1|->INSTRUCTION_NEXT(mppc$1)}) : POW(WORD16) & ran(mpmem$1<+{address|->(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{f_|->BV8_TO_WORD8(nw8$0)}<+{a|->0}<+{a|->1}<+{a|->2})(a)}) : POW(WORD8) & dom(mpmem$1<+{address|->(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{f_|->BV8_TO_WORD8(nw8$0)}<+{a|->0}<+{a|->1}<+{a|->2})(a)}) = WORD16 & ran(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{f_|->BV8_TO_WORD8(nw8$0)}<+{a|->0}<+{a|->1}<+{a|->2}) : POW(WORD8) & dom(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{f_|->BV8_TO_WORD8(nw8$0)}<+{a|->0}<+{a|->1}<+{a|->2}) = id_register8 & INSTRUCTION_NEXT(0) = 1 & INSTRUCTION_NEXT(1) = 2 & INSTRUCTION_NEXT(2) = 3 & INSTRUCTION_NEXT(3) = 4 & INSTRUCTION_NEXT(4) = 5 & INSTRUCTION_NEXT(5) = 6 & INSTRUCTION_NEXT(6) = 7 & INSTRUCTION_NEXT(7) = 8 & INSTRUCTION_NEXT(8) = 9 & INSTRUCTION_NEXT(9) = 10 & !c.(c : COLOR => c = green or c = yellow or c = red) & NB_WORD8S = 256 & !n.(n : WORD8 => 0<=n) & !n.(n : WORD8 => n<=255) & WORD8_POSITION = BV8_INDEX & BIT_FLIP(0) = 1 & BIT_FLIP(1) = 0 & BIT_AND(0,0) = 0 & BIT_AND(0,1) = 0 & BIT_AND(1,0) = 0 & BIT_AND(1,1) = 1 & BIT_IOR(0,0) = 0 & BIT_IOR(0,1) = 0 & BIT_IOR(1,0) = 0 & BIT_IOR(1,1) = 1 & BIT_XOR(0,0) = 0 & BIT_XOR(0,1) = 1 & BIT_XOR(1,0) = 1 & BIT_XOR(1,1) = 0 & dom(add) = WORD8*WORD8 & ran(add) : POW(WORD8*BOOL*BOOL) & dom(substract) = WORD8*WORD8 & ran(substract) : POW(WORD8*BOOL*BOOL) & dom(and) = WORD8*WORD8 & ran(and) : POW(WORD8*BOOL) & dom(ior) = WORD8*WORD8 & ran(ior) : POW(WORD8*BOOL) & dom(xor) = WORD8*WORD8 & ran(xor) : POW(WORD8*BOOL) & dom(bitclear) = WORD8*WORD8_POSITION & ran(bitclear) : POW(WORD8) & dom(bitset) = WORD8*WORD8_POSITION & ran(bitset) : POW(WORD8) & dom(bitget) = WORD8*WORD8_POSITION & ran(bitget) : POW(BIT) & dom(complement) = WORD8 & ran(complement) : POW(WORD8) & dom(swap) = WORD8 & ran(swap) : POW(WORD8) & ran(rotateleft) : POW(WORD8*BOOL) & dom(rotateleft) = WORD8 & dom(rotateright) = WORD8 & ran(rotateright) : POW(WORD8*BOOL) & color_refine(green) = 0 & color_refine(yellow) = 1 & color_refine(red) = 2 & color_step(0) = 1 & color_step(1) = 2 & color_step(2) = 0 & btrue & !(counter$7777).(counter$7777 = color_step(counter) => not((mpmem$1<+{address|->(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{f_|->BV8_TO_WORD8(nw8$0)}<+{a|->0}<+{a|->1}<+{a|->2})(a)})(0) : 0..2 & (mpmem$1<+{address|->(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{f_|->BV8_TO_WORD8(nw8$0)}<+{a|->0}<+{a|->1}<+{a|->2})(a)})(0) = counter$7777 & btrue))));
  (not(btrue & mpstack$1<+{mpsp$1|->INSTRUCTION_NEXT(mppc$1)} : WORD16 +-> WORD16 & dom(mpstack$1<+{mpsp$1|->INSTRUCTION_NEXT(mppc$1)}) = WORD16 & mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{a|->0}<+{a|->1}<+{a|->2} : id_register8 +-> WORD8 & dom(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{a|->0}<+{a|->1}<+{a|->2}) = id_register8 & mpmem$1<+{address|->(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{a|->0}<+{a|->1}<+{a|->2})(a)} : WORD16 +-> WORD8 & dom(mpmem$1<+{address|->(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{a|->0}<+{a|->1}<+{a|->2})(a)}) = WORD16 & INSTRUCTION_NEXT(INSTRUCTION_NEXT(13)) : WORD16 & mpsp$1+1 : WORD16 & mpix$1 : WORD16 & mpiy$1 : WORD16 & dom(mpstack$1<+{mpsp$1|->INSTRUCTION_NEXT(mppc$1)}) = WORD16 & ran(mpstack$1<+{mpsp$1|->INSTRUCTION_NEXT(mppc$1)}) : POW(WORD16) & ran(mpmem$1<+{address|->(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{a|->0}<+{a|->1}<+{a|->2})(a)}) : POW(WORD8) & dom(mpmem$1<+{address|->(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{a|->0}<+{a|->1}<+{a|->2})(a)}) = WORD16 & ran(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{a|->0}<+{a|->1}<+{a|->2}) : POW(WORD8) & dom(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{a|->0}<+{a|->1}<+{a|->2}) = id_register8 & INSTRUCTION_NEXT(0) = 1 & INSTRUCTION_NEXT(1) = 2 & INSTRUCTION_NEXT(2) = 3 & INSTRUCTION_NEXT(3) = 4 & INSTRUCTION_NEXT(4) = 5 & INSTRUCTION_NEXT(5) = 6 & INSTRUCTION_NEXT(6) = 7 & INSTRUCTION_NEXT(7) = 8 & INSTRUCTION_NEXT(8) = 9 & INSTRUCTION_NEXT(9) = 10 & !c.(c : COLOR => c = green or c = yellow or c = red) & NB_WORD8S = 256 & !n.(n : WORD8 => 0<=n) & !n.(n : WORD8 => n<=255) & WORD8_POSITION = BV8_INDEX & BIT_FLIP(0) = 1 & BIT_FLIP(1) = 0 & BIT_AND(0,0) = 0 & BIT_AND(0,1) = 0 & BIT_AND(1,0) = 0 & BIT_AND(1,1) = 1 & BIT_IOR(0,0) = 0 & BIT_IOR(0,1) = 0 & BIT_IOR(1,0) = 0 & BIT_IOR(1,1) = 1 & BIT_XOR(0,0) = 0 & BIT_XOR(0,1) = 1 & BIT_XOR(1,0) = 1 & BIT_XOR(1,1) = 0 & dom(add) = WORD8*WORD8 & ran(add) : POW(WORD8*BOOL*BOOL) & dom(substract) = WORD8*WORD8 & ran(substract) : POW(WORD8*BOOL*BOOL) & dom(and) = WORD8*WORD8 & ran(and) : POW(WORD8*BOOL) & dom(ior) = WORD8*WORD8 & ran(ior) : POW(WORD8*BOOL) & dom(xor) = WORD8*WORD8 & ran(xor) : POW(WORD8*BOOL) & dom(bitclear) = WORD8*WORD8_POSITION & ran(bitclear) : POW(WORD8) & dom(bitset) = WORD8*WORD8_POSITION & ran(bitset) : POW(WORD8) & dom(bitget) = WORD8*WORD8_POSITION & ran(bitget) : POW(BIT) & dom(complement) = WORD8 & ran(complement) : POW(WORD8) & dom(swap) = WORD8 & ran(swap) : POW(WORD8) & ran(rotateleft) : POW(WORD8*BOOL) & dom(rotateleft) = WORD8 & dom(rotateright) = WORD8 & ran(rotateright) : POW(WORD8*BOOL) & color_refine(green) = 0 & color_refine(yellow) = 1 & color_refine(red) = 2 & color_step(0) = 1 & color_step(1) = 2 & color_step(2) = 0 & btrue & !(counter$7777).(counter$7777 = color_step(counter) => not((mpmem$1<+{address|->(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{a|->0}<+{a|->1}<+{a|->2})(a)})(0) : 0..2 & (mpmem$1<+{address|->(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{a|->0}<+{a|->1}<+{a|->2})(a)})(0) = counter$7777 & btrue))));
  (not(btrue & mpstack$1<+{mpsp$1|->INSTRUCTION_NEXT(mppc$1)} : WORD16 +-> WORD16 & dom(mpstack$1<+{mpsp$1|->INSTRUCTION_NEXT(mppc$1)}) = WORD16 & mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{f_|->BV8_TO_WORD8(nw8$0)}<+{a|->1}<+{a|->2} : id_register8 +-> WORD8 & dom(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{f_|->BV8_TO_WORD8(nw8$0)}<+{a|->1}<+{a|->2}) = id_register8 & mpmem$1<+{address|->(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{f_|->BV8_TO_WORD8(nw8$0)}<+{a|->1}<+{a|->2})(a)} : WORD16 +-> WORD8 & dom(mpmem$1<+{address|->(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{f_|->BV8_TO_WORD8(nw8$0)}<+{a|->1}<+{a|->2})(a)}) = WORD16 & INSTRUCTION_NEXT(INSTRUCTION_NEXT(13)) : WORD16 & mpsp$1+1 : WORD16 & mpix$1 : WORD16 & mpiy$1 : WORD16 & dom(mpstack$1<+{mpsp$1|->INSTRUCTION_NEXT(mppc$1)}) = WORD16 & ran(mpstack$1<+{mpsp$1|->INSTRUCTION_NEXT(mppc$1)}) : POW(WORD16) & ran(mpmem$1<+{address|->(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{f_|->BV8_TO_WORD8(nw8$0)}<+{a|->1}<+{a|->2})(a)}) : POW(WORD8) & dom(mpmem$1<+{address|->(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{f_|->BV8_TO_WORD8(nw8$0)}<+{a|->1}<+{a|->2})(a)}) = WORD16 & ran(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{f_|->BV8_TO_WORD8(nw8$0)}<+{a|->1}<+{a|->2}) : POW(WORD8) & dom(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{f_|->BV8_TO_WORD8(nw8$0)}<+{a|->1}<+{a|->2}) = id_register8 & INSTRUCTION_NEXT(0) = 1 & INSTRUCTION_NEXT(1) = 2 & INSTRUCTION_NEXT(2) = 3 & INSTRUCTION_NEXT(3) = 4 & INSTRUCTION_NEXT(4) = 5 & INSTRUCTION_NEXT(5) = 6 & INSTRUCTION_NEXT(6) = 7 & INSTRUCTION_NEXT(7) = 8 & INSTRUCTION_NEXT(8) = 9 & INSTRUCTION_NEXT(9) = 10 & !c.(c : COLOR => c = green or c = yellow or c = red) & NB_WORD8S = 256 & !n.(n : WORD8 => 0<=n) & !n.(n : WORD8 => n<=255) & WORD8_POSITION = BV8_INDEX & BIT_FLIP(0) = 1 & BIT_FLIP(1) = 0 & BIT_AND(0,0) = 0 & BIT_AND(0,1) = 0 & BIT_AND(1,0) = 0 & BIT_AND(1,1) = 1 & BIT_IOR(0,0) = 0 & BIT_IOR(0,1) = 0 & BIT_IOR(1,0) = 0 & BIT_IOR(1,1) = 1 & BIT_XOR(0,0) = 0 & BIT_XOR(0,1) = 1 & BIT_XOR(1,0) = 1 & BIT_XOR(1,1) = 0 & dom(add) = WORD8*WORD8 & ran(add) : POW(WORD8*BOOL*BOOL) & dom(substract) = WORD8*WORD8 & ran(substract) : POW(WORD8*BOOL*BOOL) & dom(and) = WORD8*WORD8 & ran(and) : POW(WORD8*BOOL) & dom(ior) = WORD8*WORD8 & ran(ior) : POW(WORD8*BOOL) & dom(xor) = WORD8*WORD8 & ran(xor) : POW(WORD8*BOOL) & dom(bitclear) = WORD8*WORD8_POSITION & ran(bitclear) : POW(WORD8) & dom(bitset) = WORD8*WORD8_POSITION & ran(bitset) : POW(WORD8) & dom(bitget) = WORD8*WORD8_POSITION & ran(bitget) : POW(BIT) & dom(complement) = WORD8 & ran(complement) : POW(WORD8) & dom(swap) = WORD8 & ran(swap) : POW(WORD8) & ran(rotateleft) : POW(WORD8*BOOL) & dom(rotateleft) = WORD8 & dom(rotateright) = WORD8 & ran(rotateright) : POW(WORD8*BOOL) & color_refine(green) = 0 & color_refine(yellow) = 1 & color_refine(red) = 2 & color_step(0) = 1 & color_step(1) = 2 & color_step(2) = 0 & btrue & !(counter$7777).(counter$7777 = color_step(counter) => not((mpmem$1<+{address|->(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{f_|->BV8_TO_WORD8(nw8$0)}<+{a|->1}<+{a|->2})(a)})(0) : 0..2 & (mpmem$1<+{address|->(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{f_|->BV8_TO_WORD8(nw8$0)}<+{a|->1}<+{a|->2})(a)})(0) = counter$7777 & btrue))));
  (not(btrue & mpstack$1<+{mpsp$1|->INSTRUCTION_NEXT(mppc$1)} : WORD16 +-> WORD16 & dom(mpstack$1<+{mpsp$1|->INSTRUCTION_NEXT(mppc$1)}) = WORD16 & mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{a|->1}<+{a|->2} : id_register8 +-> WORD8 & dom(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{a|->1}<+{a|->2}) = id_register8 & mpmem$1<+{address|->(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{a|->1}<+{a|->2})(a)} : WORD16 +-> WORD8 & dom(mpmem$1<+{address|->(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{a|->1}<+{a|->2})(a)}) = WORD16 & INSTRUCTION_NEXT(INSTRUCTION_NEXT(13)) : WORD16 & mpsp$1+1 : WORD16 & mpix$1 : WORD16 & mpiy$1 : WORD16 & dom(mpstack$1<+{mpsp$1|->INSTRUCTION_NEXT(mppc$1)}) = WORD16 & ran(mpstack$1<+{mpsp$1|->INSTRUCTION_NEXT(mppc$1)}) : POW(WORD16) & ran(mpmem$1<+{address|->(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{a|->1}<+{a|->2})(a)}) : POW(WORD8) & dom(mpmem$1<+{address|->(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{a|->1}<+{a|->2})(a)}) = WORD16 & ran(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{a|->1}<+{a|->2}) : POW(WORD8) & dom(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{a|->1}<+{a|->2}) = id_register8 & INSTRUCTION_NEXT(0) = 1 & INSTRUCTION_NEXT(1) = 2 & INSTRUCTION_NEXT(2) = 3 & INSTRUCTION_NEXT(3) = 4 & INSTRUCTION_NEXT(4) = 5 & INSTRUCTION_NEXT(5) = 6 & INSTRUCTION_NEXT(6) = 7 & INSTRUCTION_NEXT(7) = 8 & INSTRUCTION_NEXT(8) = 9 & INSTRUCTION_NEXT(9) = 10 & !c.(c : COLOR => c = green or c = yellow or c = red) & NB_WORD8S = 256 & !n.(n : WORD8 => 0<=n) & !n.(n : WORD8 => n<=255) & WORD8_POSITION = BV8_INDEX & BIT_FLIP(0) = 1 & BIT_FLIP(1) = 0 & BIT_AND(0,0) = 0 & BIT_AND(0,1) = 0 & BIT_AND(1,0) = 0 & BIT_AND(1,1) = 1 & BIT_IOR(0,0) = 0 & BIT_IOR(0,1) = 0 & BIT_IOR(1,0) = 0 & BIT_IOR(1,1) = 1 & BIT_XOR(0,0) = 0 & BIT_XOR(0,1) = 1 & BIT_XOR(1,0) = 1 & BIT_XOR(1,1) = 0 & dom(add) = WORD8*WORD8 & ran(add) : POW(WORD8*BOOL*BOOL) & dom(substract) = WORD8*WORD8 & ran(substract) : POW(WORD8*BOOL*BOOL) & dom(and) = WORD8*WORD8 & ran(and) : POW(WORD8*BOOL) & dom(ior) = WORD8*WORD8 & ran(ior) : POW(WORD8*BOOL) & dom(xor) = WORD8*WORD8 & ran(xor) : POW(WORD8*BOOL) & dom(bitclear) = WORD8*WORD8_POSITION & ran(bitclear) : POW(WORD8) & dom(bitset) = WORD8*WORD8_POSITION & ran(bitset) : POW(WORD8) & dom(bitget) = WORD8*WORD8_POSITION & ran(bitget) : POW(BIT) & dom(complement) = WORD8 & ran(complement) : POW(WORD8) & dom(swap) = WORD8 & ran(swap) : POW(WORD8) & ran(rotateleft) : POW(WORD8*BOOL) & dom(rotateleft) = WORD8 & dom(rotateright) = WORD8 & ran(rotateright) : POW(WORD8*BOOL) & color_refine(green) = 0 & color_refine(yellow) = 1 & color_refine(red) = 2 & color_step(0) = 1 & color_step(1) = 2 & color_step(2) = 0 & btrue & !(counter$7777).(counter$7777 = color_step(counter) => not((mpmem$1<+{address|->(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{a|->1}<+{a|->2})(a)})(0) : 0..2 & (mpmem$1<+{address|->(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{a|->1}<+{a|->2})(a)})(0) = counter$7777 & btrue))));
  (not(btrue & mpstack$1<+{mpsp$1|->INSTRUCTION_NEXT(mppc$1)} : WORD16 +-> WORD16 & dom(mpstack$1<+{mpsp$1|->INSTRUCTION_NEXT(mppc$1)}) = WORD16 & mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{f_|->BV8_TO_WORD8(nw8$0)}<+{a|->0}<+{a|->2} : id_register8 +-> WORD8 & dom(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{f_|->BV8_TO_WORD8(nw8$0)}<+{a|->0}<+{a|->2}) = id_register8 & mpmem$1<+{address|->(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{f_|->BV8_TO_WORD8(nw8$0)}<+{a|->0}<+{a|->2})(a)} : WORD16 +-> WORD8 & dom(mpmem$1<+{address|->(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{f_|->BV8_TO_WORD8(nw8$0)}<+{a|->0}<+{a|->2})(a)}) = WORD16 & INSTRUCTION_NEXT(INSTRUCTION_NEXT(13)) : WORD16 & mpsp$1+1 : WORD16 & mpix$1 : WORD16 & mpiy$1 : WORD16 & dom(mpstack$1<+{mpsp$1|->INSTRUCTION_NEXT(mppc$1)}) = WORD16 & ran(mpstack$1<+{mpsp$1|->INSTRUCTION_NEXT(mppc$1)}) : POW(WORD16) & ran(mpmem$1<+{address|->(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{f_|->BV8_TO_WORD8(nw8$0)}<+{a|->0}<+{a|->2})(a)}) : POW(WORD8) & dom(mpmem$1<+{address|->(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{f_|->BV8_TO_WORD8(nw8$0)}<+{a|->0}<+{a|->2})(a)}) = WORD16 & ran(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{f_|->BV8_TO_WORD8(nw8$0)}<+{a|->0}<+{a|->2}) : POW(WORD8) & dom(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{f_|->BV8_TO_WORD8(nw8$0)}<+{a|->0}<+{a|->2}) = id_register8 & INSTRUCTION_NEXT(0) = 1 & INSTRUCTION_NEXT(1) = 2 & INSTRUCTION_NEXT(2) = 3 & INSTRUCTION_NEXT(3) = 4 & INSTRUCTION_NEXT(4) = 5 & INSTRUCTION_NEXT(5) = 6 & INSTRUCTION_NEXT(6) = 7 & INSTRUCTION_NEXT(7) = 8 & INSTRUCTION_NEXT(8) = 9 & INSTRUCTION_NEXT(9) = 10 & !c.(c : COLOR => c = green or c = yellow or c = red) & NB_WORD8S = 256 & !n.(n : WORD8 => 0<=n) & !n.(n : WORD8 => n<=255) & WORD8_POSITION = BV8_INDEX & BIT_FLIP(0) = 1 & BIT_FLIP(1) = 0 & BIT_AND(0,0) = 0 & BIT_AND(0,1) = 0 & BIT_AND(1,0) = 0 & BIT_AND(1,1) = 1 & BIT_IOR(0,0) = 0 & BIT_IOR(0,1) = 0 & BIT_IOR(1,0) = 0 & BIT_IOR(1,1) = 1 & BIT_XOR(0,0) = 0 & BIT_XOR(0,1) = 1 & BIT_XOR(1,0) = 1 & BIT_XOR(1,1) = 0 & dom(add) = WORD8*WORD8 & ran(add) : POW(WORD8*BOOL*BOOL) & dom(substract) = WORD8*WORD8 & ran(substract) : POW(WORD8*BOOL*BOOL) & dom(and) = WORD8*WORD8 & ran(and) : POW(WORD8*BOOL) & dom(ior) = WORD8*WORD8 & ran(ior) : POW(WORD8*BOOL) & dom(xor) = WORD8*WORD8 & ran(xor) : POW(WORD8*BOOL) & dom(bitclear) = WORD8*WORD8_POSITION & ran(bitclear) : POW(WORD8) & dom(bitset) = WORD8*WORD8_POSITION & ran(bitset) : POW(WORD8) & dom(bitget) = WORD8*WORD8_POSITION & ran(bitget) : POW(BIT) & dom(complement) = WORD8 & ran(complement) : POW(WORD8) & dom(swap) = WORD8 & ran(swap) : POW(WORD8) & ran(rotateleft) : POW(WORD8*BOOL) & dom(rotateleft) = WORD8 & dom(rotateright) = WORD8 & ran(rotateright) : POW(WORD8*BOOL) & color_refine(green) = 0 & color_refine(yellow) = 1 & color_refine(red) = 2 & color_step(0) = 1 & color_step(1) = 2 & color_step(2) = 0 & btrue & !(counter$7777).(counter$7777 = color_step(counter) => not((mpmem$1<+{address|->(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{f_|->BV8_TO_WORD8(nw8$0)}<+{a|->0}<+{a|->2})(a)})(0) : 0..2 & (mpmem$1<+{address|->(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{f_|->BV8_TO_WORD8(nw8$0)}<+{a|->0}<+{a|->2})(a)})(0) = counter$7777 & btrue))));
  (not(btrue & mpstack$1<+{mpsp$1|->INSTRUCTION_NEXT(mppc$1)} : WORD16 +-> WORD16 & dom(mpstack$1<+{mpsp$1|->INSTRUCTION_NEXT(mppc$1)}) = WORD16 & mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{a|->0}<+{a|->2} : id_register8 +-> WORD8 & dom(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{a|->0}<+{a|->2}) = id_register8 & mpmem$1<+{address|->(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{a|->0}<+{a|->2})(a)} : WORD16 +-> WORD8 & dom(mpmem$1<+{address|->(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{a|->0}<+{a|->2})(a)}) = WORD16 & INSTRUCTION_NEXT(INSTRUCTION_NEXT(13)) : WORD16 & mpsp$1+1 : WORD16 & mpix$1 : WORD16 & mpiy$1 : WORD16 & dom(mpstack$1<+{mpsp$1|->INSTRUCTION_NEXT(mppc$1)}) = WORD16 & ran(mpstack$1<+{mpsp$1|->INSTRUCTION_NEXT(mppc$1)}) : POW(WORD16) & ran(mpmem$1<+{address|->(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{a|->0}<+{a|->2})(a)}) : POW(WORD8) & dom(mpmem$1<+{address|->(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{a|->0}<+{a|->2})(a)}) = WORD16 & ran(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{a|->0}<+{a|->2}) : POW(WORD8) & dom(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{a|->0}<+{a|->2}) = id_register8 & INSTRUCTION_NEXT(0) = 1 & INSTRUCTION_NEXT(1) = 2 & INSTRUCTION_NEXT(2) = 3 & INSTRUCTION_NEXT(3) = 4 & INSTRUCTION_NEXT(4) = 5 & INSTRUCTION_NEXT(5) = 6 & INSTRUCTION_NEXT(6) = 7 & INSTRUCTION_NEXT(7) = 8 & INSTRUCTION_NEXT(8) = 9 & INSTRUCTION_NEXT(9) = 10 & !c.(c : COLOR => c = green or c = yellow or c = red) & NB_WORD8S = 256 & !n.(n : WORD8 => 0<=n) & !n.(n : WORD8 => n<=255) & WORD8_POSITION = BV8_INDEX & BIT_FLIP(0) = 1 & BIT_FLIP(1) = 0 & BIT_AND(0,0) = 0 & BIT_AND(0,1) = 0 & BIT_AND(1,0) = 0 & BIT_AND(1,1) = 1 & BIT_IOR(0,0) = 0 & BIT_IOR(0,1) = 0 & BIT_IOR(1,0) = 0 & BIT_IOR(1,1) = 1 & BIT_XOR(0,0) = 0 & BIT_XOR(0,1) = 1 & BIT_XOR(1,0) = 1 & BIT_XOR(1,1) = 0 & dom(add) = WORD8*WORD8 & ran(add) : POW(WORD8*BOOL*BOOL) & dom(substract) = WORD8*WORD8 & ran(substract) : POW(WORD8*BOOL*BOOL) & dom(and) = WORD8*WORD8 & ran(and) : POW(WORD8*BOOL) & dom(ior) = WORD8*WORD8 & ran(ior) : POW(WORD8*BOOL) & dom(xor) = WORD8*WORD8 & ran(xor) : POW(WORD8*BOOL) & dom(bitclear) = WORD8*WORD8_POSITION & ran(bitclear) : POW(WORD8) & dom(bitset) = WORD8*WORD8_POSITION & ran(bitset) : POW(WORD8) & dom(bitget) = WORD8*WORD8_POSITION & ran(bitget) : POW(BIT) & dom(complement) = WORD8 & ran(complement) : POW(WORD8) & dom(swap) = WORD8 & ran(swap) : POW(WORD8) & ran(rotateleft) : POW(WORD8*BOOL) & dom(rotateleft) = WORD8 & dom(rotateright) = WORD8 & ran(rotateright) : POW(WORD8*BOOL) & color_refine(green) = 0 & color_refine(yellow) = 1 & color_refine(red) = 2 & color_step(0) = 1 & color_step(1) = 2 & color_step(2) = 0 & btrue & !(counter$7777).(counter$7777 = color_step(counter) => not((mpmem$1<+{address|->(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{a|->0}<+{a|->2})(a)})(0) : 0..2 & (mpmem$1<+{address|->(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{a|->0}<+{a|->2})(a)})(0) = counter$7777 & btrue))));
  (not(btrue & mpstack$1<+{mpsp$1|->INSTRUCTION_NEXT(mppc$1)} : WORD16 +-> WORD16 & dom(mpstack$1<+{mpsp$1|->INSTRUCTION_NEXT(mppc$1)}) = WORD16 & mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{f_|->BV8_TO_WORD8(nw8$0)}<+{a|->0}<+{a|->1} : id_register8 +-> WORD8 & dom(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{f_|->BV8_TO_WORD8(nw8$0)}<+{a|->0}<+{a|->1}) = id_register8 & mpmem$1<+{address|->(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{f_|->BV8_TO_WORD8(nw8$0)}<+{a|->0}<+{a|->1})(a)} : WORD16 +-> WORD8 & dom(mpmem$1<+{address|->(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{f_|->BV8_TO_WORD8(nw8$0)}<+{a|->0}<+{a|->1})(a)}) = WORD16 & INSTRUCTION_NEXT(14) : WORD16 & mpsp$1+1 : WORD16 & mpix$1 : WORD16 & mpiy$1 : WORD16 & dom(mpstack$1<+{mpsp$1|->INSTRUCTION_NEXT(mppc$1)}) = WORD16 & ran(mpstack$1<+{mpsp$1|->INSTRUCTION_NEXT(mppc$1)}) : POW(WORD16) & ran(mpmem$1<+{address|->(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{f_|->BV8_TO_WORD8(nw8$0)}<+{a|->0}<+{a|->1})(a)}) : POW(WORD8) & dom(mpmem$1<+{address|->(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{f_|->BV8_TO_WORD8(nw8$0)}<+{a|->0}<+{a|->1})(a)}) = WORD16 & ran(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{f_|->BV8_TO_WORD8(nw8$0)}<+{a|->0}<+{a|->1}) : POW(WORD8) & dom(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{f_|->BV8_TO_WORD8(nw8$0)}<+{a|->0}<+{a|->1}) = id_register8 & INSTRUCTION_NEXT(0) = 1 & INSTRUCTION_NEXT(1) = 2 & INSTRUCTION_NEXT(2) = 3 & INSTRUCTION_NEXT(3) = 4 & INSTRUCTION_NEXT(4) = 5 & INSTRUCTION_NEXT(5) = 6 & INSTRUCTION_NEXT(6) = 7 & INSTRUCTION_NEXT(7) = 8 & INSTRUCTION_NEXT(8) = 9 & INSTRUCTION_NEXT(9) = 10 & !c.(c : COLOR => c = green or c = yellow or c = red) & NB_WORD8S = 256 & !n.(n : WORD8 => 0<=n) & !n.(n : WORD8 => n<=255) & WORD8_POSITION = BV8_INDEX & BIT_FLIP(0) = 1 & BIT_FLIP(1) = 0 & BIT_AND(0,0) = 0 & BIT_AND(0,1) = 0 & BIT_AND(1,0) = 0 & BIT_AND(1,1) = 1 & BIT_IOR(0,0) = 0 & BIT_IOR(0,1) = 0 & BIT_IOR(1,0) = 0 & BIT_IOR(1,1) = 1 & BIT_XOR(0,0) = 0 & BIT_XOR(0,1) = 1 & BIT_XOR(1,0) = 1 & BIT_XOR(1,1) = 0 & dom(add) = WORD8*WORD8 & ran(add) : POW(WORD8*BOOL*BOOL) & dom(substract) = WORD8*WORD8 & ran(substract) : POW(WORD8*BOOL*BOOL) & dom(and) = WORD8*WORD8 & ran(and) : POW(WORD8*BOOL) & dom(ior) = WORD8*WORD8 & ran(ior) : POW(WORD8*BOOL) & dom(xor) = WORD8*WORD8 & ran(xor) : POW(WORD8*BOOL) & dom(bitclear) = WORD8*WORD8_POSITION & ran(bitclear) : POW(WORD8) & dom(bitset) = WORD8*WORD8_POSITION & ran(bitset) : POW(WORD8) & dom(bitget) = WORD8*WORD8_POSITION & ran(bitget) : POW(BIT) & dom(complement) = WORD8 & ran(complement) : POW(WORD8) & dom(swap) = WORD8 & ran(swap) : POW(WORD8) & ran(rotateleft) : POW(WORD8*BOOL) & dom(rotateleft) = WORD8 & dom(rotateright) = WORD8 & ran(rotateright) : POW(WORD8*BOOL) & color_refine(green) = 0 & color_refine(yellow) = 1 & color_refine(red) = 2 & color_step(0) = 1 & color_step(1) = 2 & color_step(2) = 0 & btrue & !(counter$7777).(counter$7777 = color_step(counter) => not((mpmem$1<+{address|->(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{f_|->BV8_TO_WORD8(nw8$0)}<+{a|->0}<+{a|->1})(a)})(0) : 0..2 & (mpmem$1<+{address|->(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{f_|->BV8_TO_WORD8(nw8$0)}<+{a|->0}<+{a|->1})(a)})(0) = counter$7777 & btrue))));
  (not(btrue & mpstack$1<+{mpsp$1|->INSTRUCTION_NEXT(mppc$1)} : WORD16 +-> WORD16 & dom(mpstack$1<+{mpsp$1|->INSTRUCTION_NEXT(mppc$1)}) = WORD16 & mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{a|->0}<+{a|->1} : id_register8 +-> WORD8 & dom(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{a|->0}<+{a|->1}) = id_register8 & mpmem$1<+{address|->(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{a|->0}<+{a|->1})(a)} : WORD16 +-> WORD8 & dom(mpmem$1<+{address|->(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{a|->0}<+{a|->1})(a)}) = WORD16 & INSTRUCTION_NEXT(14) : WORD16 & mpsp$1+1 : WORD16 & mpix$1 : WORD16 & mpiy$1 : WORD16 & dom(mpstack$1<+{mpsp$1|->INSTRUCTION_NEXT(mppc$1)}) = WORD16 & ran(mpstack$1<+{mpsp$1|->INSTRUCTION_NEXT(mppc$1)}) : POW(WORD16) & ran(mpmem$1<+{address|->(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{a|->0}<+{a|->1})(a)}) : POW(WORD8) & dom(mpmem$1<+{address|->(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{a|->0}<+{a|->1})(a)}) = WORD16 & ran(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{a|->0}<+{a|->1}) : POW(WORD8) & dom(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{a|->0}<+{a|->1}) = id_register8 & INSTRUCTION_NEXT(0) = 1 & INSTRUCTION_NEXT(1) = 2 & INSTRUCTION_NEXT(2) = 3 & INSTRUCTION_NEXT(3) = 4 & INSTRUCTION_NEXT(4) = 5 & INSTRUCTION_NEXT(5) = 6 & INSTRUCTION_NEXT(6) = 7 & INSTRUCTION_NEXT(7) = 8 & INSTRUCTION_NEXT(8) = 9 & INSTRUCTION_NEXT(9) = 10 & !c.(c : COLOR => c = green or c = yellow or c = red) & NB_WORD8S = 256 & !n.(n : WORD8 => 0<=n) & !n.(n : WORD8 => n<=255) & WORD8_POSITION = BV8_INDEX & BIT_FLIP(0) = 1 & BIT_FLIP(1) = 0 & BIT_AND(0,0) = 0 & BIT_AND(0,1) = 0 & BIT_AND(1,0) = 0 & BIT_AND(1,1) = 1 & BIT_IOR(0,0) = 0 & BIT_IOR(0,1) = 0 & BIT_IOR(1,0) = 0 & BIT_IOR(1,1) = 1 & BIT_XOR(0,0) = 0 & BIT_XOR(0,1) = 1 & BIT_XOR(1,0) = 1 & BIT_XOR(1,1) = 0 & dom(add) = WORD8*WORD8 & ran(add) : POW(WORD8*BOOL*BOOL) & dom(substract) = WORD8*WORD8 & ran(substract) : POW(WORD8*BOOL*BOOL) & dom(and) = WORD8*WORD8 & ran(and) : POW(WORD8*BOOL) & dom(ior) = WORD8*WORD8 & ran(ior) : POW(WORD8*BOOL) & dom(xor) = WORD8*WORD8 & ran(xor) : POW(WORD8*BOOL) & dom(bitclear) = WORD8*WORD8_POSITION & ran(bitclear) : POW(WORD8) & dom(bitset) = WORD8*WORD8_POSITION & ran(bitset) : POW(WORD8) & dom(bitget) = WORD8*WORD8_POSITION & ran(bitget) : POW(BIT) & dom(complement) = WORD8 & ran(complement) : POW(WORD8) & dom(swap) = WORD8 & ran(swap) : POW(WORD8) & ran(rotateleft) : POW(WORD8*BOOL) & dom(rotateleft) = WORD8 & dom(rotateright) = WORD8 & ran(rotateright) : POW(WORD8*BOOL) & color_refine(green) = 0 & color_refine(yellow) = 1 & color_refine(red) = 2 & color_step(0) = 1 & color_step(1) = 2 & color_step(2) = 0 & btrue & !(counter$7777).(counter$7777 = color_step(counter) => not((mpmem$1<+{address|->(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{a|->0}<+{a|->1})(a)})(0) : 0..2 & (mpmem$1<+{address|->(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{a|->0}<+{a|->1})(a)})(0) = counter$7777 & btrue))));
  ("`Local hypotheses'" & address : WORD16 & address = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)}<+{3|->id_register8|->BV8_TO_WORD8(nw8$0)}<+{1|->id_register8|->1})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)}<+{3|->id_register8|->BV8_TO_WORD8(nw8$0)}<+{1|->id_register8|->1})(14|->id_register8)) & address$0 : WORD16 & ib : BIT & nw8 : BV8 & ib = WORD8_TO_BV8(mpmem$1(address$0))(1) & nw8 = BV8_SET_BIT(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(3|->id_register8)),6,ib) & INSTRUCTION_NEXT(14) = 15 & 11 = INSTRUCTION_NEXT(11) & not(INSTRUCTION_NEXT(INSTRUCTION_NEXT(7)) = 5) & 9 = INSTRUCTION_NEXT(INSTRUCTION_NEXT(7)) & address$1 : WORD16 & ib$0 : BIT & nw8$0 : BV8 & WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(3|->id_register8))(6) = 0 & 4 = INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(0)))) & WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)}<+{3|->id_register8|->BV8_TO_WORD8(nw8$0)})(3|->id_register8))(6) = 0 & address$0 = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(14|->id_register8)) & address$1 = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(14|->id_register8)) & ib$0 = WORD8_TO_BV8(mpmem$1(address$1))(0) & nw8$0 = BV8_SET_BIT(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(3|->id_register8)),6,ib$0));
  (not(btrue & mpstack$1<+{mpsp$1|->INSTRUCTION_NEXT(mppc$1)} : WORD16 +-> WORD16 & dom(mpstack$1<+{mpsp$1|->INSTRUCTION_NEXT(mppc$1)}) = WORD16 & mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{f_|->BV8_TO_WORD8(nw8$0)}<+{a|->1} : id_register8 +-> WORD8 & dom(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{f_|->BV8_TO_WORD8(nw8$0)}<+{a|->1}) = id_register8 & mpmem$1<+{address|->(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{f_|->BV8_TO_WORD8(nw8$0)}<+{a|->1})(a)} : WORD16 +-> WORD8 & dom(mpmem$1<+{address|->(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{f_|->BV8_TO_WORD8(nw8$0)}<+{a|->1})(a)}) = WORD16 & INSTRUCTION_NEXT(14) : WORD16 & mpsp$1+1 : WORD16 & mpix$1 : WORD16 & mpiy$1 : WORD16 & dom(mpstack$1<+{mpsp$1|->INSTRUCTION_NEXT(mppc$1)}) = WORD16 & ran(mpstack$1<+{mpsp$1|->INSTRUCTION_NEXT(mppc$1)}) : POW(WORD16) & ran(mpmem$1<+{address|->(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{f_|->BV8_TO_WORD8(nw8$0)}<+{a|->1})(a)}) : POW(WORD8) & dom(mpmem$1<+{address|->(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{f_|->BV8_TO_WORD8(nw8$0)}<+{a|->1})(a)}) = WORD16 & ran(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{f_|->BV8_TO_WORD8(nw8$0)}<+{a|->1}) : POW(WORD8) & dom(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{f_|->BV8_TO_WORD8(nw8$0)}<+{a|->1}) = id_register8 & INSTRUCTION_NEXT(0) = 1 & INSTRUCTION_NEXT(1) = 2 & INSTRUCTION_NEXT(2) = 3 & INSTRUCTION_NEXT(3) = 4 & INSTRUCTION_NEXT(4) = 5 & INSTRUCTION_NEXT(5) = 6 & INSTRUCTION_NEXT(6) = 7 & INSTRUCTION_NEXT(7) = 8 & INSTRUCTION_NEXT(8) = 9 & INSTRUCTION_NEXT(9) = 10 & !c.(c : COLOR => c = green or c = yellow or c = red) & NB_WORD8S = 256 & !n.(n : WORD8 => 0<=n) & !n.(n : WORD8 => n<=255) & WORD8_POSITION = BV8_INDEX & BIT_FLIP(0) = 1 & BIT_FLIP(1) = 0 & BIT_AND(0,0) = 0 & BIT_AND(0,1) = 0 & BIT_AND(1,0) = 0 & BIT_AND(1,1) = 1 & BIT_IOR(0,0) = 0 & BIT_IOR(0,1) = 0 & BIT_IOR(1,0) = 0 & BIT_IOR(1,1) = 1 & BIT_XOR(0,0) = 0 & BIT_XOR(0,1) = 1 & BIT_XOR(1,0) = 1 & BIT_XOR(1,1) = 0 & dom(add) = WORD8*WORD8 & ran(add) : POW(WORD8*BOOL*BOOL) & dom(substract) = WORD8*WORD8 & ran(substract) : POW(WORD8*BOOL*BOOL) & dom(and) = WORD8*WORD8 & ran(and) : POW(WORD8*BOOL) & dom(ior) = WORD8*WORD8 & ran(ior) : POW(WORD8*BOOL) & dom(xor) = WORD8*WORD8 & ran(xor) : POW(WORD8*BOOL) & dom(bitclear) = WORD8*WORD8_POSITION & ran(bitclear) : POW(WORD8) & dom(bitset) = WORD8*WORD8_POSITION & ran(bitset) : POW(WORD8) & dom(bitget) = WORD8*WORD8_POSITION & ran(bitget) : POW(BIT) & dom(complement) = WORD8 & ran(complement) : POW(WORD8) & dom(swap) = WORD8 & ran(swap) : POW(WORD8) & ran(rotateleft) : POW(WORD8*BOOL) & dom(rotateleft) = WORD8 & dom(rotateright) = WORD8 & ran(rotateright) : POW(WORD8*BOOL) & color_refine(green) = 0 & color_refine(yellow) = 1 & color_refine(red) = 2 & color_step(0) = 1 & color_step(1) = 2 & color_step(2) = 0 & btrue & !(counter$7777).(counter$7777 = color_step(counter) => not((mpmem$1<+{address|->(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{f_|->BV8_TO_WORD8(nw8$0)}<+{a|->1})(a)})(0) : 0..2 & (mpmem$1<+{address|->(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{f_|->BV8_TO_WORD8(nw8$0)}<+{a|->1})(a)})(0) = counter$7777 & btrue))));
  ("`Local hypotheses'" & address : WORD16 & address = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)}<+{3|->id_register8|->BV8_TO_WORD8(nw8$0)}<+{1|->id_register8|->1})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)}<+{3|->id_register8|->BV8_TO_WORD8(nw8$0)}<+{1|->id_register8|->1})(14|->id_register8)) & address$0 : WORD16 & ib : BIT & nw8 : BV8 & ib = WORD8_TO_BV8(mpmem$1(address$0))(1) & nw8 = BV8_SET_BIT(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(3|->id_register8)),6,ib) & INSTRUCTION_NEXT(14) = 15 & 11 = INSTRUCTION_NEXT(11) & not(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(7))) = 5) & 9 = INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(7))) & address$1 : WORD16 & ib$0 : BIT & nw8$0 : BV8 & WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(3|->id_register8))(6) = 0 & 4 = INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(0)))) & not(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)}<+{3|->id_register8|->BV8_TO_WORD8(nw8$0)})(3|->id_register8))(6) = 0) & address$0 = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(14|->id_register8)) & address$1 = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(14|->id_register8)) & ib$0 = WORD8_TO_BV8(mpmem$1(address$1))(0) & nw8$0 = BV8_SET_BIT(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(3|->id_register8)),6,ib$0));
  ("`Local hypotheses'" & address : WORD16 & address = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)}<+{3|->id_register8|->BV8_TO_WORD8(nw8$0)}<+{1|->id_register8|->1})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)}<+{3|->id_register8|->BV8_TO_WORD8(nw8$0)}<+{1|->id_register8|->1})(14|->id_register8)) & address$0 : WORD16 & ib : BIT & nw8 : BV8 & ib = WORD8_TO_BV8(mpmem$1(address$0))(1) & nw8 = BV8_SET_BIT(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(3|->id_register8)),6,ib) & INSTRUCTION_NEXT(14) = 15 & 11 = INSTRUCTION_NEXT(11) & not(INSTRUCTION_NEXT(INSTRUCTION_NEXT(7)) = 5) & 9 = INSTRUCTION_NEXT(INSTRUCTION_NEXT(7)) & address$1 : WORD16 & ib$0 : BIT & nw8$0 : BV8 & not(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(3|->id_register8))(6) = 0) & 4 = INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(0))))) & WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)}<+{3|->id_register8|->BV8_TO_WORD8(nw8$0)})(3|->id_register8))(6) = 0 & address$0 = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(14|->id_register8)) & address$1 = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(14|->id_register8)) & ib$0 = WORD8_TO_BV8(mpmem$1(address$1))(0) & nw8$0 = BV8_SET_BIT(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(3|->id_register8)),6,ib$0));
  ("`Local hypotheses'" & address : WORD16 & address = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)}<+{3|->id_register8|->BV8_TO_WORD8(nw8$0)}<+{1|->id_register8|->1})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)}<+{3|->id_register8|->BV8_TO_WORD8(nw8$0)}<+{1|->id_register8|->1})(14|->id_register8)) & address$0 : WORD16 & ib : BIT & nw8 : BV8 & ib = WORD8_TO_BV8(mpmem$1(address$0))(1) & nw8 = BV8_SET_BIT(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(3|->id_register8)),6,ib) & INSTRUCTION_NEXT(14) = 15 & 11 = INSTRUCTION_NEXT(11) & not(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(7))) = 5) & 9 = INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(7))) & address$1 : WORD16 & ib$0 : BIT & nw8$0 : BV8 & not(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(3|->id_register8))(6) = 0) & 4 = INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(0))))) & not(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)}<+{3|->id_register8|->BV8_TO_WORD8(nw8$0)})(3|->id_register8))(6) = 0) & address$0 = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(14|->id_register8)) & address$1 = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(14|->id_register8)) & ib$0 = WORD8_TO_BV8(mpmem$1(address$1))(0) & nw8$0 = BV8_SET_BIT(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(3|->id_register8)),6,ib$0));
  ("`Local hypotheses'" & address : WORD16 & address = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)}<+{1|->id_register8|->1})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)}<+{1|->id_register8|->1})(14|->id_register8)) & address$0 : WORD16 & ib : BIT & nw8 : BV8 & ib = WORD8_TO_BV8(mpmem$1(address$0))(1) & nw8 = BV8_SET_BIT(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(3|->id_register8)),6,ib) & INSTRUCTION_NEXT(14) = 15 & 11 = INSTRUCTION_NEXT(11) & not(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(0)))) = 5) & 9 = INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(0)))) & not(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(0)))) = 4) & WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(3|->id_register8))(6) = 0 & address$0 = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(14|->id_register8)));
  (not(btrue & mpstack$1<+{mpsp$1|->INSTRUCTION_NEXT(mppc$1)} : WORD16 +-> WORD16 & dom(mpstack$1<+{mpsp$1|->INSTRUCTION_NEXT(mppc$1)}) = WORD16 & mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{a|->1} : id_register8 +-> WORD8 & dom(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{a|->1}) = id_register8 & mpmem$1<+{address|->(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{a|->1})(a)} : WORD16 +-> WORD8 & dom(mpmem$1<+{address|->(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{a|->1})(a)}) = WORD16 & INSTRUCTION_NEXT(14) : WORD16 & mpsp$1+1 : WORD16 & mpix$1 : WORD16 & mpiy$1 : WORD16 & dom(mpstack$1<+{mpsp$1|->INSTRUCTION_NEXT(mppc$1)}) = WORD16 & ran(mpstack$1<+{mpsp$1|->INSTRUCTION_NEXT(mppc$1)}) : POW(WORD16) & ran(mpmem$1<+{address|->(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{a|->1})(a)}) : POW(WORD8) & dom(mpmem$1<+{address|->(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{a|->1})(a)}) = WORD16 & ran(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{a|->1}) : POW(WORD8) & dom(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{a|->1}) = id_register8 & INSTRUCTION_NEXT(0) = 1 & INSTRUCTION_NEXT(1) = 2 & INSTRUCTION_NEXT(2) = 3 & INSTRUCTION_NEXT(3) = 4 & INSTRUCTION_NEXT(4) = 5 & INSTRUCTION_NEXT(5) = 6 & INSTRUCTION_NEXT(6) = 7 & INSTRUCTION_NEXT(7) = 8 & INSTRUCTION_NEXT(8) = 9 & INSTRUCTION_NEXT(9) = 10 & !c.(c : COLOR => c = green or c = yellow or c = red) & NB_WORD8S = 256 & !n.(n : WORD8 => 0<=n) & !n.(n : WORD8 => n<=255) & WORD8_POSITION = BV8_INDEX & BIT_FLIP(0) = 1 & BIT_FLIP(1) = 0 & BIT_AND(0,0) = 0 & BIT_AND(0,1) = 0 & BIT_AND(1,0) = 0 & BIT_AND(1,1) = 1 & BIT_IOR(0,0) = 0 & BIT_IOR(0,1) = 0 & BIT_IOR(1,0) = 0 & BIT_IOR(1,1) = 1 & BIT_XOR(0,0) = 0 & BIT_XOR(0,1) = 1 & BIT_XOR(1,0) = 1 & BIT_XOR(1,1) = 0 & dom(add) = WORD8*WORD8 & ran(add) : POW(WORD8*BOOL*BOOL) & dom(substract) = WORD8*WORD8 & ran(substract) : POW(WORD8*BOOL*BOOL) & dom(and) = WORD8*WORD8 & ran(and) : POW(WORD8*BOOL) & dom(ior) = WORD8*WORD8 & ran(ior) : POW(WORD8*BOOL) & dom(xor) = WORD8*WORD8 & ran(xor) : POW(WORD8*BOOL) & dom(bitclear) = WORD8*WORD8_POSITION & ran(bitclear) : POW(WORD8) & dom(bitset) = WORD8*WORD8_POSITION & ran(bitset) : POW(WORD8) & dom(bitget) = WORD8*WORD8_POSITION & ran(bitget) : POW(BIT) & dom(complement) = WORD8 & ran(complement) : POW(WORD8) & dom(swap) = WORD8 & ran(swap) : POW(WORD8) & ran(rotateleft) : POW(WORD8*BOOL) & dom(rotateleft) = WORD8 & dom(rotateright) = WORD8 & ran(rotateright) : POW(WORD8*BOOL) & color_refine(green) = 0 & color_refine(yellow) = 1 & color_refine(red) = 2 & color_step(0) = 1 & color_step(1) = 2 & color_step(2) = 0 & btrue & !(counter$7777).(counter$7777 = color_step(counter) => not((mpmem$1<+{address|->(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{a|->1})(a)})(0) : 0..2 & (mpmem$1<+{address|->(mprgs8$1<+{h|->0}<+{l|->0}<+{f_|->BV8_TO_WORD8(nw8)}<+{a|->1})(a)})(0) = counter$7777 & btrue))));
  ("`Local hypotheses'" & address : WORD16 & address = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)}<+{1|->id_register8|->1})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)}<+{1|->id_register8|->1})(14|->id_register8)) & address$0 : WORD16 & ib : BIT & nw8 : BV8 & ib = WORD8_TO_BV8(mpmem$1(address$0))(1) & nw8 = BV8_SET_BIT(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(3|->id_register8)),6,ib) & INSTRUCTION_NEXT(14) = 15 & 11 = INSTRUCTION_NEXT(11) & not(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(0))))) = 5) & 9 = INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(0))))) & not(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(0))))) = 4) & not(WORD8_TO_BV8((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0}<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(3|->id_register8))(6) = 0) & address$0 = WORD8_TO_WORD16((mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(13|->id_register8),(mprgs8$1<+{13|->id_register8|->0}<+{14|->id_register8|->0})(14|->id_register8)))
END
&
THEORY Version IS
  POVersion(V3.8.3)(CLT == "V3.7.6")(local_op == OK)
END
