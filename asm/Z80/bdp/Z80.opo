THEORY OPOBalanceX IS
  Z80,120;
  AssertionLemmas,3;
  Initialisation,10;
  LD_r_r_,8;
  LD_r_n_,8;
  LD_r_HL,8;
  LD_r_9ix_d0,8;
  LD_HL_r,8;
  BIT_b_HL,8;
  JP_z_e,19;
  SET_b_HL,8;
  RES_b_HL,8;
  GOTO,10;
  CALL,7;
  RETURN,7
END
&
THEORY OPOProofList IS
  _f(1) & _f(2) & _f(3) & _f(30) & _f(73) & RETURN.7,(_of(35) => _of(36));
  _f(1) & _f(2) & _f(3) & _f(30) & _f(73) & RETURN.6,(_of(33) => _of(34));
  _f(1) & _f(2) & _f(3) & _f(30) & _f(73) & RETURN.5,(_of(29) => _of(22));
  _f(1) & _f(2) & _f(3) & _f(30) & _f(73) & RETURN.4,(_of(29) => _of(30));
  _f(1) & _f(2) & _f(3) & _f(30) & _f(73) & RETURN.3,(_of(45) => _of(20));
  _f(1) & _f(2) & _f(3) & _f(30) & _f(73) & RETURN.2,(_of(45) => _of(46));
  _f(1) & _f(2) & _f(3) & _f(30) & _f(73) & RETURN.1,(_of(25) => _of(26));
  _f(1) & _f(2) & _f(3) & _f(30) & _f(67) & CALL.7,(_of(35) => _of(36));
  _f(1) & _f(2) & _f(3) & _f(30) & _f(67) & CALL.6,(_of(33) => _of(34));
  _f(1) & _f(2) & _f(3) & _f(30) & _f(67) & CALL.5,(_of(29) => _of(22));
  _f(1) & _f(2) & _f(3) & _f(30) & _f(67) & CALL.4,(_of(29) => _of(30));
  _f(1) & _f(2) & _f(3) & _f(30) & _f(67) & CALL.3,(_of(45) => _of(20));
  _f(1) & _f(2) & _f(3) & _f(30) & _f(67) & CALL.2,(_of(45) => _of(46));
  _f(1) & _f(2) & _f(3) & _f(30) & _f(67) & CALL.1,(_of(25) => _of(26));
  _f(1) & _f(2) & _f(3) & _f(30) & _f(65) & GOTO.10,(_of(35) => _of(36));
  _f(1) & _f(2) & _f(3) & _f(30) & _f(65) & GOTO.9,(_of(33) => _of(34));
  _f(1) & _f(2) & _f(3) & _f(30) & _f(65) & GOTO.8,(_of(31) => _of(32));
  _f(1) & _f(2) & _f(3) & _f(30) & _f(65) & GOTO.7,(_of(29) => _of(22));
  _f(1) & _f(2) & _f(3) & _f(30) & _f(65) & GOTO.6,(_of(29) => _of(30));
  _f(1) & _f(2) & _f(3) & _f(30) & _f(65) & GOTO.5,(_of(45) => _of(20));
  _f(1) & _f(2) & _f(3) & _f(30) & _f(65) & GOTO.4,(_of(45) => _of(46));
  _f(1) & _f(2) & _f(3) & _f(30) & _f(65) & GOTO.3,(_of(27) => _of(24));
  _f(1) & _f(2) & _f(3) & _f(30) & _f(65) & GOTO.2,(_of(27) => _of(28));
  _f(1) & _f(2) & _f(3) & _f(30) & _f(65) & GOTO.1,(_of(25) => _of(26));
  _f(1) & _f(2) & _f(3) & _f(30) & _f(63) & RES_b_HL.8,(_f(64) & _of(35) => _of(36));
  _f(1) & _f(2) & _f(3) & _f(30) & _f(63) & RES_b_HL.7,(_f(64) & _of(33) => _of(34));
  _f(1) & _f(2) & _f(3) & _f(30) & _f(63) & RES_b_HL.6,(_f(64) & _of(31) => _of(32));
  _f(1) & _f(2) & _f(3) & _f(30) & _f(63) & RES_b_HL.5,(_of(51) & _of(45) => _of(20));
  _f(1) & _f(2) & _f(3) & _f(30) & _f(63) & RES_b_HL.4,(_of(51) & _of(45) => _of(46));
  _f(1) & _f(2) & _f(3) & _f(30) & _f(63) & RES_b_HL.3,(_of(51) & _of(27) => _of(24));
  _f(1) & _f(2) & _f(3) & _f(30) & _f(63) & RES_b_HL.2,(_of(51) & _of(27) => _of(28));
  _f(1) & _f(2) & _f(3) & _f(30) & _f(63) & RES_b_HL.1,(_of(25) => _of(26));
  _f(1) & _f(2) & _f(3) & _f(30) & _f(59) & SET_b_HL.8,(_f(60) & _of(35) => _of(36));
  _f(1) & _f(2) & _f(3) & _f(30) & _f(59) & SET_b_HL.7,(_f(60) & _of(33) => _of(34));
  _f(1) & _f(2) & _f(3) & _f(30) & _f(59) & SET_b_HL.6,(_f(60) & _of(31) => _of(32));
  _f(1) & _f(2) & _f(3) & _f(30) & _f(59) & SET_b_HL.5,(_of(50) & _of(45) => _of(20));
  _f(1) & _f(2) & _f(3) & _f(30) & _f(59) & SET_b_HL.4,(_of(50) & _of(45) => _of(46));
  _f(1) & _f(2) & _f(3) & _f(30) & _f(59) & SET_b_HL.3,(_of(50) & _of(27) => _of(24));
  _f(1) & _f(2) & _f(3) & _f(30) & _f(59) & SET_b_HL.2,(_of(50) & _of(27) => _of(28));
  _f(1) & _f(2) & _f(3) & _f(30) & _f(59) & SET_b_HL.1,(_of(25) => _of(26));
  _f(1) & _f(2) & _f(3) & _f(30) & JP_z_e.19,(_f(57) & _of(35) => _of(36));
  _f(1) & _f(2) & _f(3) & _f(30) & JP_z_e.18,(_f(57) & _of(33) => _of(34));
  _f(1) & _f(2) & _f(3) & _f(30) & JP_z_e.17,(_f(57) & _of(31) => _of(32));
  _f(1) & _f(2) & _f(3) & _f(30) & JP_z_e.16,(_of(49) & _of(29) => _of(22));
  _f(1) & _f(2) & _f(3) & _f(30) & JP_z_e.15,(_of(49) & _of(29) => _of(30));
  _f(1) & _f(2) & _f(3) & _f(30) & JP_z_e.14,(_of(49) & _of(45) => _of(20));
  _f(1) & _f(2) & _f(3) & _f(30) & JP_z_e.13,(_of(49) & _of(45) => _of(46));
  _f(1) & _f(2) & _f(3) & _f(30) & JP_z_e.12,(_of(49) & _of(27) => _of(24));
  _f(1) & _f(2) & _f(3) & _f(30) & JP_z_e.11,(_of(49) & _of(27) => _of(28));
  _f(1) & _f(2) & _f(3) & _f(30) & JP_z_e.10,(_f(56) & _of(35) => _of(36));
  _f(1) & _f(2) & _f(3) & _f(30) & JP_z_e.9,(_f(56) & _of(33) => _of(34));
  _f(1) & _f(2) & _f(3) & _f(30) & JP_z_e.8,(_f(56) & _of(31) => _of(32));
  _f(1) & _f(2) & _f(3) & _f(30) & JP_z_e.7,(_of(48) & _of(29) => _of(22));
  _f(1) & _f(2) & _f(3) & _f(30) & JP_z_e.6,(_of(48) & _of(29) => _of(30));
  _f(1) & _f(2) & _f(3) & _f(30) & JP_z_e.5,(_of(48) & _of(45) => _of(20));
  _f(1) & _f(2) & _f(3) & _f(30) & JP_z_e.4,(_of(48) & _of(45) => _of(46));
  _f(1) & _f(2) & _f(3) & _f(30) & JP_z_e.3,(_of(48) & _of(27) => _of(24));
  _f(1) & _f(2) & _f(3) & _f(30) & JP_z_e.2,(_of(48) & _of(27) => _of(28));
  _f(1) & _f(2) & _f(3) & _f(30) & JP_z_e.1,(_of(25) => _of(26));
  _f(1) & _f(2) & _f(3) & _f(30) & _f(52) & BIT_b_HL.8,(_f(53) & _of(35) => _of(36));
  _f(1) & _f(2) & _f(3) & _f(30) & _f(52) & BIT_b_HL.7,(_f(53) & _of(33) => _of(34));
  _f(1) & _f(2) & _f(3) & _f(30) & _f(52) & BIT_b_HL.6,(_f(53) & _of(31) => _of(32));
  _f(1) & _f(2) & _f(3) & _f(30) & _f(52) & BIT_b_HL.5,(_f(53) & _of(29) => _of(22));
  _f(1) & _f(2) & _f(3) & _f(30) & _f(52) & BIT_b_HL.4,(_f(53) & _of(29) => _of(30));
  _f(1) & _f(2) & _f(3) & _f(30) & _f(52) & BIT_b_HL.3,(_of(47) & _of(27) => _of(24));
  _f(1) & _f(2) & _f(3) & _f(30) & _f(52) & BIT_b_HL.2,(_of(47) & _of(27) => _of(28));
  _f(1) & _f(2) & _f(3) & _f(30) & _f(52) & BIT_b_HL.1,(_of(25) => _of(26));
  _f(1) & _f(2) & _f(3) & _f(30) & _f(48) & LD_HL_r.8,(_f(41) & _of(35) => _of(36));
  _f(1) & _f(2) & _f(3) & _f(30) & _f(48) & LD_HL_r.7,(_f(41) & _of(33) => _of(34));
  _f(1) & _f(2) & _f(3) & _f(30) & _f(48) & LD_HL_r.6,(_f(41) & _of(31) => _of(32));
  _f(1) & _f(2) & _f(3) & _f(30) & _f(48) & LD_HL_r.5,(_f(41) & _of(45) => _of(20));
  _f(1) & _f(2) & _f(3) & _f(30) & _f(48) & LD_HL_r.4,(_f(41) & _of(45) => _of(46));
  _f(1) & _f(2) & _f(3) & _f(30) & _f(48) & LD_HL_r.3,(_f(41) & _of(27) => _of(24));
  _f(1) & _f(2) & _f(3) & _f(30) & _f(48) & LD_HL_r.2,(_f(41) & _of(27) => _of(28));
  _f(1) & _f(2) & _f(3) & _f(30) & _f(48) & LD_HL_r.1,(_of(25) => _of(26));
  _f(1) & _f(2) & _f(3) & _f(30) & _f(44) & LD_r_9ix_d0.8,(_f(45) & _of(44) => _of(36));
  _f(1) & _f(2) & _f(3) & _f(30) & _f(44) & LD_r_9ix_d0.7,(_f(45) & _of(43) => _of(34));
  _f(1) & _f(2) & _f(3) & _f(30) & _f(44) & LD_r_9ix_d0.6,(_f(45) & _of(42) => _of(32));
  _f(1) & _f(2) & _f(3) & _f(30) & _f(44) & LD_r_9ix_d0.5,(_f(45) & _of(41) => _of(22));
  _f(1) & _f(2) & _f(3) & _f(30) & _f(44) & LD_r_9ix_d0.4,(_f(45) & _of(41) => _of(30));
  _f(1) & _f(2) & _f(3) & _f(30) & _f(44) & LD_r_9ix_d0.3,(_of(39) & _of(40) => _of(24));
  _f(1) & _f(2) & _f(3) & _f(30) & _f(44) & LD_r_9ix_d0.2,(_of(39) & _of(40) => _of(28));
  _f(1) & _f(2) & _f(3) & _f(30) & _f(44) & LD_r_9ix_d0.1,(_of(38) => _of(26));
  _f(1) & _f(2) & _f(3) & _f(30) & _f(40) & LD_r_HL.8,(_f(41) & _of(35) => _of(36));
  _f(1) & _f(2) & _f(3) & _f(30) & _f(40) & LD_r_HL.7,(_f(41) & _of(33) => _of(34));
  _f(1) & _f(2) & _f(3) & _f(30) & _f(40) & LD_r_HL.6,(_f(41) & _of(31) => _of(32));
  _f(1) & _f(2) & _f(3) & _f(30) & _f(40) & LD_r_HL.5,(_f(41) & _of(29) => _of(22));
  _f(1) & _f(2) & _f(3) & _f(30) & _f(40) & LD_r_HL.4,(_f(41) & _of(29) => _of(30));
  _f(1) & _f(2) & _f(3) & _f(30) & _f(40) & LD_r_HL.3,(_of(37) & _of(27) => _of(24));
  _f(1) & _f(2) & _f(3) & _f(30) & _f(40) & LD_r_HL.2,(_of(37) & _of(27) => _of(28));
  _f(1) & _f(2) & _f(3) & _f(30) & _f(40) & LD_r_HL.1,(_of(25) => _of(26));
  _f(1) & _f(2) & _f(3) & _f(30) & _f(37) & LD_r_n_.8,(_of(35) => _of(36));
  _f(1) & _f(2) & _f(3) & _f(30) & _f(37) & LD_r_n_.7,(_of(33) => _of(34));
  _f(1) & _f(2) & _f(3) & _f(30) & _f(37) & LD_r_n_.6,(_of(31) => _of(32));
  _f(1) & _f(2) & _f(3) & _f(30) & _f(37) & LD_r_n_.5,(_of(29) => _of(22));
  _f(1) & _f(2) & _f(3) & _f(30) & _f(37) & LD_r_n_.4,(_of(29) => _of(30));
  _f(1) & _f(2) & _f(3) & _f(30) & _f(37) & LD_r_n_.3,(_of(27) => _of(24));
  _f(1) & _f(2) & _f(3) & _f(30) & _f(37) & LD_r_n_.2,(_of(27) => _of(28));
  _f(1) & _f(2) & _f(3) & _f(30) & _f(37) & LD_r_n_.1,(_of(25) => _of(26));
  _f(1) & _f(2) & _f(3) & _f(30) & _f(31) & LD_r_r_.8,(_of(35) => _of(36));
  _f(1) & _f(2) & _f(3) & _f(30) & _f(31) & LD_r_r_.7,(_of(33) => _of(34));
  _f(1) & _f(2) & _f(3) & _f(30) & _f(31) & LD_r_r_.6,(_of(31) => _of(32));
  _f(1) & _f(2) & _f(3) & _f(30) & _f(31) & LD_r_r_.5,(_of(29) => _of(22));
  _f(1) & _f(2) & _f(3) & _f(30) & _f(31) & LD_r_r_.4,(_of(29) => _of(30));
  _f(1) & _f(2) & _f(3) & _f(30) & _f(31) & LD_r_r_.3,(_of(27) => _of(24));
  _f(1) & _f(2) & _f(3) & _f(30) & _f(31) & LD_r_r_.2,(_of(27) => _of(28));
  _f(1) & _f(2) & _f(3) & _f(30) & _f(31) & LD_r_r_.1,(_of(25) => _of(26));
  _f(1) & _f(2) & _f(3) & AssertionLemmas.3,(_of(23) => _of(24));
  _f(1) & _f(2) & _f(3) & AssertionLemmas.2,(_of(21) => _of(22));
  _f(1) & _f(2) & _f(3) & AssertionLemmas.1,(_of(19) => _of(20));
  _f(1) & _f(2) & Initialisation.10,(_of(1) & _of(17) => _of(18));
  _f(1) & _f(2) & Initialisation.9,(_of(1) & _of(15) => _of(16));
  _f(1) & _f(2) & Initialisation.8,(_of(1) & _of(13) => _of(14));
  _f(1) & _f(2) & Initialisation.7,(_of(1) & _of(11) => _of(12));
  _f(1) & _f(2) & Initialisation.6,(_of(1) & _of(8) => _of(10));
  _f(1) & _f(2) & Initialisation.5,(_of(1) & _of(8) => _of(9));
  _f(1) & _f(2) & Initialisation.4,(_of(1) & _of(5) => _of(7));
  _f(1) & _f(2) & Initialisation.3,(_of(1) & _of(5) => _of(6));
  _f(1) & _f(2) & Initialisation.2,(_of(1) & _of(2) => _of(4));
  _f(1) & _f(2) & Initialisation.1,(_of(1) & _of(2) => _of(3))
END
&
THEORY OPOFormulas IS
  ("`Local hypotheses'" & iy$0 : WORD16 & stack$0 : WORD16 +-> WORD8 & dom(stack$0) = WORD16 & ix$0 : WORD16 & sp$0 : WORD16 & pc$0 : WORD16 & mem$0 : WORD16 +-> WORD8 & dom(mem$0) = WORD16 & rgs8$0 : (1..18)*{id_register8} +-> WORD8 & dom(rgs8$0) = (1..18)*{id_register8} & ran(rgs8$0) = WORD8);
  "`Check that the invariant (stack : WORD16 --> WORD8) is established by the initialisation - ref 3.3'";
  (stack$0 : WORD16 +-> WORD8);
  (dom(stack$0) = WORD16);
  "`Check that the invariant (rgs8 : id_register8 --> WORD8) is established by the initialisation - ref 3.3'";
  (rgs8$0 : id_register8 +-> WORD8);
  (dom(rgs8$0) = id_register8);
  "`Check that the invariant (mem : WORD16 --> WORD8) is established by the initialisation - ref 3.3'";
  (mem$0 : WORD16 +-> WORD8);
  (dom(mem$0) = WORD16);
  "`Check that the invariant (pc : WORD16) is established by the initialisation - ref 3.3'";
  (pc$0 : WORD16);
  "`Check that the invariant (sp : WORD16) is established by the initialisation - ref 3.3'";
  (sp$0 : WORD16);
  "`Check that the invariant (ix : WORD16) is established by the initialisation - ref 3.3'";
  (ix$0 : WORD16);
  "`Check that the invariant (iy : WORD16) is established by the initialisation - ref 3.3'";
  (iy$0 : WORD16);
  "`Check assertion (dom(rgs8) = id_register8) deduction - ref 3.2, 4.2, 5.3'";
  (dom(rgs8) = id_register8);
  "`Check assertion (dom(mem) = WORD16) deduction - ref 3.2, 4.2, 5.3'";
  (dom(mem) = WORD16);
  "`Check assertion (dom(stack) = WORD16) deduction - ref 3.2, 4.2, 5.3'";
  (dom(stack) = WORD16);
  "`Check preconditions of called operation, or While loop construction, or Assert predicates'";
  (btrue);
  "`Check that the invariant (stack : WORD16 --> WORD8) is preserved by the operation - ref 3.4'";
  (stack : WORD16 +-> WORD8);
  "`Check that the invariant (mem : WORD16 --> WORD8) is preserved by the operation - ref 3.4'";
  (mem : WORD16 +-> WORD8);
  "`Check that the invariant (sp : WORD16) is preserved by the operation - ref 3.4'";
  (sp : WORD16);
  "`Check that the invariant (ix : WORD16) is preserved by the operation - ref 3.4'";
  (ix : WORD16);
  "`Check that the invariant (iy : WORD16) is preserved by the operation - ref 3.4'";
  (iy : WORD16);
  ("`Local hypotheses'" & address : WORD16 & address = WORD8_TO_WORD16(rgs8(13|->id_register8),rgs8(14|->id_register8)));
  "`Check preconditions of called operation, or While loop construction, or Assert predicates'";
  ("`Local hypotheses'" & address : WORD16 & iszero : BOOL & overflow : BOOL & address,iszero,overflow = add16(ix,WORD8_TO_WORD16(0,dd)));
  "`Check that the invariant (stack : WORD16 --> WORD8) is preserved by the operation - ref 3.4'";
  "`Check that the invariant (mem : WORD16 --> WORD8) is preserved by the operation - ref 3.4'";
  "`Check that the invariant (sp : WORD16) is preserved by the operation - ref 3.4'";
  "`Check that the invariant (ix : WORD16) is preserved by the operation - ref 3.4'";
  "`Check that the invariant (iy : WORD16) is preserved by the operation - ref 3.4'";
  "`Check that the invariant (rgs8 : id_register8 --> WORD8) is preserved by the operation - ref 3.4'";
  (rgs8 : id_register8 +-> WORD8);
  ("`Local hypotheses'" & address : WORD16 & ib : BIT & nw8 : BV8 & address = WORD8_TO_WORD16(rgs8(13|->id_register8),rgs8(14|->id_register8)) & ib = WORD8_TO_BV8(mem(address))(bb) & nw8 = BV8_SET_BIT(WORD8_TO_BV8(rgs8(3|->id_register8)),6,ib));
  ("`Local hypotheses'" & WORD8_TO_BV8(rgs8(3|->id_register8))(6) = 0);
  ("`Local hypotheses'" & not(WORD8_TO_BV8(rgs8(3|->id_register8))(6) = 0));
  ("`Local hypotheses'" & address : WORD16 & nw8 : BV8 & address = WORD8_TO_WORD16(rgs8(13|->id_register8),rgs8(14|->id_register8)) & nw8 = BV8_SET_BIT(WORD8_TO_BV8(mem(address)),bb,1));
  ("`Local hypotheses'" & address : WORD16 & nw8 : BV8 & address = WORD8_TO_WORD16(rgs8(13|->id_register8),rgs8(14|->id_register8)) & nw8 = BV8_SET_BIT(WORD8_TO_BV8(mem(address)),bb,0))
END
&
THEORY Version IS
  POVersion(V3.8.3)(CLT == "V3.7.6")(local_op == OK)
END
