MACHINE
   TYPES

INCLUDES
   TYPE_BIT,
   TYPE_BV8,
   TYPE_BV16

CONSTANTS

   WORD8,
   WORD8_LENGTH,
   WORD8_POSITION,
   NB_WORD8S,
   BV8_TO_WORD8,
   WORD8_TO_BV8,

   WORD16,
   WORD16_LENGTH,
   WORD16_POSITION,
   NB_WORD16S,
   BV16_TO_WORD16,
   WORD16_TO_BV16,

   INST_SZ,
   INSTRUCTION,
   NB_INSTRUCTIONS,
   INSTRUCTION_MAX,
   INSTRUCTION_NEXT,

   BV8_TO_BV16,
   WORD8_TO_WORD16,
   WORD16_TO_WORD8

PROPERTIES

   WORD16_LENGTH : NATURAL & 
   WORD16_LENGTH = 16 &
   NB_WORD16S : NATURAL &
   NB_WORD16S = 2 ** WORD16_LENGTH &
   WORD16 = 0..(NB_WORD16S-1) &
   WORD16_POSITION = 0..(WORD16_LENGTH-1) &

   WORD8_LENGTH : NATURAL &
   WORD8_LENGTH = 8 &
   NB_WORD8S : NATURAL &
   NB_WORD8S = 2**WORD8_LENGTH &
   WORD8 = 0..(NB_WORD8S-1) &
   WORD8_POSITION = 0..(WORD8_LENGTH-1) &

   NB_INSTRUCTIONS : NATURAL &
   INST_SZ : NATURAL &
   NB_INSTRUCTIONS = 2**INST_SZ &
   INSTRUCTION_MAX = NB_INSTRUCTIONS - 1 &
   INSTRUCTION = 0..INSTRUCTION_MAX &
   INSTRUCTION_NEXT : INSTRUCTION --> INSTRUCTION &
   INSTRUCTION_NEXT = {p, q | p : INSTRUCTION & q : INSTRUCTION & 0 <= p & p < NB_INSTRUCTIONS-1 & q = p+1} \/ { NB_INSTRUCTIONS-1 |-> 0 } &

   BV8_TO_WORD8 : BV8 --> WORD8 &
   BV8_TO_WORD8 = %(v).(v : BV8 | 128*v(7)+64*v(6)+32*v(5)+16*v(4)+8*v(3)+4*v(2)+2*v(1)+v(0))  &
   WORD8_TO_BV8 : WORD8 --> BV8 &
   WORD8_TO_BV8 = BV8_TO_WORD8~ &

   BV16_TO_WORD16 : BV16 --> WORD16 &
   BV16_TO_WORD16 = 
	% (v) . (v : BV16 | 
		32768*v(15)+16384*v(14)+8192*v(13)+4096*v(12)+2048*v(11)+1024*v(10)+512*v(9)+256*v(8)+
		128*v(7)+64*v(6)+32*v(5)+16*v(4)+8*v(3)+4*v(2)+2*v(1)+v(0))  &
   WORD16_TO_BV16 : WORD16 --> BV16 &
   WORD16_TO_BV16 = BV16_TO_WORD16~ &

	BV8_TO_BV16 : (BV8 * BV8) --> BV16 &
	BV8_TO_BV16 = 
	% (v1, v2) . (v1 : BV8 & v2 : BV8 | 
		{ 0 |-> v1(0), 1 |-> v1(1), 2 |-> v1(2), 3 |-> v1(3), 4 |-> v1(4), 5 |-> v1(5), 6 |-> v1(6), 7 |-> v1(7),
		  8 |-> v2(0), 9 |-> v2(1),10 |-> v2(2),11 |-> v2(3),12 |-> v2(4),13 |-> v2(5),14 |-> v2(6),15 |-> v2(7)}) &
	WORD8_TO_WORD16 : WORD8 * WORD8 --> WORD16 &
	WORD8_TO_WORD16 = % (w1, w2). (w1 : WORD8 & w2 : WORD8 |
		BV16_TO_WORD16(BV8_TO_BV16(WORD8_TO_BV8(w1), WORD8_TO_BV8(w2)))) &

	WORD16_TO_WORD8 : WORD16 --> WORD8 * WORD8 &
	WORD16_TO_WORD8 = WORD8_TO_WORD16~
	


ASSERTIONS
   NB_WORD8S = 256 &
   ! (n). (n : WORD8 => 0 <= n) &
   ! (n). (n : WORD8 => n <= 255) &
   WORD8_POSITION = BV8_INDEX 

END

