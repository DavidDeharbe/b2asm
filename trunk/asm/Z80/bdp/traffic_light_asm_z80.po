THEORY ProofList IS
  _f(2) & _f(3) & _f(12) & _f(21) & advance.560,(_f(318) & _f(319) => _f(320));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.559,(_f(316) & _f(22) => _f(317));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.558,(_f(314) & _f(22) => _f(315));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.557,(_f(313) & _f(22) => _f(303));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.556,(_f(313) & _f(22) => _f(296));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.555,(_f(312) & _f(22) => _f(136));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.554,(_f(312) & _f(22) => _f(307));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.553,(_f(312) & _f(22) => _f(296));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.552,(_f(311) & _f(22) => _f(146));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.551,(_f(311) & _f(22) => _f(133));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.550,(_f(311) & _f(22) => _f(307));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.549,(_f(311) & _f(22) => _f(296));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.548,(_f(310) & _f(22) => _f(133));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.547,(_f(310) & _f(22) => _f(307));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.546,(_f(310) & _f(22) => _f(296));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.545,(_f(309) & _f(22) => _f(136));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.544,(_f(309) & _f(22) => _f(307));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.543,(_f(309) & _f(22) => _f(296));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.542,(_f(308) & _f(22) => _f(133));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.541,(_f(308) & _f(22) => _f(307));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.540,(_f(308) & _f(22) => _f(296));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.539,(_f(306) & _f(22) => _f(307));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.538,(_f(306) & _f(22) => _f(296));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.537,(_f(305) & _f(22) => _f(133));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.536,(_f(305) & _f(22) => _f(300));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.535,(_f(305) & _f(22) => _f(296));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.534,(_f(304) & _f(22) => _f(138));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.533,(_f(304) & _f(22) => _f(136));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.532,(_f(304) & _f(22) => _f(300));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.531,(_f(304) & _f(22) => _f(296));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.530,(_f(302) & _f(22) => _f(136));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.529,(_f(302) & _f(22) => _f(303));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.528,(_f(302) & _f(22) => _f(296));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.527,(_f(301) & _f(22) => _f(133));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.526,(_f(301) & _f(22) => _f(300));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.525,(_f(301) & _f(22) => _f(296));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.524,(_f(299) & _f(22) => _f(300));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.523,(_f(299) & _f(22) => _f(296));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.522,(_f(298) & _f(22) => _f(296));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.521,(_f(297) & _f(22) => _f(296));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.520,(_f(295) & _f(22) => _f(296));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.519,(_f(293) & _f(22) => _f(294));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.518,(_f(293) & _f(22) => _f(50));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.517,(_f(293) & _f(22) => _f(49));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.516,(_f(293) & _f(22) => _f(48));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.515,(_f(292) & _f(22) => _f(77));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.514,(_f(289) & _f(22) => _f(291));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.513,(_f(289) & _f(22) => _f(290));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.512,(_f(289) & _f(22) => _f(276));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.511,(_f(289) & _f(22) => _f(270));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.510,(_f(289) & _f(22) => _f(268));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.509,(_f(288) & _f(22) => _f(277));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.508,(_f(288) & _f(22) => _f(282));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.507,(_f(288) & _f(22) => _f(270));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.506,(_f(288) & _f(22) => _f(268));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.505,(_f(286) & _f(22) => _f(287));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.504,(_f(286) & _f(22) => _f(274));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.503,(_f(286) & _f(22) => _f(282));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.502,(_f(286) & _f(22) => _f(270));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.501,(_f(286) & _f(22) => _f(268));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.500,(_f(285) & _f(22) => _f(274));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.499,(_f(285) & _f(22) => _f(282));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.498,(_f(285) & _f(22) => _f(270));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.497,(_f(285) & _f(22) => _f(268));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.496,(_f(284) & _f(22) => _f(277));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.495,(_f(284) & _f(22) => _f(282));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.494,(_f(284) & _f(22) => _f(270));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.493,(_f(284) & _f(22) => _f(268));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.492,(_f(283) & _f(22) => _f(274));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.491,(_f(283) & _f(22) => _f(282));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.490,(_f(283) & _f(22) => _f(270));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.489,(_f(283) & _f(22) => _f(268));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.488,(_f(281) & _f(22) => _f(282));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.487,(_f(281) & _f(22) => _f(270));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.486,(_f(281) & _f(22) => _f(268));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.485,(_f(280) & _f(22) => _f(274));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.484,(_f(280) & _f(22) => _f(272));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.483,(_f(280) & _f(22) => _f(270));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.482,(_f(280) & _f(22) => _f(268));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.481,(_f(278) & _f(22) => _f(279));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.480,(_f(278) & _f(22) => _f(277));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.479,(_f(278) & _f(22) => _f(272));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.478,(_f(278) & _f(22) => _f(270));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.477,(_f(278) & _f(22) => _f(268));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.476,(_f(275) & _f(22) => _f(277));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.475,(_f(275) & _f(22) => _f(276));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.474,(_f(275) & _f(22) => _f(270));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.473,(_f(275) & _f(22) => _f(268));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.472,(_f(273) & _f(22) => _f(274));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.471,(_f(273) & _f(22) => _f(272));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.470,(_f(273) & _f(22) => _f(270));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.469,(_f(273) & _f(22) => _f(268));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.468,(_f(271) & _f(22) => _f(272));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.467,(_f(271) & _f(22) => _f(270));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.466,(_f(271) & _f(22) => _f(268));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.465,(_f(269) & _f(22) => _f(270));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.464,(_f(269) & _f(22) => _f(268));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.463,(_f(267) & _f(22) => _f(268));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.462,(_f(46) & _f(22) => _f(50));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.461,(_f(46) & _f(22) => _f(49));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.460,(_f(46) & _f(22) => _f(48));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.459,(_f(45) & _f(22) => _f(150));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.458,(_f(45) & _f(22) => _f(149));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.457,(_f(45) & _f(22) => _f(135));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.456,(_f(45) & _f(22) => _f(195));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.455,(_f(266) & _f(22) => _f(77));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.454,(_f(263) & _f(22) => _f(265));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.453,(_f(263) & _f(22) => _f(264));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.452,(_f(263) & _f(22) => _f(250));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.451,(_f(263) & _f(22) => _f(244));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.450,(_f(263) & _f(22) => _f(242));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.449,(_f(262) & _f(22) => _f(251));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.448,(_f(262) & _f(22) => _f(256));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.447,(_f(262) & _f(22) => _f(244));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.446,(_f(262) & _f(22) => _f(242));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.445,(_f(260) & _f(22) => _f(261));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.444,(_f(260) & _f(22) => _f(248));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.443,(_f(260) & _f(22) => _f(256));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.442,(_f(260) & _f(22) => _f(244));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.441,(_f(260) & _f(22) => _f(242));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.440,(_f(259) & _f(22) => _f(248));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.439,(_f(259) & _f(22) => _f(256));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.438,(_f(259) & _f(22) => _f(244));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.437,(_f(259) & _f(22) => _f(242));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.436,(_f(258) & _f(22) => _f(251));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.435,(_f(258) & _f(22) => _f(256));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.434,(_f(258) & _f(22) => _f(244));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.433,(_f(258) & _f(22) => _f(242));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.432,(_f(257) & _f(22) => _f(248));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.431,(_f(257) & _f(22) => _f(256));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.430,(_f(257) & _f(22) => _f(244));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.429,(_f(257) & _f(22) => _f(242));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.428,(_f(255) & _f(22) => _f(256));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.427,(_f(255) & _f(22) => _f(244));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.426,(_f(255) & _f(22) => _f(242));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.425,(_f(254) & _f(22) => _f(248));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.424,(_f(254) & _f(22) => _f(246));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.423,(_f(254) & _f(22) => _f(244));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.422,(_f(254) & _f(22) => _f(242));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.421,(_f(252) & _f(22) => _f(253));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.420,(_f(252) & _f(22) => _f(251));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.419,(_f(252) & _f(22) => _f(246));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.418,(_f(252) & _f(22) => _f(244));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.417,(_f(252) & _f(22) => _f(242));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.416,(_f(249) & _f(22) => _f(251));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.415,(_f(249) & _f(22) => _f(250));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.414,(_f(249) & _f(22) => _f(244));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.413,(_f(249) & _f(22) => _f(242));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.412,(_f(247) & _f(22) => _f(248));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.411,(_f(247) & _f(22) => _f(246));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.410,(_f(247) & _f(22) => _f(244));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.409,(_f(247) & _f(22) => _f(242));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.408,(_f(245) & _f(22) => _f(246));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.407,(_f(245) & _f(22) => _f(244));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.406,(_f(245) & _f(22) => _f(242));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.405,(_f(243) & _f(22) => _f(244));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.404,(_f(243) & _f(22) => _f(242));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.403,(_f(241) & _f(22) => _f(242));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.402,(_f(43) & _f(22) => _f(50));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.401,(_f(43) & _f(22) => _f(49));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.400,(_f(43) & _f(22) => _f(48));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.399,(_f(41) & _f(22) => _f(240));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.398,(_f(39) & _f(22) => _f(239));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.397,(_f(238) & _f(22) => _f(77));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.396,(_f(237) & _f(22) => _f(150));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.395,(_f(237) & _f(22) => _f(149));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.394,(_f(237) & _f(22) => _f(135));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.393,(_f(236) & _f(22) => _f(136));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.392,(_f(235) & _f(22) => _f(146));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.391,(_f(235) & _f(22) => _f(133));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.390,(_f(234) & _f(22) => _f(133));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.389,(_f(233) & _f(22) => _f(136));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.388,(_f(232) & _f(22) => _f(133));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.387,(_f(231) & _f(22) => _f(133));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.386,(_f(231) & _f(22) => _f(214));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.385,(_f(230) & _f(22) => _f(138));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.384,(_f(230) & _f(22) => _f(136));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.383,(_f(230) & _f(22) => _f(214));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.382,(_f(229) & _f(22) => _f(136));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.381,(_f(229) & _f(22) => _f(135));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.380,(_f(228) & _f(22) => _f(133));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.379,(_f(228) & _f(22) => _f(214));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.378,(_f(227) & _f(22) => _f(214));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.377,(_f(226) & _f(22) => _f(155));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.376,(_f(226) & _f(22) => _f(154));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.375,(_f(226) & _f(22) => _f(153));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.374,(_f(225) & _f(22) => _f(77));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.373,(_f(224) & _f(22) => _f(150));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.372,(_f(224) & _f(22) => _f(149));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.371,(_f(224) & _f(22) => _f(135));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.370,(_f(223) & _f(22) => _f(136));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.369,(_f(222) & _f(22) => _f(146));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.368,(_f(222) & _f(22) => _f(133));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.367,(_f(221) & _f(22) => _f(133));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.366,(_f(220) & _f(22) => _f(136));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.365,(_f(219) & _f(22) => _f(133));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.364,(_f(218) & _f(22) => _f(133));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.363,(_f(218) & _f(22) => _f(214));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.362,(_f(217) & _f(22) => _f(138));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.361,(_f(217) & _f(22) => _f(136));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.360,(_f(217) & _f(22) => _f(214));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.359,(_f(216) & _f(22) => _f(136));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.358,(_f(216) & _f(22) => _f(135));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.357,(_f(215) & _f(22) => _f(133));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.356,(_f(215) & _f(22) => _f(214));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.355,(_f(213) & _f(22) => _f(214));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.354,(_f(212) & _f(22) => _f(50));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.353,(_f(212) & _f(22) => _f(49));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.352,(_f(212) & _f(22) => _f(48));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.351,(_f(211) & _f(22) => _f(77));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.350,(_f(210) & _f(22) => _f(129));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.349,(_f(210) & _f(22) => _f(128));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.348,(_f(210) & _f(22) => _f(114));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.347,(_f(210) & _f(22) => _f(108));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.346,(_f(210) & _f(22) => _f(106));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.345,(_f(209) & _f(22) => _f(115));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.344,(_f(209) & _f(22) => _f(120));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.343,(_f(209) & _f(22) => _f(108));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.342,(_f(209) & _f(22) => _f(106));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.341,(_f(208) & _f(22) => _f(125));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.340,(_f(208) & _f(22) => _f(112));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.339,(_f(208) & _f(22) => _f(120));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.338,(_f(208) & _f(22) => _f(108));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.337,(_f(208) & _f(22) => _f(106));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.336,(_f(207) & _f(22) => _f(112));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.335,(_f(207) & _f(22) => _f(120));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.334,(_f(207) & _f(22) => _f(108));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.333,(_f(207) & _f(22) => _f(106));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.332,(_f(206) & _f(22) => _f(115));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.331,(_f(206) & _f(22) => _f(120));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.330,(_f(206) & _f(22) => _f(108));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.329,(_f(206) & _f(22) => _f(106));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.328,(_f(205) & _f(22) => _f(112));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.327,(_f(205) & _f(22) => _f(120));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.326,(_f(205) & _f(22) => _f(108));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.325,(_f(205) & _f(22) => _f(106));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.324,(_f(204) & _f(22) => _f(120));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.323,(_f(204) & _f(22) => _f(108));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.322,(_f(204) & _f(22) => _f(106));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.321,(_f(203) & _f(22) => _f(112));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.320,(_f(203) & _f(22) => _f(110));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.319,(_f(203) & _f(22) => _f(108));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.318,(_f(203) & _f(22) => _f(106));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.317,(_f(202) & _f(22) => _f(117));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.316,(_f(202) & _f(22) => _f(115));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.315,(_f(202) & _f(22) => _f(110));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.314,(_f(202) & _f(22) => _f(108));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.313,(_f(202) & _f(22) => _f(106));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.312,(_f(201) & _f(22) => _f(115));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.311,(_f(201) & _f(22) => _f(114));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.310,(_f(201) & _f(22) => _f(108));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.309,(_f(201) & _f(22) => _f(106));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.308,(_f(200) & _f(22) => _f(112));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.307,(_f(200) & _f(22) => _f(110));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.306,(_f(200) & _f(22) => _f(108));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.305,(_f(200) & _f(22) => _f(106));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.304,(_f(199) & _f(22) => _f(110));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.303,(_f(199) & _f(22) => _f(108));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.302,(_f(199) & _f(22) => _f(106));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.301,(_f(198) & _f(22) => _f(108));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.300,(_f(198) & _f(22) => _f(106));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.299,(_f(197) & _f(22) => _f(106));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.298,(_f(196) & _f(22) => _f(50));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.297,(_f(196) & _f(22) => _f(49));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.296,(_f(196) & _f(22) => _f(48));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.295,(_f(35) & _f(22) => _f(150));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.294,(_f(35) & _f(22) => _f(149));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.293,(_f(35) & _f(22) => _f(135));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.292,(_f(35) & _f(22) => _f(195));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.291,(_f(194) & _f(22) => _f(77));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.290,(_f(191) & _f(22) => _f(193));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.289,(_f(191) & _f(22) => _f(192));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.288,(_f(191) & _f(22) => _f(178));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.287,(_f(191) & _f(22) => _f(172));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.286,(_f(191) & _f(22) => _f(170));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.285,(_f(190) & _f(22) => _f(179));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.284,(_f(190) & _f(22) => _f(184));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.283,(_f(190) & _f(22) => _f(172));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.282,(_f(190) & _f(22) => _f(170));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.281,(_f(188) & _f(22) => _f(189));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.280,(_f(188) & _f(22) => _f(176));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.279,(_f(188) & _f(22) => _f(184));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.278,(_f(188) & _f(22) => _f(172));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.277,(_f(188) & _f(22) => _f(170));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.276,(_f(187) & _f(22) => _f(176));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.275,(_f(187) & _f(22) => _f(184));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.274,(_f(187) & _f(22) => _f(172));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.273,(_f(187) & _f(22) => _f(170));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.272,(_f(186) & _f(22) => _f(179));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.271,(_f(186) & _f(22) => _f(184));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.270,(_f(186) & _f(22) => _f(172));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.269,(_f(186) & _f(22) => _f(170));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.268,(_f(185) & _f(22) => _f(176));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.267,(_f(185) & _f(22) => _f(184));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.266,(_f(185) & _f(22) => _f(172));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.265,(_f(185) & _f(22) => _f(170));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.264,(_f(183) & _f(22) => _f(184));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.263,(_f(183) & _f(22) => _f(172));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.262,(_f(183) & _f(22) => _f(170));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.261,(_f(182) & _f(22) => _f(176));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.260,(_f(182) & _f(22) => _f(174));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.259,(_f(182) & _f(22) => _f(172));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.258,(_f(182) & _f(22) => _f(170));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.257,(_f(180) & _f(22) => _f(181));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.256,(_f(180) & _f(22) => _f(179));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.255,(_f(180) & _f(22) => _f(174));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.254,(_f(180) & _f(22) => _f(172));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.253,(_f(180) & _f(22) => _f(170));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.252,(_f(177) & _f(22) => _f(179));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.251,(_f(177) & _f(22) => _f(178));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.250,(_f(177) & _f(22) => _f(172));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.249,(_f(177) & _f(22) => _f(170));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.248,(_f(175) & _f(22) => _f(176));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.247,(_f(175) & _f(22) => _f(174));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.246,(_f(175) & _f(22) => _f(172));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.245,(_f(175) & _f(22) => _f(170));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.244,(_f(173) & _f(22) => _f(174));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.243,(_f(173) & _f(22) => _f(172));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.242,(_f(173) & _f(22) => _f(170));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.241,(_f(171) & _f(22) => _f(172));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.240,(_f(171) & _f(22) => _f(170));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.239,(_f(169) & _f(22) => _f(170));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.238,(_f(34) & _f(22) => _f(50));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.237,(_f(34) & _f(22) => _f(49));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.236,(_f(34) & _f(22) => _f(48));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.235,(_f(32) & _f(22) => _f(168));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.234,(_f(167) & _f(22) => _f(77));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.233,(_f(166) & _f(22) => _f(150));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.232,(_f(166) & _f(22) => _f(149));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.231,(_f(166) & _f(22) => _f(135));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.230,(_f(165) & _f(22) => _f(136));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.229,(_f(165) & _f(22) => _f(141));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.228,(_f(164) & _f(22) => _f(146));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.227,(_f(164) & _f(22) => _f(133));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.226,(_f(164) & _f(22) => _f(141));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.225,(_f(163) & _f(22) => _f(133));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.224,(_f(163) & _f(22) => _f(141));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.223,(_f(162) & _f(22) => _f(136));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.222,(_f(162) & _f(22) => _f(141));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.221,(_f(161) & _f(22) => _f(133));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.220,(_f(161) & _f(22) => _f(141));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.219,(_f(160) & _f(22) => _f(141));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.218,(_f(159) & _f(22) => _f(133));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.217,(_f(158) & _f(22) => _f(138));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.216,(_f(158) & _f(22) => _f(136));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.215,(_f(157) & _f(22) => _f(136));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.214,(_f(157) & _f(22) => _f(135));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.213,(_f(156) & _f(22) => _f(133));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.212,(_f(152) & _f(22) => _f(155));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.211,(_f(152) & _f(22) => _f(154));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.210,(_f(152) & _f(22) => _f(153));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.209,(_f(151) & _f(22) => _f(77));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.208,(_f(148) & _f(22) => _f(150));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.207,(_f(148) & _f(22) => _f(149));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.206,(_f(148) & _f(22) => _f(135));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.205,(_f(147) & _f(22) => _f(136));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.204,(_f(147) & _f(22) => _f(141));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.203,(_f(145) & _f(22) => _f(146));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.202,(_f(145) & _f(22) => _f(133));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.201,(_f(145) & _f(22) => _f(141));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.200,(_f(144) & _f(22) => _f(133));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.199,(_f(144) & _f(22) => _f(141));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.198,(_f(143) & _f(22) => _f(136));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.197,(_f(143) & _f(22) => _f(141));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.196,(_f(142) & _f(22) => _f(133));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.195,(_f(142) & _f(22) => _f(141));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.194,(_f(140) & _f(22) => _f(141));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.193,(_f(139) & _f(22) => _f(133));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.192,(_f(137) & _f(22) => _f(138));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.191,(_f(137) & _f(22) => _f(136));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.190,(_f(134) & _f(22) => _f(136));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.189,(_f(134) & _f(22) => _f(135));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.188,(_f(132) & _f(22) => _f(133));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.187,(_f(131) & _f(22) => _f(50));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.186,(_f(131) & _f(22) => _f(49));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.185,(_f(131) & _f(22) => _f(48));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.184,(_f(130) & _f(22) => _f(77));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.183,(_f(127) & _f(22) => _f(129));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.182,(_f(127) & _f(22) => _f(128));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.181,(_f(127) & _f(22) => _f(114));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.180,(_f(127) & _f(22) => _f(108));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.179,(_f(127) & _f(22) => _f(106));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.178,(_f(126) & _f(22) => _f(115));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.177,(_f(126) & _f(22) => _f(120));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.176,(_f(126) & _f(22) => _f(108));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.175,(_f(126) & _f(22) => _f(106));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.174,(_f(124) & _f(22) => _f(125));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.173,(_f(124) & _f(22) => _f(112));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.172,(_f(124) & _f(22) => _f(120));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.171,(_f(124) & _f(22) => _f(108));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.170,(_f(124) & _f(22) => _f(106));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.169,(_f(123) & _f(22) => _f(112));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.168,(_f(123) & _f(22) => _f(120));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.167,(_f(123) & _f(22) => _f(108));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.166,(_f(123) & _f(22) => _f(106));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.165,(_f(122) & _f(22) => _f(115));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.164,(_f(122) & _f(22) => _f(120));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.163,(_f(122) & _f(22) => _f(108));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.162,(_f(122) & _f(22) => _f(106));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.161,(_f(121) & _f(22) => _f(112));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.160,(_f(121) & _f(22) => _f(120));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.159,(_f(121) & _f(22) => _f(108));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.158,(_f(121) & _f(22) => _f(106));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.157,(_f(119) & _f(22) => _f(120));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.156,(_f(119) & _f(22) => _f(108));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.155,(_f(119) & _f(22) => _f(106));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.154,(_f(118) & _f(22) => _f(112));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.153,(_f(118) & _f(22) => _f(110));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.152,(_f(118) & _f(22) => _f(108));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.151,(_f(118) & _f(22) => _f(106));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.150,(_f(116) & _f(22) => _f(117));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.149,(_f(116) & _f(22) => _f(115));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.148,(_f(116) & _f(22) => _f(110));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.147,(_f(116) & _f(22) => _f(108));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.146,(_f(116) & _f(22) => _f(106));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.145,(_f(113) & _f(22) => _f(115));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.144,(_f(113) & _f(22) => _f(114));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.143,(_f(113) & _f(22) => _f(108));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.142,(_f(113) & _f(22) => _f(106));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.141,(_f(111) & _f(22) => _f(112));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.140,(_f(111) & _f(22) => _f(110));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.139,(_f(111) & _f(22) => _f(108));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.138,(_f(111) & _f(22) => _f(106));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.137,(_f(109) & _f(22) => _f(110));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.136,(_f(109) & _f(22) => _f(108));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.135,(_f(109) & _f(22) => _f(106));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.134,(_f(107) & _f(22) => _f(108));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.133,(_f(107) & _f(22) => _f(106));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.132,(_f(105) & _f(22) => _f(106));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.131,(_f(104) & _f(22) => _f(50));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.130,(_f(104) & _f(22) => _f(49));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.129,(_f(104) & _f(22) => _f(48));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.128,(_f(103) & _f(22) => _f(77));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.127,(_f(100) & _f(22) => _f(102));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.126,(_f(100) & _f(22) => _f(101));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.125,(_f(100) & _f(22) => _f(87));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.124,(_f(100) & _f(22) => _f(81));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.123,(_f(100) & _f(22) => _f(79));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.122,(_f(99) & _f(22) => _f(88));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.121,(_f(99) & _f(22) => _f(93));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.120,(_f(99) & _f(22) => _f(81));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.119,(_f(99) & _f(22) => _f(79));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.118,(_f(97) & _f(22) => _f(98));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.117,(_f(97) & _f(22) => _f(85));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.116,(_f(97) & _f(22) => _f(93));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.115,(_f(97) & _f(22) => _f(81));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.114,(_f(97) & _f(22) => _f(79));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.113,(_f(96) & _f(22) => _f(85));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.112,(_f(96) & _f(22) => _f(93));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.111,(_f(96) & _f(22) => _f(81));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.110,(_f(96) & _f(22) => _f(79));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.109,(_f(95) & _f(22) => _f(88));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.108,(_f(95) & _f(22) => _f(93));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.107,(_f(95) & _f(22) => _f(81));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.106,(_f(95) & _f(22) => _f(79));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.105,(_f(94) & _f(22) => _f(85));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.104,(_f(94) & _f(22) => _f(93));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.103,(_f(94) & _f(22) => _f(81));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.102,(_f(94) & _f(22) => _f(79));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.101,(_f(92) & _f(22) => _f(93));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.100,(_f(92) & _f(22) => _f(81));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.99,(_f(92) & _f(22) => _f(79));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.98,(_f(91) & _f(22) => _f(85));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.97,(_f(91) & _f(22) => _f(83));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.96,(_f(91) & _f(22) => _f(81));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.95,(_f(91) & _f(22) => _f(79));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.94,(_f(89) & _f(22) => _f(90));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.93,(_f(89) & _f(22) => _f(88));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.92,(_f(89) & _f(22) => _f(83));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.91,(_f(89) & _f(22) => _f(81));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.90,(_f(89) & _f(22) => _f(79));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.89,(_f(86) & _f(22) => _f(88));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.88,(_f(86) & _f(22) => _f(87));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.87,(_f(86) & _f(22) => _f(81));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.86,(_f(86) & _f(22) => _f(79));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.85,(_f(84) & _f(22) => _f(85));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.84,(_f(84) & _f(22) => _f(83));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.83,(_f(84) & _f(22) => _f(81));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.82,(_f(84) & _f(22) => _f(79));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.81,(_f(82) & _f(22) => _f(83));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.80,(_f(82) & _f(22) => _f(81));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.79,(_f(82) & _f(22) => _f(79));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.78,(_f(80) & _f(22) => _f(81));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.77,(_f(80) & _f(22) => _f(79));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.76,(_f(78) & _f(22) => _f(79));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.75,(_f(29) & _f(22) => _f(50));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.74,(_f(29) & _f(22) => _f(49));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.73,(_f(29) & _f(22) => _f(48));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.72,(_f(76) & _f(22) => _f(77));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.71,(_f(73) & _f(22) => _f(75));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.70,(_f(73) & _f(22) => _f(74));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.69,(_f(73) & _f(22) => _f(60));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.68,(_f(73) & _f(22) => _f(54));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.67,(_f(73) & _f(22) => _f(52));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.66,(_f(72) & _f(22) => _f(61));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.65,(_f(72) & _f(22) => _f(66));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.64,(_f(72) & _f(22) => _f(54));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.63,(_f(72) & _f(22) => _f(52));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.62,(_f(70) & _f(22) => _f(71));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.61,(_f(70) & _f(22) => _f(58));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.60,(_f(70) & _f(22) => _f(66));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.59,(_f(70) & _f(22) => _f(54));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.58,(_f(70) & _f(22) => _f(52));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.57,(_f(69) & _f(22) => _f(58));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.56,(_f(69) & _f(22) => _f(66));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.55,(_f(69) & _f(22) => _f(54));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.54,(_f(69) & _f(22) => _f(52));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.53,(_f(68) & _f(22) => _f(61));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.52,(_f(68) & _f(22) => _f(66));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.51,(_f(68) & _f(22) => _f(54));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.50,(_f(68) & _f(22) => _f(52));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.49,(_f(67) & _f(22) => _f(58));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.48,(_f(67) & _f(22) => _f(66));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.47,(_f(67) & _f(22) => _f(54));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.46,(_f(67) & _f(22) => _f(52));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.45,(_f(65) & _f(22) => _f(66));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.44,(_f(65) & _f(22) => _f(54));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.43,(_f(65) & _f(22) => _f(52));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.42,(_f(64) & _f(22) => _f(58));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.41,(_f(64) & _f(22) => _f(56));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.40,(_f(64) & _f(22) => _f(54));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.39,(_f(64) & _f(22) => _f(52));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.38,(_f(62) & _f(22) => _f(63));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.37,(_f(62) & _f(22) => _f(61));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.36,(_f(62) & _f(22) => _f(56));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.35,(_f(62) & _f(22) => _f(54));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.34,(_f(62) & _f(22) => _f(52));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.33,(_f(59) & _f(22) => _f(61));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.32,(_f(59) & _f(22) => _f(60));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.31,(_f(59) & _f(22) => _f(54));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.30,(_f(59) & _f(22) => _f(52));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.29,(_f(57) & _f(22) => _f(58));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.28,(_f(57) & _f(22) => _f(56));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.27,(_f(57) & _f(22) => _f(54));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.26,(_f(57) & _f(22) => _f(52));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.25,(_f(55) & _f(22) => _f(56));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.24,(_f(55) & _f(22) => _f(54));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.23,(_f(55) & _f(22) => _f(52));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.22,(_f(53) & _f(22) => _f(54));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.21,(_f(53) & _f(22) => _f(52));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.20,(_f(51) & _f(22) => _f(52));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.19,(_f(28) & _f(22) => _f(50));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.18,(_f(28) & _f(22) => _f(49));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.17,(_f(28) & _f(22) => _f(48));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.16,(_f(46) & _f(22) => _f(47));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.15,(_f(45) & _f(22) => _f(36));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.14,(_f(43) & _f(22) => _f(44));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.13,(_f(41) & _f(22) => _f(42));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.12,(_f(39) & _f(22) => _f(40));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.11,(_f(37) & _f(22) => _f(38));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.10,(_f(35) & _f(22) => _f(36));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.9,(_f(34) & _f(22) => _f(6));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.8,(_f(32) & _f(22) => _f(33));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.7,(_f(30) & _f(22) => _f(31));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.6,(_f(29) & _f(22) => _f(6));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.5,(_f(28) & _f(22) => _f(6));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.4,(_f(25) & _f(22) => _f(27));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.3,(_f(25) & _f(22) => _f(26));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.2,(_f(22) => _f(24));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.1,(_f(22) => _f(23));
  _f(2) & _f(3) & _f(12) & AssertionLemmas.4,(_f(19) => _f(20));
  _f(2) & _f(3) & _f(12) & AssertionLemmas.3,(_f(17) => _f(18));
  _f(2) & _f(3) & _f(12) & AssertionLemmas.2,(_f(15) => _f(16));
  _f(2) & _f(3) & _f(12) & AssertionLemmas.1,(_f(13) => _f(14));
  _f(2) & _f(3) & Initialisation.3,(_f(7) & _f(10) => _f(11));
  _f(2) & _f(3) & Initialisation.2,(_f(7) & _f(8) => _f(9));
  _f(2) & _f(3) & Initialisation.1,(_f(4) & _f(5) => _f(6))
END
&
THEORY Formulas IS
  ("`Seen and used machines properties'" & not((1..3)*{COLOR} = {}) & WORD16_LENGTH : INTEGER & 0<=WORD16_LENGTH & WORD16_LENGTH = 16 & NB_WORD16S : INTEGER & 0<=NB_WORD16S & NB_WORD16S = 2**WORD16_LENGTH & WORD16 = 0..NB_WORD16S-1 & WORD16_POSITION = 0..WORD16_LENGTH-1 & WORD8_LENGTH : INTEGER & 0<=WORD8_LENGTH & WORD8_LENGTH = 8 & NB_WORD8S : INTEGER & 0<=NB_WORD8S & NB_WORD8S = 2**WORD8_LENGTH & WORD8 = 0..NB_WORD8S-1 & WORD8_POSITION = 0..WORD8_LENGTH-1 & NB_INSTRUCTIONS : INTEGER & 0<=NB_INSTRUCTIONS & INST_SZ : INTEGER & 0<=INST_SZ & INST_SZ = 16 & NB_INSTRUCTIONS = 2**INST_SZ & INSTRUCTION_MAX = NB_INSTRUCTIONS-1 & INSTRUCTION = 0..INSTRUCTION_MAX & INSTRUCTION_NEXT : INSTRUCTION +-> INSTRUCTION & dom(INSTRUCTION_NEXT) = INSTRUCTION & INSTRUCTION_NEXT = SET(p,q).(p : INSTRUCTION & q : INSTRUCTION & 0<=p & p+1<=NB_INSTRUCTIONS-1 & q = p+1)\/{NB_INSTRUCTIONS-1|->0} & BV8_TO_WORD8 : BV8 +-> WORD8 & dom(BV8_TO_WORD8) = BV8 & BV8_TO_WORD8 = %v.(v : BV8 | 128*v(7)+64*v(6)+32*v(5)+16*v(4)+8*v(3)+4*v(2)+2*v(1)+v(0)) & WORD8_TO_BV8 : WORD8 +-> BV8 & dom(WORD8_TO_BV8) = WORD8 & WORD8_TO_BV8 = BV8_TO_WORD8~ & BV16_TO_WORD16 : BV16 +-> WORD16 & dom(BV16_TO_WORD16) = BV16 & BV16_TO_WORD16 = %v.(v : BV16 | 32768*v(15)+16384*v(14)+8192*v(13)+4096*v(12)+2048*v(11)+1024*v(10)+512*v(9)+256*v(8)+128*v(7)+64*v(6)+32*v(5)+16*v(4)+8*v(3)+4*v(2)+2*v(1)+v(0)) & WORD16_TO_BV16 : WORD16 +-> BV16 & dom(WORD16_TO_BV16) = WORD16 & WORD16_TO_BV16 = BV16_TO_WORD16~ & BV8_TO_BV16 : BV8*BV8 +-> BV16 & dom(BV8_TO_BV16) = BV8*BV8 & BV8_TO_BV16 = %(v1,v2).(v1 : BV8 & v2 : BV8 | {0|->v1(0)}\/{1|->v1(1)}\/{2|->v1(2)}\/{3|->v1(3)}\/{4|->v1(4)}\/{5|->v1(5)}\/{6|->v1(6)}\/{7|->v1(7)}\/{8|->v2(0)}\/{9|->v2(1)}\/{10|->v2(2)}\/{11|->v2(3)}\/{12|->v2(4)}\/{13|->v2(5)}\/{14|->v2(6)}\/{15|->v2(7)}) & WORD8_TO_WORD16 : WORD8*WORD8 +-> WORD16 & dom(WORD8_TO_WORD16) = WORD8*WORD8 & WORD8_TO_WORD16 = %(w1,w2).(w1 : WORD8 & w2 : WORD8 | BV16_TO_WORD16(BV8_TO_BV16(WORD8_TO_BV8(w1),WORD8_TO_BV8(w2)))) & WORD16_TO_WORD8 : WORD16 +-> WORD8*WORD8 & dom(WORD16_TO_WORD8) = WORD16 & WORD16_TO_WORD8 = WORD8_TO_WORD16~ & BIT = 0..1 & BIT_FLIP : BIT +-> BIT & dom(BIT_FLIP) = BIT & !b.(b : BIT => BIT_FLIP(b) = 1-b) & BIT_AND : BIT*BIT +-> BIT & dom(BIT_AND) = BIT*BIT & !(b1,b2).(b1 : BIT & b2 : BIT => (BIT_AND(b1,b2) = 1 => b1 = 1) & (b1 = 1 => BIT_AND(b1,b2) = 1) & b2 = 1) & BIT_IOR : BIT*BIT +-> BIT & dom(BIT_IOR) = BIT*BIT & !(b1,b2).(b1 : BIT & b2 : BIT => (BIT_IOR(b1,b2) = 1 => b1 = 1) & (b1 = 1 => BIT_IOR(b1,b2) = 1) or b2 = 1) & BIT_XOR : BIT*BIT +-> BIT & dom(BIT_XOR) = BIT*BIT & !(b1,b2).(b1 : BIT & b2 : BIT => (BIT_XOR(b1,b2) = 1 => b1 = 1 & b2 = 0 or (b1 = 0 & b2 = 1)) & ((b1 = 1 & b2 = 0 => BIT_XOR(b1,b2) = 1) & (b1 = 0 & b2 = 1 => BIT_XOR(b1,b2) = 1))) & BV8_INDEX = 0..7 & BV8 = BV8_INDEX --> BIT & BV8_SET_BIT : BV8*BV8_INDEX*BIT +-> BV8 & dom(BV8_SET_BIT) = BV8*BV8_INDEX*BIT & !(v,i,j,b).(v : BV8 & i : BV8_INDEX & j : BV8_INDEX & b : BIT & not(i = j) => BV8_SET_BIT(v,i,b)(j) = v(j)) & !(v,i,b).(v : BV8 & i : BV8_INDEX & b : BIT => BV8_SET_BIT(v,i,b)(i) = b) & BV8_COMPLEMENT : BV8 +-> BV8 & dom(BV8_COMPLEMENT) = BV8 & !(v,i).(v : BV8 & i : BV8_INDEX => BV8_COMPLEMENT(v)(i) = BIT_FLIP(v(i))) & BV8_ALL_ZEROES : BV8 & !i.(i : BV8_INDEX => BV8_ALL_ZEROES(i) = 0) & BV8_AND : BV8*BV8 +-> BV8 & dom(BV8_AND) = BV8*BV8 & !(v1,v2,i).(v1 : BV8 & v2 : BV8 & i : BV8_INDEX => BV8_AND(v1,v2)(i) = BIT_AND(v1(i),v2(i))) & BV8_IOR : BV8*BV8 +-> BV8 & dom(BV8_IOR) = BV8*BV8 & !(v1,v2,i).(v1 : BV8 & v2 : BV8 & i : BV8_INDEX => BV8_IOR(v1,v2)(i) = BIT_IOR(v1(i),v2(i))) & BV8_XOR : BV8*BV8 +-> BV8 & dom(BV8_XOR) = BV8*BV8 & !(v1,v2,i).(v1 : BV8 & v2 : BV8 & i : BV8_INDEX => BV8_XOR(v1,v2)(i) = BIT_XOR(v1(i),v2(i))) & BV16_INDEX = 0..15 & BV16 = BV16_INDEX --> BIT & BV16_SET_BIT : BV16*BV16_INDEX*BIT +-> BV16 & dom(BV16_SET_BIT) = BV16*BV16_INDEX*BIT & !(v,i,j,b).(v : BV16 & i : BV16_INDEX & j : BV16_INDEX & b : BIT & not(i = j) => BV16_SET_BIT(v,i,b)(j) = v(j)) & !(v,i,b).(v : BV16 & i : BV16_INDEX & b : BIT => BV16_SET_BIT(v,i,b)(i) = b) & BV16_COMPLEMENT : BV16 +-> BV16 & dom(BV16_COMPLEMENT) = BV16 & !(v,i).(v : BV16 & i : BV16_INDEX => BV16_COMPLEMENT(v)(i) = BIT_FLIP(v(i))) & BV16_ALL_ZEROES : BV16 & !i.(i : BV16_INDEX => BV16_ALL_ZEROES(i) = 0) & BV16_AND : BV16*BV16 +-> BV16 & dom(BV16_AND) = BV16*BV16 & !(v1,v2,i).(v1 : BV16 & v2 : BV16 & i : BV16_INDEX => BV16_AND(v1,v2)(i) = BIT_AND(v1(i),v2(i))) & BV16_IOR : BV16*BV16 +-> BV16 & dom(BV16_IOR) = BV16*BV16 & !(v1,v2,i).(v1 : BV16 & v2 : BV16 & i : BV16_INDEX => BV16_IOR(v1,v2)(i) = BIT_IOR(v1(i),v2(i))) & BV16_XOR : BV16*BV16 +-> BV16 & dom(BV16_XOR) = BV16*BV16 & !(v1,v2,i).(v1 : BV16 & v2 : BV16 & i : BV16_INDEX => BV16_XOR(v1,v2)(i) = BIT_XOR(v1(i),v2(i))) & add16 : WORD16*WORD16 +-> WORD16*BOOL*BOOL & dom(add16) = WORD16*WORD16 & !(w1,w2).(w1 : WORD16 & w2 : WORD16 & (w1+w2 : INTEGER & 0<=w1+w2) => (w1+w2<=65535 => add16(w1,w2) = (w1+w2,bool(w1+w2 = 0))|->FALSE) & (65536<=w1+w2 => add16(w1,w2) = (w1+w2-65536,bool(w1+w2 = 65536))|->TRUE)) & add : WORD8*WORD8 +-> WORD8*BOOL*BOOL & dom(add) = WORD8*WORD8 & !(w1,w2).(w1 : WORD8 & w2 : WORD8 & (w1+w2 : INTEGER & 0<=w1+w2) => (w1+w2<=255 => add(w1,w2) = (w1+w2,bool(w1+w2 = 0))|->FALSE) & (256<=w1+w2 => add(w1,w2) = (w1+w2-256,bool(w1+w2 = 256))|->TRUE)) & substract : WORD8*WORD8 +-> WORD8*BOOL*BOOL & dom(substract) = WORD8*WORD8 & !(w1,w2).(w1 : WORD8 & w2 : WORD8 & w1-w2 : INTEGER => (w1-w2+1<=0 => substract(w1,w2) = (w1-w2+256,FALSE)|->TRUE) & (0<=w1-w2 => substract(w1,w2) = (w1-w2,bool(w1-w2 = 0))|->FALSE)) & and : WORD8*WORD8 +-> WORD8*BOOL & dom(and) = WORD8*WORD8 & !(w1,w2).(w1 : WORD8 & w2 : WORD8 & BV8_TO_WORD8(BV8_AND(WORD8_TO_BV8(w1),WORD8_TO_BV8(w2))) : WORD8 => and(w1,w2) = BV8_TO_WORD8(BV8_AND(WORD8_TO_BV8(w1),WORD8_TO_BV8(w2)))|->bool(BV8_TO_WORD8(BV8_AND(WORD8_TO_BV8(w1),WORD8_TO_BV8(w2))) = 0)) & ior : WORD8*WORD8 +-> WORD8*BOOL & dom(ior) = WORD8*WORD8 & !(w1,w2).(w1 : WORD8 & w2 : WORD8 & BV8_TO_WORD8(BV8_IOR(WORD8_TO_BV8(w1),WORD8_TO_BV8(w2))) : WORD8 => ior(w1,w2) = BV8_TO_WORD8(BV8_IOR(WORD8_TO_BV8(w1),WORD8_TO_BV8(w2)))|->bool(BV8_TO_WORD8(BV8_IOR(WORD8_TO_BV8(w1),WORD8_TO_BV8(w2))) = 0)) & xor : WORD8*WORD8 +-> WORD8*BOOL & dom(xor) = WORD8*WORD8 & !(w1,w2).(w1 : WORD8 & w2 : WORD8 & BV8_TO_WORD8(BV8_XOR(WORD8_TO_BV8(w1),WORD8_TO_BV8(w2))) : WORD8 => xor(w1,w2) = BV8_TO_WORD8(BV8_XOR(WORD8_TO_BV8(w1),WORD8_TO_BV8(w2)))|->bool(BV8_TO_WORD8(BV8_XOR(WORD8_TO_BV8(w1),WORD8_TO_BV8(w2))) = 0)) & bitget : WORD8*WORD8_POSITION +-> BIT & dom(bitget) = WORD8*WORD8_POSITION & !(w,i).(w : WORD8 & i : WORD8_POSITION => bitget(w,i) = WORD8_TO_BV8(w)(i)) & bitset : WORD8*WORD8_POSITION +-> WORD8 & dom(bitset) = WORD8*WORD8_POSITION & !(w,i).(w : WORD8 & i : WORD8_POSITION => bitset(w,i) = BV8_TO_WORD8(BV8_SET_BIT(WORD8_TO_BV8(w),i,1))) & bitclear : WORD8*WORD8_POSITION +-> WORD8 & dom(bitclear) = WORD8*WORD8_POSITION & !(w,i,b).(w : WORD8 & i : WORD8_POSITION & b : BIT => bitclear(w,i) = BV8_TO_WORD8(BV8_SET_BIT(WORD8_TO_BV8(w),i,0))) & complement : WORD8 +-> WORD8 & dom(complement) = WORD8 & !w.(w : WORD8 => complement(w) = BV8_TO_WORD8(BV8_COMPLEMENT(WORD8_TO_BV8(w)))) & swap : WORD8 +-> WORD8 & dom(swap) = WORD8 & !w.(w : WORD8 & WORD8_TO_BV8(w) : BV8 => swap(w) = BV8_TO_WORD8({0|->WORD8_TO_BV8(w)(4)}\/{1|->WORD8_TO_BV8(w)(5)}\/{2|->WORD8_TO_BV8(w)(6)}\/{3|->WORD8_TO_BV8(w)(7)}\/{4|->WORD8_TO_BV8(w)(0)}\/{5|->WORD8_TO_BV8(w)(1)}\/{6|->WORD8_TO_BV8(w)(2)}\/{7|->WORD8_TO_BV8(w)(3)})) & rotateleft : WORD8 +-> WORD8*BOOL & dom(rotateleft) = WORD8 & !w.(w : WORD8 & WORD8_TO_BV8(w) : BV8 => rotateleft(w) = BV8_TO_WORD8({0|->WORD8_TO_BV8(w)(7)}\/{1|->WORD8_TO_BV8(w)(0)}\/{2|->WORD8_TO_BV8(w)(1)}\/{3|->WORD8_TO_BV8(w)(2)}\/{4|->WORD8_TO_BV8(w)(3)}\/{5|->WORD8_TO_BV8(w)(4)}\/{6|->WORD8_TO_BV8(w)(5)}\/{7|->WORD8_TO_BV8(w)(6)})|->bool(WORD8_TO_BV8(w)(7) = 1)) & rotateright : WORD8 +-> WORD8*BOOL & dom(rotateright) = WORD8 & !w.(w : WORD8 & WORD8_TO_BV8(w) : BV8 => rotateright(w) = BV8_TO_WORD8({0|->WORD8_TO_BV8(w)(1)}\/{1|->WORD8_TO_BV8(w)(2)}\/{2|->WORD8_TO_BV8(w)(3)}\/{3|->WORD8_TO_BV8(w)(4)}\/{4|->WORD8_TO_BV8(w)(5)}\/{5|->WORD8_TO_BV8(w)(6)}\/{6|->WORD8_TO_BV8(w)(7)}\/{7|->WORD8_TO_BV8(w)(0)})|->bool(WORD8_TO_BV8(w)(0) = 1)) & color_refine : (1..3)*{COLOR} +-> NATURAL & dom(color_refine) = (1..3)*{COLOR} & color_refine = {1|->COLOR|->0}\/{2|->COLOR|->1}\/{3|->COLOR|->2} & color_step : 0..2 +-> 0..2 & dom(color_step) = 0..2 & color_step = {0|->1}\/{1|->2}\/{2|->0} & "`Included,imported and extended machines properties'" & not((1..18)*{id_register8} = {}));
  ("`Seen and used machines properties'" & not((1..3)*{COLOR} = {}) & WORD16_LENGTH : INTEGER & 0<=WORD16_LENGTH & WORD16_LENGTH = 16 & NB_WORD16S : INTEGER & 0<=NB_WORD16S & NB_WORD16S = 2**WORD16_LENGTH & WORD16 = 0..NB_WORD16S-1 & WORD16_POSITION = 0..WORD16_LENGTH-1 & WORD8_LENGTH : INTEGER & 0<=WORD8_LENGTH & WORD8_LENGTH = 8 & NB_WORD8S : INTEGER & 0<=NB_WORD8S & NB_WORD8S = 2**WORD8_LENGTH & WORD8 = 0..NB_WORD8S-1 & WORD8_POSITION = 0..WORD8_LENGTH-1 & NB_INSTRUCTIONS : INTEGER & 0<=NB_INSTRUCTIONS & INST_SZ : INTEGER & 0<=INST_SZ & INST_SZ = 16 & NB_INSTRUCTIONS = 2**INST_SZ & INSTRUCTION_MAX = NB_INSTRUCTIONS-1 & INSTRUCTION = 0..INSTRUCTION_MAX & INSTRUCTION_NEXT : INSTRUCTION +-> INSTRUCTION & dom(INSTRUCTION_NEXT) = INSTRUCTION & INSTRUCTION_NEXT = SET(p,q).(p : INSTRUCTION & q : INSTRUCTION & 0<=p & p+1<=NB_INSTRUCTIONS-1 & q = p+1)\/{NB_INSTRUCTIONS-1|->0} & BV8_TO_WORD8 : BV8 +-> WORD8 & dom(BV8_TO_WORD8) = BV8 & BV8_TO_WORD8 = %v.(v : BV8 | 128*v(7)+64*v(6)+32*v(5)+16*v(4)+8*v(3)+4*v(2)+2*v(1)+v(0)) & WORD8_TO_BV8 : WORD8 +-> BV8 & dom(WORD8_TO_BV8) = WORD8 & WORD8_TO_BV8 = BV8_TO_WORD8~ & BV16_TO_WORD16 : BV16 +-> WORD16 & dom(BV16_TO_WORD16) = BV16 & BV16_TO_WORD16 = %v.(v : BV16 | 32768*v(15)+16384*v(14)+8192*v(13)+4096*v(12)+2048*v(11)+1024*v(10)+512*v(9)+256*v(8)+128*v(7)+64*v(6)+32*v(5)+16*v(4)+8*v(3)+4*v(2)+2*v(1)+v(0)) & WORD16_TO_BV16 : WORD16 +-> BV16 & dom(WORD16_TO_BV16) = WORD16 & WORD16_TO_BV16 = BV16_TO_WORD16~ & BV8_TO_BV16 : BV8*BV8 +-> BV16 & dom(BV8_TO_BV16) = BV8*BV8 & BV8_TO_BV16 = %(v1,v2).(v1 : BV8 & v2 : BV8 | {0|->v1(0)}\/{1|->v1(1)}\/{2|->v1(2)}\/{3|->v1(3)}\/{4|->v1(4)}\/{5|->v1(5)}\/{6|->v1(6)}\/{7|->v1(7)}\/{8|->v2(0)}\/{9|->v2(1)}\/{10|->v2(2)}\/{11|->v2(3)}\/{12|->v2(4)}\/{13|->v2(5)}\/{14|->v2(6)}\/{15|->v2(7)}) & WORD8_TO_WORD16 : WORD8*WORD8 +-> WORD16 & dom(WORD8_TO_WORD16) = WORD8*WORD8 & WORD8_TO_WORD16 = %(w1,w2).(w1 : WORD8 & w2 : WORD8 | BV16_TO_WORD16(BV8_TO_BV16(WORD8_TO_BV8(w1),WORD8_TO_BV8(w2)))) & WORD16_TO_WORD8 : WORD16 +-> WORD8*WORD8 & dom(WORD16_TO_WORD8) = WORD16 & WORD16_TO_WORD8 = WORD8_TO_WORD16~ & BIT = 0..1 & BIT_FLIP : BIT +-> BIT & dom(BIT_FLIP) = BIT & !b.(b : BIT => BIT_FLIP(b) = 1-b) & BIT_AND : BIT*BIT +-> BIT & dom(BIT_AND) = BIT*BIT & !(b1,b2).(b1 : BIT & b2 : BIT => (BIT_AND(b1,b2) = 1 => b1 = 1) & (b1 = 1 => BIT_AND(b1,b2) = 1) & b2 = 1) & BIT_IOR : BIT*BIT +-> BIT & dom(BIT_IOR) = BIT*BIT & !(b1,b2).(b1 : BIT & b2 : BIT => (BIT_IOR(b1,b2) = 1 => b1 = 1) & (b1 = 1 => BIT_IOR(b1,b2) = 1) or b2 = 1) & BIT_XOR : BIT*BIT +-> BIT & dom(BIT_XOR) = BIT*BIT & !(b1,b2).(b1 : BIT & b2 : BIT => (BIT_XOR(b1,b2) = 1 => b1 = 1 & b2 = 0 or (b1 = 0 & b2 = 1)) & ((b1 = 1 & b2 = 0 => BIT_XOR(b1,b2) = 1) & (b1 = 0 & b2 = 1 => BIT_XOR(b1,b2) = 1))) & BV8_INDEX = 0..7 & BV8 = BV8_INDEX --> BIT & BV8_SET_BIT : BV8*BV8_INDEX*BIT +-> BV8 & dom(BV8_SET_BIT) = BV8*BV8_INDEX*BIT & !(v,i,j,b).(v : BV8 & i : BV8_INDEX & j : BV8_INDEX & b : BIT & not(i = j) => BV8_SET_BIT(v,i,b)(j) = v(j)) & !(v,i,b).(v : BV8 & i : BV8_INDEX & b : BIT => BV8_SET_BIT(v,i,b)(i) = b) & BV8_COMPLEMENT : BV8 +-> BV8 & dom(BV8_COMPLEMENT) = BV8 & !(v,i).(v : BV8 & i : BV8_INDEX => BV8_COMPLEMENT(v)(i) = BIT_FLIP(v(i))) & BV8_ALL_ZEROES : BV8 & !i.(i : BV8_INDEX => BV8_ALL_ZEROES(i) = 0) & BV8_AND : BV8*BV8 +-> BV8 & dom(BV8_AND) = BV8*BV8 & !(v1,v2,i).(v1 : BV8 & v2 : BV8 & i : BV8_INDEX => BV8_AND(v1,v2)(i) = BIT_AND(v1(i),v2(i))) & BV8_IOR : BV8*BV8 +-> BV8 & dom(BV8_IOR) = BV8*BV8 & !(v1,v2,i).(v1 : BV8 & v2 : BV8 & i : BV8_INDEX => BV8_IOR(v1,v2)(i) = BIT_IOR(v1(i),v2(i))) & BV8_XOR : BV8*BV8 +-> BV8 & dom(BV8_XOR) = BV8*BV8 & !(v1,v2,i).(v1 : BV8 & v2 : BV8 & i : BV8_INDEX => BV8_XOR(v1,v2)(i) = BIT_XOR(v1(i),v2(i))) & BV16_INDEX = 0..15 & BV16 = BV16_INDEX --> BIT & BV16_SET_BIT : BV16*BV16_INDEX*BIT +-> BV16 & dom(BV16_SET_BIT) = BV16*BV16_INDEX*BIT & !(v,i,j,b).(v : BV16 & i : BV16_INDEX & j : BV16_INDEX & b : BIT & not(i = j) => BV16_SET_BIT(v,i,b)(j) = v(j)) & !(v,i,b).(v : BV16 & i : BV16_INDEX & b : BIT => BV16_SET_BIT(v,i,b)(i) = b) & BV16_COMPLEMENT : BV16 +-> BV16 & dom(BV16_COMPLEMENT) = BV16 & !(v,i).(v : BV16 & i : BV16_INDEX => BV16_COMPLEMENT(v)(i) = BIT_FLIP(v(i))) & BV16_ALL_ZEROES : BV16 & !i.(i : BV16_INDEX => BV16_ALL_ZEROES(i) = 0) & BV16_AND : BV16*BV16 +-> BV16 & dom(BV16_AND) = BV16*BV16 & !(v1,v2,i).(v1 : BV16 & v2 : BV16 & i : BV16_INDEX => BV16_AND(v1,v2)(i) = BIT_AND(v1(i),v2(i))) & BV16_IOR : BV16*BV16 +-> BV16 & dom(BV16_IOR) = BV16*BV16 & !(v1,v2,i).(v1 : BV16 & v2 : BV16 & i : BV16_INDEX => BV16_IOR(v1,v2)(i) = BIT_IOR(v1(i),v2(i))) & BV16_XOR : BV16*BV16 +-> BV16 & dom(BV16_XOR) = BV16*BV16 & !(v1,v2,i).(v1 : BV16 & v2 : BV16 & i : BV16_INDEX => BV16_XOR(v1,v2)(i) = BIT_XOR(v1(i),v2(i))) & add16 : WORD16*WORD16 +-> WORD16*BOOL*BOOL & dom(add16) = WORD16*WORD16 & !(w1,w2).(w1 : WORD16 & w2 : WORD16 & (w1+w2 : INTEGER & 0<=w1+w2) => (w1+w2<=65535 => add16(w1,w2) = (w1+w2,bool(w1+w2 = 0))|->FALSE) & (65536<=w1+w2 => add16(w1,w2) = (w1+w2-65536,bool(w1+w2 = 65536))|->TRUE)) & add : WORD8*WORD8 +-> WORD8*BOOL*BOOL & dom(add) = WORD8*WORD8 & !(w1,w2).(w1 : WORD8 & w2 : WORD8 & (w1+w2 : INTEGER & 0<=w1+w2) => (w1+w2<=255 => add(w1,w2) = (w1+w2,bool(w1+w2 = 0))|->FALSE) & (256<=w1+w2 => add(w1,w2) = (w1+w2-256,bool(w1+w2 = 256))|->TRUE)) & substract : WORD8*WORD8 +-> WORD8*BOOL*BOOL & dom(substract) = WORD8*WORD8 & !(w1,w2).(w1 : WORD8 & w2 : WORD8 & w1-w2 : INTEGER => (w1-w2+1<=0 => substract(w1,w2) = (w1-w2+256,FALSE)|->TRUE) & (0<=w1-w2 => substract(w1,w2) = (w1-w2,bool(w1-w2 = 0))|->FALSE)) & and : WORD8*WORD8 +-> WORD8*BOOL & dom(and) = WORD8*WORD8 & !(w1,w2).(w1 : WORD8 & w2 : WORD8 & BV8_TO_WORD8(BV8_AND(WORD8_TO_BV8(w1),WORD8_TO_BV8(w2))) : WORD8 => and(w1,w2) = BV8_TO_WORD8(BV8_AND(WORD8_TO_BV8(w1),WORD8_TO_BV8(w2)))|->bool(BV8_TO_WORD8(BV8_AND(WORD8_TO_BV8(w1),WORD8_TO_BV8(w2))) = 0)) & ior : WORD8*WORD8 +-> WORD8*BOOL & dom(ior) = WORD8*WORD8 & !(w1,w2).(w1 : WORD8 & w2 : WORD8 & BV8_TO_WORD8(BV8_IOR(WORD8_TO_BV8(w1),WORD8_TO_BV8(w2))) : WORD8 => ior(w1,w2) = BV8_TO_WORD8(BV8_IOR(WORD8_TO_BV8(w1),WORD8_TO_BV8(w2)))|->bool(BV8_TO_WORD8(BV8_IOR(WORD8_TO_BV8(w1),WORD8_TO_BV8(w2))) = 0)) & xor : WORD8*WORD8 +-> WORD8*BOOL & dom(xor) = WORD8*WORD8 & !(w1,w2).(w1 : WORD8 & w2 : WORD8 & BV8_TO_WORD8(BV8_XOR(WORD8_TO_BV8(w1),WORD8_TO_BV8(w2))) : WORD8 => xor(w1,w2) = BV8_TO_WORD8(BV8_XOR(WORD8_TO_BV8(w1),WORD8_TO_BV8(w2)))|->bool(BV8_TO_WORD8(BV8_XOR(WORD8_TO_BV8(w1),WORD8_TO_BV8(w2))) = 0)) & bitget : WORD8*WORD8_POSITION +-> BIT & dom(bitget) = WORD8*WORD8_POSITION & !(w,i).(w : WORD8 & i : WORD8_POSITION => bitget(w,i) = WORD8_TO_BV8(w)(i)) & bitset : WORD8*WORD8_POSITION +-> WORD8 & dom(bitset) = WORD8*WORD8_POSITION & !(w,i).(w : WORD8 & i : WORD8_POSITION => bitset(w,i) = BV8_TO_WORD8(BV8_SET_BIT(WORD8_TO_BV8(w),i,1))) & bitclear : WORD8*WORD8_POSITION +-> WORD8 & dom(bitclear) = WORD8*WORD8_POSITION & !(w,i,b).(w : WORD8 & i : WORD8_POSITION & b : BIT => bitclear(w,i) = BV8_TO_WORD8(BV8_SET_BIT(WORD8_TO_BV8(w),i,0))) & complement : WORD8 +-> WORD8 & dom(complement) = WORD8 & !w.(w : WORD8 => complement(w) = BV8_TO_WORD8(BV8_COMPLEMENT(WORD8_TO_BV8(w)))) & swap : WORD8 +-> WORD8 & dom(swap) = WORD8 & !w.(w : WORD8 & WORD8_TO_BV8(w) : BV8 => swap(w) = BV8_TO_WORD8({0|->WORD8_TO_BV8(w)(4)}\/{1|->WORD8_TO_BV8(w)(5)}\/{2|->WORD8_TO_BV8(w)(6)}\/{3|->WORD8_TO_BV8(w)(7)}\/{4|->WORD8_TO_BV8(w)(0)}\/{5|->WORD8_TO_BV8(w)(1)}\/{6|->WORD8_TO_BV8(w)(2)}\/{7|->WORD8_TO_BV8(w)(3)})) & rotateleft : WORD8 +-> WORD8*BOOL & dom(rotateleft) = WORD8 & !w.(w : WORD8 & WORD8_TO_BV8(w) : BV8 => rotateleft(w) = BV8_TO_WORD8({0|->WORD8_TO_BV8(w)(7)}\/{1|->WORD8_TO_BV8(w)(0)}\/{2|->WORD8_TO_BV8(w)(1)}\/{3|->WORD8_TO_BV8(w)(2)}\/{4|->WORD8_TO_BV8(w)(3)}\/{5|->WORD8_TO_BV8(w)(4)}\/{6|->WORD8_TO_BV8(w)(5)}\/{7|->WORD8_TO_BV8(w)(6)})|->bool(WORD8_TO_BV8(w)(7) = 1)) & rotateright : WORD8 +-> WORD8*BOOL & dom(rotateright) = WORD8 & !w.(w : WORD8 & WORD8_TO_BV8(w) : BV8 => rotateright(w) = BV8_TO_WORD8({0|->WORD8_TO_BV8(w)(1)}\/{1|->WORD8_TO_BV8(w)(2)}\/{2|->WORD8_TO_BV8(w)(3)}\/{3|->WORD8_TO_BV8(w)(4)}\/{4|->WORD8_TO_BV8(w)(5)}\/{5|->WORD8_TO_BV8(w)(6)}\/{6|->WORD8_TO_BV8(w)(7)}\/{7|->WORD8_TO_BV8(w)(0)})|->bool(WORD8_TO_BV8(w)(0) = 1)) & color_refine : (1..3)*{COLOR} +-> NATURAL & dom(color_refine) = (1..3)*{COLOR} & color_refine = {1|->COLOR|->0}\/{2|->COLOR|->1}\/{3|->COLOR|->2} & color_step : 0..2 +-> 0..2 & dom(color_step) = 0..2 & color_step = {0|->1}\/{1|->2}\/{2|->0});
  ("`Included,imported and extended machines properties'" & not((1..18)*{id_register8} = {}) & "`Included,imported and extended machines invariants'" & mpstack$1 : WORD16 +-> WORD8 & dom(mpstack$1) = WORD16 & mprgs8$1 : (1..18)*{id_register8} +-> WORD8 & dom(mprgs8$1) = (1..18)*{id_register8} & mpmem$1 : WORD16 +-> WORD8 & dom(mpmem$1) = WORD16 & mppc$1 : WORD16 & mpsp$1 : WORD16 & mpix$1 : WORD16 & mpiy$1 : WORD16 & "`Included,imported and extended machines assertions'" & ran(mpstack$1) : POW(WORD8) & ran(mpmem$1) : POW(WORD8) & ran(mprgs8$1) : POW(WORD8) & INSTRUCTION_NEXT(0) = 1 & INSTRUCTION_NEXT(1) = 2 & INSTRUCTION_NEXT(2) = 3 & INSTRUCTION_NEXT(3) = 4 & INSTRUCTION_NEXT(4) = 5 & INSTRUCTION_NEXT(5) = 6 & INSTRUCTION_NEXT(6) = 7 & INSTRUCTION_NEXT(7) = 8 & INSTRUCTION_NEXT(8) = 9 & INSTRUCTION_NEXT(9) = 10 & "`Seen and used machines assertions'" & !(c$0).(c$0 : (1..3)*{COLOR} => c$0 = 1|->COLOR or c$0 = 2|->COLOR or c$0 = 3|->COLOR) & NB_WORD8S = 256 & !n.(n : WORD8 => 0<=n) & !n.(n : WORD8 => n<=255) & WORD8_POSITION = BV8_INDEX & 2**16 = 65536 & 0 = WORD8_TO_WORD16(0,0) & BIT_FLIP(0) = 1 & BIT_FLIP(1) = 0 & BIT_AND(0,0) = 0 & BIT_AND(0,1) = 0 & BIT_AND(1,0) = 0 & BIT_AND(1,1) = 1 & BIT_IOR(0,0) = 0 & BIT_IOR(0,1) = 0 & BIT_IOR(1,0) = 0 & BIT_IOR(1,1) = 1 & BIT_XOR(0,0) = 0 & BIT_XOR(0,1) = 1 & BIT_XOR(1,0) = 1 & BIT_XOR(1,1) = 0 & !(vec,idx,b).(vec : BV8 & idx : BV8_INDEX & b : BIT => BV8_SET_BIT(vec,idx,b)(idx) = b) & dom(add) = WORD8*WORD8 & ran(add) : POW(WORD8*BOOL*BOOL) & dom(substract) = WORD8*WORD8 & ran(substract) : POW(WORD8*BOOL*BOOL) & dom(and) = WORD8*WORD8 & ran(and) : POW(WORD8*BOOL) & dom(ior) = WORD8*WORD8 & ran(ior) : POW(WORD8*BOOL) & dom(xor) = WORD8*WORD8 & ran(xor) : POW(WORD8*BOOL) & dom(bitclear) = WORD8*WORD8_POSITION & ran(bitclear) : POW(WORD8) & dom(bitset) = WORD8*WORD8_POSITION & ran(bitset) : POW(WORD8) & dom(bitget) = WORD8*WORD8_POSITION & ran(bitget) : POW(BIT) & dom(complement) = WORD8 & ran(complement) : POW(WORD8) & dom(swap) = WORD8 & ran(swap) : POW(WORD8) & ran(rotateleft) : POW(WORD8*BOOL) & dom(rotateleft) = WORD8 & dom(rotateright) = WORD8 & ran(rotateright) : POW(WORD8*BOOL) & !(w,idx).(w : WORD8 & idx : WORD8_POSITION => bitget(w,idx) = WORD8_TO_BV8(w)(idx)) & color_refine(1|->COLOR) = 0 & color_refine(2|->COLOR) = 1 & color_refine(3|->COLOR) = 2 & color_step(0) = 1 & color_step(1) = 2 & color_step(2) = 0);
  ("`Local hypotheses'" & rgs8$0 : (1..18)*{id_register8} +-> WORD8 & dom(rgs8$0) = (1..18)*{id_register8} & ran(rgs8$0) = WORD8 & mem$0 : WORD16 +-> WORD8 & dom(mem$0) = WORD16 & pc$0 : WORD16 & sp$0 : WORD16 & ix$0 : WORD16 & iy$0 : WORD16 & stack$0 : WORD16 +-> WORD8 & dom(stack$0) = WORD16);
  "`Check preconditions of called operation, or While loop construction, or Assert predicates'" & "`Check preconditions of called operation, or While loop construction, or Assert predicates'";
  (0 : WORD8);
  ("`Local hypotheses'" & address : WORD16 & address = WORD8_TO_WORD16((rgs8$0<+{13|->id_register8|->0}<+{14|->id_register8|->0})(13|->id_register8),(rgs8$0<+{13|->id_register8|->0}<+{14|->id_register8|->0})(14|->id_register8)) & rgs8$0 : (1..18)*{id_register8} +-> WORD8 & dom(rgs8$0) = (1..18)*{id_register8} & ran(rgs8$0) = WORD8 & mem$0 : WORD16 +-> WORD8 & dom(mem$0) = WORD16 & pc$0 : WORD16 & sp$0 : WORD16 & ix$0 : WORD16 & iy$0 : WORD16 & stack$0 : WORD16 +-> WORD8 & dom(stack$0) = WORD16 & rgs8$0<+{13|->id_register8|->0}<+{14|->id_register8|->0} : (1..18)*{id_register8} +-> WORD8 & dom(rgs8$0<+{13|->id_register8|->0}<+{14|->id_register8|->0}) = (1..18)*{id_register8} & mem$0<+{address|->(rgs8$0<+{13|->id_register8|->0}<+{14|->id_register8|->0})(13|->id_register8)} : WORD16 +-> WORD8 & dom(mem$0<+{address|->(rgs8$0<+{13|->id_register8|->0}<+{14|->id_register8|->0})(13|->id_register8)}) = WORD16 & INSTRUCTION_NEXT(INSTRUCTION_NEXT(INSTRUCTION_NEXT(pc$0))) : WORD16 & ran(stack$0) : POW(WORD8) & ran(mem$0<+{address|->(rgs8$0<+{13|->id_register8|->0}<+{14|->id_register8|->0})(13|->id_register8)}) : POW(WORD8) & ran(rgs8$0<+{13|->id_register8|->0}<+{14|->id_register8|->0}) : POW(WORD8));
  "`Check that the invariant (mpmem(0) = counter) is established by the initialisation - ref 4.3, 5.4'" & "`Check initialisation refinement - ref 4.3, 5.4'";
  ((mem$0<+{address|->(rgs8$0<+{13|->id_register8|->0}<+{14|->id_register8|->0})(13|->id_register8)})(0) = 0);
  "`Check that the invariant (mpmem(0) : 0..2) is established by the initialisation - ref 4.3, 5.4'";
  ((mem$0<+{address|->(rgs8$0<+{13|->id_register8|->0}<+{14|->id_register8|->0})(13|->id_register8)})(0) : 0..2);
  ("`Previous components invariants'" & counter : INTEGER & 0<=counter & counter : 0..2 & counter = color_refine(color) & color : (1..3)*{COLOR} & "`Component invariant'" & mpmem$1(0) : 0..2 & mpmem$1(0) = counter);
  "`Check assertion (INSTRUCTION_NEXT(13) = 14) deduction - ref 3.2, 4.2, 5.3'";
  (INSTRUCTION_NEXT(13) = 14);
  "`Check assertion (INSTRUCTION_NEXT(12) = 13) deduction - ref 3.2, 4.2, 5.3'";
  (INSTRUCTION_NEXT(12) = 13);
  "`Check assertion (INSTRUCTION_NEXT(11) = 12) deduction - ref 3.2, 4.2, 5.3'";
  (INSTRUCTION_NEXT(11) = 12);
  "`Check assertion (INSTRUCTION_NEXT(10) = 11) deduction - ref 3.2, 4.2, 5.3'";
  (INSTRUCTION_NEXT(10) = 11);
  ("`Component assertions'" & INSTRUCTION_NEXT(0) = 1 & INSTRUCTION_NEXT(1) = 2 & INSTRUCTION_NEXT(2) = 3 & INSTRUCTION_NEXT(3) = 4 & INSTRUCTION_NEXT(4) = 5 & INSTRUCTION_NEXT(5) = 6 & INSTRUCTION_NEXT(6) = 7 & INSTRUCTION_NEXT(7) = 8 & INSTRUCTION_NEXT(8) = 9 & INSTRUCTION_NEXT(9) = 10 & INSTRUCTION_NEXT(10) = 11 & INSTRUCTION_NEXT(11) = 12 & INSTRUCTION_NEXT(12) = 13 & INSTRUCTION_NEXT(13) = 14);
  "`Check preconditions of called operation, or While loop construction, or Assert predicates'";
  (0 : INSTRUCTION);
  (0<=mpsp$1);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)));
  (14-mppc$2 : INTEGER);
  (0<=14-mppc$2);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & not(mppc$2 = 3) & not(mppc$2 = 2) & not(mppc$2 = 1) & mppc$2 = 0);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & not(mppc$2 = 3) & not(mppc$2 = 2) & mppc$2 = 1);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & not(mppc$2 = 3) & mppc$2 = 2);
  (1 : 0..WORD8_LENGTH-1);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & mppc$2 = 4);
  (7 : INSTRUCTION);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & mppc$2 = 5);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & mppc$2 = 6);
  (14 : INSTRUCTION);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & mppc$2 = 7);
  (0 : 0..WORD8_LENGTH-1);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 8) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & mppc$2 = 9);
  (11 : INSTRUCTION);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 8) & not(mppc$2 = 9) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & mppc$2 = 10);
  (13 : INSTRUCTION);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 8) & not(mppc$2 = 9) & not(mppc$2 = 10) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & mppc$2 = 11);
  (1 : WORD8);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 8) & not(mppc$2 = 9) & not(mppc$2 = 10) & not(mppc$2 = 11) & not(mppc$2 = 14) & not(mppc$2 = 13) & mppc$2 = 12);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 8) & not(mppc$2 = 9) & not(mppc$2 = 10) & not(mppc$2 = 11) & not(mppc$2 = 12) & not(mppc$2 = 14) & mppc$2 = 13);
  (2 : WORD8);
  (14-INSTRUCTION_NEXT(mppc$2)+1<=14-mppc$2);
  (0<=INSTRUCTION_NEXT(mppc$2));
  (INSTRUCTION_NEXT(mppc$2)<=14);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & not(mppc$2 = 3) & not(mppc$2 = 2) & not(mppc$2 = 1) & mppc$2 = 0 & INSTRUCTION_NEXT(mppc$2) = 1);
  ((mprgs8$2<+{13|->id_register8|->0})(13|->id_register8) = 0);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & not(mppc$2 = 3) & not(mppc$2 = 2) & not(mppc$2 = 1) & mppc$2 = 0 & INSTRUCTION_NEXT(mppc$2) = 2);
  ((mprgs8$2<+{13|->id_register8|->0})(14|->id_register8) = 0);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & not(mppc$2 = 3) & not(mppc$2 = 2) & not(mppc$2 = 1) & mppc$2 = 0 & INSTRUCTION_NEXT(mppc$2) = 3);
  (bitget(mpmem$2(0),1) = bitget((mprgs8$2<+{13|->id_register8|->0})(3|->id_register8),6));
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & not(mppc$2 = 3) & not(mppc$2 = 2) & not(mppc$2 = 1) & mppc$2 = 0 & INSTRUCTION_NEXT(mppc$2) = 4);
  (bitget((mprgs8$2<+{13|->id_register8|->0})(3|->id_register8),6) = 0);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & not(mppc$2 = 3) & not(mppc$2 = 2) & not(mppc$2 = 1) & mppc$2 = 0 & INSTRUCTION_NEXT(mppc$2) = 5);
  (bitget(mpmem$2(0),1) = bitget((mprgs8$2<+{13|->id_register8|->0})(3|->id_register8),1));
  (bitget((mprgs8$2<+{13|->id_register8|->0})(3|->id_register8),6) = 1);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & not(mppc$2 = 3) & not(mppc$2 = 2) & not(mppc$2 = 1) & mppc$2 = 0 & INSTRUCTION_NEXT(mppc$2) = 6);
  ((mprgs8$2<+{13|->id_register8|->0})(1|->id_register8) = 0);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & not(mppc$2 = 3) & not(mppc$2 = 2) & not(mppc$2 = 1) & mppc$2 = 0 & INSTRUCTION_NEXT(mppc$2) = 7);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & not(mppc$2 = 3) & not(mppc$2 = 2) & not(mppc$2 = 1) & mppc$2 = 0 & INSTRUCTION_NEXT(mppc$2) = 8);
  (bitget(mpmem$2(0),0) = bitget((mprgs8$2<+{13|->id_register8|->0})(3|->id_register8),6));
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & not(mppc$2 = 3) & not(mppc$2 = 2) & not(mppc$2 = 1) & mppc$2 = 0 & INSTRUCTION_NEXT(mppc$2) = 9);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & not(mppc$2 = 3) & not(mppc$2 = 2) & not(mppc$2 = 1) & mppc$2 = 0 & INSTRUCTION_NEXT(mppc$2) = 10);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & not(mppc$2 = 3) & not(mppc$2 = 2) & not(mppc$2 = 1) & mppc$2 = 0 & INSTRUCTION_NEXT(mppc$2) = 11);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & not(mppc$2 = 3) & not(mppc$2 = 2) & not(mppc$2 = 1) & mppc$2 = 0 & INSTRUCTION_NEXT(mppc$2) = 12);
  ((mprgs8$2<+{13|->id_register8|->0})(1|->id_register8) = 1);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & not(mppc$2 = 3) & not(mppc$2 = 2) & not(mppc$2 = 1) & mppc$2 = 0 & INSTRUCTION_NEXT(mppc$2) = 13);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & not(mppc$2 = 3) & not(mppc$2 = 2) & not(mppc$2 = 1) & mppc$2 = 0 & INSTRUCTION_NEXT(mppc$2) = 14);
  (bitget((mprgs8$2<+{13|->id_register8|->0})(3|->id_register8),1) = 1);
  ((mprgs8$2<+{13|->id_register8|->0})(1|->id_register8) = color_step(counter));
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & not(mppc$2 = 3) & not(mppc$2 = 2) & not(mppc$2 = 1) & mppc$2 = 0 & INSTRUCTION_NEXT(mppc$2) = 15);
  (mpmem$2(0) = color_step(counter));
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & not(mppc$2 = 3) & not(mppc$2 = 2) & mppc$2 = 1 & INSTRUCTION_NEXT(mppc$2) = 1);
  ((mprgs8$2<+{14|->id_register8|->0})(13|->id_register8) = 0);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & not(mppc$2 = 3) & not(mppc$2 = 2) & mppc$2 = 1 & INSTRUCTION_NEXT(mppc$2) = 2);
  ((mprgs8$2<+{14|->id_register8|->0})(14|->id_register8) = 0);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & not(mppc$2 = 3) & not(mppc$2 = 2) & mppc$2 = 1 & INSTRUCTION_NEXT(mppc$2) = 3);
  (bitget(mpmem$2(0),1) = bitget((mprgs8$2<+{14|->id_register8|->0})(3|->id_register8),6));
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & not(mppc$2 = 3) & not(mppc$2 = 2) & mppc$2 = 1 & INSTRUCTION_NEXT(mppc$2) = 4);
  (bitget((mprgs8$2<+{14|->id_register8|->0})(3|->id_register8),6) = 0);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & not(mppc$2 = 3) & not(mppc$2 = 2) & mppc$2 = 1 & INSTRUCTION_NEXT(mppc$2) = 5);
  (bitget(mpmem$2(0),1) = bitget((mprgs8$2<+{14|->id_register8|->0})(3|->id_register8),1));
  (bitget((mprgs8$2<+{14|->id_register8|->0})(3|->id_register8),6) = 1);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & not(mppc$2 = 3) & not(mppc$2 = 2) & mppc$2 = 1 & INSTRUCTION_NEXT(mppc$2) = 6);
  ((mprgs8$2<+{14|->id_register8|->0})(1|->id_register8) = 0);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & not(mppc$2 = 3) & not(mppc$2 = 2) & mppc$2 = 1 & INSTRUCTION_NEXT(mppc$2) = 7);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & not(mppc$2 = 3) & not(mppc$2 = 2) & mppc$2 = 1 & INSTRUCTION_NEXT(mppc$2) = 8);
  (bitget(mpmem$2(0),0) = bitget((mprgs8$2<+{14|->id_register8|->0})(3|->id_register8),6));
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & not(mppc$2 = 3) & not(mppc$2 = 2) & mppc$2 = 1 & INSTRUCTION_NEXT(mppc$2) = 9);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & not(mppc$2 = 3) & not(mppc$2 = 2) & mppc$2 = 1 & INSTRUCTION_NEXT(mppc$2) = 10);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & not(mppc$2 = 3) & not(mppc$2 = 2) & mppc$2 = 1 & INSTRUCTION_NEXT(mppc$2) = 11);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & not(mppc$2 = 3) & not(mppc$2 = 2) & mppc$2 = 1 & INSTRUCTION_NEXT(mppc$2) = 12);
  ((mprgs8$2<+{14|->id_register8|->0})(1|->id_register8) = 1);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & not(mppc$2 = 3) & not(mppc$2 = 2) & mppc$2 = 1 & INSTRUCTION_NEXT(mppc$2) = 13);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & not(mppc$2 = 3) & not(mppc$2 = 2) & mppc$2 = 1 & INSTRUCTION_NEXT(mppc$2) = 14);
  (bitget((mprgs8$2<+{14|->id_register8|->0})(3|->id_register8),1) = 1);
  ((mprgs8$2<+{14|->id_register8|->0})(1|->id_register8) = color_step(counter));
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & not(mppc$2 = 3) & not(mppc$2 = 2) & mppc$2 = 1 & INSTRUCTION_NEXT(mppc$2) = 15);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & not(mppc$2 = 3) & address : WORD16 & ib : BIT & nw8 : BV8 & address = WORD8_TO_WORD16(mprgs8$2(13|->id_register8),mprgs8$2(14|->id_register8)) & ib = WORD8_TO_BV8(mpmem$2(address))(1) & nw8 = BV8_SET_BIT(WORD8_TO_BV8(mprgs8$2(3|->id_register8)),6,ib) & mppc$2 = 2);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & not(mppc$2 = 3) & address : WORD16 & ib : BIT & nw8 : BV8 & address = WORD8_TO_WORD16(mprgs8$2(13|->id_register8),mprgs8$2(14|->id_register8)) & ib = WORD8_TO_BV8(mpmem$2(address))(1) & nw8 = BV8_SET_BIT(WORD8_TO_BV8(mprgs8$2(3|->id_register8)),6,ib) & mppc$2 = 2 & INSTRUCTION_NEXT(mppc$2) = 1);
  ((mprgs8$2<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(13|->id_register8) = 0);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & not(mppc$2 = 3) & address : WORD16 & ib : BIT & nw8 : BV8 & address = WORD8_TO_WORD16(mprgs8$2(13|->id_register8),mprgs8$2(14|->id_register8)) & ib = WORD8_TO_BV8(mpmem$2(address))(1) & nw8 = BV8_SET_BIT(WORD8_TO_BV8(mprgs8$2(3|->id_register8)),6,ib) & mppc$2 = 2 & INSTRUCTION_NEXT(mppc$2) = 2);
  ((mprgs8$2<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(14|->id_register8) = 0);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & not(mppc$2 = 3) & address : WORD16 & ib : BIT & nw8 : BV8 & address = WORD8_TO_WORD16(mprgs8$2(13|->id_register8),mprgs8$2(14|->id_register8)) & ib = WORD8_TO_BV8(mpmem$2(address))(1) & nw8 = BV8_SET_BIT(WORD8_TO_BV8(mprgs8$2(3|->id_register8)),6,ib) & mppc$2 = 2 & INSTRUCTION_NEXT(mppc$2) = 3);
  (bitget(mpmem$2(0),1) = bitget((mprgs8$2<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(3|->id_register8),6));
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & not(mppc$2 = 3) & address : WORD16 & ib : BIT & nw8 : BV8 & address = WORD8_TO_WORD16(mprgs8$2(13|->id_register8),mprgs8$2(14|->id_register8)) & ib = WORD8_TO_BV8(mpmem$2(address))(1) & nw8 = BV8_SET_BIT(WORD8_TO_BV8(mprgs8$2(3|->id_register8)),6,ib) & mppc$2 = 2 & INSTRUCTION_NEXT(mppc$2) = 4);
  (bitget((mprgs8$2<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(3|->id_register8),6) = 0);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & not(mppc$2 = 3) & address : WORD16 & ib : BIT & nw8 : BV8 & address = WORD8_TO_WORD16(mprgs8$2(13|->id_register8),mprgs8$2(14|->id_register8)) & ib = WORD8_TO_BV8(mpmem$2(address))(1) & nw8 = BV8_SET_BIT(WORD8_TO_BV8(mprgs8$2(3|->id_register8)),6,ib) & mppc$2 = 2 & INSTRUCTION_NEXT(mppc$2) = 5);
  (bitget(mpmem$2(0),1) = bitget((mprgs8$2<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(3|->id_register8),1));
  (bitget((mprgs8$2<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(3|->id_register8),6) = 1);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & not(mppc$2 = 3) & address : WORD16 & ib : BIT & nw8 : BV8 & address = WORD8_TO_WORD16(mprgs8$2(13|->id_register8),mprgs8$2(14|->id_register8)) & ib = WORD8_TO_BV8(mpmem$2(address))(1) & nw8 = BV8_SET_BIT(WORD8_TO_BV8(mprgs8$2(3|->id_register8)),6,ib) & mppc$2 = 2 & INSTRUCTION_NEXT(mppc$2) = 6);
  ((mprgs8$2<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(1|->id_register8) = 0);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & not(mppc$2 = 3) & address : WORD16 & ib : BIT & nw8 : BV8 & address = WORD8_TO_WORD16(mprgs8$2(13|->id_register8),mprgs8$2(14|->id_register8)) & ib = WORD8_TO_BV8(mpmem$2(address))(1) & nw8 = BV8_SET_BIT(WORD8_TO_BV8(mprgs8$2(3|->id_register8)),6,ib) & mppc$2 = 2 & INSTRUCTION_NEXT(mppc$2) = 7);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & not(mppc$2 = 3) & address : WORD16 & ib : BIT & nw8 : BV8 & address = WORD8_TO_WORD16(mprgs8$2(13|->id_register8),mprgs8$2(14|->id_register8)) & ib = WORD8_TO_BV8(mpmem$2(address))(1) & nw8 = BV8_SET_BIT(WORD8_TO_BV8(mprgs8$2(3|->id_register8)),6,ib) & mppc$2 = 2 & INSTRUCTION_NEXT(mppc$2) = 8);
  (bitget(mpmem$2(0),0) = bitget((mprgs8$2<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(3|->id_register8),6));
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & not(mppc$2 = 3) & address : WORD16 & ib : BIT & nw8 : BV8 & address = WORD8_TO_WORD16(mprgs8$2(13|->id_register8),mprgs8$2(14|->id_register8)) & ib = WORD8_TO_BV8(mpmem$2(address))(1) & nw8 = BV8_SET_BIT(WORD8_TO_BV8(mprgs8$2(3|->id_register8)),6,ib) & mppc$2 = 2 & INSTRUCTION_NEXT(mppc$2) = 9);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & not(mppc$2 = 3) & address : WORD16 & ib : BIT & nw8 : BV8 & address = WORD8_TO_WORD16(mprgs8$2(13|->id_register8),mprgs8$2(14|->id_register8)) & ib = WORD8_TO_BV8(mpmem$2(address))(1) & nw8 = BV8_SET_BIT(WORD8_TO_BV8(mprgs8$2(3|->id_register8)),6,ib) & mppc$2 = 2 & INSTRUCTION_NEXT(mppc$2) = 10);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & not(mppc$2 = 3) & address : WORD16 & ib : BIT & nw8 : BV8 & address = WORD8_TO_WORD16(mprgs8$2(13|->id_register8),mprgs8$2(14|->id_register8)) & ib = WORD8_TO_BV8(mpmem$2(address))(1) & nw8 = BV8_SET_BIT(WORD8_TO_BV8(mprgs8$2(3|->id_register8)),6,ib) & mppc$2 = 2 & INSTRUCTION_NEXT(mppc$2) = 11);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & not(mppc$2 = 3) & address : WORD16 & ib : BIT & nw8 : BV8 & address = WORD8_TO_WORD16(mprgs8$2(13|->id_register8),mprgs8$2(14|->id_register8)) & ib = WORD8_TO_BV8(mpmem$2(address))(1) & nw8 = BV8_SET_BIT(WORD8_TO_BV8(mprgs8$2(3|->id_register8)),6,ib) & mppc$2 = 2 & INSTRUCTION_NEXT(mppc$2) = 12);
  ((mprgs8$2<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(1|->id_register8) = 1);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & not(mppc$2 = 3) & address : WORD16 & ib : BIT & nw8 : BV8 & address = WORD8_TO_WORD16(mprgs8$2(13|->id_register8),mprgs8$2(14|->id_register8)) & ib = WORD8_TO_BV8(mpmem$2(address))(1) & nw8 = BV8_SET_BIT(WORD8_TO_BV8(mprgs8$2(3|->id_register8)),6,ib) & mppc$2 = 2 & INSTRUCTION_NEXT(mppc$2) = 13);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & not(mppc$2 = 3) & address : WORD16 & ib : BIT & nw8 : BV8 & address = WORD8_TO_WORD16(mprgs8$2(13|->id_register8),mprgs8$2(14|->id_register8)) & ib = WORD8_TO_BV8(mpmem$2(address))(1) & nw8 = BV8_SET_BIT(WORD8_TO_BV8(mprgs8$2(3|->id_register8)),6,ib) & mppc$2 = 2 & INSTRUCTION_NEXT(mppc$2) = 14);
  (bitget((mprgs8$2<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(3|->id_register8),1) = 1);
  ((mprgs8$2<+{3|->id_register8|->BV8_TO_WORD8(nw8)})(1|->id_register8) = color_step(counter));
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & not(mppc$2 = 3) & address : WORD16 & ib : BIT & nw8 : BV8 & address = WORD8_TO_WORD16(mprgs8$2(13|->id_register8),mprgs8$2(14|->id_register8)) & ib = WORD8_TO_BV8(mpmem$2(address))(1) & nw8 = BV8_SET_BIT(WORD8_TO_BV8(mprgs8$2(3|->id_register8)),6,ib) & mppc$2 = 2 & INSTRUCTION_NEXT(mppc$2) = 15);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & WORD8_TO_BV8(mprgs8$2(3|->id_register8))(6) = 0 & mppc$2 = 3);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & WORD8_TO_BV8(mprgs8$2(3|->id_register8))(6) = 0 & mppc$2 = 3 & INSTRUCTION_NEXT(mppc$2) = 4);
  (bitget(mprgs8$2(3|->id_register8),6) = 0);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & WORD8_TO_BV8(mprgs8$2(3|->id_register8))(6) = 0 & mppc$2 = 3 & INSTRUCTION_NEXT(mppc$2) = 5);
  (bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1));
  (bitget(mprgs8$2(3|->id_register8),6) = 1);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & WORD8_TO_BV8(mprgs8$2(3|->id_register8))(6) = 0 & mppc$2 = 3 & INSTRUCTION_NEXT(mppc$2) = 6);
  (mprgs8$2(1|->id_register8) = 0);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & WORD8_TO_BV8(mprgs8$2(3|->id_register8))(6) = 0 & mppc$2 = 3 & INSTRUCTION_NEXT(mppc$2) = 7);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & WORD8_TO_BV8(mprgs8$2(3|->id_register8))(6) = 0 & mppc$2 = 3 & INSTRUCTION_NEXT(mppc$2) = 8);
  (bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6));
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & WORD8_TO_BV8(mprgs8$2(3|->id_register8))(6) = 0 & mppc$2 = 3 & INSTRUCTION_NEXT(mppc$2) = 9);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & WORD8_TO_BV8(mprgs8$2(3|->id_register8))(6) = 0 & mppc$2 = 3 & INSTRUCTION_NEXT(mppc$2) = 10);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & WORD8_TO_BV8(mprgs8$2(3|->id_register8))(6) = 0 & mppc$2 = 3 & INSTRUCTION_NEXT(mppc$2) = 11);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & WORD8_TO_BV8(mprgs8$2(3|->id_register8))(6) = 0 & mppc$2 = 3 & INSTRUCTION_NEXT(mppc$2) = 12);
  (mprgs8$2(1|->id_register8) = 1);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & WORD8_TO_BV8(mprgs8$2(3|->id_register8))(6) = 0 & mppc$2 = 3 & INSTRUCTION_NEXT(mppc$2) = 13);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & WORD8_TO_BV8(mprgs8$2(3|->id_register8))(6) = 0 & mppc$2 = 3 & INSTRUCTION_NEXT(mppc$2) = 14);
  (bitget(mprgs8$2(3|->id_register8),1) = 1);
  (mprgs8$2(1|->id_register8) = color_step(counter));
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & WORD8_TO_BV8(mprgs8$2(3|->id_register8))(6) = 0 & mppc$2 = 3 & INSTRUCTION_NEXT(mppc$2) = 15);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & not(WORD8_TO_BV8(mprgs8$2(3|->id_register8))(6) = 0) & mppc$2 = 3);
  (14-INSTRUCTION_NEXT(INSTRUCTION_NEXT(mppc$2))+1<=14-mppc$2);
  (0<=INSTRUCTION_NEXT(INSTRUCTION_NEXT(mppc$2)));
  (INSTRUCTION_NEXT(INSTRUCTION_NEXT(mppc$2))<=14);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & not(WORD8_TO_BV8(mprgs8$2(3|->id_register8))(6) = 0) & mppc$2 = 3 & INSTRUCTION_NEXT(INSTRUCTION_NEXT(mppc$2)) = 4);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & not(WORD8_TO_BV8(mprgs8$2(3|->id_register8))(6) = 0) & mppc$2 = 3 & INSTRUCTION_NEXT(INSTRUCTION_NEXT(mppc$2)) = 5);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & not(WORD8_TO_BV8(mprgs8$2(3|->id_register8))(6) = 0) & mppc$2 = 3 & INSTRUCTION_NEXT(INSTRUCTION_NEXT(mppc$2)) = 6);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & not(WORD8_TO_BV8(mprgs8$2(3|->id_register8))(6) = 0) & mppc$2 = 3 & INSTRUCTION_NEXT(INSTRUCTION_NEXT(mppc$2)) = 7);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & not(WORD8_TO_BV8(mprgs8$2(3|->id_register8))(6) = 0) & mppc$2 = 3 & INSTRUCTION_NEXT(INSTRUCTION_NEXT(mppc$2)) = 8);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & not(WORD8_TO_BV8(mprgs8$2(3|->id_register8))(6) = 0) & mppc$2 = 3 & INSTRUCTION_NEXT(INSTRUCTION_NEXT(mppc$2)) = 9);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & not(WORD8_TO_BV8(mprgs8$2(3|->id_register8))(6) = 0) & mppc$2 = 3 & INSTRUCTION_NEXT(INSTRUCTION_NEXT(mppc$2)) = 10);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & not(WORD8_TO_BV8(mprgs8$2(3|->id_register8))(6) = 0) & mppc$2 = 3 & INSTRUCTION_NEXT(INSTRUCTION_NEXT(mppc$2)) = 11);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & not(WORD8_TO_BV8(mprgs8$2(3|->id_register8))(6) = 0) & mppc$2 = 3 & INSTRUCTION_NEXT(INSTRUCTION_NEXT(mppc$2)) = 12);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & not(WORD8_TO_BV8(mprgs8$2(3|->id_register8))(6) = 0) & mppc$2 = 3 & INSTRUCTION_NEXT(INSTRUCTION_NEXT(mppc$2)) = 13);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & not(WORD8_TO_BV8(mprgs8$2(3|->id_register8))(6) = 0) & mppc$2 = 3 & INSTRUCTION_NEXT(INSTRUCTION_NEXT(mppc$2)) = 14);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & not(WORD8_TO_BV8(mprgs8$2(3|->id_register8))(6) = 0) & mppc$2 = 3 & INSTRUCTION_NEXT(INSTRUCTION_NEXT(mppc$2)) = 15);
  (8<=14-mppc$2);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & mppc$2 = 5 & INSTRUCTION_NEXT(mppc$2) = 1);
  ((mprgs8$2<+{1|->id_register8|->0})(13|->id_register8) = 0);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & mppc$2 = 5 & INSTRUCTION_NEXT(mppc$2) = 2);
  ((mprgs8$2<+{1|->id_register8|->0})(14|->id_register8) = 0);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & mppc$2 = 5 & INSTRUCTION_NEXT(mppc$2) = 3);
  (bitget(mpmem$2(0),1) = bitget((mprgs8$2<+{1|->id_register8|->0})(3|->id_register8),6));
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & mppc$2 = 5 & INSTRUCTION_NEXT(mppc$2) = 4);
  (bitget((mprgs8$2<+{1|->id_register8|->0})(3|->id_register8),6) = 0);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & mppc$2 = 5 & INSTRUCTION_NEXT(mppc$2) = 5);
  (bitget(mpmem$2(0),1) = bitget((mprgs8$2<+{1|->id_register8|->0})(3|->id_register8),1));
  (bitget((mprgs8$2<+{1|->id_register8|->0})(3|->id_register8),6) = 1);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & mppc$2 = 5 & INSTRUCTION_NEXT(mppc$2) = 6);
  ((mprgs8$2<+{1|->id_register8|->0})(1|->id_register8) = 0);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & mppc$2 = 5 & INSTRUCTION_NEXT(mppc$2) = 7);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & mppc$2 = 5 & INSTRUCTION_NEXT(mppc$2) = 8);
  (bitget(mpmem$2(0),0) = bitget((mprgs8$2<+{1|->id_register8|->0})(3|->id_register8),6));
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & mppc$2 = 5 & INSTRUCTION_NEXT(mppc$2) = 9);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & mppc$2 = 5 & INSTRUCTION_NEXT(mppc$2) = 10);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & mppc$2 = 5 & INSTRUCTION_NEXT(mppc$2) = 11);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & mppc$2 = 5 & INSTRUCTION_NEXT(mppc$2) = 12);
  ((mprgs8$2<+{1|->id_register8|->0})(1|->id_register8) = 1);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & mppc$2 = 5 & INSTRUCTION_NEXT(mppc$2) = 13);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & mppc$2 = 5 & INSTRUCTION_NEXT(mppc$2) = 14);
  (bitget((mprgs8$2<+{1|->id_register8|->0})(3|->id_register8),1) = 1);
  ((mprgs8$2<+{1|->id_register8|->0})(1|->id_register8) = color_step(counter));
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & mppc$2 = 5 & INSTRUCTION_NEXT(mppc$2) = 15);
  (1<=14-mppc$2);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & address : WORD16 & ib : BIT & nw8 : BV8 & address = WORD8_TO_WORD16(mprgs8$2(13|->id_register8),mprgs8$2(14|->id_register8)) & ib = WORD8_TO_BV8(mpmem$2(address))(0) & nw8 = BV8_SET_BIT(WORD8_TO_BV8(mprgs8$2(3|->id_register8)),6,ib) & mppc$2 = 7);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & address : WORD16 & ib : BIT & nw8 : BV8 & address = WORD8_TO_WORD16(mprgs8$2(13|->id_register8),mprgs8$2(14|->id_register8)) & ib = WORD8_TO_BV8(mpmem$2(address))(0) & nw8 = BV8_SET_BIT(WORD8_TO_BV8(mprgs8$2(3|->id_register8)),6,ib) & mppc$2 = 7 & INSTRUCTION_NEXT(mppc$2) = 1);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & address : WORD16 & ib : BIT & nw8 : BV8 & address = WORD8_TO_WORD16(mprgs8$2(13|->id_register8),mprgs8$2(14|->id_register8)) & ib = WORD8_TO_BV8(mpmem$2(address))(0) & nw8 = BV8_SET_BIT(WORD8_TO_BV8(mprgs8$2(3|->id_register8)),6,ib) & mppc$2 = 7 & INSTRUCTION_NEXT(mppc$2) = 2);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & address : WORD16 & ib : BIT & nw8 : BV8 & address = WORD8_TO_WORD16(mprgs8$2(13|->id_register8),mprgs8$2(14|->id_register8)) & ib = WORD8_TO_BV8(mpmem$2(address))(0) & nw8 = BV8_SET_BIT(WORD8_TO_BV8(mprgs8$2(3|->id_register8)),6,ib) & mppc$2 = 7 & INSTRUCTION_NEXT(mppc$2) = 3);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & address : WORD16 & ib : BIT & nw8 : BV8 & address = WORD8_TO_WORD16(mprgs8$2(13|->id_register8),mprgs8$2(14|->id_register8)) & ib = WORD8_TO_BV8(mpmem$2(address))(0) & nw8 = BV8_SET_BIT(WORD8_TO_BV8(mprgs8$2(3|->id_register8)),6,ib) & mppc$2 = 7 & INSTRUCTION_NEXT(mppc$2) = 4);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & address : WORD16 & ib : BIT & nw8 : BV8 & address = WORD8_TO_WORD16(mprgs8$2(13|->id_register8),mprgs8$2(14|->id_register8)) & ib = WORD8_TO_BV8(mpmem$2(address))(0) & nw8 = BV8_SET_BIT(WORD8_TO_BV8(mprgs8$2(3|->id_register8)),6,ib) & mppc$2 = 7 & INSTRUCTION_NEXT(mppc$2) = 5);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & address : WORD16 & ib : BIT & nw8 : BV8 & address = WORD8_TO_WORD16(mprgs8$2(13|->id_register8),mprgs8$2(14|->id_register8)) & ib = WORD8_TO_BV8(mpmem$2(address))(0) & nw8 = BV8_SET_BIT(WORD8_TO_BV8(mprgs8$2(3|->id_register8)),6,ib) & mppc$2 = 7 & INSTRUCTION_NEXT(mppc$2) = 6);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & address : WORD16 & ib : BIT & nw8 : BV8 & address = WORD8_TO_WORD16(mprgs8$2(13|->id_register8),mprgs8$2(14|->id_register8)) & ib = WORD8_TO_BV8(mpmem$2(address))(0) & nw8 = BV8_SET_BIT(WORD8_TO_BV8(mprgs8$2(3|->id_register8)),6,ib) & mppc$2 = 7 & INSTRUCTION_NEXT(mppc$2) = 7);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & address : WORD16 & ib : BIT & nw8 : BV8 & address = WORD8_TO_WORD16(mprgs8$2(13|->id_register8),mprgs8$2(14|->id_register8)) & ib = WORD8_TO_BV8(mpmem$2(address))(0) & nw8 = BV8_SET_BIT(WORD8_TO_BV8(mprgs8$2(3|->id_register8)),6,ib) & mppc$2 = 7 & INSTRUCTION_NEXT(mppc$2) = 8);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & address : WORD16 & ib : BIT & nw8 : BV8 & address = WORD8_TO_WORD16(mprgs8$2(13|->id_register8),mprgs8$2(14|->id_register8)) & ib = WORD8_TO_BV8(mpmem$2(address))(0) & nw8 = BV8_SET_BIT(WORD8_TO_BV8(mprgs8$2(3|->id_register8)),6,ib) & mppc$2 = 7 & INSTRUCTION_NEXT(mppc$2) = 9);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & address : WORD16 & ib : BIT & nw8 : BV8 & address = WORD8_TO_WORD16(mprgs8$2(13|->id_register8),mprgs8$2(14|->id_register8)) & ib = WORD8_TO_BV8(mpmem$2(address))(0) & nw8 = BV8_SET_BIT(WORD8_TO_BV8(mprgs8$2(3|->id_register8)),6,ib) & mppc$2 = 7 & INSTRUCTION_NEXT(mppc$2) = 10);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & address : WORD16 & ib : BIT & nw8 : BV8 & address = WORD8_TO_WORD16(mprgs8$2(13|->id_register8),mprgs8$2(14|->id_register8)) & ib = WORD8_TO_BV8(mpmem$2(address))(0) & nw8 = BV8_SET_BIT(WORD8_TO_BV8(mprgs8$2(3|->id_register8)),6,ib) & mppc$2 = 7 & INSTRUCTION_NEXT(mppc$2) = 11);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & address : WORD16 & ib : BIT & nw8 : BV8 & address = WORD8_TO_WORD16(mprgs8$2(13|->id_register8),mprgs8$2(14|->id_register8)) & ib = WORD8_TO_BV8(mpmem$2(address))(0) & nw8 = BV8_SET_BIT(WORD8_TO_BV8(mprgs8$2(3|->id_register8)),6,ib) & mppc$2 = 7 & INSTRUCTION_NEXT(mppc$2) = 12);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & address : WORD16 & ib : BIT & nw8 : BV8 & address = WORD8_TO_WORD16(mprgs8$2(13|->id_register8),mprgs8$2(14|->id_register8)) & ib = WORD8_TO_BV8(mpmem$2(address))(0) & nw8 = BV8_SET_BIT(WORD8_TO_BV8(mprgs8$2(3|->id_register8)),6,ib) & mppc$2 = 7 & INSTRUCTION_NEXT(mppc$2) = 13);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & address : WORD16 & ib : BIT & nw8 : BV8 & address = WORD8_TO_WORD16(mprgs8$2(13|->id_register8),mprgs8$2(14|->id_register8)) & ib = WORD8_TO_BV8(mpmem$2(address))(0) & nw8 = BV8_SET_BIT(WORD8_TO_BV8(mprgs8$2(3|->id_register8)),6,ib) & mppc$2 = 7 & INSTRUCTION_NEXT(mppc$2) = 14);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & address : WORD16 & ib : BIT & nw8 : BV8 & address = WORD8_TO_WORD16(mprgs8$2(13|->id_register8),mprgs8$2(14|->id_register8)) & ib = WORD8_TO_BV8(mpmem$2(address))(0) & nw8 = BV8_SET_BIT(WORD8_TO_BV8(mprgs8$2(3|->id_register8)),6,ib) & mppc$2 = 7 & INSTRUCTION_NEXT(mppc$2) = 15);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & WORD8_TO_BV8(mprgs8$2(3|->id_register8))(6) = 0 & mppc$2 = 8);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & WORD8_TO_BV8(mprgs8$2(3|->id_register8))(6) = 0 & mppc$2 = 8 & INSTRUCTION_NEXT(mppc$2) = 3);
  (bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6));
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & WORD8_TO_BV8(mprgs8$2(3|->id_register8))(6) = 0 & mppc$2 = 8 & INSTRUCTION_NEXT(mppc$2) = 4);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & WORD8_TO_BV8(mprgs8$2(3|->id_register8))(6) = 0 & mppc$2 = 8 & INSTRUCTION_NEXT(mppc$2) = 5);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & WORD8_TO_BV8(mprgs8$2(3|->id_register8))(6) = 0 & mppc$2 = 8 & INSTRUCTION_NEXT(mppc$2) = 6);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & WORD8_TO_BV8(mprgs8$2(3|->id_register8))(6) = 0 & mppc$2 = 8 & INSTRUCTION_NEXT(mppc$2) = 7);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & WORD8_TO_BV8(mprgs8$2(3|->id_register8))(6) = 0 & mppc$2 = 8 & INSTRUCTION_NEXT(mppc$2) = 9);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & WORD8_TO_BV8(mprgs8$2(3|->id_register8))(6) = 0 & mppc$2 = 8 & INSTRUCTION_NEXT(mppc$2) = 10);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & WORD8_TO_BV8(mprgs8$2(3|->id_register8))(6) = 0 & mppc$2 = 8 & INSTRUCTION_NEXT(mppc$2) = 11);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & WORD8_TO_BV8(mprgs8$2(3|->id_register8))(6) = 0 & mppc$2 = 8 & INSTRUCTION_NEXT(mppc$2) = 12);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & WORD8_TO_BV8(mprgs8$2(3|->id_register8))(6) = 0 & mppc$2 = 8 & INSTRUCTION_NEXT(mppc$2) = 13);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & WORD8_TO_BV8(mprgs8$2(3|->id_register8))(6) = 0 & mppc$2 = 8 & INSTRUCTION_NEXT(mppc$2) = 14);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & WORD8_TO_BV8(mprgs8$2(3|->id_register8))(6) = 0 & mppc$2 = 8 & INSTRUCTION_NEXT(mppc$2) = 15);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(WORD8_TO_BV8(mprgs8$2(3|->id_register8))(6) = 0) & mppc$2 = 8);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(WORD8_TO_BV8(mprgs8$2(3|->id_register8))(6) = 0) & mppc$2 = 8 & INSTRUCTION_NEXT(INSTRUCTION_NEXT(mppc$2)) = 3);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(WORD8_TO_BV8(mprgs8$2(3|->id_register8))(6) = 0) & mppc$2 = 8 & INSTRUCTION_NEXT(INSTRUCTION_NEXT(mppc$2)) = 4);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(WORD8_TO_BV8(mprgs8$2(3|->id_register8))(6) = 0) & mppc$2 = 8 & INSTRUCTION_NEXT(INSTRUCTION_NEXT(mppc$2)) = 5);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(WORD8_TO_BV8(mprgs8$2(3|->id_register8))(6) = 0) & mppc$2 = 8 & INSTRUCTION_NEXT(INSTRUCTION_NEXT(mppc$2)) = 6);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(WORD8_TO_BV8(mprgs8$2(3|->id_register8))(6) = 0) & mppc$2 = 8 & INSTRUCTION_NEXT(INSTRUCTION_NEXT(mppc$2)) = 7);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(WORD8_TO_BV8(mprgs8$2(3|->id_register8))(6) = 0) & mppc$2 = 8 & INSTRUCTION_NEXT(INSTRUCTION_NEXT(mppc$2)) = 9);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(WORD8_TO_BV8(mprgs8$2(3|->id_register8))(6) = 0) & mppc$2 = 8 & INSTRUCTION_NEXT(INSTRUCTION_NEXT(mppc$2)) = 10);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(WORD8_TO_BV8(mprgs8$2(3|->id_register8))(6) = 0) & mppc$2 = 8 & INSTRUCTION_NEXT(INSTRUCTION_NEXT(mppc$2)) = 11);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(WORD8_TO_BV8(mprgs8$2(3|->id_register8))(6) = 0) & mppc$2 = 8 & INSTRUCTION_NEXT(INSTRUCTION_NEXT(mppc$2)) = 12);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(WORD8_TO_BV8(mprgs8$2(3|->id_register8))(6) = 0) & mppc$2 = 8 & INSTRUCTION_NEXT(INSTRUCTION_NEXT(mppc$2)) = 13);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(WORD8_TO_BV8(mprgs8$2(3|->id_register8))(6) = 0) & mppc$2 = 8 & INSTRUCTION_NEXT(INSTRUCTION_NEXT(mppc$2)) = 14);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(WORD8_TO_BV8(mprgs8$2(3|->id_register8))(6) = 0) & mppc$2 = 8 & INSTRUCTION_NEXT(INSTRUCTION_NEXT(mppc$2)) = 15);
  (4<=14-mppc$2);
  (2<=14-mppc$2);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 8) & not(mppc$2 = 9) & not(mppc$2 = 10) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & mppc$2 = 11 & INSTRUCTION_NEXT(mppc$2) = 1);
  ((mprgs8$2<+{1|->id_register8|->1})(13|->id_register8) = 0);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 8) & not(mppc$2 = 9) & not(mppc$2 = 10) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & mppc$2 = 11 & INSTRUCTION_NEXT(mppc$2) = 2);
  ((mprgs8$2<+{1|->id_register8|->1})(14|->id_register8) = 0);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 8) & not(mppc$2 = 9) & not(mppc$2 = 10) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & mppc$2 = 11 & INSTRUCTION_NEXT(mppc$2) = 3);
  (bitget(mpmem$2(0),1) = bitget((mprgs8$2<+{1|->id_register8|->1})(3|->id_register8),6));
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 8) & not(mppc$2 = 9) & not(mppc$2 = 10) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & mppc$2 = 11 & INSTRUCTION_NEXT(mppc$2) = 4);
  (bitget((mprgs8$2<+{1|->id_register8|->1})(3|->id_register8),6) = 0);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 8) & not(mppc$2 = 9) & not(mppc$2 = 10) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & mppc$2 = 11 & INSTRUCTION_NEXT(mppc$2) = 5);
  (bitget(mpmem$2(0),1) = bitget((mprgs8$2<+{1|->id_register8|->1})(3|->id_register8),1));
  (bitget((mprgs8$2<+{1|->id_register8|->1})(3|->id_register8),6) = 1);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 8) & not(mppc$2 = 9) & not(mppc$2 = 10) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & mppc$2 = 11 & INSTRUCTION_NEXT(mppc$2) = 6);
  ((mprgs8$2<+{1|->id_register8|->1})(1|->id_register8) = 0);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 8) & not(mppc$2 = 9) & not(mppc$2 = 10) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & mppc$2 = 11 & INSTRUCTION_NEXT(mppc$2) = 7);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 8) & not(mppc$2 = 9) & not(mppc$2 = 10) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & mppc$2 = 11 & INSTRUCTION_NEXT(mppc$2) = 8);
  (bitget(mpmem$2(0),0) = bitget((mprgs8$2<+{1|->id_register8|->1})(3|->id_register8),6));
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 8) & not(mppc$2 = 9) & not(mppc$2 = 10) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & mppc$2 = 11 & INSTRUCTION_NEXT(mppc$2) = 9);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 8) & not(mppc$2 = 9) & not(mppc$2 = 10) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & mppc$2 = 11 & INSTRUCTION_NEXT(mppc$2) = 10);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 8) & not(mppc$2 = 9) & not(mppc$2 = 10) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & mppc$2 = 11 & INSTRUCTION_NEXT(mppc$2) = 11);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 8) & not(mppc$2 = 9) & not(mppc$2 = 10) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & mppc$2 = 11 & INSTRUCTION_NEXT(mppc$2) = 12);
  ((mprgs8$2<+{1|->id_register8|->1})(1|->id_register8) = 1);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 8) & not(mppc$2 = 9) & not(mppc$2 = 10) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & mppc$2 = 11 & INSTRUCTION_NEXT(mppc$2) = 13);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 8) & not(mppc$2 = 9) & not(mppc$2 = 10) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & mppc$2 = 11 & INSTRUCTION_NEXT(mppc$2) = 14);
  (bitget((mprgs8$2<+{1|->id_register8|->1})(3|->id_register8),1) = 1);
  ((mprgs8$2<+{1|->id_register8|->1})(1|->id_register8) = color_step(counter));
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 8) & not(mppc$2 = 9) & not(mppc$2 = 10) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & mppc$2 = 11 & INSTRUCTION_NEXT(mppc$2) = 15);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 8) & not(mppc$2 = 9) & not(mppc$2 = 10) & not(mppc$2 = 11) & not(mppc$2 = 12) & not(mppc$2 = 14) & mppc$2 = 13 & INSTRUCTION_NEXT(mppc$2) = 1);
  ((mprgs8$2<+{1|->id_register8|->2})(13|->id_register8) = 0);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 8) & not(mppc$2 = 9) & not(mppc$2 = 10) & not(mppc$2 = 11) & not(mppc$2 = 12) & not(mppc$2 = 14) & mppc$2 = 13 & INSTRUCTION_NEXT(mppc$2) = 2);
  ((mprgs8$2<+{1|->id_register8|->2})(14|->id_register8) = 0);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 8) & not(mppc$2 = 9) & not(mppc$2 = 10) & not(mppc$2 = 11) & not(mppc$2 = 12) & not(mppc$2 = 14) & mppc$2 = 13 & INSTRUCTION_NEXT(mppc$2) = 3);
  (bitget(mpmem$2(0),1) = bitget((mprgs8$2<+{1|->id_register8|->2})(3|->id_register8),6));
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 8) & not(mppc$2 = 9) & not(mppc$2 = 10) & not(mppc$2 = 11) & not(mppc$2 = 12) & not(mppc$2 = 14) & mppc$2 = 13 & INSTRUCTION_NEXT(mppc$2) = 4);
  (bitget((mprgs8$2<+{1|->id_register8|->2})(3|->id_register8),6) = 0);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 8) & not(mppc$2 = 9) & not(mppc$2 = 10) & not(mppc$2 = 11) & not(mppc$2 = 12) & not(mppc$2 = 14) & mppc$2 = 13 & INSTRUCTION_NEXT(mppc$2) = 5);
  (bitget(mpmem$2(0),1) = bitget((mprgs8$2<+{1|->id_register8|->2})(3|->id_register8),1));
  (bitget((mprgs8$2<+{1|->id_register8|->2})(3|->id_register8),6) = 1);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 8) & not(mppc$2 = 9) & not(mppc$2 = 10) & not(mppc$2 = 11) & not(mppc$2 = 12) & not(mppc$2 = 14) & mppc$2 = 13 & INSTRUCTION_NEXT(mppc$2) = 6);
  ((mprgs8$2<+{1|->id_register8|->2})(1|->id_register8) = 0);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 8) & not(mppc$2 = 9) & not(mppc$2 = 10) & not(mppc$2 = 11) & not(mppc$2 = 12) & not(mppc$2 = 14) & mppc$2 = 13 & INSTRUCTION_NEXT(mppc$2) = 7);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 8) & not(mppc$2 = 9) & not(mppc$2 = 10) & not(mppc$2 = 11) & not(mppc$2 = 12) & not(mppc$2 = 14) & mppc$2 = 13 & INSTRUCTION_NEXT(mppc$2) = 8);
  (bitget(mpmem$2(0),0) = bitget((mprgs8$2<+{1|->id_register8|->2})(3|->id_register8),6));
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 8) & not(mppc$2 = 9) & not(mppc$2 = 10) & not(mppc$2 = 11) & not(mppc$2 = 12) & not(mppc$2 = 14) & mppc$2 = 13 & INSTRUCTION_NEXT(mppc$2) = 9);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 8) & not(mppc$2 = 9) & not(mppc$2 = 10) & not(mppc$2 = 11) & not(mppc$2 = 12) & not(mppc$2 = 14) & mppc$2 = 13 & INSTRUCTION_NEXT(mppc$2) = 10);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 8) & not(mppc$2 = 9) & not(mppc$2 = 10) & not(mppc$2 = 11) & not(mppc$2 = 12) & not(mppc$2 = 14) & mppc$2 = 13 & INSTRUCTION_NEXT(mppc$2) = 11);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 8) & not(mppc$2 = 9) & not(mppc$2 = 10) & not(mppc$2 = 11) & not(mppc$2 = 12) & not(mppc$2 = 14) & mppc$2 = 13 & INSTRUCTION_NEXT(mppc$2) = 12);
  ((mprgs8$2<+{1|->id_register8|->2})(1|->id_register8) = 1);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 8) & not(mppc$2 = 9) & not(mppc$2 = 10) & not(mppc$2 = 11) & not(mppc$2 = 12) & not(mppc$2 = 14) & mppc$2 = 13 & INSTRUCTION_NEXT(mppc$2) = 13);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 8) & not(mppc$2 = 9) & not(mppc$2 = 10) & not(mppc$2 = 11) & not(mppc$2 = 12) & not(mppc$2 = 14) & mppc$2 = 13 & INSTRUCTION_NEXT(mppc$2) = 14);
  (bitget((mprgs8$2<+{1|->id_register8|->2})(3|->id_register8),1) = 1);
  ((mprgs8$2<+{1|->id_register8|->2})(1|->id_register8) = color_step(counter));
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 8) & not(mppc$2 = 9) & not(mppc$2 = 10) & not(mppc$2 = 11) & not(mppc$2 = 12) & not(mppc$2 = 14) & mppc$2 = 13 & INSTRUCTION_NEXT(mppc$2) = 15);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 8) & not(mppc$2 = 9) & not(mppc$2 = 10) & not(mppc$2 = 11) & not(mppc$2 = 12) & not(mppc$2 = 13) & address : WORD16 & address = WORD8_TO_WORD16(mprgs8$2(13|->id_register8),mprgs8$2(14|->id_register8)) & mppc$2 = 14);
  ((mpmem$2<+{address|->mprgs8$2(1|->id_register8)})(0) : 0..2);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 8) & not(mppc$2 = 9) & not(mppc$2 = 10) & not(mppc$2 = 11) & not(mppc$2 = 12) & not(mppc$2 = 13) & address : WORD16 & address = WORD8_TO_WORD16(mprgs8$2(13|->id_register8),mprgs8$2(14|->id_register8)) & mppc$2 = 14 & INSTRUCTION_NEXT(mppc$2) = 0);
  ((mpmem$2<+{address|->mprgs8$2(1|->id_register8)})(0) = counter);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 8) & not(mppc$2 = 9) & not(mppc$2 = 10) & not(mppc$2 = 11) & not(mppc$2 = 12) & not(mppc$2 = 13) & address : WORD16 & address = WORD8_TO_WORD16(mprgs8$2(13|->id_register8),mprgs8$2(14|->id_register8)) & mppc$2 = 14 & INSTRUCTION_NEXT(mppc$2) = 1);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 8) & not(mppc$2 = 9) & not(mppc$2 = 10) & not(mppc$2 = 11) & not(mppc$2 = 12) & not(mppc$2 = 13) & address : WORD16 & address = WORD8_TO_WORD16(mprgs8$2(13|->id_register8),mprgs8$2(14|->id_register8)) & mppc$2 = 14 & INSTRUCTION_NEXT(mppc$2) = 2);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 8) & not(mppc$2 = 9) & not(mppc$2 = 10) & not(mppc$2 = 11) & not(mppc$2 = 12) & not(mppc$2 = 13) & address : WORD16 & address = WORD8_TO_WORD16(mprgs8$2(13|->id_register8),mprgs8$2(14|->id_register8)) & mppc$2 = 14 & INSTRUCTION_NEXT(mppc$2) = 3);
  (bitget((mpmem$2<+{address|->mprgs8$2(1|->id_register8)})(0),1) = bitget(mprgs8$2(3|->id_register8),6));
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 8) & not(mppc$2 = 9) & not(mppc$2 = 10) & not(mppc$2 = 11) & not(mppc$2 = 12) & not(mppc$2 = 13) & address : WORD16 & address = WORD8_TO_WORD16(mprgs8$2(13|->id_register8),mprgs8$2(14|->id_register8)) & mppc$2 = 14 & INSTRUCTION_NEXT(mppc$2) = 4);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 8) & not(mppc$2 = 9) & not(mppc$2 = 10) & not(mppc$2 = 11) & not(mppc$2 = 12) & not(mppc$2 = 13) & address : WORD16 & address = WORD8_TO_WORD16(mprgs8$2(13|->id_register8),mprgs8$2(14|->id_register8)) & mppc$2 = 14 & INSTRUCTION_NEXT(mppc$2) = 5);
  (bitget((mpmem$2<+{address|->mprgs8$2(1|->id_register8)})(0),1) = bitget(mprgs8$2(3|->id_register8),1));
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 8) & not(mppc$2 = 9) & not(mppc$2 = 10) & not(mppc$2 = 11) & not(mppc$2 = 12) & not(mppc$2 = 13) & address : WORD16 & address = WORD8_TO_WORD16(mprgs8$2(13|->id_register8),mprgs8$2(14|->id_register8)) & mppc$2 = 14 & INSTRUCTION_NEXT(mppc$2) = 6);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 8) & not(mppc$2 = 9) & not(mppc$2 = 10) & not(mppc$2 = 11) & not(mppc$2 = 12) & not(mppc$2 = 13) & address : WORD16 & address = WORD8_TO_WORD16(mprgs8$2(13|->id_register8),mprgs8$2(14|->id_register8)) & mppc$2 = 14 & INSTRUCTION_NEXT(mppc$2) = 7);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 8) & not(mppc$2 = 9) & not(mppc$2 = 10) & not(mppc$2 = 11) & not(mppc$2 = 12) & not(mppc$2 = 13) & address : WORD16 & address = WORD8_TO_WORD16(mprgs8$2(13|->id_register8),mprgs8$2(14|->id_register8)) & mppc$2 = 14 & INSTRUCTION_NEXT(mppc$2) = 8);
  (bitget((mpmem$2<+{address|->mprgs8$2(1|->id_register8)})(0),0) = bitget(mprgs8$2(3|->id_register8),6));
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 8) & not(mppc$2 = 9) & not(mppc$2 = 10) & not(mppc$2 = 11) & not(mppc$2 = 12) & not(mppc$2 = 13) & address : WORD16 & address = WORD8_TO_WORD16(mprgs8$2(13|->id_register8),mprgs8$2(14|->id_register8)) & mppc$2 = 14 & INSTRUCTION_NEXT(mppc$2) = 9);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 8) & not(mppc$2 = 9) & not(mppc$2 = 10) & not(mppc$2 = 11) & not(mppc$2 = 12) & not(mppc$2 = 13) & address : WORD16 & address = WORD8_TO_WORD16(mprgs8$2(13|->id_register8),mprgs8$2(14|->id_register8)) & mppc$2 = 14 & INSTRUCTION_NEXT(mppc$2) = 10);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 8) & not(mppc$2 = 9) & not(mppc$2 = 10) & not(mppc$2 = 11) & not(mppc$2 = 12) & not(mppc$2 = 13) & address : WORD16 & address = WORD8_TO_WORD16(mprgs8$2(13|->id_register8),mprgs8$2(14|->id_register8)) & mppc$2 = 14 & INSTRUCTION_NEXT(mppc$2) = 11);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 8) & not(mppc$2 = 9) & not(mppc$2 = 10) & not(mppc$2 = 11) & not(mppc$2 = 12) & not(mppc$2 = 13) & address : WORD16 & address = WORD8_TO_WORD16(mprgs8$2(13|->id_register8),mprgs8$2(14|->id_register8)) & mppc$2 = 14 & INSTRUCTION_NEXT(mppc$2) = 12);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 8) & not(mppc$2 = 9) & not(mppc$2 = 10) & not(mppc$2 = 11) & not(mppc$2 = 12) & not(mppc$2 = 13) & address : WORD16 & address = WORD8_TO_WORD16(mprgs8$2(13|->id_register8),mprgs8$2(14|->id_register8)) & mppc$2 = 14 & INSTRUCTION_NEXT(mppc$2) = 13);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 8) & not(mppc$2 = 9) & not(mppc$2 = 10) & not(mppc$2 = 11) & not(mppc$2 = 12) & not(mppc$2 = 13) & address : WORD16 & address = WORD8_TO_WORD16(mprgs8$2(13|->id_register8),mprgs8$2(14|->id_register8)) & mppc$2 = 14 & INSTRUCTION_NEXT(mppc$2) = 14);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 8) & not(mppc$2 = 9) & not(mppc$2 = 10) & not(mppc$2 = 11) & not(mppc$2 = 12) & not(mppc$2 = 13) & address : WORD16 & address = WORD8_TO_WORD16(mprgs8$2(13|->id_register8),mprgs8$2(14|->id_register8)) & mppc$2 = 14 & INSTRUCTION_NEXT(mppc$2) = 15);
  ((mpmem$2<+{address|->mprgs8$2(1|->id_register8)})(0) = color_step(counter));
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 8) & not(mppc$2 = 9) & not(mppc$2 = 10) & not(mppc$2 = 11) & not(mppc$2 = 12) & not(mppc$2 = 13) & not(mppc$2 = 14));
  (14-mppc$2+1<=14-mppc$2);
  ("`Local hypotheses'" & not(mppcz$7778+1<=14) & 0<=mppcz$7778 & mppcz$7778<=14 & 0<=mpsp$1 & mpmemz$7777(0) : 0..2 & (mppcz$7778 = 0 => mpmemz$7777(0) = counter) & (mppcz$7778 = 1 => mpmemz$7777(0) = counter & mprgs8z$7777(13|->id_register8) = 0) & (mppcz$7778 = 2 => mpmemz$7777(0) = counter & mprgs8z$7777(13|->id_register8) = 0 & mprgs8z$7777(14|->id_register8) = 0) & (mppcz$7778 = 3 => mpmemz$7777(0) = counter & mprgs8z$7777(13|->id_register8) = 0 & mprgs8z$7777(14|->id_register8) = 0 & bitget(mpmemz$7777(0),1) = bitget(mprgs8z$7777(3|->id_register8),6)) & (mppcz$7778 = 4 => mpmemz$7777(0) = counter & mprgs8z$7777(13|->id_register8) = 0 & mprgs8z$7777(14|->id_register8) = 0 & bitget(mpmemz$7777(0),1) = bitget(mprgs8z$7777(3|->id_register8),6) & bitget(mprgs8z$7777(3|->id_register8),6) = 0) & (mppcz$7778 = 5 => mpmemz$7777(0) = counter & mprgs8z$7777(13|->id_register8) = 0 & mprgs8z$7777(14|->id_register8) = 0 & bitget(mpmemz$7777(0),1) = bitget(mprgs8z$7777(3|->id_register8),1) & bitget(mprgs8z$7777(3|->id_register8),6) = 1) & (mppcz$7778 = 6 => mpmemz$7777(0) = counter & mprgs8z$7777(13|->id_register8) = 0 & mprgs8z$7777(14|->id_register8) = 0 & bitget(mpmemz$7777(0),1) = bitget(mprgs8z$7777(3|->id_register8),6) & bitget(mprgs8z$7777(3|->id_register8),6) = 1 & mprgs8z$7777(1|->id_register8) = 0) & (mppcz$7778 = 7 => mpmemz$7777(0) = counter & mprgs8z$7777(13|->id_register8) = 0 & mprgs8z$7777(14|->id_register8) = 0 & bitget(mpmemz$7777(0),1) = bitget(mprgs8z$7777(3|->id_register8),6) & bitget(mprgs8z$7777(3|->id_register8),6) = 0) & (mppcz$7778 = 8 => mpmemz$7777(0) = counter & mprgs8z$7777(13|->id_register8) = 0 & mprgs8z$7777(14|->id_register8) = 0 & bitget(mpmemz$7777(0),0) = bitget(mprgs8z$7777(3|->id_register8),6)) & (mppcz$7778 = 9 => mpmemz$7777(0) = counter & mprgs8z$7777(13|->id_register8) = 0 & mprgs8z$7777(14|->id_register8) = 0 & bitget(mpmemz$7777(0),0) = bitget(mprgs8z$7777(3|->id_register8),6) & bitget(mprgs8z$7777(3|->id_register8),6) = 0) & (mppcz$7778 = 10 => mpmemz$7777(0) = counter & mprgs8z$7777(13|->id_register8) = 0 & mprgs8z$7777(14|->id_register8) = 0 & bitget(mpmemz$7777(0),0) = bitget(mprgs8z$7777(3|->id_register8),6) & bitget(mprgs8z$7777(3|->id_register8),6) = 1) & (mppcz$7778 = 11 => mpmemz$7777(0) = counter & mprgs8z$7777(13|->id_register8) = 0 & mprgs8z$7777(14|->id_register8) = 0 & bitget(mpmemz$7777(0),0) = bitget(mprgs8z$7777(3|->id_register8),6) & bitget(mprgs8z$7777(3|->id_register8),6) = 0) & (mppcz$7778 = 12 => mpmemz$7777(0) = counter & mprgs8z$7777(13|->id_register8) = 0 & mprgs8z$7777(14|->id_register8) = 0 & bitget(mpmemz$7777(0),0) = bitget(mprgs8z$7777(3|->id_register8),6) & bitget(mprgs8z$7777(3|->id_register8),6) = 0 & mprgs8z$7777(1|->id_register8) = 1) & (mppcz$7778 = 13 => mpmemz$7777(0) = counter & mprgs8z$7777(13|->id_register8) = 0 & mprgs8z$7777(14|->id_register8) = 0 & bitget(mpmemz$7777(0),0) = bitget(mprgs8z$7777(3|->id_register8),6) & bitget(mprgs8z$7777(3|->id_register8),6) = 1) & (mppcz$7778 = 14 => mpmemz$7777(0) = counter & mprgs8z$7777(13|->id_register8) = 0 & mprgs8z$7777(14|->id_register8) = 0 & bitget(mpmemz$7777(0),1) = bitget(mprgs8z$7777(3|->id_register8),1) & bitget(mprgs8z$7777(3|->id_register8),1) = 1 & mprgs8z$7777(1|->id_register8) = color_step(counter)) & (mppcz$7778 = 15 => mpmemz$7777(0) = color_step(counter)) & {mpsp$1+1-1}<<|(mpstack$1<+{mpsp$1|->INSTRUCTION_NEXT(mppc$1)}) : WORD16 +-> WORD8 & dom({mpsp$1+1-1}<<|(mpstack$1<+{mpsp$1|->INSTRUCTION_NEXT(mppc$1)})) = WORD16 & mprgs8z$7777 : (1..18)*{id_register8} +-> WORD8 & dom(mprgs8z$7777) = (1..18)*{id_register8} & mpmemz$7777 : WORD16 +-> WORD8 & dom(mpmemz$7777) = WORD16 & (mpstack$1<+{mpsp$1|->INSTRUCTION_NEXT(mppc$1)})(mpsp$1+1-1) : WORD16 & mpsp$1+1-1 : WORD16 & ran({mpsp$1+1-1}<<|(mpstack$1<+{mpsp$1|->INSTRUCTION_NEXT(mppc$1)})) : POW(WORD8) & ran(mpmemz$7777) : POW(WORD8) & ran(mprgs8z$7777) : POW(WORD8));
  "`Check that the invariant (mpmem(0) = counter) is preserved by the operation - ref 4.4, 5.5'" & "`Check operation refinement - ref 4.4, 5.5'";
  (mpmemz$7777(0) = color_step(counter));
  ("`Variables conservation'" & mpstack = mpstack$1 & mpiy = mpiy$1 & mpix = mpix$1 & mpsp = mpsp$1 & mppc = mppc$1 & mpmem = mpmem$1 & mprgs8 = mprgs8$1);
  ("`Included,imported and extended machines properties'" & not((1..18)*{id_register8} = {}) & "`Included,imported and extended machines invariants'" & mpstack : WORD16 +-> WORD8 & dom(mpstack) = WORD16 & mprgs8 : (1..18)*{id_register8} +-> WORD8 & dom(mprgs8) = (1..18)*{id_register8} & mpmem : WORD16 +-> WORD8 & dom(mpmem) = WORD16 & mppc : WORD16 & mpsp : WORD16 & mpix : WORD16 & mpiy : WORD16 & "`Included,imported and extended machines assertions'" & ran(mpstack) : POW(WORD8) & ran(mpmem) : POW(WORD8) & ran(mprgs8) : POW(WORD8) & INSTRUCTION_NEXT(0) = 1 & INSTRUCTION_NEXT(1) = 2 & INSTRUCTION_NEXT(2) = 3 & INSTRUCTION_NEXT(3) = 4 & INSTRUCTION_NEXT(4) = 5 & INSTRUCTION_NEXT(5) = 6 & INSTRUCTION_NEXT(6) = 7 & INSTRUCTION_NEXT(7) = 8 & INSTRUCTION_NEXT(8) = 9 & INSTRUCTION_NEXT(9) = 10 & "`Seen and used machines assertions'" & !(c$0).(c$0 : (1..3)*{COLOR} => c$0 = 1|->COLOR or c$0 = 2|->COLOR or c$0 = 3|->COLOR) & NB_WORD8S = 256 & !n.(n : WORD8 => 0<=n) & !n.(n : WORD8 => n<=255) & WORD8_POSITION = BV8_INDEX & 2**16 = 65536 & 0 = WORD8_TO_WORD16(0,0) & BIT_FLIP(0) = 1 & BIT_FLIP(1) = 0 & BIT_AND(0,0) = 0 & BIT_AND(0,1) = 0 & BIT_AND(1,0) = 0 & BIT_AND(1,1) = 1 & BIT_IOR(0,0) = 0 & BIT_IOR(0,1) = 0 & BIT_IOR(1,0) = 0 & BIT_IOR(1,1) = 1 & BIT_XOR(0,0) = 0 & BIT_XOR(0,1) = 1 & BIT_XOR(1,0) = 1 & BIT_XOR(1,1) = 0 & !(vec,idx,b).(vec : BV8 & idx : BV8_INDEX & b : BIT => BV8_SET_BIT(vec,idx,b)(idx) = b) & dom(add) = WORD8*WORD8 & ran(add) : POW(WORD8*BOOL*BOOL) & dom(substract) = WORD8*WORD8 & ran(substract) : POW(WORD8*BOOL*BOOL) & dom(and) = WORD8*WORD8 & ran(and) : POW(WORD8*BOOL) & dom(ior) = WORD8*WORD8 & ran(ior) : POW(WORD8*BOOL) & dom(xor) = WORD8*WORD8 & ran(xor) : POW(WORD8*BOOL) & dom(bitclear) = WORD8*WORD8_POSITION & ran(bitclear) : POW(WORD8) & dom(bitset) = WORD8*WORD8_POSITION & ran(bitset) : POW(WORD8) & dom(bitget) = WORD8*WORD8_POSITION & ran(bitget) : POW(BIT) & dom(complement) = WORD8 & ran(complement) : POW(WORD8) & dom(swap) = WORD8 & ran(swap) : POW(WORD8) & ran(rotateleft) : POW(WORD8*BOOL) & dom(rotateleft) = WORD8 & dom(rotateright) = WORD8 & ran(rotateright) : POW(WORD8*BOOL) & !(w,idx).(w : WORD8 & idx : WORD8_POSITION => bitget(w,idx) = WORD8_TO_BV8(w)(idx)) & color_refine(1|->COLOR) = 0 & color_refine(2|->COLOR) = 1 & color_refine(3|->COLOR) = 2 & color_step(0) = 1 & color_step(1) = 2 & color_step(2) = 0)
END
&
THEORY EnumerateX IS
  COLOR == {green,yellow,red};
  id_register8 == {a,f,f_,a_,b,c,b_,c_,d,e,d_,e_,h,l,h_,l_,i,r}
END
&
THEORY Version IS
  POVersion(V3.8.3)(CLT == "V3.7.6")(local_op == OK)
END
