THEORY OPOBalanceX IS
  traffic_light_asm_z80,113;
  ValuesLemmas,1;
  InstanciatedConstraintsLemmas,0;
  AssertionLemmas,10;
  Initialisation,2;
  advance,100
END
&
THEORY OPOProofList IS
  _f(2) & _f(3) & _f(12) & _f(21) & advance.100,(_f(123) & _of(82) => _of(83));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.99,(_of(81) & _of(6) => _f(24));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.98,(_f(121) & _of(6) => _of(80));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.97,(_f(121) & _of(6) => _of(79));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.96,(_f(121) & _of(6) => _of(78));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.95,(_f(121) & _of(6) => _of(43));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.94,(_f(121) & _of(6) => _f(24));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.93,(_f(121) & _of(6) => _of(77));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.92,(_f(121) & _of(6) => _of(76));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.91,(_f(114) & _of(6) => _f(24));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.90,(_of(75) & _of(6) => _of(43));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.89,(_of(74) & _of(6) => _of(43));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.88,(_f(47) & _of(6) => _of(43));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.87,(_f(47) & _of(6) => _f(24));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.86,(_f(46) & _of(57) => _of(2));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.85,(_f(46) & _of(6) => _of(43));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.84,(_f(46) & _of(6) => _f(24));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.83,(_f(46) & _of(6) => _of(60));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.82,(_f(46) & _of(6) => _of(30));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.81,(_of(73) & _of(6) => _of(43));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.80,(_of(72) & _of(6) => _of(43));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.79,(_f(44) & _of(6) => _of(43));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.78,(_f(44) & _of(6) => _f(24));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.77,(_of(71) & _of(6) => _f(57));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.76,(_of(71) & _of(6) => _f(74));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.75,(_of(71) & _of(6) => _f(72));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.74,(_of(71) & _of(6) => _f(59));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.73,(_of(71) & _of(4) => _of(43));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.72,(_f(42) & _of(6) => _of(43));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.71,(_f(42) & _of(6) => _f(24));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.70,(_f(42) & _of(6) => _of(70));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.69,(_f(42) & _of(6) => _of(69));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.68,(_f(40) & _of(57) => _of(2));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.67,(_f(40) & _of(6) => _of(43));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.66,(_f(40) & _of(6) => _f(24));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.65,(_f(40) & _of(6) => _of(68));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.64,(_f(40) & _of(6) => _of(67));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.63,(_of(66) & _of(6) => _of(43));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.62,(_of(65) & _of(6) => _of(43));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.61,(_f(98) & _of(6) => _of(43));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.60,(_f(98) & _of(6) => _f(24));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.59,(_of(64) & _of(6) => _of(43));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.58,(_of(63) & _of(6) => _of(43));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.57,(_f(94) & _of(6) => _of(43));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.56,(_f(94) & _of(6) => _f(24));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.55,(_of(62) & _of(6) => _of(43));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.54,(_of(61) & _of(6) => _of(43));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.53,(_f(90) & _of(6) => _of(43));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.52,(_f(90) & _of(6) => _f(24));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.51,(_f(36) & _of(57) => _of(2));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.50,(_f(36) & _of(6) => _of(43));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.49,(_f(36) & _of(6) => _f(24));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.48,(_f(36) & _of(6) => _of(60));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.47,(_f(36) & _of(6) => _of(30));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.46,(_of(59) & _of(6) => _of(43));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.45,(_of(58) & _of(6) => _of(43));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.44,(_f(35) & _of(6) => _of(43));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.43,(_f(35) & _of(6) => _f(24));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.42,(_f(33) & _of(57) => _of(2));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.41,(_f(33) & _of(6) => _of(43));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.40,(_f(33) & _of(6) => _f(24));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.39,(_f(33) & _of(6) => _of(56));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.38,(_f(33) & _of(6) => _of(55));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.37,(_of(54) & _of(6) => _of(43));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.36,(_of(53) & _of(6) => _of(43));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.35,(_f(76) & _of(6) => _of(43));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.34,(_f(76) & _of(6) => _f(24));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.33,(_of(52) & _of(6) => _of(43));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.32,(_of(51) & _of(6) => _of(43));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.31,(_f(70) & _of(6) => _of(43));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.30,(_f(70) & _of(6) => _f(24));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.29,(_of(50) & _of(6) => _of(43));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.28,(_of(49) & _of(6) => _of(43));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.27,(_f(64) & _of(6) => _of(43));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.26,(_f(64) & _of(6) => _f(24));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.25,(_of(48) & _of(6) => _of(43));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.24,(_of(47) & _of(6) => _of(43));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.23,(_f(30) & _of(6) => _of(43));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.22,(_f(30) & _of(6) => _f(24));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.21,(_of(46) & _of(6) => _of(43));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.20,(_of(44) & _of(6) => _of(45));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.19,(_of(44) & _of(6) => _of(43));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.18,(_f(29) & _of(6) => _of(43));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.17,(_f(29) & _of(6) => _f(24));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.16,(_of(42) & _of(6) => _of(39));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.15,(_of(41) & _of(6) => _of(39));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.14,(_of(40) & _of(6) => _of(39));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.13,(_of(38) & _of(6) => _of(39));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.12,(_of(37) & _of(6) => _of(7));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.11,(_of(36) & _of(6) => _of(5));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.10,(_of(33) & _of(6) => _of(35));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.9,(_of(33) & _of(6) => _of(31));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.8,(_of(33) & _of(6) => _of(34));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.7,(_of(6) => _of(32));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.6,(_of(6) => _of(31));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.5,(_of(6) => _of(31));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.4,(_of(6) => _of(30));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.3,(_of(6) => _of(29));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.2,(_of(6) => _of(2));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.1,(_of(28) => _of(2));
  _f(2) & _f(3) & _f(12) & AssertionLemmas.10,(_of(26) => _of(27));
  _f(2) & _f(3) & _f(12) & AssertionLemmas.9,(_of(24) => _of(25));
  _f(2) & _f(3) & _f(12) & AssertionLemmas.8,(_of(22) => _of(23));
  _f(2) & _f(3) & _f(12) & AssertionLemmas.7,(_of(20) => _of(21));
  _f(2) & _f(3) & _f(12) & AssertionLemmas.6,(_of(18) => _of(19));
  _f(2) & _f(3) & _f(12) & AssertionLemmas.5,(_of(16) => _of(17));
  _f(2) & _f(3) & _f(12) & AssertionLemmas.4,(_of(14) => _of(15));
  _f(2) & _f(3) & _f(12) & AssertionLemmas.3,(_of(12) => _of(13));
  _f(2) & _f(3) & _f(12) & AssertionLemmas.2,(_of(10) => _of(11));
  _f(2) & _f(3) & _f(12) & AssertionLemmas.1,(_of(8) => _of(9));
  _f(2) & _f(3) & Initialisation.2,(_f(4) & _of(6) => _of(7));
  _f(2) & _f(3) & Initialisation.1,(_of(3) & _of(4) => _of(5));
  _f(1) & ValuesLemmas.1,(_of(1) => _of(2))
END
&
THEORY OPOFormulas IS
  "`Check that the property (btrue) is preserved by the valuations - ref 5.2'";
  (btrue);
  ("`Local hypotheses'" & rgs8$0 : (1..18)*{id_register8} +-> WORD8 & dom(rgs8$0) = (1..18)*{id_register8} & ran(rgs8$0) = WORD8 & mem$0 : WORD16 +-> WORD8 & dom(mem$0) = WORD16 & pc$0 : WORD16 & sp$0 : WORD16 & ix$0 : WORD16 & iy$0 : WORD16 & stack$0 : WORD16 +-> WORD16 & dom(stack$0) = WORD16);
  "`Check preconditions of called operation, or While loop construction, or Assert predicates'" & "`Check preconditions of called operation, or While loop construction, or Assert predicates'";
  (h : id_register8);
  "`Check preconditions of called operation, or While loop construction, or Assert predicates'";
  (l : id_register8);
  "`Check assertion (INSTRUCTION_NEXT(9) = 10) deduction - ref 3.2, 4.2, 5.3'";
  (INSTRUCTION_NEXT(9) = 10);
  "`Check assertion (INSTRUCTION_NEXT(8) = 9) deduction - ref 3.2, 4.2, 5.3'";
  (INSTRUCTION_NEXT(8) = 9);
  "`Check assertion (INSTRUCTION_NEXT(7) = 8) deduction - ref 3.2, 4.2, 5.3'";
  (INSTRUCTION_NEXT(7) = 8);
  "`Check assertion (INSTRUCTION_NEXT(6) = 7) deduction - ref 3.2, 4.2, 5.3'";
  (INSTRUCTION_NEXT(6) = 7);
  "`Check assertion (INSTRUCTION_NEXT(5) = 6) deduction - ref 3.2, 4.2, 5.3'";
  (INSTRUCTION_NEXT(5) = 6);
  "`Check assertion (INSTRUCTION_NEXT(4) = 5) deduction - ref 3.2, 4.2, 5.3'";
  (INSTRUCTION_NEXT(4) = 5);
  "`Check assertion (INSTRUCTION_NEXT(3) = 4) deduction - ref 3.2, 4.2, 5.3'";
  (INSTRUCTION_NEXT(3) = 4);
  "`Check assertion (INSTRUCTION_NEXT(2) = 3) deduction - ref 3.2, 4.2, 5.3'";
  (INSTRUCTION_NEXT(2) = 3);
  "`Check assertion (INSTRUCTION_NEXT(1) = 2) deduction - ref 3.2, 4.2, 5.3'";
  (INSTRUCTION_NEXT(1) = 2);
  "`Check assertion (INSTRUCTION_NEXT(0) = 1) deduction - ref 3.2, 4.2, 5.3'";
  (INSTRUCTION_NEXT(0) = 1);
  "`Check precondition (btrue) deduction'";
  (0<=0);
  (0<=14);
  (mpmem$1(0) : 0..2);
  (mpmem$1(0) = counter);
  ("`Local hypotheses'" & bfalse);
  (mprgs8$1(l) = 0);
  (mpmem$1(0) = color_step(counter));
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) : 0..2 & mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 1 => mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 10 => mpmem$2(0) : 0..2 & mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & not(mppc$2 = 3) & not(mppc$2 = 2) & not(mppc$2 = 1) & mppc$2 = 0);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) : 0..2 & mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 1 => mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 10 => mpmem$2(0) : 0..2 & mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & not(mppc$2 = 3) & not(mppc$2 = 2) & mppc$2 = 1);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) : 0..2 & mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 1 => mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 10 => mpmem$2(0) : 0..2 & mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & mppc$2 = 5);
  (a : id_register8);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) : 0..2 & mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 1 => mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 10 => mpmem$2(0) : 0..2 & mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 8) & not(mppc$2 = 9) & not(mppc$2 = 10) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & mppc$2 = 11);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) : 0..2 & mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 1 => mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 10 => mpmem$2(0) : 0..2 & mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 8) & not(mppc$2 = 9) & not(mppc$2 = 10) & not(mppc$2 = 11) & not(mppc$2 = 12) & not(mppc$2 = 14) & mppc$2 = 13);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) : 0..2 & mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 1 => mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 10 => mpmem$2(0) : 0..2 & mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 8) & not(mppc$2 = 9) & not(mppc$2 = 10) & not(mppc$2 = 11) & not(mppc$2 = 12) & not(mppc$2 = 13) & mppc$2 = 14);
  (mpmem$2(0) : 0..2);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) : 0..2 & mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 1 => mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 10 => mpmem$2(0) : 0..2 & mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & not(mppc$2 = 3) & not(mppc$2 = 2) & not(mppc$2 = 1) & mppc$2 = 0 & INSTRUCTION_NEXT(mppc$2) = 0);
  (mpmem$2(0) = counter);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) : 0..2 & mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 1 => mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 10 => mpmem$2(0) : 0..2 & mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & not(mppc$2 = 3) & not(mppc$2 = 2) & not(mppc$2 = 1) & mppc$2 = 0 & INSTRUCTION_NEXT(mppc$2) = 10);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) : 0..2 & mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 1 => mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 10 => mpmem$2(0) : 0..2 & mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & not(mppc$2 = 3) & not(mppc$2 = 2) & mppc$2 = 1 & INSTRUCTION_NEXT(mppc$2) = 0);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) : 0..2 & mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 1 => mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 10 => mpmem$2(0) : 0..2 & mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & not(mppc$2 = 3) & not(mppc$2 = 2) & mppc$2 = 1 & INSTRUCTION_NEXT(mppc$2) = 10);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) : 0..2 & mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 1 => mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 10 => mpmem$2(0) : 0..2 & mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & not(mppc$2 = 3) & address : WORD16 & ib : BIT & nw8 : BV8 & address = WORD8_TO_WORD16(mprgs8$2(13|->id_register8),mprgs8$2(14|->id_register8)) & ib = WORD8_TO_BV8(mpmem$2(address))(1) & nw8 = BV8_SET_BIT(WORD8_TO_BV8(mprgs8$2(3|->id_register8)),6,ib) & mppc$2 = 2 & INSTRUCTION_NEXT(mppc$2) = 0);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) : 0..2 & mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 1 => mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 10 => mpmem$2(0) : 0..2 & mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & not(mppc$2 = 3) & address : WORD16 & ib : BIT & nw8 : BV8 & address = WORD8_TO_WORD16(mprgs8$2(13|->id_register8),mprgs8$2(14|->id_register8)) & ib = WORD8_TO_BV8(mpmem$2(address))(1) & nw8 = BV8_SET_BIT(WORD8_TO_BV8(mprgs8$2(3|->id_register8)),6,ib) & mppc$2 = 2 & INSTRUCTION_NEXT(mppc$2) = 10);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) : 0..2 & mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 1 => mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 10 => mpmem$2(0) : 0..2 & mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & WORD8_TO_BV8(mprgs8$2(3|->id_register8))(6) = 0 & mppc$2 = 3 & INSTRUCTION_NEXT(mppc$2) = 0);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) : 0..2 & mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 1 => mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 10 => mpmem$2(0) : 0..2 & mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & WORD8_TO_BV8(mprgs8$2(3|->id_register8))(6) = 0 & mppc$2 = 3 & INSTRUCTION_NEXT(mppc$2) = 10);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) : 0..2 & mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 1 => mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 10 => mpmem$2(0) : 0..2 & mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & not(WORD8_TO_BV8(mprgs8$2(3|->id_register8))(6) = 0) & mppc$2 = 3 & INSTRUCTION_NEXT(INSTRUCTION_NEXT(mppc$2)) = 0);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) : 0..2 & mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 1 => mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 10 => mpmem$2(0) : 0..2 & mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & not(WORD8_TO_BV8(mprgs8$2(3|->id_register8))(6) = 0) & mppc$2 = 3 & INSTRUCTION_NEXT(INSTRUCTION_NEXT(mppc$2)) = 10);
  (0<=7);
  (7<=14);
  "`Check preconditions of called operation, or While loop construction, or Assert predicates'" & "`Check preconditions of called operation, or While loop construction, or Assert predicates'" & "`Check preconditions of called operation, or While loop construction, or Assert predicates'";
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) : 0..2 & mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 1 => mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 10 => mpmem$2(0) : 0..2 & mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & mppc$2 = 5 & INSTRUCTION_NEXT(mppc$2) = 0);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) : 0..2 & mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 1 => mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 10 => mpmem$2(0) : 0..2 & mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & mppc$2 = 5 & INSTRUCTION_NEXT(mppc$2) = 10);
  (14<=14);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) : 0..2 & mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 1 => mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 10 => mpmem$2(0) : 0..2 & mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & address : WORD16 & ib : BIT & nw8 : BV8 & address = WORD8_TO_WORD16(mprgs8$2(13|->id_register8),mprgs8$2(14|->id_register8)) & ib = WORD8_TO_BV8(mpmem$2(address))(0) & nw8 = BV8_SET_BIT(WORD8_TO_BV8(mprgs8$2(3|->id_register8)),6,ib) & mppc$2 = 7 & INSTRUCTION_NEXT(mppc$2) = 0);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) : 0..2 & mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 1 => mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 10 => mpmem$2(0) : 0..2 & mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & address : WORD16 & ib : BIT & nw8 : BV8 & address = WORD8_TO_WORD16(mprgs8$2(13|->id_register8),mprgs8$2(14|->id_register8)) & ib = WORD8_TO_BV8(mpmem$2(address))(0) & nw8 = BV8_SET_BIT(WORD8_TO_BV8(mprgs8$2(3|->id_register8)),6,ib) & mppc$2 = 7 & INSTRUCTION_NEXT(mppc$2) = 10);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) : 0..2 & mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 1 => mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 10 => mpmem$2(0) : 0..2 & mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & WORD8_TO_BV8(mprgs8$2(3|->id_register8))(6) = 0 & mppc$2 = 8 & INSTRUCTION_NEXT(mppc$2) = 0);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) : 0..2 & mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 1 => mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 10 => mpmem$2(0) : 0..2 & mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & WORD8_TO_BV8(mprgs8$2(3|->id_register8))(6) = 0 & mppc$2 = 8 & INSTRUCTION_NEXT(mppc$2) = 10);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) : 0..2 & mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 1 => mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 10 => mpmem$2(0) : 0..2 & mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(WORD8_TO_BV8(mprgs8$2(3|->id_register8))(6) = 0) & mppc$2 = 8 & INSTRUCTION_NEXT(INSTRUCTION_NEXT(mppc$2)) = 0);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) : 0..2 & mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 1 => mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 10 => mpmem$2(0) : 0..2 & mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(WORD8_TO_BV8(mprgs8$2(3|->id_register8))(6) = 0) & mppc$2 = 8 & INSTRUCTION_NEXT(INSTRUCTION_NEXT(mppc$2)) = 10);
  (0<=11);
  (11<=14);
  (0<=13);
  (13<=14);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) : 0..2 & mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 1 => mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 10 => mpmem$2(0) : 0..2 & mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 8) & not(mppc$2 = 9) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & mppc$2 = 10 & bfalse);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) : 0..2 & mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 1 => mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 10 => mpmem$2(0) : 0..2 & mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 8) & not(mppc$2 = 9) & not(mppc$2 = 10) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & mppc$2 = 11 & INSTRUCTION_NEXT(mppc$2) = 0);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) : 0..2 & mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 1 => mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 10 => mpmem$2(0) : 0..2 & mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 8) & not(mppc$2 = 9) & not(mppc$2 = 10) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & mppc$2 = 11 & INSTRUCTION_NEXT(mppc$2) = 10);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) : 0..2 & mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 1 => mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 10 => mpmem$2(0) : 0..2 & mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 8) & not(mppc$2 = 9) & not(mppc$2 = 10) & not(mppc$2 = 11) & not(mppc$2 = 12) & not(mppc$2 = 14) & mppc$2 = 13 & INSTRUCTION_NEXT(mppc$2) = 0);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) : 0..2 & mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 1 => mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 10 => mpmem$2(0) : 0..2 & mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 8) & not(mppc$2 = 9) & not(mppc$2 = 10) & not(mppc$2 = 11) & not(mppc$2 = 12) & not(mppc$2 = 14) & mppc$2 = 13 & INSTRUCTION_NEXT(mppc$2) = 10);
  (0<=mppc$2);
  (mppc$2<=14);
  (mppc$2 = 0 => mpmem$2(0) : 0..2 & mpmem$2(0) = counter & mprgs8$2(h) = 0);
  (mppc$2 = 1 => mprgs8$2(l) = 0);
  (mppc$2 = 10 => mpmem$2(0) : 0..2 & mpmem$2(0) = color_step(counter));
  ("`Local hypotheses'" & not(mppcz$7777+1<=14) & 0<=mppcz$7777 & mppcz$7777<=14 & 0<=mpsp$1 & mpmemz$7777(0) : 0..2 & (mppcz$7777 = 0 => mpmemz$7777(0) : 0..2 & mpmemz$7777(0) = counter & mprgs8z$7777(13|->id_register8) = 0) & (mppcz$7777 = 1 => mprgs8z$7777(14|->id_register8) = 0) & (mppcz$7777 = 10 => mpmemz$7777(0) : 0..2 & mpmemz$7777(0) = color_step(counter)));
  "`Check that the invariant (mpmem(0) : 0..2) is preserved by the operation - ref 4.4, 5.5'";
  (mpmemz$7777(0) : 0..2)
END
&
THEORY Version IS
  POVersion(V3.8.3)(CLT == "V3.7.6")(local_op == OK)
END
