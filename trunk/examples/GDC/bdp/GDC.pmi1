THEORY BalanceX IS
  GDC,204,34,0,162,0,0,0;
  Initialisation,0,0,0,0,0,0,0;
  update_controller,204,34,0,162,0,0,0
END
&
THEORY ProofState IS
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Unproved;
  Unproved;
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Unproved;
  Unproved;
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Unproved;
  Unproved;
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Unproved;
  Unproved;
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0)
END
&
THEORY MethodList IS
  cl & xp & rd & ct & rn(not(i_manual = FALSE & i_controlled = FALSE)) & ds(not(i_opposite = TRUE)) & ds(not(i_leader = TRUE)) & ds(not(conduction_p(i_leader,i_manual,i_controlled) = TRUE)) & ds(not(i_tl_sensor_right_open = TRUE)) & ds(not(i_tl_sensor_left_open = TRUE)) & ds(conduction_p(i_leader,i_manual,i_controlled) : BOOL) & pr & ds(conduction_p(i_leader,i_manual,i_controlled) : BOOL) & ds(not(i_tl_sensor_left_open = TRUE)) & ds(not(i_tl_sensor_right_open = TRUE)) & ds(not(conduction_p(i_leader,i_manual,i_controlled) = TRUE)) & ss & ds(not(i_opposite = TRUE)) & ds(not(i_leader = TRUE)) & rn(not(i_manual = FALSE & i_controlled = FALSE)) & pr;
  cl & xp & rd & rn(not(i_manual = FALSE & i_controlled = FALSE)) & ds(not(conduction_p(i_leader,i_manual,i_controlled) = TRUE)) & ds(conduction_p(i_leader,i_manual,i_controlled) : BOOL) & ds(i_opposite = TRUE) & ds(not(i_leader = TRUE)) & ds(not(i_tl_sensor_right_open = TRUE)) & ds(not(i_tl_sensor_left_open = TRUE)) & ct & pr & ds(not(conduction_p(i_leader,i_manual,i_controlled) = TRUE)) & ds(conduction_p(i_leader,i_manual,i_controlled) : BOOL) & ds(i_opposite = TRUE) & ds(not(i_leader = TRUE)) & ds(not(i_tl_sensor_right_open = TRUE)) & ds(not(i_tl_sensor_left_open = TRUE)) & rn(not(i_manual = FALSE & i_controlled = FALSE)) & pr;
  pr;
  cl & xp & rd & rn(not(i_manual = FALSE & i_controlled = FALSE)) & pr & rn(not(i_manual = FALSE & i_controlled = FALSE)) & pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  ?;
  ?;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  ?;
  ?;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  cl & xp & rd & rn(not(i_manual = FALSE & i_controlled = FALSE)) & ds(select_command(i_slow_speed,i_close_left_doors,i_open_left_doors,Leftcommand_mem) : COMMAND) & ds(select_command(i_slow_speed,i_close_right_doors,i_open_right_doors,Rightcommand_mem) : COMMAND) & ds(conduction_p(i_leader,i_manual,i_controlled) = TRUE) & ds(conduction_p(i_leader,i_manual,i_controlled) : BOOL) & pr & rn(not(i_manual = FALSE & i_controlled = FALSE)) & ds(select_command(i_slow_speed,i_close_left_doors,i_open_left_doors,Leftcommand_mem) : COMMAND) & ds(select_command(i_slow_speed,i_close_right_doors,i_open_right_doors,Rightcommand_mem) : COMMAND) & ds(conduction_p(i_leader,i_manual,i_controlled) = TRUE) & ds(conduction_p(i_leader,i_manual,i_controlled) : BOOL) & pr;
  cl & xp & rd & ct & pr & ct & pr;
  pr;
  cl & xp & rd & ct & pr & ct & pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  cl & xp & ph(i_close_right_doors,i_open_right_doors,Rightcommand_mem,!(cc,oo,mm).(cc : BOOL & oo : BOOL & mm : COMMAND => select_command(FALSE,cc,oo,mm) = CLOSE_DOORS));
  cl & xp & ph(i_close_left_doors,i_open_left_doors,Leftcommand_mem,!(cc,oo,mm).(cc : BOOL & oo : BOOL & mm : COMMAND => select_command(FALSE,cc,oo,mm) = CLOSE_DOORS));
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  cl & xp & ph(i_close_right_doors,i_open_right_doors,Rightcommand_mem,!(cc,oo,mm).(cc : BOOL & oo : BOOL & mm : COMMAND => select_command(FALSE,cc,oo,mm) = CLOSE_DOORS));
  cl & xp & ph(i_close_left_doors,i_open_left_doors,Leftcommand_mem,!(cc,oo,mm).(cc : BOOL & oo : BOOL & mm : COMMAND => select_command(FALSE,cc,oo,mm) = CLOSE_DOORS));
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  cl & xp & rd & ct & pr & ct & pr;
  cl & xp & rd & ct & pr & ct & pr;
  pr;
  cl & xp & rd & ct & pr & ct & pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  ?;
  ?;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  ?;
  ?;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  cl & xp & rd & ct & pr & ct & pr;
  cl & xp & rd & ct & pr & ct & pr;
  pr;
  cl & xp & rd & ct & pr & ct & pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  cl & xp & ph(i_close_right_doors,i_open_right_doors,Rightcommand_mem,!(cc,oo,mm).(cc : BOOL & oo : BOOL & mm : COMMAND => select_command(FALSE,cc,oo,mm) = CLOSE_DOORS));
  cl & xp & ph(i_close_left_doors,i_open_left_doors,Leftcommand_mem,!(cc,oo,mm).(cc : BOOL & oo : BOOL & mm : COMMAND => select_command(FALSE,cc,oo,mm) = CLOSE_DOORS));
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  cl & xp & ph(i_close_right_doors,i_open_right_doors,Rightcommand_mem,!(cc,oo,mm).(cc : BOOL & oo : BOOL & mm : COMMAND => select_command(FALSE,cc,oo,mm) = CLOSE_DOORS));
  cl & xp & ph(i_close_left_doors,i_open_left_doors,Leftcommand_mem,!(cc,oo,mm).(cc : BOOL & oo : BOOL & mm : COMMAND => select_command(FALSE,cc,oo,mm) = CLOSE_DOORS));
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  cl & xp & rd & ct & pr & ct & pr;
  cl & xp & rd & ss & ct & pr & ct & pr;
  pr;
  cl & xp & rd & ct & rn(not(i_manual = FALSE & i_controlled = FALSE)) & pr & ct & pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  cl & xp & ct & ah(i_manual = FALSE) & pr & eh(conduction_p(TRUE,FALSE,TRUE),TRUE,Goal);
  cl & xp & ah(conduction_p(TRUE,FALSE,TRUE) = TRUE) & ct & ah(i_manual = FALSE) & pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  cl & xp & ah(conduction_p(TRUE,TRUE,FALSE) = TRUE) & ct & ah(i_controlled = FALSE) & pr;
  cl & xp & ah(conduction_p(TRUE,TRUE,FALSE) = TRUE) & ct & ds(not(Lefttl_command = CLOSE_DOORS)) & ds(i_slow_speed = FALSE) & ds(i_tl_sensor_left_open = TRUE) & ah(i_controlled = FALSE) & ss & pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  cl & xp & rd & rn(not(i_manual = FALSE & i_controlled = FALSE)) & ct & pr & ct & pr;
  cl & xp & rd & rn(not(i_manual = FALSE & i_controlled = FALSE)) & mh(i_manual = FALSE => not(i_controlled = FALSE)) & pr & ct & pr & rn(not(i_manual = FALSE & i_controlled = FALSE)) & mh(i_manual = FALSE => not(i_controlled = FALSE)) & pr & ct & pr;
  pr;
  cl & xp & rd & rn(not(i_manual = FALSE & i_controlled = FALSE)) & mh(i_manual = FALSE => not(i_controlled = FALSE)) & pr & ct & pr & rn(not(i_manual = FALSE & i_controlled = FALSE)) & mh(i_manual = FALSE => not(i_controlled = FALSE)) & pr & ct & pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  cl & xp & ph(i_close_right_doors,i_open_right_doors,Rightcommand_mem,!(cc,oo,mm).(cc : BOOL & oo : BOOL & mm : COMMAND => select_command(FALSE,cc,oo,mm) = CLOSE_DOORS));
  cl & xp & ss & cls & ph(i_close_left_doors,i_open_left_doors,Leftcommand_mem,!(cc,oo,mm).(cc : BOOL & oo : BOOL & mm : COMMAND => select_command(FALSE,cc,oo,mm) = CLOSE_DOORS)) & ah(i_close_left_doors : BOOL) & ah(i_open_left_doors : BOOL) & ah(Leftcommand_mem : COMMAND);
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  cl & xp & ph(i_close_right_doors,i_open_right_doors,Rightcommand_mem,!(cc,oo,mm).(cc : BOOL & oo : BOOL & mm : COMMAND => select_command(FALSE,cc,oo,mm) = CLOSE_DOORS));
  cl & xp & ph(i_close_left_doors,i_open_left_doors,Leftcommand_mem,!(cc,oo,mm).(cc : BOOL & oo : BOOL & mm : COMMAND => select_command(FALSE,cc,oo,mm) = CLOSE_DOORS));
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr
END
&
THEORY PassList IS
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),(?;0;1);
  Force(0),(?;0;1);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),(?;0;1);
  Force(0),(?;0;1);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),(?;0;1);
  Force(0),(?;0;1);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),(?;0;1);
  Force(0),(?;0;1);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?
END
&
THEORY ManForms 
END
&
THEORY Version IS
  POVersion(V3.8.3)(CLT == "V3.7.6")(local_op == OK);
  PRVersion("V3.3.3.p24.bbt")(CLT == "V3.7.6")
END
