THEORY BBTTE IS
  ?;
  ?;
  cmd(0 | cl) & gol(0 | 0<=n) & cmd(1 | xp) & cmd(1 | pr) & gol(0 | SUCCESS);
  cmd(0 | cl) & gol(0 | INSTRUCTION_IJUMP(5,1) = 7) & cmd(1 | xp) & cmd(1 | ph(5,1,!(i,j).(i : INSTRUCTION & j : INSTRUCTION & (i+j : INTEGER & (0<=i+j & 0<=i+j)) => (0<= -255+i+j & 255<=i+j => INSTRUCTION_IJUMP(i,j) = 0) & (0<=254-i-j & i+j+1<=255 => 0 = 1+i+j-INSTRUCTION_IJUMP(i,j) & INSTRUCTION_IJUMP(i,j) = i+j+1)))) & gol(1 | 5 : INSTRUCTION) & cmd(2 | pr) & gol(1 | 1 : INSTRUCTION) & cmd(2 | pr) & gol(1 | 5+1 : INTEGER) & cmd(2 | pr) & gol(1 | 0<=5+1) & cmd(2 | pr) & gol(1 | 0<=5+1) & cmd(2 | pr) & cmd(1 | pr) & gol(0 | SUCCESS);
  cmd(0 | cl) & gol(0 | INSTRUCTION_IJUMP(0,2) = 3) & cmd(1 | xp) & cmd(1 | ph(0,2,!(i,j).(i : INSTRUCTION & j : INSTRUCTION & (i+j : INTEGER & (0<=i+j & 0<=i+j)) => (0<= -255+i+j & 255<=i+j => INSTRUCTION_IJUMP(i,j) = 0) & (0<=254-i-j & i+j+1<=255 => 0 = 1+i+j-INSTRUCTION_IJUMP(i,j) & INSTRUCTION_IJUMP(i,j) = i+j+1)))) & gol(1 | 0 : INSTRUCTION) & cmd(2 | pr) & gol(1 | 2 : INSTRUCTION) & cmd(2 | pr) & gol(1 | 0+2 : INTEGER) & cmd(2 | pr) & gol(1 | 0<=0+2) & cmd(2 | pr) & gol(1 | 0<=0+2) & cmd(2 | pr) & cmd(1 | pr) & gol(0 | SUCCESS);
  cmd(0 | cl) & gol(0 | INSTRUCTION_IJUMP(2,4) = 7) & cmd(1 | xp) & cmd(1 | ph(2,4,!(i,j).(i : INSTRUCTION & j : INSTRUCTION & (i+j : INTEGER & (0<=i+j & 0<=i+j)) => (0<= -255+i+j & 255<=i+j => INSTRUCTION_IJUMP(i,j) = 0) & (0<=254-i-j & i+j+1<=255 => 0 = 1+i+j-INSTRUCTION_IJUMP(i,j) & INSTRUCTION_IJUMP(i,j) = i+j+1)))) & gol(1 | 2 : INSTRUCTION) & cmd(2 | pr) & gol(1 | 4 : INSTRUCTION) & cmd(2 | pr) & gol(1 | 2+4 : INTEGER) & cmd(2 | pr) & gol(1 | 0<=2+4) & cmd(2 | pr) & gol(1 | 0<=2+4) & cmd(2 | pr) & cmd(1 | pr) & gol(0 | SUCCESS);
  cmd(0 | cl) & gol(0 | INSTRUCTION_IJUMP(3,2) = 6) & cmd(1 | xp) & cmd(1 | ah(!(i,j).(i : INSTRUCTION & j : INSTRUCTION & (i+j : INTEGER & (0<=i+j & 0<=i+j)) => (0<= -255+i+j & 255<=i+j => INSTRUCTION_IJUMP(i,j) = 0) & (0<=254-i-j & i+j+1<=255 => 0 = 1+i+j-INSTRUCTION_IJUMP(i,j) & INSTRUCTION_IJUMP(i,j) = i+j+1)))) & cmd(1 | ph(3,2,!(i,j).(i : INSTRUCTION & j : INSTRUCTION & (i+j : INTEGER & (0<=i+j & 0<=i+j)) => (0<= -255+i+j & 255<=i+j => INSTRUCTION_IJUMP(i,j) = 0) & (0<=254-i-j & i+j+1<=255 => 0 = 1+i+j-INSTRUCTION_IJUMP(i,j) & INSTRUCTION_IJUMP(i,j) = i+j+1)))) & gol(1 | 3 : INSTRUCTION) & cmd(2 | pr) & gol(1 | 2 : INSTRUCTION) & cmd(2 | pr) & gol(1 | 3+2 : INTEGER) & cmd(2 | pr) & gol(1 | 0<=3+2) & cmd(2 | pr) & gol(1 | 0<=3+2) & cmd(2 | pr) & cmd(1 | pr) & gol(0 | SUCCESS);
  cmd(0 | cl) & gol(0 | INSTRUCTION_NEXT(0) = 1) & cmd(1 | xp) & cmd(1 | pr) & gol(0 | SUCCESS);
  cmd(0 | cl) & gol(0 | INSTRUCTION_NEXT(1) = 2) & cmd(1 | xp) & cmd(1 | ph(1,!i.(i : INSTRUCTION => (i = 255 => INSTRUCTION_NEXT(i) = 0) & (i<=254 & i+1<=255 => 0 = 1+i-INSTRUCTION_NEXT(i) & INSTRUCTION_NEXT(i) = i+1)))) & gol(1 | 1 : INSTRUCTION) & cmd(2 | pr) & cmd(1 | pr) & gol(0 | SUCCESS);
  cmd(0 | cl) & gol(0 | INSTRUCTION_NEXT(2) = 3) & cmd(1 | xp) & cmd(1 | ph(2,!i.(i : INSTRUCTION => (i = 255 => INSTRUCTION_NEXT(i) = 0) & (i<=254 & i+1<=255 => 0 = 1+i-INSTRUCTION_NEXT(i) & INSTRUCTION_NEXT(i) = i+1)))) & gol(1 | 2 : INSTRUCTION) & cmd(2 | pr) & cmd(1 | pr) & gol(0 | SUCCESS);
  cmd(0 | cl) & gol(0 | INSTRUCTION_NEXT(3) = 4) & cmd(1 | xp) & cmd(1 | ph(3,!i.(i : INSTRUCTION => (i = 255 => INSTRUCTION_NEXT(i) = 0) & (i<=254 & i+1<=255 => 0 = 1+i-INSTRUCTION_NEXT(i) & INSTRUCTION_NEXT(i) = i+1)))) & gol(1 | 3 : INSTRUCTION) & cmd(2 | pr) & cmd(1 | pr) & gol(0 | SUCCESS);
  cmd(0 | cl) & gol(0 | INSTRUCTION_NEXT(4) = 5) & cmd(1 | xp) & cmd(1 | ph(4,!i.(i : INSTRUCTION => (i = 255 => INSTRUCTION_NEXT(i) = 0) & (i<=254 & i+1<=255 => 0 = 1+i-INSTRUCTION_NEXT(i) & INSTRUCTION_NEXT(i) = i+1)))) & gol(1 | 4 : INSTRUCTION) & cmd(2 | pr) & cmd(1 | pr) & gol(0 | SUCCESS);
  cmd(0 | cl) & gol(0 | INSTRUCTION_NEXT(5) = 6) & cmd(1 | xp) & cmd(1 | ph(5,!i.(i : INSTRUCTION => (i = 255 => INSTRUCTION_NEXT(i) = 0) & (i<=254 & i+1<=255 => 0 = 1+i-INSTRUCTION_NEXT(i) & INSTRUCTION_NEXT(i) = i+1)))) & gol(1 | 5 : INSTRUCTION) & cmd(2 | pr) & cmd(1 | pr) & gol(0 | SUCCESS);
  cmd(0 | cl) & gol(0 | INSTRUCTION_NEXT(6) = 7) & cmd(1 | xp) & cmd(1 | ah(!i.(i : INSTRUCTION => (i = 255 => INSTRUCTION_NEXT(i) = 0) & (i<=254 & i+1<=255 => 0 = 1+i-INSTRUCTION_NEXT(i) & INSTRUCTION_NEXT(i) = i+1)))) & cmd(1 | ph(6,!i.(i : INSTRUCTION => (i = 255 => INSTRUCTION_NEXT(i) = 0) & (i<=254 & i+1<=255 => 0 = 1+i-INSTRUCTION_NEXT(i) & INSTRUCTION_NEXT(i) = i+1)))) & gol(1 | 6 : INSTRUCTION) & cmd(2 | ah(INSTRUCTION = 0..INSTRUCTION_MAX)) & gol(2 | 6 : 0..INSTRUCTION_MAX) & cmd(3 | pr) & cmd(1 | pr) & gol(0 | SUCCESS);
  cmd(0 | cl) & gol(0 | INSTRUCTION_IJUMP(3,3) = 7) & cmd(1 | xp) & cmd(1 | ph(3,3,!(i,j).(i : INSTRUCTION & j : INSTRUCTION & (i+j : INTEGER & (0<=i+j & 0<=i+j)) => (0<= -255+i+j & 255<=i+j => INSTRUCTION_IJUMP(i,j) = 0) & (0<=254-i-j & i+j+1<=255 => 0 = 1+i+j-INSTRUCTION_IJUMP(i,j) & INSTRUCTION_IJUMP(i,j) = i+j+1)))) & gol(1 | 3 : INSTRUCTION) & cmd(2 | ss) & cmd(2 | pr) & gol(1 | 3 : INSTRUCTION) & cmd(2 | ah(INSTRUCTION_MAX = 255)) & cmd(2 | ah(INSTRUCTION = 0..INSTRUCTION_MAX)) & gol(2 | 3 : 0..255) & cmd(3 | pr) & gol(1 | 3+3 : INTEGER) & cmd(2 | pr) & gol(1 | 0<=3+3) & cmd(2 | pr) & gol(1 | 0<=3+3) & cmd(2 | pr) & cmd(1 | pr) & gol(0 | SUCCESS);
  cmd(0 | cl) & gol(0 | MEM_ADDR : POW(WORD)) & cmd(1 | xp) & cmd(1 | pr) & gol(0 | SUCCESS);
  cmd(0 | cl) & gol(0 | RAM_ADDR : POW(WORD)) & cmd(1 | xp) & cmd(1 | pr) & gol(0 | SUCCESS);
  cmd(0 | cl) & gol(0 | SFR_ADDR : POW(WORD)) & cmd(1 | xp) & cmd(1 | pr) & gol(0 | SUCCESS);
  cmd(0 | cl) & gol(0 | MEM_ADDR = RAM_ADDR\/SFR_ADDR) & cmd(1 | xp) & cmd(1 | ah(MEM_ADDR = 0..255)) & gol(1 | 0..255 = RAM_ADDR\/SFR_ADDR) & cmd(2 | ah(RAM_ADDR = 0..127)) & gol(2 | 0..255 = 0..127\/SFR_ADDR) & cmd(3 | ah(SFR_ADDR = 128..255)) & gol(3 | 0..255 = 0..127\/128..255) & cmd(4 | pr) & gol(0 | SUCCESS)
END
