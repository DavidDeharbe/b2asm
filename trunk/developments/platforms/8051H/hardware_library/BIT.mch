MACHINE
	BIT

CONSTANTS
	BIT_CARRIER,
	BIT_NOT,
	BIT_AND,
	BIT_IOR,
	BIT_XOR,
	BOOL_TO_BIT

PROPERTIES
	BIT_CARRIER = 0..1 &
	BIT_NOT : BIT_CARRIER --> BIT_CARRIER &
	! (bb). (bb : BIT_CARRIER => BIT_NOT(bb) = 1-bb) &
	BIT_AND : BIT_CARRIER * BIT_CARRIER --> BIT_CARRIER &
	! (b1, b2).(b1 : BIT_CARRIER & b2 : BIT_CARRIER => ((BIT_AND(b1, b2) = 1) <=> (b1 = 1) & (b2 = 1))) &
	BIT_IOR : BIT_CARRIER * BIT_CARRIER --> BIT_CARRIER &
	! (b1, b2).(b1 : BIT_CARRIER & b2 : BIT_CARRIER => ((BIT_IOR(b1, b2) = 1) <=> (b1 = 1) or (b2 = 1))) &
	BIT_XOR : BIT_CARRIER * BIT_CARRIER --> BIT_CARRIER &
	! (b1, b2).(b1 : BIT_CARRIER & b2 : BIT_CARRIER => ((BIT_XOR(b1, b2) = 1) <=> (b1 /= b2))) &
	BOOL_TO_BIT : BOOL --> BIT_CARRIER &
	BOOL_TO_BIT = { TRUE |-> 1, FALSE |-> 0 }

ASSERTIONS
	BIT_NOT(0) = 1;
	BIT_NOT(1) = 0;

	BIT_AND(0,0) = 0;
	BIT_AND(0,1) = 0;
	BIT_AND(1,0) = 0;
	BIT_AND(1,1) = 1;

	BIT_IOR(0,0) = 0;
	BIT_IOR(0,1) = 0;
	BIT_IOR(1,0) = 0;
	BIT_IOR(1,1) = 1;

	BIT_XOR(0,0) = 0;
	BIT_XOR(0,1) = 1;
	BIT_XOR(1,0) = 1;
	BIT_XOR(1,1) = 0;

	BOOL_TO_BIT(TRUE) = 1;
	BOOL_TO_BIT(FALSE) = 0

END