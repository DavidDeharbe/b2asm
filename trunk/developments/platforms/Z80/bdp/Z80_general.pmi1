THEORY BalanceX IS
  Z80_general,180,48,0,62,63,0,0;
  InstanciatedConstraintsLemmas,0,0,0,0,0,0,0;
  AssertionLemmas,62,17,0,42,3,0,0;
  Initialisation,6,0,0,4,2,0,0;
  LD_r_r_,2,0,0,0,2,0,0;
  LD_r_n_,2,0,0,0,2,0,0;
  LD_r_9HL0,2,1,0,0,0,0,0;
  LD_r_9IX_d0,2,0,0,0,2,0,0;
  LD_r_9IY_d0,2,0,0,0,2,0,0;
  LD_9HL0_r,2,0,0,1,1,0,0;
  LD_9IX_d0_r,3,0,0,2,1,0,0;
  LD_9IY_d0_r,3,0,0,2,1,0,0;
  LD_9HL0_n,2,0,0,1,1,0,0;
  LD_9IX_d0_n,3,0,0,2,1,0,0;
  LD_9IY_d0_n,3,0,0,2,1,0,0;
  LD_A_9BC0,2,0,0,0,2,0,0;
  LD_A_9DE0,2,0,0,0,2,0,0;
  LD_A_9nn0,2,0,0,0,2,0,0;
  LD_9BC0_A,2,0,0,1,1,0,0;
  LD_9DE0_A,2,0,0,0,2,0,0;
  LD_9nn0_A,3,0,0,0,3,0,0;
  LD_A_I,2,0,0,0,2,0,0;
  LD_A_R,2,0,0,0,2,0,0;
  LD_I_A,1,0,0,0,1,0,0;
  LD_R_A,1,0,0,0,1,0,0;
  LD_dd_nn,3,2,0,0,1,0,0;
  LD_IX_nn,1,1,0,0,0,0,0;
  LD_IY_nn,1,1,0,0,0,0,0;
  LD_HL_9nn0,2,2,0,0,0,0,0;
  LD_dd_9nn0,3,2,0,0,1,0,0;
  LD_IX_9nn0,1,1,0,0,0,0,0;
  LD_IY_9nn0,1,1,0,0,0,0,0;
  LD_9nn0_HL,3,1,0,0,2,0,0;
  LD_9nn0_dd,6,2,0,1,0,0,0;
  LD_9nn0_IX,3,2,0,0,0,0,0;
  LD_9nn0_IY,3,2,0,0,0,0,0;
  LD_SP_HL,0,0,0,0,0,0,0;
  LD_SP_IX,0,0,0,0,0,0,0;
  LD_SP_IY,0,0,0,0,0,0,0;
  PUSH_qq,1,1,0,0,0,0,0;
  PUSH_IX,1,1,0,0,0,0,0;
  PUSH_IY,1,1,0,0,0,0,0;
  POP_qq,2,2,0,0,0,0,0;
  POP_IX,0,0,0,0,0,0,0;
  POP_IY,0,0,0,0,0,0,0;
  EX_DE_HL,2,1,0,0,1,0,0;
  EX_AF_AF_,2,1,0,0,1,0,0;
  EXX,2,1,0,0,1,0,0;
  EX_9SP0_HL,5,1,0,0,4,0,0;
  EX_9SP0_IX,4,3,0,0,1,0,0;
  EX_9SP0_IY,4,1,0,0,3,0,0;
  LDI,3,0,0,1,1,0,0;
  LDIR,5,0,0,1,4,0,0;
  LDD,3,0,0,1,2,0,0;
  LDDR,5,0,0,1,4,0,0
END
&
THEORY ProofState IS
  Proved(1);
  Proved(1);
  Proved(1);
  Proved(1);
  Proved(0);
  Proved(1);
  Proved(1);
  Proved(0);
  Proved(1);
  Proved(1);
  Proved(1);
  Proved(1);
  Proved(0);
  Proved(1);
  Unproved;
  Proved(0);
  Proved(Util);
  Proved(1);
  Proved(1);
  Proved(1);
  Proved(Util);
  Proved(1);
  Proved(Util);
  Proved(Util);
  Proved(1);
  Proved(Util);
  Proved(1);
  Proved(1);
  Proved(1);
  Proved(Util);
  Proved(1);
  Proved(Util);
  Proved(1);
  Proved(Util);
  Proved(1);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Unproved;
  Proved(Util);
  Proved(Util);
  Unproved;
  Proved(Util);
  Proved(0);
  Unproved;
  Proved(Util);
  Unproved;
  Unproved;
  Proved(Util);
  Proved(Util);
  Proved(1);
  Proved(1);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(1);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(1);
  Proved(1);
  Proved(1);
  Proved(1);
  Proved(1);
  Proved(1);
  Proved(1);
  Proved(1);
  Proved(1);
  Proved(1);
  Proved(1);
  Proved(1);
  Proved(0);
  Proved(1);
  Proved(1);
  Proved(1);
  Proved(1);
  Proved(1);
  Proved(1);
  Proved(1);
  Proved(0);
  Proved(1);
  Proved(0);
  Proved(0);
  Proved(1);
  Proved(0);
  Proved(0);
  Proved(1);
  Proved(0);
  Proved(1);
  Proved(0);
  Proved(0);
  Proved(1);
  Proved(0);
  Proved(0);
  Proved(1);
  Proved(1);
  Proved(1);
  Proved(1);
  Proved(1);
  Unproved;
  Proved(Util);
  Proved(1);
  Proved(1);
  Proved(1);
  Proved(1);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(1);
  Proved(0);
  Proved(0);
  Proved(1);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(1);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(1);
  Proved(1)
END
&
THEORY MethodList IS
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  dd & ah(ran(byte_bv16) = BV16 & mem(ushort_bv16(add16USHORT(0,bv16_ushort(sp),1))): BYTE & mem(sp): BYTE) & pr & ss & pr & pr & ss & pr;
  pr;
  pr;
  pr;
  dd & ah(ran(bv16_ushort) = USHORT) & ss & pr;
  pr;
  dd & ah(ushort_bv16(add16USHORT(0,bv16_ushort(sp),1)): BV16 & sp: BV16) & ss & pr & pr & ss & pr;
  dd & ah(ushort_bv16(add16USHORT(0,bv16_ushort(sp),1)): BV16 & sp: BV16 & wh: BYTE & wl: BYTE & ushort_bv16(add16USHORT(0,bv16_ushort(sp),1))/=sp) & pr & pr & pr & pr & ar(Arithmetic.2,Once) & ss & pr & pr & eh(USHORT,_h,Goal) & ss & pr & ss & pr & pp(rt.0);
  pr;
  dd & ah(h0: id_reg_8 & mem(ushort_bv16(add16USHORT(0,bv16_ushort(sp),1))): BYTE & mem(sp): BYTE & l0: id_reg_8) & ss & pr & ah(ran(mem): POW(BYTE) & ushort_bv16(add16USHORT(0,bv16_ushort(sp),1)): BV16) & pr & ss & pr & pp(rt.0) & ah(mem: BV16 --> BYTE) & pr & ss & pr & dd & ph(h0,mem(ushort_bv16(add16USHORT(0,bv16_ushort(sp),1))),l0,mem(sp),!(xx,xxr,yy,yyr).(xx: id_reg_8 & xxr: BYTE & yy: id_reg_8 & yyr: BYTE & not(xx = yy) => rgs8<+{xx|->xxr,yy|->yyr}: id_reg_8 +-> BYTE & (dom(rgs8)\/{xx,yy} = id_reg_8 & dom(rgs8)\/{xx,yy} = id_reg_8))) & ss & pr & pr & ss & pr & pr & ss & pr;
  pr;
  pr;
  pr;
  dd & ss & eh(dom(rgs8),_h,Goal) & ss & pr;
  pr;
  dd & ss & eh(dom(rgs8),_h,Goal) & ss & pr;
  pr;
  dd & ss & eh(dom(rgs8),_h,Goal) & ss & pr;
  pr;
  dd & ss & eh(dom(rgs8),_h,Goal) & ss & pr;
  dd & ph(qql,mem(ushort_bv16(add16USHORT(0,bv16_ushort(sp),2))),qqh,mem(ushort_bv16(add16USHORT(0,bv16_ushort(sp),1))),!(xx,xxr,yy,yyr).(xx: id_reg_8 & xxr: BYTE & yy: id_reg_8 & yyr: BYTE & not(xx = yy) => rgs8<+{xx|->xxr,yy|->yyr}: id_reg_8 +-> BYTE & (dom(rgs8<+{xx|->xxr,yy|->yyr}) = id_reg_8 & dom(rgs8<+{xx|->xxr,yy|->yyr}) = id_reg_8))) & pr & ss & pr & pr & ss & pr & ss & pr;
  dd & ah(ran(bv16_ushort) = USHORT) & ss & pr;
  dd & ah(ran(bv16_ushort) = USHORT) & ss & pr;
  dd & ah(ran(bv16_ushort) = USHORT) & ss & pr;
  eh(PROGRAM_R_ADR,_h,Goal) & dd & ah(ran(bv16_ushort) = USHORT) & ss & pr;
  pr;
  dd & ah(ushort_bv16(add16USHORT(0,nn,1)): BV16 & ushort_bv16(nn): BV16 & h_iy: BYTE & l_iy: BYTE & not(ushort_bv16(add16USHORT(0,nn,1)) = ushort_bv16(nn))) & ah(add16USHORT(0,nn,1): USHORT & ran(ushort_bv16) = BV16) & pr & pr & pp(rt.0) & ah(nn: USHORT & ran(ushort_bv16) = BV16) & pr & pr & pp(rt.0) & pr & pr & ar(Arithmetic) & ss & pr & pr & eh(USHORT,_h,Goal) & ss & pr & ss & pr & pp(rt.0);
  eh(PROGRAM_R_ADR,_h,Goal) & dd & ah(ran(bv16_ushort) = USHORT) & ss & pr;
  pr;
  dd & ah(ushort_bv16(add16USHORT(0,nn,1)): BV16 & ushort_bv16(nn): BV16 & ushort_bv16(add16USHORT(0,nn,1))/=ushort_bv16(nn) & h_ix: BYTE & l_ix: BYTE) & ah(add16USHORT(0,nn,1): USHORT & ran(ushort_bv16) = BV16) & pr & pr & pp(rt.0) & pp(rt.0) & ar(Arithmetic.3,Once) & pr & pr & eh(USHORT,_h,Goal) & ss & pr & pr & pr & pr & pp(rt.0);
  pr;
  pr;
  dd & ah(ushort_bv16(add16USHORT(0,nn,1)): BV16 & ushort_bv16(nn): BV16 & rgs8(rh): BYTE & rgs8(rl): BYTE & ushort_bv16(add16USHORT(0,nn,1))/=ushort_bv16(nn)) & ah(add16USHORT(0,nn,1): USHORT) & pp(rt.0) & ah(nn: USHORT & ran(ushort_bv16) = BV16) & pr & pr & ah(rh: id_reg_8 & ran(rgs8) <: BYTE) & pr & pr & pp(rt.0) & ah(rh: id_reg_8 & ran(rgs8) <: BYTE) & pr & pr & pp(rt.0) & ah(rl: id_reg_8 & ran(rgs8) <: BYTE) & pr & pr & pp(rt.0) & ar(Arithmetic.3,Once) & pr & pr & eh(USHORT,_h,Goal) & ss & pr & ss & pr & pp(rt.0);
  pr;
  pr;
  dd & ah(vh: BYTE & vl: BYTE & bv16_byte(sp) = vh|->vl & not(ushort_bv16(add16USHORT(0,nn,1)) = ushort_bv16(nn)) & ushort_bv16(add16USHORT(0,nn,1)): USHORT) & pr & pr & pr & pr & ah(ran(ushort_bv16) = BV16 & add16USHORT(0,nn,1): USHORT) & pr & mp & mp & pr;
  eh(PROGRAM_R_ADR,_h,Goal) & dd & ah(ran(bv16_ushort) = USHORT) & ss & pr;
  pr;
  pr;
  dd & ah(ran(bv16_ushort) = USHORT) & ss & pr;
  dd & ah(ran(bv16_ushort) = USHORT) & ss & pr;
  dd & ss & eh(dom(rgs8),_h,Goal) & ss & pr;
  dd & ph(rh,w1,rl,w2,!(xx,xxr,yy,yyr).(xx: id_reg_8 & xxr: BYTE & yy: id_reg_8 & yyr: BYTE & not(xx = yy) => rgs8<+{xx|->xxr,yy|->yyr}: id_reg_8 +-> BYTE & (dom(rgs8)\/{xx,yy} = id_reg_8 & dom(rgs8)\/{xx,yy} = id_reg_8))) & pr & pr & pr & pr & pr;
  pr;
  dd & ss & eh(dom(rgs8),_h,Goal) & ss & pr;
  dd & ph(h0,mem(ushort_bv16(add16USHORT(0,nn,1))),l0,mem(ushort_bv16(nn)),!(xx,xxr,yy,yyr).(xx: id_reg_8 & xxr: BYTE & yy: id_reg_8 & yyr: BYTE & not(xx = yy) => rgs8<+{xx|->xxr,yy|->yyr}: id_reg_8 +-> BYTE & (dom(rgs8)\/{xx,yy} = id_reg_8 & dom(rgs8)\/{xx,yy} = id_reg_8))) & ss & pr & ss & pr & ss & pr & ss & pr & pr;
  dd & ah(nn: USHORT & ran(ushort_bv16) = BV16) & pr & pr & ss & pr;
  dd & ah(nn: USHORT & ran(ushort_bv16) = BV16) & pr & pr & ss & pr;
  dd & ss & eh(dom(rgs8),_h,Goal) & ss & pr;
  dd & ph(rh,w1,rl,w2,!(xx,xxr,yy,yyr).(xx: id_reg_8 & xxr: BYTE & yy: id_reg_8 & yyr: BYTE & not(xx = yy) => rgs8<+{xx|->xxr,yy|->yyr}: id_reg_8 +-> BYTE & (dom(rgs8<+{xx|->xxr,yy|->yyr}) = id_reg_8 & dom(rgs8<+{xx|->xxr,yy|->yyr}) = id_reg_8))) & pr & pr & pr & pr & pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  dd & ph(rr,mem(address),!(xx,xxr).(xx: id_reg_8 & xxr: BYTE => rgs8<+{xx|->xxr}: id_reg_8 +-> BYTE & (dom(rgs8)\/{xx} = id_reg_8 & dom(rgs8)\/{xx} = id_reg_8))) & pr & ss & pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  dd & eh(update_flag_reg,_h,Goal) & ss & ar(BIT_VECTOR.1,Once) & pr & pr & pr & pr & pr & pr & pr & pr;
  dd & ss & eh(dom(rgs8),_h,Goal) & ss & pr;
  dd & ah(ran(bv16_ushort) = USHORT) & ss & pr;
  dd & ss & eh(dom(rgs8),_h,Goal) & ss & pr;
  pp(rt.0);
  dd & ss & eh(dom(rgs8),_h,Goal) & ss & pr;
  pp(rt.0);
  dd & ss & eh(dom(rgs8),_h,Goal) & ss & pr;
  dd & pr(Tac(Update_flag));
  dd & ss & eh(dom(rgs8),_h,Goal) & ss & pr;
  dd & pr(Tac(Update_flag));
  dd & ss & eh(dom(rgs8),_h,Goal) & ss & pr;
  dd & pr(Tac(Update_flag));
  dd & ss & eh(dom(rgs8),_h,Goal) & ss & pr;
  dd & pr(Tac(Update_flag));
  dd & ss & eh(dom(rgs8),_h,Goal) & ss & pr;
  dd & pr(Tac(Update_flag));
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr
END
&
THEORY PassList IS
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(0),?;
  Force(1),?;
  Force(1),?;
  Force(0),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(0),?;
  Force(1),?;
  Force(1),?;
  Force(0),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(0),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(0),?;
  Force(1),?;
  Force(0),?;
  Force(1),?;
  Force(0),?;
  Force(1),?;
  Force(0),?;
  Force(0),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(0),?;
  Force(1),?;
  Force(1),?;
  Force(0),?;
  Force(0),?;
  Force(1),?;
  Force(0),?;
  Force(0),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(0),?;
  Force(1),?;
  Force(1),?;
  Force(0),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(0),?;
  Force(0),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(0),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(0),?;
  Force(1),?;
  Force(0),?;
  Force(0),?;
  Force(1),?;
  Force(0),?;
  Force(0),?;
  Force(1),?;
  Force(0),?;
  Force(1),?;
  Force(0),?;
  Force(0),?;
  Force(1),?;
  Force(0),?;
  Force(0),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(1),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(1),?;
  Force(0),?;
  Force(0),?;
  Force(1),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(1),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(1),?;
  Force(1),?
END
&
THEORY ManForms 
END
&
THEORY Version IS
  POVersion(V3.8.3)(CLT == "V3.7.6")(genOPO == KO,genDivergencePO == KO,local_op == OK);
  PRVersion("V3.3.3.p39")(CLT == "V3.7.6")
END
