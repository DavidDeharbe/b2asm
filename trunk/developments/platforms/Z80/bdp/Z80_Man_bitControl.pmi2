THEORY BalanceX IS
  Z80_Man_bitControl,228,22,0,83,116,0,0;
  InstanciatedConstraintsLemmas,0,0,0,0,0,0,0;
  AssertionLemmas,62,17,0,43,2,0,0;
  Initialisation,6,0,0,6,0,0,0;
  RLCA,2,0,0,0,2,0,0;
  RLA,2,0,0,0,2,0,0;
  RRCA,2,0,0,0,2,0,0;
  RRA,2,0,0,0,2,0,0;
  RLC_r,2,1,0,0,1,0,0;
  RLC_9HL0,3,1,0,1,1,0,0;
  RLC_9IX_d9,4,1,0,1,2,0,0;
  RLC_9IY_d9,4,1,0,1,2,0,0;
  RL_r,2,0,0,0,2,0,0;
  RL_9HL,3,0,0,1,2,0,0;
  RL_9IX_d9,4,0,0,1,3,0,0;
  RL_9IY_d9,4,0,0,1,3,0,0;
  RRC_r,2,0,0,0,2,0,0;
  RRC_9HL0,3,0,0,1,2,0,0;
  RRC_9IX_d9,4,0,0,1,3,0,0;
  RRC_9IY_d9,4,0,0,1,3,0,0;
  RR_r,2,0,0,0,2,0,0;
  RR_9HL,3,0,0,1,2,0,0;
  RR_9IX_d9,4,0,0,1,3,0,0;
  RR_9IY_d9,4,0,0,1,3,0,0;
  SLA_r,2,0,0,0,2,0,0;
  SLA_9HL,3,0,0,1,2,0,0;
  SLA_9IX_d9,4,0,0,1,3,0,0;
  SLA_9IY_d9,4,0,0,1,3,0,0;
  SRA_r,2,0,0,0,2,0,0;
  SRA_9HL0,3,0,0,1,2,0,0;
  SRA_9IX_d9,4,0,0,1,3,0,0;
  SRA_9IY_d9,4,0,0,0,4,0,0;
  SRL_r,2,0,0,0,2,0,0;
  SRL_9HL0,3,0,0,1,2,0,0;
  SRL_9IX_d9,4,0,0,1,3,0,0;
  SRL_9IY_d9,4,0,0,1,3,0,0;
  RLD,3,0,0,1,2,0,0;
  RRD,3,0,0,1,2,0,0;
  BIT_b_rr,2,0,0,0,2,0,0;
  BIT_b_9HL0,2,0,0,0,2,0,0;
  BIT_b_9IX_d0,2,0,0,0,2,0,0;
  BIT_b_9IY_d0,2,0,0,0,2,0,0;
  SET_b_r,2,0,0,0,2,0,0;
  SET_b_9HL0,2,0,0,1,1,0,0;
  SET_b_9IX_d0,3,0,0,2,1,0,0;
  SET_b_9IY_d0,3,0,0,2,1,0,0;
  RES_b_r,2,0,0,0,2,0,0;
  RES_b_9HL0,2,0,0,1,1,0,0;
  RES_b_9IX_d0,3,0,0,2,1,0,0;
  RES_b_9IY_d0,3,0,0,2,1,0,0;
  JP_nn,0,0,0,0,0,0,0;
  JP_cc_nn,0,0,0,0,0,0,0;
  JR_e,1,0,0,0,1,0,0;
  JR_C_e,1,0,0,0,1,0,0;
  JR_NC_e,1,0,0,0,1,0,0;
  JR_Z_e,1,0,0,0,1,0,0;
  JR_NZ_e,1,0,0,0,1,0,0;
  JP_HL,1,0,0,0,1,0,0;
  JP_IX,1,0,0,0,1,0,0;
  JP_IY,1,0,0,0,1,0,0;
  DJNZ_e,5,0,0,0,5,0,0;
  CALL_nn,3,1,0,1,0,0,0;
  CALL_cc_nn,3,0,0,1,0,0,0;
  RET,1,0,0,0,1,0,0;
  RET_cc,1,0,0,0,1,0,0;
  RETI,1,0,0,0,1,0,0;
  RETN,1,0,0,0,1,0,0;
  RST_p,4,0,0,0,0,0,0
END
&
THEORY ProofState IS
  Unproved;
  Unproved;
  Unproved;
  Unproved;
  Proved(1);
  Proved(1);
  Proved(1);
  Proved(1);
  Proved(0);
  Unproved;
  Unproved;
  Proved(0);
  Unproved;
  Proved(Util);
  Proved(1);
  Proved(1);
  Proved(1);
  Proved(1);
  Proved(1);
  Proved(1);
  Proved(1);
  Proved(1);
  Proved(1);
  Proved(1);
  Proved(1);
  Proved(1);
  Proved(1);
  Proved(0);
  Proved(1);
  Proved(0);
  Proved(0);
  Proved(1);
  Proved(0);
  Proved(0);
  Proved(1);
  Proved(1);
  Proved(1);
  Proved(0);
  Proved(1);
  Proved(0);
  Proved(0);
  Proved(1);
  Proved(0);
  Proved(0);
  Proved(1);
  Proved(1);
  Proved(1);
  Proved(1);
  Proved(1);
  Proved(1);
  Proved(1);
  Proved(1);
  Proved(1);
  Proved(1);
  Proved(1);
  Proved(1);
  Proved(1);
  Proved(0);
  Proved(1);
  Proved(1);
  Proved(0);
  Proved(1);
  Proved(1);
  Proved(0);
  Proved(1);
  Proved(1);
  Proved(1);
  Proved(0);
  Proved(1);
  Proved(1);
  Proved(1);
  Proved(0);
  Proved(1);
  Proved(1);
  Proved(1);
  Proved(1);
  Proved(1);
  Proved(1);
  Proved(1);
  Proved(1);
  Proved(0);
  Proved(1);
  Proved(1);
  Proved(1);
  Proved(0);
  Proved(1);
  Proved(1);
  Proved(1);
  Proved(1);
  Proved(0);
  Proved(1);
  Proved(1);
  Proved(1);
  Proved(0);
  Proved(1);
  Proved(1);
  Proved(1);
  Proved(0);
  Proved(1);
  Proved(1);
  Proved(1);
  Proved(1);
  Proved(0);
  Proved(1);
  Proved(1);
  Proved(1);
  Proved(0);
  Proved(1);
  Proved(1);
  Proved(1);
  Proved(0);
  Proved(1);
  Proved(1);
  Proved(1);
  Proved(1);
  Proved(0);
  Proved(1);
  Proved(1);
  Proved(1);
  Proved(0);
  Proved(1);
  Proved(1);
  Proved(1);
  Proved(0);
  Proved(1);
  Proved(1);
  Proved(1);
  Proved(1);
  Proved(0);
  Proved(1);
  Proved(1);
  Proved(1);
  Proved(0);
  Proved(1);
  Proved(1);
  Proved(1);
  Proved(0);
  Proved(1);
  Proved(1);
  Proved(1);
  Proved(Util);
  Proved(0);
  Proved(1);
  Proved(1);
  Proved(Util);
  Proved(0);
  Proved(1);
  Proved(1);
  Proved(Util);
  Proved(0);
  Proved(1);
  Proved(Util);
  Proved(1);
  Proved(1);
  Proved(1);
  Proved(1);
  Proved(1);
  Proved(1);
  Proved(1);
  Proved(1);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(1);
  Proved(0);
  Proved(0);
  Proved(1);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0)
END
&
THEORY MethodList IS
  dd & eh(USHORT,_h,Goal) & ah(pp: 0..7) & pp(rt.0);
  dd & eh(STACK_R_ADR,_h,Goal) & ah(ran(bv16_ushort) = USHORT) & dd;
  pr;
  ?;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  dd & ah(ushort_bv16(add16USHORT(0,bv16_ushort(sp), -1)): BV16 & ushort_bv16(add16USHORT(0,bv16_ushort(sp), -2)): BV16 & ushort_bv16(add16USHORT(0,bv16_ushort(sp), -1))/=ushort_bv16(add16USHORT(0,bv16_ushort(sp), -2)) & low: BYTE & high: BYTE) & pr & pr;
  pr;
  dd;
  dd & ah(ushort_bv16(add16USHORT(0,bv16_ushort(sp), -1)): BV16 & ushort_bv16(add16USHORT(0,bv16_ushort(sp), -2)): BV16 & ushort_bv16(add16USHORT(0,bv16_ushort(sp), -1))/=ushort_bv16(add16USHORT(0,bv16_ushort(sp), -2)) & low: BYTE & high: BYTE) & pr & pr & pr & pr & pr & pp(rt.0);
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  dd & eh(update_flag_reg,_h,Goal) & ss & ph(f0,[bitget(bv_9ireg_plus_d0(mem,iy,desloc),7),0,parity_even(res),1,0,1,is_zero(res),is_negative(res)],!(xx,xxr).(xx: id_reg_8 & xxr: BYTE => rgs8<+{xx|->xxr}: id_reg_8 +-> BYTE & (dom(rgs8)\/{xx} = id_reg_8 & dom(rgs8)\/{xx} = id_reg_8))) & ss & pr & ar(BIT_VECTOR) & ss & pr & ss & pr & ss & pr & ss & pr & ss & pr & ss & pr & ss & pr & ss & pr;
  pr;
  pr;
  pr;
  dd & eh(update_flag_reg,_h,Goal) & ss & pr;
  pr;
  pr;
  pr;
  dd & eh(update_flag_reg,_h,Goal) & ss & ph(f0,[bitget(mem(byte_bv16(rgs8(h0),rgs8(l0))),7),0,parity_even(res),1,0,1,is_zero(res),is_negative(res)],!(xx,xxr).(xx: id_reg_8 & xxr: BYTE => rgs8<+{xx|->xxr}: id_reg_8 +-> BYTE & (dom(rgs8)\/{xx} = id_reg_8 & dom(rgs8)\/{xx} = id_reg_8))) & ss & pr & ar(BIT_VECTOR) & ss & pr & pr & ss & pr & ss & pr & ss & pr & ss & pr & ss & pr & ss & pr;
  pr;
  pr;
  dd & eh(update_flag_reg,_h,Goal) & ss & ph(rr,res,f0,[bitget(rgs8(rr),7),0,parity_even(res),1,0,1,is_zero(res),is_negative(res)],!(xx,xxr,yy,yyr).(xx: id_reg_8 & xxr: BYTE & yy: id_reg_8 & yyr: BYTE & not(xx = yy) => rgs8<+{xx|->xxr,yy|->yyr}: id_reg_8 +-> BYTE & (dom(rgs8)\/{xx,yy} = id_reg_8 & dom(rgs8)\/{xx,yy} = id_reg_8))) & pr & pr & ss & pr & ar(BIT_VECTOR.1,Once) & ss & pr & ss & pr & ss & pr & ss & pr & ss & pr & ss & pr & ss & pr & ss & pr & pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  dd & eh(update_flag_reg,_h,Goal) & ss & ar(BIT_VECTOR.1,Once) & pr & pr & pr & pr & pr & pr & pr & pr;
  dd & ss & eh(dom(rgs8),_h,Goal) & ss & pr;
  pp(rt.0);
  dd & ss & eh(dom(rgs8),_h,Goal) & ss & pr;
  pp(rt.0);
  dd & ss & eh(dom(rgs8),_h,Goal) & ss & pr;
  pp(rt.0);
  dd & ss & eh(dom(rgs8),_h,Goal) & ss & pr;
  dd & pr(Tac(Update_flag));
  dd & ss & eh(dom(rgs8),_h,Goal) & ss & pr;
  dd & pr(Tac(Update_flag));
  dd & ss & eh(dom(rgs8),_h,Goal) & ss & pr;
  dd & pr(Tac(Update_flag));
  dd & ss & eh(dom(rgs8),_h,Goal) & ss & pr;
  dd & pr(Tac(Update_flag));
  dd & ss & eh(dom(rgs8),_h,Goal) & ss & pr;
  dd & pr(Tac(Update_flag));
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr
END
&
THEORY PassList IS
  Force(0),?;
  Force(0),?;
  Force(1),?;
  Force(0),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(0),?;
  Force(1),(?;0);
  Force(0),(?;0);
  Force(0),?;
  Force(1),(?;0);
  Force(0),(?;0);
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(0),?;
  Force(1),?;
  Force(0),?;
  Force(0),?;
  Force(1),?;
  Force(0),?;
  Force(0),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(0),?;
  Force(1),?;
  Force(0),?;
  Force(0),?;
  Force(1),?;
  Force(0),?;
  Force(0),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(0),?;
  Force(1),?;
  Force(1),?;
  Force(0),?;
  Force(1),?;
  Force(1),?;
  Force(0),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(0),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(0),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(0),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(0),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(0),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(0),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(0),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(0),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(0),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(0),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(0),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(0),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(0),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(0),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(0),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(0),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(0),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(0),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(0),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(1),?;
  Force(0),?;
  Force(0),?;
  Force(1),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?
END
&
THEORY ManForms 
END
&
THEORY Version IS
  POVersion(V3.8.3)(CLT == "V3.7.6")(genOPO == KO,genDivergencePO == KO,local_op == OK);
  PRVersion("V3.3.3.p39")(CLT == "V3.7.6")
END
