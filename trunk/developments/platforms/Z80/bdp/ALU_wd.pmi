THEORY BalanceX IS
  ALU,178,20,0,158,0,0,0;
  Properties,177,20,0,157,0,0,0;
  Assertions,1,0,0,1,0,0,0
END
&
THEORY ProofState IS
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0)
END
&
THEORY MethodList IS
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  dd & ah(dom(get_lower_digit) = BYTE & ran(get_lower_digit) = 0..pow2_4-1) & pr & pr & dd & eh(dom(get_lower_digit),_h,Goal) & eh(ran(get_lower_digit),_h,Goal) & ss & pr & mp;
  pr;
  dd & ah(dom(get_upper_digit) = BYTE & ran(get_upper_digit) = 0..pow2_4-1) & pr & pr & dd & eh(dom(get_upper_digit),_h,Goal) & eh(ran(get_upper_digit),_h,Goal) & ss & pr & mp;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  dd & ah(dom(get_upper_digit) = BYTE & ran(get_upper_digit) = 0..pow2_4-1) & pr & pr & dd & eh(dom(get_upper_digit),_h,Goal) & eh(ran(get_upper_digit),_h,Goal) & ss & pr & mp;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  dd & pr;
  pr;
  pr;
  dd & pr;
  pr;
  pr;
  pr;
  dd & ah(v0: BYTE) & eh(BYTE,_h,Goal) & eh(BIT_VECTOR,_h,Goal) & ss & eh(bv_size,_h,Goal) & ss & mp;
  pr;
  dd & ah(v0: BYTE) & eh(BYTE,_h,Goal) & eh(BIT_VECTOR,_h,Goal) & ss & eh(bv_size,_h,Goal) & ss & mp;
  pr;
  dd & ah(v0: BYTE) & eh(BYTE,_h,Goal) & eh(BIT_VECTOR,_h,Goal) & ss & eh(bv_size,_h,Goal) & ss & mp;
  pr;
  dd & ah(v0: BYTE) & eh(BYTE,_h,Goal) & eh(BIT_VECTOR,_h,Goal) & ss & eh(bv_size,_h,Goal) & ss & mp;
  pr;
  dd & ah(v0: BYTE) & eh(BYTE,_h,Goal) & eh(BIT_VECTOR,_h,Goal) & ss & eh(bv_size,_h,Goal) & ss & mp;
  pr;
  dd & ah(v0: BYTE) & eh(BYTE,_h,Goal) & eh(BIT_VECTOR,_h,Goal) & ss & eh(bv_size,_h,Goal) & ss & mp;
  dd & eh(dom(ushort_bv16),_h,Goal) & eh(USHORT,_h,Goal) & ah(bv16_ushort(w1): USHORT) & pr & eh(USHORT,_h,Goal) & mp & ah(bv16_ushort(w1): 0..65535) & mp & ah(bv16_ushort(w1): 0..65535) & eh(abs,_h,Goal) & ss & mp & mp;
  dd & ah(bv16_ushort(w1): USHORT) & pr & eh(USHORT,_h,Goal) & eh(abs,_h,Goal) & ss & dd & mp & pr;
  dd & eh(dom(abs),_h,Goal) & mp & mp;
  dd & ah(!(xx,yy).(xx: INT & yy: INT => xx mod yy>=0 & xx mod yy<yy)) & pr(Tac(SimplifyX)) & pr & dd & ah(bv16_ushort(w1)+1: INT & 65536: INT) & ah(bv16_ushort(w1): USHORT) & pr & eh(USHORT,_h,Goal) & mp & ah(bv16_ushort(w1): 0..65535) & mp & ss & pr & dd & ph(bv16_ushort(w1)+1,65536,!(xx,yy).(xx: INT & yy: INT => xx mod yy>=0 & xx mod yy<yy)) & pr & pr & eh(dom(ushort_bv16),_h,Goal) & eh(USHORT,_h,Goal) & pp(rt.0);
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  dd & eh(dom(uchar_byte),_h,Goal) & mp & eh(UCHAR,_h,Goal) & mp & mp & mp & pp(rt.0);
  dd & mp & eh(abs,_h,Goal) & ss & mp;
  dd & eh(dom(abs),_h,Goal) & ah(byte_uchar(w1): UCHAR) & pr & eh(UCHAR,_h,Goal) & mp;
  eh(dom(uchar_byte),_h,Goal) & dd & eh(UCHAR,_h,Goal) & ah(byte_uchar(w1): UCHAR) & pr & eh(UCHAR,_h,Goal) & pp(rt.0);
  pr;
  pr;
  pr;
  dd & ah(w1: BYTE) & eh(BYTE,_h,Goal) & eh(BIT_VECTOR,_h,Goal) & ss & eh(bv_size,_h,Goal) & ss & mp;
  pr
END
&
THEORY PassList IS
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),(?;0);
  Force(0),?;
  Force(0),(?;0);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),(?;0);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),(?;0);
  Force(0),?;
  Force(0),?;
  Force(0),(?;0);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),(?;0);
  Force(0),?;
  Force(0),(?;0);
  Force(0),?;
  Force(0),(?;0);
  Force(0),?;
  Force(0),(?;0);
  Force(0),?;
  Force(0),(?;0);
  Force(0),?;
  Force(0),(?;0);
  Force(0),(?;0);
  Force(0),(?;0);
  Force(0),(?;0);
  Force(0),(?;0);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),(?;0);
  Force(0),(?;0);
  Force(0),(?;0);
  Force(0),(?;0);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),(?;0);
  Force(0),?
END
&
THEORY ManForms 
END
&
THEORY Version IS
  PRVersion("V3.3.3.p39")(CLT == "V3.7.6")
END
