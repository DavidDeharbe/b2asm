THEORY BalanceX IS
  Z80LogAri,182,98,0,84,0,0,0;
  InstanciatedConstraintsLemmas,0,0,0,0,0,0,0;
  AssertionLemmas,29,13,0,16,0,0,0;
  Initialisation,3,0,0,3,0,0,0;
  ADD_A_r,3,2,0,1,0,0,0;
  ADD_A_n,3,2,0,1,0,0,0;
  ADD_A_9HL0,3,2,0,1,0,0,0;
  ADD_A_9IX_d0,3,2,0,1,0,0,0;
  ADD_A_9IY_d0,3,2,0,1,0,0,0;
  ADC_A_r,3,2,0,1,0,0,0;
  ADC_A_n,3,2,0,1,0,0,0;
  ADC_A_9HL0,3,2,0,1,0,0,0;
  ADC_A_9IX_d0,3,2,0,1,0,0,0;
  ADC_A_9IY_d0,3,2,0,1,0,0,0;
  SUB_A_r,3,2,0,1,0,0,0;
  SUB_A_n,3,2,0,1,0,0,0;
  SUB_A_9HL0,3,2,0,1,0,0,0;
  SUB_A_9IX_d0,3,2,0,1,0,0,0;
  SUB_A_9IY_d0,3,2,0,1,0,0,0;
  SBC_A_r,3,2,0,1,0,0,0;
  SBC_A_n,3,2,0,1,0,0,0;
  SBC_A_9HL0,3,2,0,1,0,0,0;
  SBC_A_9IX_d0,3,2,0,1,0,0,0;
  SBC_A_9IY_d0,3,2,0,1,0,0,0;
  AND_A_r,3,2,0,1,0,0,0;
  AND_A_n,3,2,0,1,0,0,0;
  AND_A_9HL0,3,2,0,1,0,0,0;
  AND_A_9IX_d0,3,2,0,1,0,0,0;
  AND_A_9IY_d0,3,2,0,1,0,0,0;
  OR_A_r,3,2,0,1,0,0,0;
  OR_A_n,3,2,0,1,0,0,0;
  OR_A_9HL0,3,2,0,1,0,0,0;
  OR_A_9IX_d0,3,2,0,1,0,0,0;
  OR_A_9IY_d0,3,2,0,1,0,0,0;
  XOR_A_r,3,2,0,1,0,0,0;
  XOR_A_n,3,2,0,1,0,0,0;
  XOR_A_9HL0,3,2,0,1,0,0,0;
  XOR_A_9IX_d0,3,2,0,1,0,0,0;
  XOR_A_9IY_d0,3,2,0,1,0,0,0;
  CP_A_r,3,2,0,1,0,0,0;
  CP_A_n,3,2,0,1,0,0,0;
  CP_A_9HL0,3,2,0,1,0,0,0;
  CP_A_9IX_d0,3,2,0,1,0,0,0;
  CP_A_9IY_d0,3,2,0,1,0,0,0;
  INC_r,3,0,0,3,0,0,0;
  INC_9HL0,4,0,0,4,0,0,0;
  INC_9IX_d0,4,1,0,3,0,0,0;
  INC_9IY_d0,4,1,0,3,0,0,0;
  DEC_r,3,1,0,2,0,0,0;
  DEC_9HL0,4,0,0,4,0,0,0;
  DEC_9IX_d0,4,1,0,3,0,0,0;
  DEC_9IY_d0,4,1,0,3,0,0,0
END
&
THEORY ProofState IS
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0)
END
&
THEORY MethodList IS
  pr;
  pr;
  pr;
  ah(ran(rgs8) <: -128..127) & ah(ran(mem) <: -128..127) & ah(ix: 0..65535) & ss & dd & ah(ran(mem) <: -128..127) & pr;
  pr;
  pr;
  pr;
  ah(ran(rgs8) <: -128..127) & ah(ran(mem) <: -128..127) & ah(ix: 0..65535) & ss & dd & ah(ran(mem) <: -128..127) & pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  eh(get_new_flag_register) & pr;
  pr;
  pr;
  pr;
  ah(ran(rgs8) <: -128..127) & ah(ran(mem) <: -128..127) & ah(ix: 0..65535) & ss & dd & ah(ran(mem) <: -128..127) & pr;
  pr;
  pr;
  pr;
  ah(ran(rgs8) <: -128..127) & ah(ran(mem) <: -128..127) & ah(ix: 0..65535) & ss & dd & ah(ran(mem) <: -128..127) & pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  eh(get_new_flag_register) & pr;
  eh(get_new_flag_register) & pr;
  pr;
  eh(get_new_flag_register) & pr;
  eh(get_new_flag_register) & pr;
  pr;
  eh(get_new_flag_register) & pr;
  eh(get_new_flag_register) & pr;
  pr;
  eh(get_new_flag_register) & pr;
  eh(get_new_flag_register) & pr;
  pr;
  eh(get_new_flag_register) & pr;
  eh(get_new_flag_register) & pr;
  pr;
  eh(get_new_flag_register) & pr;
  eh(get_new_flag_register) & pr;
  pr;
  eh(get_new_flag_register) & pr;
  eh(get_new_flag_register) & pr;
  pr;
  eh(get_new_flag_register) & pr;
  eh(get_new_flag_register) & pr;
  pr;
  eh(get_new_flag_register) & pr;
  eh(get_new_flag_register) & pr;
  pr;
  eh(get_new_flag_register) & pr;
  eh(get_new_flag_register) & pr;
  pr;
  eh(get_new_flag_register) & pr;
  eh(get_new_flag_register) & pr;
  pr;
  eh(get_new_flag_register) & pr;
  eh(get_new_flag_register) & pr;
  pr;
  eh(get_new_flag_register) & pr;
  eh(get_new_flag_register) & pr;
  pr;
  eh(get_new_flag_register) & pr;
  eh(get_new_flag_register) & pr;
  pr;
  eh(get_new_flag_register) & pr;
  eh(get_new_flag_register) & pr;
  pr;
  eh(get_new_flag_register) & pr;
  eh(get_new_flag_register) & pr;
  pr;
  eh(get_new_flag_register) & pr;
  eh(get_new_flag_register) & pr;
  pr;
  eh(get_new_flag_register) & pr;
  eh(get_new_flag_register) & pr;
  pr;
  eh(get_new_flag_register) & pr;
  eh(get_new_flag_register) & pr;
  pr;
  eh(get_new_flag_register) & pr;
  eh(get_new_flag_register) & pr;
  pr;
  eh(get_new_flag_register) & pr;
  eh(get_new_flag_register) & pr;
  pr;
  eh(get_new_flag_register) & pr;
  eh(get_new_flag_register) & pr;
  pr;
  eh(get_new_flag_register) & pr;
  eh(get_new_flag_register) & pr;
  pr;
  eh(get_new_flag_register) & pr;
  eh(get_new_flag_register) & pr;
  pr;
  eh(get_new_flag_register) & pr;
  eh(get_new_flag_register) & pr;
  pr;
  eh(get_new_flag_register) & pr;
  eh(get_new_flag_register) & pr;
  pr;
  eh(get_new_flag_register) & pr;
  eh(get_new_flag_register) & pr;
  pr;
  eh(get_new_flag_register) & pr;
  eh(get_new_flag_register) & pr;
  pr;
  eh(get_new_flag_register) & pr;
  eh(get_new_flag_register) & pr;
  pr;
  eh(get_new_flag_register) & pr;
  eh(get_new_flag_register) & pr;
  pr;
  eh(get_new_flag_register) & pr;
  eh(get_new_flag_register) & pr;
  pr;
  eh(get_new_flag_register) & pr;
  eh(get_new_flag_register) & pr;
  pr;
  eh(get_new_flag_register) & pr;
  eh(get_new_flag_register) & pr;
  pr;
  eh(get_new_flag_register) & pr;
  eh(get_new_flag_register) & pr;
  pr;
  eh(get_new_flag_register) & pr;
  eh(get_new_flag_register) & pr;
  pr;
  eh(get_new_flag_register) & pr;
  eh(get_new_flag_register) & pr;
  pr;
  eh(get_new_flag_register) & pr;
  eh(get_new_flag_register) & pr;
  pr;
  eh(get_new_flag_register) & pr;
  eh(get_new_flag_register) & pr;
  pr;
  eh(get_new_flag_register) & pr;
  eh(get_new_flag_register) & pr;
  pr;
  eh(get_new_flag_register) & pr;
  eh(get_new_flag_register) & pr;
  pr;
  pr;
  pr;
  pr;
  eh(INSTRUCTION_NEXT) & pr;
  eh(INSTRUCTION_NEXT) & pr;
  eh(INSTRUCTION_NEXT) & pr;
  eh(INSTRUCTION_NEXT) & pr;
  eh(INSTRUCTION_NEXT) & pr;
  eh(INSTRUCTION_NEXT) & pr;
  eh(INSTRUCTION_NEXT) & pr;
  eh(INSTRUCTION_NEXT) & pr;
  eh(INSTRUCTION_NEXT) & pr;
  eh(INSTRUCTION_NEXT) & pr;
  eh(INSTRUCTION_NEXT) & pr;
  eh(INSTRUCTION_NEXT) & pr;
  eh(INSTRUCTION_NEXT) & pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr
END
&
THEORY PassList IS
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?
END
&
THEORY ManForms 
END
&
THEORY Version IS
  POVersion(V3.8.3)(CLT == "V3.7.6")(genOPO == KO, local_op == OK);
  PRVersion("V3.3.3.p39")(CLT == "V3.7.6")
END
