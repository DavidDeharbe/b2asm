THEORY BalanceX IS
  BYTE_DEFINITION,113,46,0,65,2,0,0;
  Properties,107,46,0,61,0,0,0;
  Assertions,6,0,0,4,2,0,0
END
&
THEORY ProofState IS
  Proved(0);
  Proved(1);
  Proved(0);
  Proved(0);
  Proved(1);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0)
END
&
THEORY MethodList IS
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  dd & ah(dom(by) = 1..8) & pr & ah(by: BYTE) & eh(BYTE,_h,Goal) & eh(bv_size,_h,Goal) & eh(BIT_VECTOR,_h,Goal) & pr & pr;
  pr;
  dd & ah(dom(by) = 1..8) & pr & ah(by: BYTE) & eh(BYTE,_h,Goal) & eh(bv_size,_h,Goal) & eh(BIT_VECTOR,_h,Goal) & pr & pr;
  pr;
  dd & ah(dom(by) = 1..8) & pr & ah(by: BYTE) & eh(BYTE,_h,Goal) & eh(bv_size,_h,Goal) & eh(BIT_VECTOR,_h,Goal) & pr & pr;
  pr;
  dd & ah(dom(by) = 1..8) & pr & ah(by: BYTE) & eh(BYTE,_h,Goal) & eh(bv_size,_h,Goal) & eh(BIT_VECTOR,_h,Goal) & pr & pr;
  pr;
  dd & ah(dom(by) = 1..8) & pr & ah(by: BYTE) & eh(BYTE,_h,Goal) & eh(bv_size,_h,Goal) & eh(BIT_VECTOR,_h,Goal) & pr & pr;
  pr;
  dd & ah(dom(by) = 1..8) & pr & ah(by: BYTE) & eh(BYTE,_h,Goal) & eh(bv_size,_h,Goal) & eh(BIT_VECTOR,_h,Goal) & pr & pr;
  pr;
  dd & ah(dom(by) = 1..8) & pr & ah(by: BYTE) & eh(BYTE,_h,Goal) & eh(bv_size,_h,Goal) & eh(BIT_VECTOR,_h,Goal) & pr & pr;
  pr;
  pr;
  pr;
  dd & ah(dom(bv) = 1..8) & pr & ah(bv: BYTE) & eh(BYTE,_h,Goal) & eh(bv_size,_h,Goal) & eh(BIT_VECTOR,_h,Goal) & pr & pr;
  pr;
  dd & ah(dom(bv) = 1..8) & pr & ah(bv: BYTE) & eh(BYTE,_h,Goal) & eh(bv_size,_h,Goal) & eh(BIT_VECTOR,_h,Goal) & pr & pr;
  pr;
  dd & ah(dom(bv) = 1..8) & pr & ah(bv: BYTE) & eh(BYTE,_h,Goal) & eh(bv_size,_h,Goal) & eh(BIT_VECTOR,_h,Goal) & pr & pr;
  pr;
  dd & ah(dom(bv) = 1..8) & pr & ah(bv: BYTE) & eh(BYTE,_h,Goal) & eh(bv_size,_h,Goal) & eh(BIT_VECTOR,_h,Goal) & pr & pr;
  pr;
  dd & ah(dom(bv) = 1..8) & pr & ah(bv: BYTE) & eh(BYTE,_h,Goal) & eh(bv_size,_h,Goal) & eh(BIT_VECTOR,_h,Goal) & pr & pr;
  pr;
  dd & ah(dom(bv) = 1..8) & pr & ah(bv: BYTE) & eh(BYTE,_h,Goal) & eh(bv_size,_h,Goal) & eh(BIT_VECTOR,_h,Goal) & pr & pr;
  pr;
  dd & ah(dom(bv) = 1..8) & pr & ah(bv: BYTE) & eh(BYTE,_h,Goal) & eh(bv_size,_h,Goal) & eh(BIT_VECTOR,_h,Goal) & pr & pr;
  pr;
  dd & ah(dom(bv) = 1..8) & pr & ah(bv: BYTE) & eh(BYTE,_h,Goal) & eh(bv_size,_h,Goal) & eh(BIT_VECTOR,_h,Goal) & pr & pr;
  pr;
  dd & ah(dom(bv) = 1..8) & pr & ah(bv: BYTE) & eh(BYTE,_h,Goal) & eh(bv_size,_h,Goal) & eh(BIT_VECTOR,_h,Goal) & pr & pr;
  pr;
  dd & ah(dom(bv) = 1..8) & pr & ah(bv: BYTE) & eh(BYTE,_h,Goal) & eh(bv_size,_h,Goal) & eh(BIT_VECTOR,_h,Goal) & pr & pr;
  pr;
  dd & ah(dom(bv) = 1..8) & pr & ah(bv: BYTE) & eh(BYTE,_h,Goal) & eh(bv_size,_h,Goal) & eh(BIT_VECTOR,_h,Goal) & pr & pr;
  pr;
  dd & ah(dom(bv) = 1..8) & pr & ah(bv: BYTE) & eh(BYTE,_h,Goal) & eh(bv_size,_h,Goal) & eh(BIT_VECTOR,_h,Goal) & pr & pr;
  pr;
  dd & ah(dom(bv) = 1..8) & pr & ah(bv: BYTE) & eh(BYTE,_h,Goal) & eh(bv_size,_h,Goal) & eh(BIT_VECTOR,_h,Goal) & pr & pr;
  pr;
  pr;
  pr;
  dd & ah(dom(bv) = 1..8) & pr & ah(bv: BYTE) & eh(BYTE,_h,Goal) & eh(bv_size,_h,Goal) & eh(BIT_VECTOR,_h,Goal) & pr & pr;
  pr;
  dd & ah(dom(bt) = 1..8) & pr & ah(bt: BYTE) & eh(BYTE,_h,Goal) & eh(bv_size,_h,Goal) & eh(BIT_VECTOR,_h,Goal) & pr & pr;
  pr;
  dd & ah(dom(bt) = 1..8) & pr & ah(bt: BYTE) & eh(BYTE,_h,Goal) & eh(bv_size,_h,Goal) & eh(BIT_VECTOR,_h,Goal) & pr & pr;
  pr;
  dd & ah(dom(bt) = 1..8) & pr & ah(bt: BYTE) & eh(BYTE,_h,Goal) & eh(bv_size,_h,Goal) & eh(BIT_VECTOR,_h,Goal) & pr & pr;
  pr;
  pr;
  pr;
  dd & ah(dom(bt) = 1..8) & pr & ah(bt: BYTE) & eh(BYTE,_h,Goal) & eh(bv_size,_h,Goal) & eh(BIT_VECTOR,_h,Goal) & pr & pr;
  pr;
  dd & ah(dom(bt) = 1..8) & pr & ah(bt: BYTE) & eh(BYTE,_h,Goal) & eh(bv_size,_h,Goal) & eh(BIT_VECTOR,_h,Goal) & pr & pr;
  pr;
  dd & ah(dom(bt) = 1..8) & pr & ah(bt: BYTE) & eh(BYTE,_h,Goal) & eh(bv_size,_h,Goal) & eh(BIT_VECTOR,_h,Goal) & pr & pr;
  pr;
  dd & ah(dom(bt) = 1..8) & pr & ah(bt: BYTE) & eh(BYTE,_h,Goal) & eh(bv_size,_h,Goal) & eh(BIT_VECTOR,_h,Goal) & pr & pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  dd & ah(bt1: BYTE & ii: PHYS_BYTE_INDEX) & pr & pr & eh(PHYS_BYTE_INDEX,_h,Goal) & ah(dom(bt1) = 1..8) & ah(bt1: BYTE) & eh(BYTE,_h,Goal) & eh(BIT_VECTOR,_h,Goal) & eh(bv_size,_h,Goal) & eh(BIT_VECTOR,_h,Goal) & pr & ss & dd & eh(dom(bt1),_h,Goal) & ah(ii: PHYS_BYTE_INDEX) & eh(PHYS_BYTE_INDEX,_h,Goal) & pr;
  eh(dom(bv_xor),_h,Goal) & dd & pr;
  dd & eh(dom(bv_or),_h,Goal) & pr;
  dd & eh(dom(bv_and),_h,Goal) & pr;
  pr;
  pr;
  dd & ah(dom(bv) = 1..8) & pr & pr & ah(bv: BYTE) & eh(BYTE,_h,Goal) & eh(bv_size,_h,Goal) & eh(BIT_VECTOR,_h,Goal) & pr & pr;
  pr;
  dd & ah(dom(bv) = 1..8) & pr & pr & ah(bv: BYTE) & eh(BYTE,_h,Goal) & eh(bv_size,_h,Goal) & eh(BIT_VECTOR,_h,Goal) & pr & pr;
  pr;
  dd & ah(dom(bv) = 1..8) & pr & pr & ah(bv: BYTE) & eh(BYTE,_h,Goal) & eh(bv_size,_h,Goal) & eh(BIT_VECTOR,_h,Goal) & pr & pr;
  pr;
  dd & ah(dom(bv) = 1..8) & pr & pr & ah(bv: BYTE) & eh(BYTE,_h,Goal) & eh(bv_size,_h,Goal) & eh(BIT_VECTOR,_h,Goal) & pr & pr;
  pr;
  dd & ah(dom(bv) = 1..8) & pr & pr & ah(bv: BYTE) & eh(BYTE,_h,Goal) & eh(bv_size,_h,Goal) & eh(BIT_VECTOR,_h,Goal) & pr & pr;
  pr;
  dd & ah(dom(bv) = 1..8) & pr & pr & ah(bv: BYTE) & eh(BYTE,_h,Goal) & eh(bv_size,_h,Goal) & eh(BIT_VECTOR,_h,Goal) & pr & pr;
  pr;
  dd & ah(dom(bv) = 1..8) & pr & pr & ah(bv: BYTE) & eh(BYTE,_h,Goal) & eh(bv_size,_h,Goal) & eh(BIT_VECTOR,_h,Goal) & pr & pr;
  pr;
  pr;
  pr;
  pr;
  dd & ah(dom(w1) = 1..8) & pr & pr & ah(w1: BYTE) & eh(BYTE,_h,Goal) & eh(bv_size,_h,Goal) & eh(BIT_VECTOR,_h,Goal) & pr & pr;
  pr;
  dd & ah(dom(w1) = 1..8) & pr & pr & ah(w1: BYTE) & eh(BYTE,_h,Goal) & eh(bv_size,_h,Goal) & eh(BIT_VECTOR,_h,Goal) & pr & pr;
  pr;
  dd & ah(dom(w1) = 1..8) & pr & pr & ah(w1: BYTE) & eh(BYTE,_h,Goal) & eh(bv_size,_h,Goal) & eh(BIT_VECTOR,_h,Goal) & pr & pr;
  pr;
  dd & ah(dom(w1) = 1..8) & pr & pr & ah(w1: BYTE) & eh(BYTE,_h,Goal) & eh(bv_size,_h,Goal) & eh(BIT_VECTOR,_h,Goal) & pr & pr;
  pr;
  dd & ah(dom(w1) = 1..8) & pr & pr & ah(w1: BYTE) & eh(BYTE,_h,Goal) & eh(bv_size,_h,Goal) & eh(BIT_VECTOR,_h,Goal) & pr & pr;
  pr;
  dd & ah(dom(w1) = 1..8) & pr & pr & ah(w1: BYTE) & eh(BYTE,_h,Goal) & eh(bv_size,_h,Goal) & eh(BIT_VECTOR,_h,Goal) & pr & pr;
  pr;
  dd & ah(dom(w1) = 1..8) & pr & pr & ah(w1: BYTE) & eh(BYTE,_h,Goal) & eh(bv_size,_h,Goal) & eh(BIT_VECTOR,_h,Goal) & pr & pr;
  pr;
  pr
END
&
THEORY PassList IS
  Force(0),?;
  Force(1),(?;0);
  Force(0),?;
  Force(0),?;
  Force(1),(?;0);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),(?;0;1;2;3);
  Force(0),?;
  Force(0),(?;0;1;2;3);
  Force(0),?;
  Force(0),(?;0;1;2;3);
  Force(0),?;
  Force(0),(?;0;1;2;3);
  Force(0),?;
  Force(0),(?;0;1;2;3);
  Force(0),?;
  Force(0),(?;0;1;2;3);
  Force(0),?;
  Force(0),(?;0;1;2;3);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),(?;0;1;2;3);
  Force(0),?;
  Force(0),(?;0;1;2;3);
  Force(0),?;
  Force(0),(?;0;1;2;3);
  Force(0),?;
  Force(0),(?;0;1;2;3);
  Force(0),?;
  Force(0),(?;0;1;2;3);
  Force(0),?;
  Force(0),(?;0;1;2;3);
  Force(0),?;
  Force(0),(?;0;1;2;3);
  Force(0),?;
  Force(0),(?;0;1;2;3);
  Force(0),?;
  Force(0),(?;0;1;2;3);
  Force(0),?;
  Force(0),(?;0;1;2;3);
  Force(0),?;
  Force(0),(?;0;1;2;3);
  Force(0),?;
  Force(0),(?;0;1;2;3);
  Force(0),?;
  Force(0),(?;0;1;2;3);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),(?;0;1;2;3);
  Force(0),?;
  Force(0),(?;0;1;2;3);
  Force(0),?;
  Force(0),(?;0;1;2;3);
  Force(0),?;
  Force(0),(?;0;1;2;3);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),(?;0;1;2;3);
  Force(0),?;
  Force(0),(?;0;1;2;3);
  Force(0),?;
  Force(0),(?;0;1;2;3);
  Force(0),?;
  Force(0),(?;0;1;2;3);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),(?;0;1;2;3);
  Force(0),(?;0;1;2;3);
  Force(0),(?;0;1;2;3);
  Force(0),(?;0;1;2;3);
  Force(0),?;
  Force(0),?;
  Force(0),(?;0;1;2;3);
  Force(0),?;
  Force(0),(?;0;1;2;3);
  Force(0),?;
  Force(0),(?;0;1;2;3);
  Force(0),?;
  Force(0),(?;0;1;2;3);
  Force(0),?;
  Force(0),(?;0;1;2;3);
  Force(0),?;
  Force(0),(?;0;1;2;3);
  Force(0),?;
  Force(0),(?;0;1;2;3);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),(?;0;1;2;3);
  Force(0),?;
  Force(0),(?;0;1;2;3);
  Force(0),?;
  Force(0),(?;0;1;2;3);
  Force(0),?;
  Force(0),(?;0;1;2;3);
  Force(0),?;
  Force(0),(?;0;1;2;3);
  Force(0),?;
  Force(0),(?;0;1;2;3);
  Force(0),?;
  Force(0),(?;0;1;2;3);
  Force(0),?;
  Force(0),?
END
&
THEORY ManForms 
END
&
THEORY Version IS
  PRVersion("V3.3.3.p39")(CLT == "V3.7.6")
END
