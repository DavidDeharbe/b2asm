Flag(FileOn("GDC.res")) & Set(toto | "`Seen and used machines properties'" & not((1..3)*{STATE} = {}) & not((1..3)*{CONDUCTION} = {}) & not((1..2)*{DOORS} = {}) & not((1..3)*{COMMAND} = {}) & conduction_p : BOOL*BOOL*BOOL +-> BOOL & dom(conduction_p) = BOOL*BOOL*BOOL & conduction_p = %(leader,manual,controlled).(leader : BOOL & manual : BOOL & controlled : BOOL | bool(leader = TRUE & xor(manual,controlled) = TRUE)) & select_command : BOOL*BOOL*BOOL*((1..3)*{COMMAND}) +-> (1..3)*{COMMAND} & dom(select_command) = BOOL*BOOL*BOOL*((1..3)*{COMMAND}) & !(slow,close,open,mem).(slow : BOOL & close : BOOL & open : BOOL & mem : (1..3)*{COMMAND} => (slow = FALSE => select_command(slow,close,open,mem) = 3|->COMMAND) & (close = TRUE => select_command(slow,close,open,mem) = 3|->COMMAND) & (slow = TRUE & close = FALSE & open = TRUE => select_command(slow,close,open,mem) = 2|->COMMAND) & (slow = TRUE & close = FALSE & open = FALSE => select_command(slow,close,open,mem) = mem)) & btrue & "`Seen and used machines assertions'" & conduction_p(TRUE,TRUE,FALSE) = TRUE & conduction_p(TRUE,FALSE,TRUE) = TRUE & conduction_p(TRUE,TRUE,TRUE) = FALSE & conduction_p(TRUE,FALSE,FALSE) = FALSE & !(mm,cc).(mm : BOOL & cc : BOOL => conduction_p(FALSE,mm,cc) = FALSE) & !(cc,oo,mm).(cc : BOOL & oo : BOOL & mm : (1..3)*{COMMAND} => select_command(FALSE,cc,oo,mm) = 3|->COMMAND) & !(ss,oo,mm).(ss : BOOL & oo : BOOL & mm : (1..3)*{COMMAND} => select_command(ss,TRUE,oo,mm) = 3|->COMMAND) & !mm.(mm : (1..3)*{COMMAND} => select_command(TRUE,FALSE,TRUE,mm) = 2|->COMMAND) & !mm.(mm : (1..3)*{COMMAND} => select_command(TRUE,FALSE,FALSE,mm) = mm) & "`Component invariant'" & slow_speed : BOOL & traction : BOOL & cabin : (1..3)*{STATE} & leader : BOOL & opposite : BOOL & not(leader = TRUE & opposite = TRUE) & (leader = TRUE => cabin = 1|->STATE) & (cabin = 1|->STATE => leader = TRUE) & (opposite = TRUE => cabin = 3|->STATE) & (cabin = 3|->STATE => opposite = TRUE) & (leader = FALSE & opposite = FALSE => cabin = 2|->STATE) & (cabin = 2|->STATE => leader = FALSE & opposite = FALSE) & conduction : (1..3)*{CONDUCTION} & manual : BOOL & controlled : BOOL & (conduction = 1|->CONDUCTION => manual = TRUE & controlled = FALSE) & (manual = TRUE & controlled = FALSE => conduction = 1|->CONDUCTION) & (conduction = 2|->CONDUCTION => manual = FALSE & controlled = TRUE) & (manual = FALSE & controlled = TRUE => conduction = 2|->CONDUCTION) & (conduction = 3|->CONDUCTION => manual = FALSE & controlled = FALSE or (manual = TRUE & controlled = TRUE)) & (manual = FALSE & controlled = FALSE => conduction = 3|->CONDUCTION) & (manual = TRUE & controlled = TRUE => conduction = 3|->CONDUCTION) & Leftcommand_mem : (1..3)*{COMMAND} & Lefttl_command : (1..3)*{COMMAND} & Leftopen_doors : BOOL & Leftclose_doors : BOOL & Lefttl_sensor_open : BOOL & Rightcommand_mem : (1..3)*{COMMAND} & Righttl_command : (1..3)*{COMMAND} & Rightopen_doors : BOOL & Rightclose_doors : BOOL & Righttl_sensor_open : BOOL & (cabin = 1|->STATE & (conduction = 1|->CONDUCTION or conduction = 2|->CONDUCTION) => (slow_speed = FALSE => Lefttl_command = 3|->COMMAND & Righttl_command = 3|->COMMAND) & ((Lefttl_sensor_open = TRUE => traction = FALSE) & (Righttl_sensor_open = TRUE => traction = FALSE))) & Rightvisual_open = Righttl_sensor_open & Leftvisual_open = Lefttl_sensor_open & select_command(TRUE,FALSE,FALSE,Leftcommand_mem) = Leftcommand_mem & select_command(TRUE,FALSE,TRUE,Leftcommand_mem) = 2|->COMMAND & select_command(TRUE,FALSE,FALSE,Lefttl_command) = Lefttl_command & select_command(TRUE,FALSE,TRUE,Lefttl_command) = 2|->COMMAND & select_command(TRUE,FALSE,FALSE,Rightcommand_mem) = Rightcommand_mem & select_command(TRUE,FALSE,TRUE,Rightcommand_mem) = 2|->COMMAND & select_command(TRUE,FALSE,FALSE,Righttl_command) = Righttl_command & select_command(TRUE,FALSE,TRUE,Righttl_command) = 2|->COMMAND & "`update_controller preconditions in this component'" & i_open_left_doors : BOOL & i_close_left_doors : BOOL & i_tl_sensor_left_open : BOOL & i_open_right_doors : BOOL & i_close_right_doors : BOOL & i_tl_sensor_right_open : BOOL & i_leader : BOOL & i_opposite : BOOL & i_manual : BOOL & i_controlled : BOOL & i_slow_speed : BOOL & i_tl_left_command : (1..3)*{COMMAND} & i_tl_right_command : (1..3)*{COMMAND} & not(i_leader = TRUE & i_opposite = TRUE) & select_command(TRUE,FALSE,FALSE,i_tl_left_command) = i_tl_left_command & select_command(TRUE,FALSE,TRUE,i_tl_left_command) = 2|->COMMAND & select_command(TRUE,FALSE,FALSE,i_tl_right_command) = i_tl_right_command & select_command(TRUE,FALSE,TRUE,i_tl_right_command) = 2|->COMMAND & "`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & i_tl_sensor_left_open = TRUE & cond = TRUE & cr : (1..3)*{COMMAND} & cr = select_command(i_slow_speed,i_close_right_doors,i_open_right_doors,Rightcommand_mem) & cl : (1..3)*{COMMAND} & cl = select_command(i_slow_speed,i_close_left_doors,i_open_left_doors,Leftcommand_mem) & not(i_manual = TRUE) & not(i_controlled = TRUE) & i_leader = TRUE & "`Check that the invariant (conduction = CONDUCTION_OFF <=> (manual = FALSE & controlled = FALSE or (manual = TRUE & controlled = TRUE))) is preserved by the operation - ref 3.4'" => (select_command(FALSE,i_close_left_doors,i_open_left_doors,Leftcommand_mem) = 3|->COMMAND => i_manual = FALSE & i_controlled = FALSE or (i_manual = TRUE & i_controlled = TRUE)))