THEORY OPOBalanceX IS
  Microcontroller,55;
  Initialisation,4;
  init_data,7;
  init,8;
  goto,8;
  isequal,11;
  copy,6;
  set_data,4;
  inc,7
END
&
THEORY OPOProofList IS
  _f(1) & _f(20) & inc.7,(_of(19) => _of(32));
  _f(1) & _f(20) & inc.6,(_of(16) => _of(18));
  _f(1) & _f(20) & inc.5,(_of(16) => _of(17));
  _f(1) & _f(20) & inc.4,(_of(13) => _f(11));
  _f(1) & _f(20) & inc.3,(_of(13) => _f(10));
  _f(1) & _f(20) & inc.2,(_of(11) => _of(35));
  _f(1) & _f(20) & inc.1,(_of(9) => _of(10));
  _f(1) & _f(18) & set_data.4,(_of(19) => _of(32));
  _f(1) & _f(18) & set_data.3,(_of(16) => _of(18));
  _f(1) & _f(18) & set_data.2,(_of(16) => _of(17));
  _f(1) & _f(18) & set_data.1,(_of(9) => _of(10));
  _f(1) & _f(15) & copy.6,(_of(19) => _of(32));
  _f(1) & _f(15) & copy.5,(_of(16) => _of(18));
  _f(1) & _f(15) & copy.4,(_of(16) => _of(17));
  _f(1) & _f(15) & copy.3,(_of(13) => _f(11));
  _f(1) & _f(15) & copy.2,(_of(13) => _f(10));
  _f(1) & _f(15) & copy.1,(_of(9) => _of(10));
  _f(1) & _f(7) & isequal.11,(_f(12) & _of(19) => _of(34));
  _f(1) & _f(7) & isequal.10,(_f(12) & _of(16) => _of(18));
  _f(1) & _f(7) & isequal.9,(_f(12) & _of(16) => _of(17));
  _f(1) & _f(7) & isequal.8,(_of(33) & _of(11) => _of(22));
  _f(1) & _f(7) & isequal.7,(_of(33) & _of(11) => _of(21));
  _f(1) & _f(7) & isequal.6,(_f(8) & _of(19) => _of(32));
  _f(1) & _f(7) & isequal.5,(_f(8) & _of(16) => _of(18));
  _f(1) & _f(7) & isequal.4,(_f(8) & _of(16) => _of(17));
  _f(1) & _f(7) & isequal.3,(_of(31) & _of(11) => _of(22));
  _f(1) & _f(7) & isequal.2,(_of(31) & _of(11) => _of(21));
  _f(1) & _f(7) & isequal.1,(_of(9) => _of(10));
  _f(1) & _f(6) & goto.8,(_of(19) => _of(30));
  _f(1) & _f(6) & goto.7,(_of(16) => _of(18));
  _f(1) & _f(6) & goto.6,(_of(16) => _of(17));
  _f(1) & _f(6) & goto.5,(_of(13) => _of(29));
  _f(1) & _f(6) & goto.4,(_of(13) => _of(28));
  _f(1) & _f(6) & goto.3,(_of(11) => _of(22));
  _f(1) & _f(6) & goto.2,(_of(11) => _of(21));
  _f(1) & _f(6) & goto.1,(_of(9) => _of(10));
  _f(1) & _f(5) & init.8,(_of(19) => _of(27));
  _f(1) & _f(5) & init.7,(_of(16) => _of(26));
  _f(1) & _f(5) & init.6,(_of(16) => _of(25));
  _f(1) & _f(5) & init.5,(_of(13) => _of(24));
  _f(1) & _f(5) & init.4,(_of(13) => _of(23));
  _f(1) & _f(5) & init.3,(_of(11) => _of(22));
  _f(1) & _f(5) & init.2,(_of(11) => _of(21));
  _f(1) & _f(5) & init.1,(_of(9) => _of(10));
  _f(1) & _f(2) & init_data.7,(_of(19) => _of(20));
  _f(1) & _f(2) & init_data.6,(_of(16) => _of(18));
  _f(1) & _f(2) & init_data.5,(_of(16) => _of(17));
  _f(1) & _f(2) & init_data.4,(_of(13) => _of(15));
  _f(1) & _f(2) & init_data.3,(_of(13) => _of(14));
  _f(1) & _f(2) & init_data.2,(_of(11) => _of(12));
  _f(1) & _f(2) & init_data.1,(_of(9) => _of(10));
  Initialisation.4,(_of(1) & _of(7) => _of(8));
  Initialisation.3,(_of(1) & _of(5) => _of(6));
  Initialisation.2,(_of(1) & _of(2) => _of(4));
  Initialisation.1,(_of(1) & _of(2) => _of(3))
END
&
THEORY OPOFormulas IS
  ("`Local hypotheses'" & memory_data$0 : NATURAL +-> NATURAL & dom(memory_data$0) = NATURAL);
  "`Check that the invariant (memory_data : NATURAL --> NATURAL) is established by the initialisation - ref 3.3'";
  (memory_data$0 : NATURAL +-> NATURAL);
  (dom(memory_data$0) = NATURAL);
  "`Check that the invariant (pc : NATURAL) is established by the initialisation - ref 3.3'" & "`Check that the invariant (end : NATURAL) is established by the initialisation - ref 3.3'";
  (0 : INTEGER);
  "`Check that the invariant (pc : NATURAL) is established by the initialisation - ref 3.3'" & "`Check that the invariant (end : NATURAL) is established by the initialisation - ref 3.3'" & "`Check that the invariant (pc<=end) is established by the initialisation - ref 3.3'";
  (0<=0);
  "`Check preconditions of called operation, or While loop construction, or Assert predicates'";
  (btrue);
  "`Check that the invariant (memory_data : NATURAL --> NATURAL) is preserved by the operation - ref 3.4'";
  (dom(memory_data<+{address|->value}) = NATURAL);
  "`Check that the invariant (pc : NATURAL) is preserved by the operation - ref 3.4'";
  (pc : INTEGER);
  (0<=pc);
  "`Check that the invariant (end : NATURAL) is preserved by the operation - ref 3.4'";
  (end : INTEGER);
  (0<=end);
  "`Check that the invariant (pc<=end) is preserved by the operation - ref 3.4'";
  (pc<=end);
  (memory_data : NATURAL +-> NATURAL);
  (dom(memory_data) = NATURAL);
  (pc_ : INTEGER);
  (0<=pc_);
  (end_ : INTEGER);
  (0<=end_);
  (pc_<=end_);
  (value : INTEGER);
  (0<=value);
  (value<=end);
  ("`Local hypotheses'" & memory_data(address_1) = value);
  (pc+1<=end);
  ("`Local hypotheses'" & not(memory_data(address_1) = value));
  (pc+2<=end);
  (dom(memory_data<+{address|->memory_data(address)+1}) = NATURAL)
END
&
THEORY Version IS
  POVersion(V3.8.3)(CLT == "V3.7.6")(local_op == OK)
END
