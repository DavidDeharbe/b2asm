THEORY OPOBalanceX IS
  algorithm,16;
  ValuesLemmas,1;
  InstanciatedConstraintsLemmas,0;
  Initialisation,3;
  run,12
END
&
THEORY OPOProofList IS
  _f(1) & _f(2) & _f(3) & run.12,(_f(7) & _of(26) => _of(2));
  _f(1) & _f(2) & _f(3) & run.11,(_of(23) & _of(25) => _of(21));
  _f(1) & _f(2) & _f(3) & run.10,(_of(23) & _of(24) => _of(19));
  _f(1) & _f(2) & _f(3) & run.9,(_f(4) & _of(22) => _of(2));
  _f(1) & _f(2) & _f(3) & run.8,(_of(17) & _of(20) => _of(21));
  _f(1) & _f(2) & _f(3) & run.7,(_of(17) & _of(18) => _of(19));
  _f(1) & _f(2) & _f(3) & run.6,(_of(11) & _of(12) => _of(16));
  _f(1) & _f(2) & _f(3) & run.5,(_of(11) & _of(12) => _of(15));
  _f(1) & _f(2) & _f(3) & run.4,(_of(11) & _of(12) => _of(14));
  _f(1) & _f(2) & _f(3) & run.3,(_of(11) & _of(12) => _of(13));
  _f(1) & _f(2) & _f(3) & run.2,(_of(11) & _of(12) => _of(2));
  _f(1) & _f(2) & _f(3) & run.1,(_of(10) => _of(2));
  _f(1) & Initialisation.3,(_of(6) & _of(9) => _of(2));
  _f(1) & Initialisation.2,(_of(6) & _of(7) => _of(8));
  _f(1) & Initialisation.1,(_of(3) & _of(4) => _of(5));
  ValuesLemmas.1,(_of(1) => _of(2))
END
&
THEORY OPOFormulas IS
  "`Check that the property (btrue) is preserved by the valuations - ref 5.2'";
  (btrue);
  ("`Local hypotheses'" & value$0 : INTEGER & value$1 : INTEGER & value$2 : INTEGER);
  "`Check preconditions of called operation, or While loop construction, or Assert predicates'" & "`Check preconditions of called operation, or While loop construction, or Assert predicates'" & "`Check preconditions of called operation, or While loop construction, or Assert predicates'";
  (0 : INTEGER);
  ("`Local hypotheses'" & value$0 : INTEGER & value$1 : INTEGER & value$2 : INTEGER & 0 : INTEGER);
  "`Check that the invariant (a = aivalue) is established by the initialisation - ref 4.3, 5.4'" & "`Check initialisation refinement - ref 4.3, 5.4'" & "`Check that the invariant (b = bivalue) is established by the initialisation - ref 4.3, 5.4'" & "`Check initialisation refinement - ref 4.3, 5.4'" & "`Check that the invariant (m = mivalue) is established by the initialisation - ref 4.3, 5.4'" & "`Check initialisation refinement - ref 4.3, 5.4'";
  (0 = 0);
  "`Check that the invariant (m = mivalue) is established by the initialisation - ref 4.3, 5.4'" & "`Check initialisation refinement - ref 4.3, 5.4'";
  "`Check precondition (btrue) deduction'";
  ("`run preconditions in this component'" & v : INTEGER & v<=2147483647 & -2147483647<=v & 0<=v);
  "`Check preconditions of called operation, or While loop construction, or Assert predicates'";
  (btrue => aivalue$1 : INTEGER);
  (av$7777 = aivalue$1 & bivaluez$7777 = av$7777 => v : INTEGER);
  (v>aivalue$1 => v : INTEGER);
  (not(v>aivalue$1) => aivalue$1 : INTEGER);
  ("`run preconditions in this component'" & v : INTEGER & v<=2147483647 & -2147483647<=v & 0<=v & "`Local hypotheses'" & aivalue$1+1<=v);
  "`Check that the invariant (a = aivalue) is preserved by the operation - ref 4.4, 5.5'" & "`Check operation refinement - ref 4.4, 5.5'";
  (v = v);
  "`Check that the invariant (b = bivalue) is preserved by the operation - ref 4.4, 5.5'" & "`Check operation refinement - ref 4.4, 5.5'";
  (aivalue$1 = a);
  "`Check that the invariant (m = mivalue) is preserved by the operation - ref 4.4, 5.5'" & "`Check operation refinement - ref 4.4, 5.5'";
  ("`run preconditions in this component'" & v : INTEGER & v<=2147483647 & -2147483647<=v & 0<=v & "`Local hypotheses'" & not(aivalue$1+1<=v));
  "`Check that the invariant (a = aivalue) is preserved by the operation - ref 4.4, 5.5'";
  "`Check that the invariant (b = bivalue) is preserved by the operation - ref 4.4, 5.5'";
  "`Check that the invariant (m = mivalue) is preserved by the operation - ref 4.4, 5.5'"
END
&
THEORY Version IS
  POVersion(V3.8.3)(CLT == "V3.7.6")(local_op == OK)
END
