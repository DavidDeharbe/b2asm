THEORY ProofList IS
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.204,(_f(214) & _f(18) => _f(19));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.203,(_f(213) & _f(18) => _f(19));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.202,(_f(212) & _f(9) => _f(21));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.201,(_f(211) & _f(18) => _f(19));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.200,(_f(210) & _f(9) => _f(10));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.199,(_f(209) & _f(6) => _f(7));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.198,(_f(208) & _f(18) => _f(42));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.197,(_f(207) & _f(18) => _f(42));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.196,(_f(206) & _f(9) => _f(21));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.195,(_f(205) & _f(33) => _f(70));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.194,(_f(205) & _f(33) => _f(69));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.193,(_f(204) & _f(18) => _f(42));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.192,(_f(203) & _f(9) => _f(10));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.191,(_f(202) & _f(6) => _f(7));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.190,(_f(201) & _f(18) => _f(31));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.189,(_f(200) & _f(18) => _f(31));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.188,(_f(199) & _f(9) => _f(21));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.187,(_f(198) & _f(33) => _f(70));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.186,(_f(198) & _f(33) => _f(69));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.185,(_f(197) & _f(18) => _f(31));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.184,(_f(196) & _f(9) => _f(10));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.183,(_f(195) & _f(6) => _f(7));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.182,(_f(194) & _f(18) => _f(19));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.181,(_f(193) & _f(15) => _f(16));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.180,(_f(192) & _f(12) => _f(13));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.179,(_f(191) & _f(18) => _f(19));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.178,(_f(190) & _f(15) => _f(16));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.177,(_f(189) & _f(12) => _f(13));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.176,(_f(188) & _f(9) => _f(21));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.175,(_f(187) & _f(18) => _f(19));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.174,(_f(186) & _f(15) => _f(16));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.173,(_f(185) & _f(12) => _f(13));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.172,(_f(184) & _f(9) => _f(10));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.171,(_f(183) & _f(6) => _f(7));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.170,(_f(182) & _f(18) => _f(19));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.169,(_f(181) & _f(18) => _f(19));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.168,(_f(180) & _f(9) => _f(21));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.167,(_f(179) & _f(18) => _f(19));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.166,(_f(178) & _f(9) => _f(10));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.165,(_f(177) & _f(6) => _f(7));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.164,(_f(176) & _f(18) => _f(42));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.163,(_f(175) & _f(18) => _f(42));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.162,(_f(174) & _f(9) => _f(21));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.161,(_f(173) & _f(33) => _f(35));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.160,(_f(173) & _f(33) => _f(34));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.159,(_f(172) & _f(18) => _f(42));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.158,(_f(171) & _f(9) => _f(10));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.157,(_f(170) & _f(6) => _f(7));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.156,(_f(169) & _f(18) => _f(31));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.155,(_f(168) & _f(18) => _f(31));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.154,(_f(167) & _f(9) => _f(21));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.153,(_f(166) & _f(33) => _f(35));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.152,(_f(166) & _f(33) => _f(34));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.151,(_f(165) & _f(18) => _f(31));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.150,(_f(164) & _f(9) => _f(10));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.149,(_f(163) & _f(6) => _f(7));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.148,(_f(162) & _f(18) => _f(19));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.147,(_f(161) & _f(15) => _f(16));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.146,(_f(160) & _f(12) => _f(13));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.145,(_f(159) & _f(18) => _f(19));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.144,(_f(158) & _f(15) => _f(16));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.143,(_f(157) & _f(12) => _f(13));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.142,(_f(156) & _f(9) => _f(21));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.141,(_f(155) & _f(18) => _f(19));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.140,(_f(154) & _f(15) => _f(16));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.139,(_f(153) & _f(12) => _f(13));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.138,(_f(152) & _f(9) => _f(10));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.137,(_f(151) & _f(6) => _f(7));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.136,(_f(150) & _f(18) => _f(19));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.135,(_f(149) & _f(18) => _f(19));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.134,(_f(148) & _f(9) => _f(21));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.133,(_f(147) & _f(18) => _f(19));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.132,(_f(146) & _f(9) => _f(10));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.131,(_f(145) & _f(6) => _f(7));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.130,(_f(144) & _f(18) => _f(42));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.129,(_f(143) & _f(18) => _f(42));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.128,(_f(142) & _f(9) => _f(21));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.127,(_f(141) & _f(33) => _f(70));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.126,(_f(141) & _f(33) => _f(69));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.125,(_f(140) & _f(18) => _f(42));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.124,(_f(139) & _f(9) => _f(10));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.123,(_f(138) & _f(6) => _f(7));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.122,(_f(137) & _f(18) => _f(31));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.121,(_f(136) & _f(18) => _f(31));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.120,(_f(135) & _f(9) => _f(21));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.119,(_f(134) & _f(33) => _f(70));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.118,(_f(134) & _f(33) => _f(69));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.117,(_f(133) & _f(18) => _f(31));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.116,(_f(132) & _f(9) => _f(10));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.115,(_f(131) & _f(6) => _f(7));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.114,(_f(130) & _f(18) => _f(19));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.113,(_f(129) & _f(15) => _f(16));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.112,(_f(128) & _f(12) => _f(13));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.111,(_f(127) & _f(18) => _f(19));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.110,(_f(126) & _f(15) => _f(16));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.109,(_f(125) & _f(12) => _f(13));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.108,(_f(124) & _f(9) => _f(21));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.107,(_f(123) & _f(18) => _f(19));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.106,(_f(122) & _f(15) => _f(16));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.105,(_f(121) & _f(12) => _f(13));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.104,(_f(120) & _f(9) => _f(10));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.103,(_f(119) & _f(6) => _f(7));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.102,(_f(118) & _f(18) => _f(19));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.101,(_f(117) & _f(18) => _f(19));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.100,(_f(116) & _f(9) => _f(21));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.99,(_f(115) & _f(18) => _f(19));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.98,(_f(114) & _f(9) => _f(10));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.97,(_f(113) & _f(6) => _f(7));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.96,(_f(112) & _f(18) => _f(42));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.95,(_f(111) & _f(18) => _f(42));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.94,(_f(110) & _f(9) => _f(21));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.93,(_f(109) & _f(33) => _f(35));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.92,(_f(109) & _f(33) => _f(34));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.91,(_f(108) & _f(18) => _f(42));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.90,(_f(107) & _f(9) => _f(10));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.89,(_f(106) & _f(6) => _f(7));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.88,(_f(105) & _f(18) => _f(31));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.87,(_f(104) & _f(18) => _f(31));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.86,(_f(103) & _f(9) => _f(21));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.85,(_f(102) & _f(33) => _f(35));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.84,(_f(102) & _f(33) => _f(34));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.83,(_f(101) & _f(18) => _f(31));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.82,(_f(100) & _f(9) => _f(10));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.81,(_f(99) & _f(6) => _f(7));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.80,(_f(98) & _f(18) => _f(19));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.79,(_f(97) & _f(15) => _f(16));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.78,(_f(96) & _f(12) => _f(13));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.77,(_f(95) & _f(18) => _f(19));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.76,(_f(94) & _f(15) => _f(16));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.75,(_f(93) & _f(12) => _f(13));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.74,(_f(92) & _f(9) => _f(21));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.73,(_f(91) & _f(18) => _f(19));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.72,(_f(90) & _f(15) => _f(16));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.71,(_f(89) & _f(12) => _f(13));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.70,(_f(88) & _f(9) => _f(10));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.69,(_f(87) & _f(6) => _f(7));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.68,(_f(86) & _f(18) => _f(19));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.67,(_f(85) & _f(18) => _f(19));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.66,(_f(84) & _f(9) => _f(21));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.65,(_f(83) & _f(18) => _f(19));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.64,(_f(82) & _f(9) => _f(10));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.63,(_f(81) & _f(6) => _f(7));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.62,(_f(80) & _f(18) => _f(42));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.61,(_f(79) & _f(18) => _f(42));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.60,(_f(78) & _f(9) => _f(21));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.59,(_f(77) & _f(33) => _f(70));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.58,(_f(77) & _f(33) => _f(69));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.57,(_f(76) & _f(18) => _f(42));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.56,(_f(75) & _f(9) => _f(10));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.55,(_f(74) & _f(6) => _f(7));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.54,(_f(73) & _f(18) => _f(31));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.53,(_f(72) & _f(18) => _f(31));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.52,(_f(71) & _f(9) => _f(21));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.51,(_f(68) & _f(33) => _f(70));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.50,(_f(68) & _f(33) => _f(69));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.49,(_f(67) & _f(18) => _f(31));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.48,(_f(66) & _f(9) => _f(10));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.47,(_f(65) & _f(6) => _f(7));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.46,(_f(64) & _f(18) => _f(19));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.45,(_f(63) & _f(15) => _f(16));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.44,(_f(62) & _f(12) => _f(13));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.43,(_f(61) & _f(18) => _f(19));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.42,(_f(60) & _f(15) => _f(16));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.41,(_f(59) & _f(12) => _f(13));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.40,(_f(58) & _f(9) => _f(21));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.39,(_f(57) & _f(18) => _f(19));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.38,(_f(56) & _f(15) => _f(16));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.37,(_f(55) & _f(12) => _f(13));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.36,(_f(54) & _f(9) => _f(10));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.35,(_f(53) & _f(6) => _f(7));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.34,(_f(52) & _f(18) => _f(19));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.33,(_f(51) & _f(18) => _f(19));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.32,(_f(50) & _f(9) => _f(21));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.31,(_f(49) & _f(18) => _f(19));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.30,(_f(48) & _f(9) => _f(10));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.29,(_f(47) & _f(6) => _f(7));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.28,(_f(46) & _f(18) => _f(42));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.27,(_f(45) & _f(18) => _f(42));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.26,(_f(44) & _f(9) => _f(21));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.25,(_f(43) & _f(33) => _f(35));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.24,(_f(43) & _f(33) => _f(34));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.23,(_f(41) & _f(18) => _f(42));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.22,(_f(40) & _f(9) => _f(10));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.21,(_f(39) & _f(6) => _f(7));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.20,(_f(38) & _f(18) => _f(31));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.19,(_f(37) & _f(18) => _f(31));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.18,(_f(36) & _f(9) => _f(21));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.17,(_f(32) & _f(33) => _f(35));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.16,(_f(32) & _f(33) => _f(34));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.15,(_f(30) & _f(18) => _f(31));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.14,(_f(29) & _f(9) => _f(10));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.13,(_f(28) & _f(6) => _f(7));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.12,(_f(27) & _f(18) => _f(19));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.11,(_f(26) & _f(15) => _f(16));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.10,(_f(25) & _f(12) => _f(13));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.9,(_f(24) & _f(18) => _f(19));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.8,(_f(23) & _f(15) => _f(16));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.7,(_f(22) & _f(12) => _f(13));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.6,(_f(20) & _f(9) => _f(21));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.5,(_f(17) & _f(18) => _f(19));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.4,(_f(14) & _f(15) => _f(16));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.3,(_f(11) & _f(12) => _f(13));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.2,(_f(8) & _f(9) => _f(10));
  _f(1) & _f(2) & _f(3) & _f(4) & update_controller.1,(_f(5) & _f(6) => _f(7))
END
&
THEORY Formulas IS
  ("`Seen and used machines properties'" & not((1..3)*{STATE} = {}) & not((1..3)*{CONDUCTION} = {}) & not((1..2)*{DOORS} = {}) & not((1..3)*{COMMAND} = {}) & conduction_p : BOOL*BOOL*BOOL +-> BOOL & dom(conduction_p) = BOOL*BOOL*BOOL & conduction_p = %(leader,manual,controlled).(leader : BOOL & manual : BOOL & controlled : BOOL | bool(leader = TRUE & xor(manual,controlled) = TRUE)) & !(l,m,c).(l : BOOL & m : BOOL & c : BOOL => conduction_p(l,m,c) = bool(l = TRUE & xor(m,c) = TRUE)) & select_command : BOOL*BOOL*BOOL*((1..3)*{COMMAND}) +-> (1..3)*{COMMAND} & dom(select_command) = BOOL*BOOL*BOOL*((1..3)*{COMMAND}) & !(slow,close,open,mem).(slow : BOOL & close : BOOL & open : BOOL & mem : (1..3)*{COMMAND} => (slow = FALSE => select_command(slow,close,open,mem) = 3|->COMMAND) & (close = TRUE => select_command(slow,close,open,mem) = 3|->COMMAND) & (slow = TRUE & close = FALSE & open = TRUE => select_command(slow,close,open,mem) = 2|->COMMAND) & (slow = TRUE & close = FALSE & open = FALSE => select_command(slow,close,open,mem) = mem)) & xor : BOOL*BOOL +-> BOOL & dom(xor) = BOOL*BOOL & !(a,b).(a : BOOL & b : BOOL => xor(a,b) = bool(not(a = b))));
  ("`Seen and used machines assertions'" & !mm.(mm : (1..3)*{COMMAND} => select_command(TRUE,FALSE,FALSE,mm) = mm) & !mm.(mm : (1..3)*{COMMAND} => select_command(TRUE,FALSE,TRUE,mm) = 2|->COMMAND) & !(ss,oo,mm).(ss : BOOL & oo : BOOL & mm : (1..3)*{COMMAND} => select_command(ss,TRUE,oo,mm) = 3|->COMMAND) & !(cc,oo,mm).(cc : BOOL & oo : BOOL & mm : (1..3)*{COMMAND} => select_command(FALSE,cc,oo,mm) = 3|->COMMAND) & !(mm,cc).(mm : BOOL & cc : BOOL => conduction_p(FALSE,mm,cc) = FALSE) & conduction_p(TRUE,FALSE,FALSE) = FALSE & conduction_p(TRUE,TRUE,TRUE) = FALSE & conduction_p(TRUE,FALSE,TRUE) = TRUE & conduction_p(TRUE,TRUE,FALSE) = TRUE & xor(FALSE,FALSE) = FALSE & xor(TRUE,TRUE) = FALSE & xor(FALSE,TRUE) = TRUE & xor(TRUE,FALSE) = TRUE);
  ("`Component invariant'" & slow_speed : BOOL & traction : BOOL & cabin : (1..3)*{STATE} & leader : BOOL & opposite : BOOL & not(leader = TRUE & opposite = TRUE) & (leader = TRUE => cabin = 1|->STATE) & (cabin = 1|->STATE => leader = TRUE) & (opposite = TRUE => cabin = 3|->STATE) & (cabin = 3|->STATE => opposite = TRUE) & (leader = FALSE & opposite = FALSE => cabin = 2|->STATE) & (cabin = 2|->STATE => leader = FALSE & opposite = FALSE) & conduction : (1..3)*{CONDUCTION} & manual : BOOL & controlled : BOOL & (conduction = 1|->CONDUCTION => manual = TRUE & controlled = FALSE) & (manual = TRUE & controlled = FALSE => conduction = 1|->CONDUCTION) & (conduction = 2|->CONDUCTION => manual = FALSE & controlled = TRUE) & (manual = FALSE & controlled = TRUE => conduction = 2|->CONDUCTION) & (conduction = 3|->CONDUCTION => manual = FALSE & controlled = FALSE or (manual = TRUE & controlled = TRUE)) & (manual = FALSE & controlled = FALSE => conduction = 3|->CONDUCTION) & (manual = TRUE & controlled = TRUE => conduction = 3|->CONDUCTION) & Leftcommand_mem : (1..3)*{COMMAND} & Lefttl_command : (1..3)*{COMMAND} & Leftopen_doors : BOOL & Leftclose_doors : BOOL & Lefttl_sensor_open : BOOL & Leftvisual_open : BOOL & Leftvisual_open = Lefttl_sensor_open & Rightcommand_mem : (1..3)*{COMMAND} & Righttl_command : (1..3)*{COMMAND} & Rightopen_doors : BOOL & Rightclose_doors : BOOL & Righttl_sensor_open : BOOL & Rightvisual_open : BOOL & Rightvisual_open = Righttl_sensor_open & (cabin = 1|->STATE & (conduction = 1|->CONDUCTION or conduction = 2|->CONDUCTION) => (slow_speed = FALSE => Lefttl_command = 3|->COMMAND & Righttl_command = 3|->COMMAND) & ((Lefttl_sensor_open = TRUE => traction = FALSE) & (Righttl_sensor_open = TRUE => traction = FALSE))));
  ("`update_controller preconditions in this component'" & i_open_left_doors : BOOL & i_close_left_doors : BOOL & i_tl_sensor_left_open : BOOL & i_open_right_doors : BOOL & i_close_right_doors : BOOL & i_tl_sensor_right_open : BOOL & i_leader : BOOL & i_opposite : BOOL & i_manual : BOOL & i_controlled : BOOL & i_slow_speed : BOOL & i_tl_left_command : (1..3)*{COMMAND} & i_tl_right_command : (1..3)*{COMMAND} & not(i_leader = TRUE & i_opposite = TRUE));
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & i_tl_sensor_left_open = TRUE & cond = TRUE & cr : (1..3)*{COMMAND} & cr = select_command(i_slow_speed,i_close_right_doors,i_open_right_doors,Rightcommand_mem) & cl : (1..3)*{COMMAND} & cl = select_command(i_slow_speed,i_close_left_doors,i_open_left_doors,Leftcommand_mem) & i_manual = TRUE & i_controlled = TRUE & i_leader = TRUE & i_opposite = TRUE);
  "`Check that the invariant (opposite = TRUE <=> (cabin = OPPOSITE)) is preserved by the operation - ref 3.4'";
  (1|->STATE = 3|->STATE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & i_tl_sensor_left_open = TRUE & cond = TRUE & cr : (1..3)*{COMMAND} & cr = select_command(i_slow_speed,i_close_right_doors,i_open_right_doors,Rightcommand_mem) & cl : (1..3)*{COMMAND} & cl = select_command(i_slow_speed,i_close_left_doors,i_open_left_doors,Leftcommand_mem) & i_manual = TRUE & i_controlled = TRUE & i_leader = TRUE & i_leader = FALSE & i_opposite = FALSE);
  "`Check that the invariant ((leader = FALSE & opposite = FALSE) <=> (cabin = NONE)) is preserved by the operation - ref 3.4'";
  (1|->STATE = 2|->STATE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & i_tl_sensor_left_open = TRUE & cond = TRUE & cr : (1..3)*{COMMAND} & cr = select_command(i_slow_speed,i_close_right_doors,i_open_right_doors,Rightcommand_mem) & cl : (1..3)*{COMMAND} & cl = select_command(i_slow_speed,i_close_left_doors,i_open_left_doors,Leftcommand_mem) & i_manual = TRUE & i_controlled = TRUE & i_leader = TRUE & i_controlled = FALSE);
  "`Check that the invariant (conduction = MANUAL <=> (manual = TRUE & controlled = FALSE)) is preserved by the operation - ref 3.4'";
  (3|->CONDUCTION = 1|->CONDUCTION);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & i_tl_sensor_left_open = TRUE & cond = TRUE & cr : (1..3)*{COMMAND} & cr = select_command(i_slow_speed,i_close_right_doors,i_open_right_doors,Rightcommand_mem) & cl : (1..3)*{COMMAND} & cl = select_command(i_slow_speed,i_close_left_doors,i_open_left_doors,Leftcommand_mem) & i_manual = TRUE & i_controlled = TRUE & i_leader = TRUE & i_manual = FALSE);
  "`Check that the invariant (conduction = CONTROLLED <=> (manual = FALSE & controlled = TRUE)) is preserved by the operation - ref 3.4'";
  (3|->CONDUCTION = 2|->CONDUCTION);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & i_tl_sensor_left_open = TRUE & cond = TRUE & cr : (1..3)*{COMMAND} & cr = select_command(i_slow_speed,i_close_right_doors,i_open_right_doors,Rightcommand_mem) & cl : (1..3)*{COMMAND} & cl = select_command(i_slow_speed,i_close_left_doors,i_open_left_doors,Leftcommand_mem) & i_manual = TRUE & i_controlled = TRUE & i_leader = TRUE);
  "`Check that the invariant (conduction = CONDUCTION_OFF <=> (manual = FALSE & controlled = FALSE or (manual = TRUE & controlled = TRUE))) is preserved by the operation - ref 3.4'";
  (i_manual = FALSE & i_controlled = FALSE or (i_manual = TRUE & i_controlled = TRUE));
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & i_tl_sensor_left_open = TRUE & cond = TRUE & cr : (1..3)*{COMMAND} & cr = select_command(i_slow_speed,i_close_right_doors,i_open_right_doors,Rightcommand_mem) & cl : (1..3)*{COMMAND} & cl = select_command(i_slow_speed,i_close_left_doors,i_open_left_doors,Leftcommand_mem) & i_manual = TRUE & i_controlled = TRUE & not(i_leader = TRUE) & i_opposite = TRUE & i_leader = FALSE & i_opposite = FALSE);
  (3|->STATE = 2|->STATE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & i_tl_sensor_left_open = TRUE & cond = TRUE & cr : (1..3)*{COMMAND} & cr = select_command(i_slow_speed,i_close_right_doors,i_open_right_doors,Rightcommand_mem) & cl : (1..3)*{COMMAND} & cl = select_command(i_slow_speed,i_close_left_doors,i_open_left_doors,Leftcommand_mem) & i_manual = TRUE & i_controlled = TRUE & not(i_leader = TRUE) & i_opposite = TRUE & i_controlled = FALSE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & i_tl_sensor_left_open = TRUE & cond = TRUE & cr : (1..3)*{COMMAND} & cr = select_command(i_slow_speed,i_close_right_doors,i_open_right_doors,Rightcommand_mem) & cl : (1..3)*{COMMAND} & cl = select_command(i_slow_speed,i_close_left_doors,i_open_left_doors,Leftcommand_mem) & i_manual = TRUE & i_controlled = TRUE & not(i_leader = TRUE) & i_opposite = TRUE & i_manual = FALSE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & i_tl_sensor_left_open = TRUE & cond = TRUE & cr : (1..3)*{COMMAND} & cr = select_command(i_slow_speed,i_close_right_doors,i_open_right_doors,Rightcommand_mem) & cl : (1..3)*{COMMAND} & cl = select_command(i_slow_speed,i_close_left_doors,i_open_left_doors,Leftcommand_mem) & i_manual = TRUE & i_controlled = TRUE & not(i_leader = TRUE) & i_opposite = TRUE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & i_tl_sensor_left_open = TRUE & cond = TRUE & cr : (1..3)*{COMMAND} & cr = select_command(i_slow_speed,i_close_right_doors,i_open_right_doors,Rightcommand_mem) & cl : (1..3)*{COMMAND} & cl = select_command(i_slow_speed,i_close_left_doors,i_open_left_doors,Leftcommand_mem) & i_manual = TRUE & i_controlled = TRUE & not(i_leader = TRUE) & not(i_opposite = TRUE) & i_controlled = FALSE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & i_tl_sensor_left_open = TRUE & cond = TRUE & cr : (1..3)*{COMMAND} & cr = select_command(i_slow_speed,i_close_right_doors,i_open_right_doors,Rightcommand_mem) & cl : (1..3)*{COMMAND} & cl = select_command(i_slow_speed,i_close_left_doors,i_open_left_doors,Leftcommand_mem) & i_manual = TRUE & i_controlled = TRUE & not(i_leader = TRUE) & not(i_opposite = TRUE) & i_manual = FALSE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & i_tl_sensor_left_open = TRUE & cond = TRUE & cr : (1..3)*{COMMAND} & cr = select_command(i_slow_speed,i_close_right_doors,i_open_right_doors,Rightcommand_mem) & cl : (1..3)*{COMMAND} & cl = select_command(i_slow_speed,i_close_left_doors,i_open_left_doors,Leftcommand_mem) & i_manual = TRUE & i_controlled = TRUE & not(i_leader = TRUE) & not(i_opposite = TRUE));
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & i_tl_sensor_left_open = TRUE & cond = TRUE & cr : (1..3)*{COMMAND} & cr = select_command(i_slow_speed,i_close_right_doors,i_open_right_doors,Rightcommand_mem) & cl : (1..3)*{COMMAND} & cl = select_command(i_slow_speed,i_close_left_doors,i_open_left_doors,Leftcommand_mem) & i_manual = TRUE & not(i_controlled = TRUE) & i_leader = TRUE & i_opposite = TRUE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & i_tl_sensor_left_open = TRUE & cond = TRUE & cr : (1..3)*{COMMAND} & cr = select_command(i_slow_speed,i_close_right_doors,i_open_right_doors,Rightcommand_mem) & cl : (1..3)*{COMMAND} & cl = select_command(i_slow_speed,i_close_left_doors,i_open_left_doors,Leftcommand_mem) & i_manual = TRUE & not(i_controlled = TRUE) & i_leader = TRUE & i_leader = FALSE & i_opposite = FALSE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & i_tl_sensor_left_open = TRUE & cond = TRUE & cr : (1..3)*{COMMAND} & cr = select_command(i_slow_speed,i_close_right_doors,i_open_right_doors,Rightcommand_mem) & cl : (1..3)*{COMMAND} & cl = select_command(i_slow_speed,i_close_left_doors,i_open_left_doors,Leftcommand_mem) & i_manual = TRUE & not(i_controlled = TRUE) & i_leader = TRUE & i_manual = FALSE & i_controlled = FALSE);
  (1|->CONDUCTION = 3|->CONDUCTION);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & i_tl_sensor_left_open = TRUE & cond = TRUE & cr : (1..3)*{COMMAND} & cr = select_command(i_slow_speed,i_close_right_doors,i_open_right_doors,Rightcommand_mem) & cl : (1..3)*{COMMAND} & cl = select_command(i_slow_speed,i_close_left_doors,i_open_left_doors,Leftcommand_mem) & i_manual = TRUE & not(i_controlled = TRUE) & i_leader = TRUE & i_slow_speed = FALSE);
  "`Check that the invariant (cabin = LEADER & (conduction = MANUAL or conduction = CONTROLLED) => (slow_speed = FALSE => Lefttl_command = CLOSE_DOORS & Righttl_command = CLOSE_DOORS) & (Lefttl_sensor_open = TRUE or Righttl_sensor_open = TRUE => traction = FALSE)) is preserved by the operation - ref 3.4'";
  (cl = 3|->COMMAND);
  (cr = 3|->COMMAND);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & i_tl_sensor_left_open = TRUE & cond = TRUE & cr : (1..3)*{COMMAND} & cr = select_command(i_slow_speed,i_close_right_doors,i_open_right_doors,Rightcommand_mem) & cl : (1..3)*{COMMAND} & cl = select_command(i_slow_speed,i_close_left_doors,i_open_left_doors,Leftcommand_mem) & i_manual = TRUE & not(i_controlled = TRUE) & not(i_leader = TRUE) & i_opposite = TRUE & i_leader = FALSE & i_opposite = FALSE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & i_tl_sensor_left_open = TRUE & cond = TRUE & cr : (1..3)*{COMMAND} & cr = select_command(i_slow_speed,i_close_right_doors,i_open_right_doors,Rightcommand_mem) & cl : (1..3)*{COMMAND} & cl = select_command(i_slow_speed,i_close_left_doors,i_open_left_doors,Leftcommand_mem) & i_manual = TRUE & not(i_controlled = TRUE) & not(i_leader = TRUE) & i_opposite = TRUE & i_manual = FALSE & i_controlled = FALSE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & i_tl_sensor_left_open = TRUE & cond = TRUE & cr : (1..3)*{COMMAND} & cr = select_command(i_slow_speed,i_close_right_doors,i_open_right_doors,Rightcommand_mem) & cl : (1..3)*{COMMAND} & cl = select_command(i_slow_speed,i_close_left_doors,i_open_left_doors,Leftcommand_mem) & i_manual = TRUE & not(i_controlled = TRUE) & not(i_leader = TRUE) & not(i_opposite = TRUE) & i_manual = FALSE & i_controlled = FALSE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & i_tl_sensor_left_open = TRUE & cond = TRUE & cr : (1..3)*{COMMAND} & cr = select_command(i_slow_speed,i_close_right_doors,i_open_right_doors,Rightcommand_mem) & cl : (1..3)*{COMMAND} & cl = select_command(i_slow_speed,i_close_left_doors,i_open_left_doors,Leftcommand_mem) & not(i_manual = TRUE) & i_controlled = TRUE & i_leader = TRUE & i_opposite = TRUE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & i_tl_sensor_left_open = TRUE & cond = TRUE & cr : (1..3)*{COMMAND} & cr = select_command(i_slow_speed,i_close_right_doors,i_open_right_doors,Rightcommand_mem) & cl : (1..3)*{COMMAND} & cl = select_command(i_slow_speed,i_close_left_doors,i_open_left_doors,Leftcommand_mem) & not(i_manual = TRUE) & i_controlled = TRUE & i_leader = TRUE & i_leader = FALSE & i_opposite = FALSE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & i_tl_sensor_left_open = TRUE & cond = TRUE & cr : (1..3)*{COMMAND} & cr = select_command(i_slow_speed,i_close_right_doors,i_open_right_doors,Rightcommand_mem) & cl : (1..3)*{COMMAND} & cl = select_command(i_slow_speed,i_close_left_doors,i_open_left_doors,Leftcommand_mem) & not(i_manual = TRUE) & i_controlled = TRUE & i_leader = TRUE & i_manual = FALSE & i_controlled = FALSE);
  (2|->CONDUCTION = 3|->CONDUCTION);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & i_tl_sensor_left_open = TRUE & cond = TRUE & cr : (1..3)*{COMMAND} & cr = select_command(i_slow_speed,i_close_right_doors,i_open_right_doors,Rightcommand_mem) & cl : (1..3)*{COMMAND} & cl = select_command(i_slow_speed,i_close_left_doors,i_open_left_doors,Leftcommand_mem) & not(i_manual = TRUE) & i_controlled = TRUE & i_leader = TRUE & i_slow_speed = FALSE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & i_tl_sensor_left_open = TRUE & cond = TRUE & cr : (1..3)*{COMMAND} & cr = select_command(i_slow_speed,i_close_right_doors,i_open_right_doors,Rightcommand_mem) & cl : (1..3)*{COMMAND} & cl = select_command(i_slow_speed,i_close_left_doors,i_open_left_doors,Leftcommand_mem) & not(i_manual = TRUE) & i_controlled = TRUE & not(i_leader = TRUE) & i_opposite = TRUE & i_leader = FALSE & i_opposite = FALSE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & i_tl_sensor_left_open = TRUE & cond = TRUE & cr : (1..3)*{COMMAND} & cr = select_command(i_slow_speed,i_close_right_doors,i_open_right_doors,Rightcommand_mem) & cl : (1..3)*{COMMAND} & cl = select_command(i_slow_speed,i_close_left_doors,i_open_left_doors,Leftcommand_mem) & not(i_manual = TRUE) & i_controlled = TRUE & not(i_leader = TRUE) & i_opposite = TRUE & i_manual = FALSE & i_controlled = FALSE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & i_tl_sensor_left_open = TRUE & cond = TRUE & cr : (1..3)*{COMMAND} & cr = select_command(i_slow_speed,i_close_right_doors,i_open_right_doors,Rightcommand_mem) & cl : (1..3)*{COMMAND} & cl = select_command(i_slow_speed,i_close_left_doors,i_open_left_doors,Leftcommand_mem) & not(i_manual = TRUE) & i_controlled = TRUE & not(i_leader = TRUE) & not(i_opposite = TRUE) & i_manual = FALSE & i_controlled = FALSE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & i_tl_sensor_left_open = TRUE & cond = TRUE & cr : (1..3)*{COMMAND} & cr = select_command(i_slow_speed,i_close_right_doors,i_open_right_doors,Rightcommand_mem) & cl : (1..3)*{COMMAND} & cl = select_command(i_slow_speed,i_close_left_doors,i_open_left_doors,Leftcommand_mem) & not(i_manual = TRUE) & not(i_controlled = TRUE) & i_leader = TRUE & i_opposite = TRUE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & i_tl_sensor_left_open = TRUE & cond = TRUE & cr : (1..3)*{COMMAND} & cr = select_command(i_slow_speed,i_close_right_doors,i_open_right_doors,Rightcommand_mem) & cl : (1..3)*{COMMAND} & cl = select_command(i_slow_speed,i_close_left_doors,i_open_left_doors,Leftcommand_mem) & not(i_manual = TRUE) & not(i_controlled = TRUE) & i_leader = TRUE & i_leader = FALSE & i_opposite = FALSE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & i_tl_sensor_left_open = TRUE & cond = TRUE & cr : (1..3)*{COMMAND} & cr = select_command(i_slow_speed,i_close_right_doors,i_open_right_doors,Rightcommand_mem) & cl : (1..3)*{COMMAND} & cl = select_command(i_slow_speed,i_close_left_doors,i_open_left_doors,Leftcommand_mem) & not(i_manual = TRUE) & not(i_controlled = TRUE) & i_leader = TRUE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & i_tl_sensor_left_open = TRUE & cond = TRUE & cr : (1..3)*{COMMAND} & cr = select_command(i_slow_speed,i_close_right_doors,i_open_right_doors,Rightcommand_mem) & cl : (1..3)*{COMMAND} & cl = select_command(i_slow_speed,i_close_left_doors,i_open_left_doors,Leftcommand_mem) & not(i_manual = TRUE) & not(i_controlled = TRUE) & not(i_leader = TRUE) & i_opposite = TRUE & i_leader = FALSE & i_opposite = FALSE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & i_tl_sensor_left_open = TRUE & cond = TRUE & cr : (1..3)*{COMMAND} & cr = select_command(i_slow_speed,i_close_right_doors,i_open_right_doors,Rightcommand_mem) & cl : (1..3)*{COMMAND} & cl = select_command(i_slow_speed,i_close_left_doors,i_open_left_doors,Leftcommand_mem) & not(i_manual = TRUE) & not(i_controlled = TRUE) & not(i_leader = TRUE) & i_opposite = TRUE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & i_tl_sensor_left_open = TRUE & cond = TRUE & cr : (1..3)*{COMMAND} & cr = select_command(i_slow_speed,i_close_right_doors,i_open_right_doors,Rightcommand_mem) & cl : (1..3)*{COMMAND} & cl = select_command(i_slow_speed,i_close_left_doors,i_open_left_doors,Leftcommand_mem) & not(i_manual = TRUE) & not(i_controlled = TRUE) & not(i_leader = TRUE) & not(i_opposite = TRUE));
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & i_tl_sensor_left_open = TRUE & not(cond = TRUE) & i_manual = TRUE & i_controlled = TRUE & i_leader = TRUE & i_opposite = TRUE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & i_tl_sensor_left_open = TRUE & not(cond = TRUE) & i_manual = TRUE & i_controlled = TRUE & i_leader = TRUE & i_leader = FALSE & i_opposite = FALSE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & i_tl_sensor_left_open = TRUE & not(cond = TRUE) & i_manual = TRUE & i_controlled = TRUE & i_leader = TRUE & i_controlled = FALSE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & i_tl_sensor_left_open = TRUE & not(cond = TRUE) & i_manual = TRUE & i_controlled = TRUE & i_leader = TRUE & i_manual = FALSE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & i_tl_sensor_left_open = TRUE & not(cond = TRUE) & i_manual = TRUE & i_controlled = TRUE & i_leader = TRUE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & i_tl_sensor_left_open = TRUE & not(cond = TRUE) & i_manual = TRUE & i_controlled = TRUE & not(i_leader = TRUE) & i_opposite = TRUE & i_leader = FALSE & i_opposite = FALSE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & i_tl_sensor_left_open = TRUE & not(cond = TRUE) & i_manual = TRUE & i_controlled = TRUE & not(i_leader = TRUE) & i_opposite = TRUE & i_controlled = FALSE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & i_tl_sensor_left_open = TRUE & not(cond = TRUE) & i_manual = TRUE & i_controlled = TRUE & not(i_leader = TRUE) & i_opposite = TRUE & i_manual = FALSE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & i_tl_sensor_left_open = TRUE & not(cond = TRUE) & i_manual = TRUE & i_controlled = TRUE & not(i_leader = TRUE) & i_opposite = TRUE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & i_tl_sensor_left_open = TRUE & not(cond = TRUE) & i_manual = TRUE & i_controlled = TRUE & not(i_leader = TRUE) & not(i_opposite = TRUE) & i_controlled = FALSE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & i_tl_sensor_left_open = TRUE & not(cond = TRUE) & i_manual = TRUE & i_controlled = TRUE & not(i_leader = TRUE) & not(i_opposite = TRUE) & i_manual = FALSE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & i_tl_sensor_left_open = TRUE & not(cond = TRUE) & i_manual = TRUE & i_controlled = TRUE & not(i_leader = TRUE) & not(i_opposite = TRUE));
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & i_tl_sensor_left_open = TRUE & not(cond = TRUE) & i_manual = TRUE & not(i_controlled = TRUE) & i_leader = TRUE & i_opposite = TRUE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & i_tl_sensor_left_open = TRUE & not(cond = TRUE) & i_manual = TRUE & not(i_controlled = TRUE) & i_leader = TRUE & i_leader = FALSE & i_opposite = FALSE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & i_tl_sensor_left_open = TRUE & not(cond = TRUE) & i_manual = TRUE & not(i_controlled = TRUE) & i_leader = TRUE & i_manual = FALSE & i_controlled = FALSE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & i_tl_sensor_left_open = TRUE & not(cond = TRUE) & i_manual = TRUE & not(i_controlled = TRUE) & i_leader = TRUE & i_slow_speed = FALSE);
  (Lefttl_command = 3|->COMMAND);
  (Righttl_command = 3|->COMMAND);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & i_tl_sensor_left_open = TRUE & not(cond = TRUE) & i_manual = TRUE & not(i_controlled = TRUE) & not(i_leader = TRUE) & i_opposite = TRUE & i_leader = FALSE & i_opposite = FALSE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & i_tl_sensor_left_open = TRUE & not(cond = TRUE) & i_manual = TRUE & not(i_controlled = TRUE) & not(i_leader = TRUE) & i_opposite = TRUE & i_manual = FALSE & i_controlled = FALSE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & i_tl_sensor_left_open = TRUE & not(cond = TRUE) & i_manual = TRUE & not(i_controlled = TRUE) & not(i_leader = TRUE) & not(i_opposite = TRUE) & i_manual = FALSE & i_controlled = FALSE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & i_tl_sensor_left_open = TRUE & not(cond = TRUE) & not(i_manual = TRUE) & i_controlled = TRUE & i_leader = TRUE & i_opposite = TRUE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & i_tl_sensor_left_open = TRUE & not(cond = TRUE) & not(i_manual = TRUE) & i_controlled = TRUE & i_leader = TRUE & i_leader = FALSE & i_opposite = FALSE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & i_tl_sensor_left_open = TRUE & not(cond = TRUE) & not(i_manual = TRUE) & i_controlled = TRUE & i_leader = TRUE & i_manual = FALSE & i_controlled = FALSE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & i_tl_sensor_left_open = TRUE & not(cond = TRUE) & not(i_manual = TRUE) & i_controlled = TRUE & i_leader = TRUE & i_slow_speed = FALSE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & i_tl_sensor_left_open = TRUE & not(cond = TRUE) & not(i_manual = TRUE) & i_controlled = TRUE & not(i_leader = TRUE) & i_opposite = TRUE & i_leader = FALSE & i_opposite = FALSE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & i_tl_sensor_left_open = TRUE & not(cond = TRUE) & not(i_manual = TRUE) & i_controlled = TRUE & not(i_leader = TRUE) & i_opposite = TRUE & i_manual = FALSE & i_controlled = FALSE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & i_tl_sensor_left_open = TRUE & not(cond = TRUE) & not(i_manual = TRUE) & i_controlled = TRUE & not(i_leader = TRUE) & not(i_opposite = TRUE) & i_manual = FALSE & i_controlled = FALSE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & i_tl_sensor_left_open = TRUE & not(cond = TRUE) & not(i_manual = TRUE) & not(i_controlled = TRUE) & i_leader = TRUE & i_opposite = TRUE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & i_tl_sensor_left_open = TRUE & not(cond = TRUE) & not(i_manual = TRUE) & not(i_controlled = TRUE) & i_leader = TRUE & i_leader = FALSE & i_opposite = FALSE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & i_tl_sensor_left_open = TRUE & not(cond = TRUE) & not(i_manual = TRUE) & not(i_controlled = TRUE) & i_leader = TRUE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & i_tl_sensor_left_open = TRUE & not(cond = TRUE) & not(i_manual = TRUE) & not(i_controlled = TRUE) & not(i_leader = TRUE) & i_opposite = TRUE & i_leader = FALSE & i_opposite = FALSE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & i_tl_sensor_left_open = TRUE & not(cond = TRUE) & not(i_manual = TRUE) & not(i_controlled = TRUE) & not(i_leader = TRUE) & i_opposite = TRUE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & i_tl_sensor_left_open = TRUE & not(cond = TRUE) & not(i_manual = TRUE) & not(i_controlled = TRUE) & not(i_leader = TRUE) & not(i_opposite = TRUE));
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & i_tl_sensor_right_open = TRUE & cond = TRUE & cr : (1..3)*{COMMAND} & cr = select_command(i_slow_speed,i_close_right_doors,i_open_right_doors,Rightcommand_mem) & cl : (1..3)*{COMMAND} & cl = select_command(i_slow_speed,i_close_left_doors,i_open_left_doors,Leftcommand_mem) & i_manual = TRUE & i_controlled = TRUE & i_leader = TRUE & i_opposite = TRUE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & i_tl_sensor_right_open = TRUE & cond = TRUE & cr : (1..3)*{COMMAND} & cr = select_command(i_slow_speed,i_close_right_doors,i_open_right_doors,Rightcommand_mem) & cl : (1..3)*{COMMAND} & cl = select_command(i_slow_speed,i_close_left_doors,i_open_left_doors,Leftcommand_mem) & i_manual = TRUE & i_controlled = TRUE & i_leader = TRUE & i_leader = FALSE & i_opposite = FALSE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & i_tl_sensor_right_open = TRUE & cond = TRUE & cr : (1..3)*{COMMAND} & cr = select_command(i_slow_speed,i_close_right_doors,i_open_right_doors,Rightcommand_mem) & cl : (1..3)*{COMMAND} & cl = select_command(i_slow_speed,i_close_left_doors,i_open_left_doors,Leftcommand_mem) & i_manual = TRUE & i_controlled = TRUE & i_leader = TRUE & i_controlled = FALSE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & i_tl_sensor_right_open = TRUE & cond = TRUE & cr : (1..3)*{COMMAND} & cr = select_command(i_slow_speed,i_close_right_doors,i_open_right_doors,Rightcommand_mem) & cl : (1..3)*{COMMAND} & cl = select_command(i_slow_speed,i_close_left_doors,i_open_left_doors,Leftcommand_mem) & i_manual = TRUE & i_controlled = TRUE & i_leader = TRUE & i_manual = FALSE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & i_tl_sensor_right_open = TRUE & cond = TRUE & cr : (1..3)*{COMMAND} & cr = select_command(i_slow_speed,i_close_right_doors,i_open_right_doors,Rightcommand_mem) & cl : (1..3)*{COMMAND} & cl = select_command(i_slow_speed,i_close_left_doors,i_open_left_doors,Leftcommand_mem) & i_manual = TRUE & i_controlled = TRUE & i_leader = TRUE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & i_tl_sensor_right_open = TRUE & cond = TRUE & cr : (1..3)*{COMMAND} & cr = select_command(i_slow_speed,i_close_right_doors,i_open_right_doors,Rightcommand_mem) & cl : (1..3)*{COMMAND} & cl = select_command(i_slow_speed,i_close_left_doors,i_open_left_doors,Leftcommand_mem) & i_manual = TRUE & i_controlled = TRUE & not(i_leader = TRUE) & i_opposite = TRUE & i_leader = FALSE & i_opposite = FALSE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & i_tl_sensor_right_open = TRUE & cond = TRUE & cr : (1..3)*{COMMAND} & cr = select_command(i_slow_speed,i_close_right_doors,i_open_right_doors,Rightcommand_mem) & cl : (1..3)*{COMMAND} & cl = select_command(i_slow_speed,i_close_left_doors,i_open_left_doors,Leftcommand_mem) & i_manual = TRUE & i_controlled = TRUE & not(i_leader = TRUE) & i_opposite = TRUE & i_controlled = FALSE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & i_tl_sensor_right_open = TRUE & cond = TRUE & cr : (1..3)*{COMMAND} & cr = select_command(i_slow_speed,i_close_right_doors,i_open_right_doors,Rightcommand_mem) & cl : (1..3)*{COMMAND} & cl = select_command(i_slow_speed,i_close_left_doors,i_open_left_doors,Leftcommand_mem) & i_manual = TRUE & i_controlled = TRUE & not(i_leader = TRUE) & i_opposite = TRUE & i_manual = FALSE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & i_tl_sensor_right_open = TRUE & cond = TRUE & cr : (1..3)*{COMMAND} & cr = select_command(i_slow_speed,i_close_right_doors,i_open_right_doors,Rightcommand_mem) & cl : (1..3)*{COMMAND} & cl = select_command(i_slow_speed,i_close_left_doors,i_open_left_doors,Leftcommand_mem) & i_manual = TRUE & i_controlled = TRUE & not(i_leader = TRUE) & i_opposite = TRUE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & i_tl_sensor_right_open = TRUE & cond = TRUE & cr : (1..3)*{COMMAND} & cr = select_command(i_slow_speed,i_close_right_doors,i_open_right_doors,Rightcommand_mem) & cl : (1..3)*{COMMAND} & cl = select_command(i_slow_speed,i_close_left_doors,i_open_left_doors,Leftcommand_mem) & i_manual = TRUE & i_controlled = TRUE & not(i_leader = TRUE) & not(i_opposite = TRUE) & i_controlled = FALSE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & i_tl_sensor_right_open = TRUE & cond = TRUE & cr : (1..3)*{COMMAND} & cr = select_command(i_slow_speed,i_close_right_doors,i_open_right_doors,Rightcommand_mem) & cl : (1..3)*{COMMAND} & cl = select_command(i_slow_speed,i_close_left_doors,i_open_left_doors,Leftcommand_mem) & i_manual = TRUE & i_controlled = TRUE & not(i_leader = TRUE) & not(i_opposite = TRUE) & i_manual = FALSE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & i_tl_sensor_right_open = TRUE & cond = TRUE & cr : (1..3)*{COMMAND} & cr = select_command(i_slow_speed,i_close_right_doors,i_open_right_doors,Rightcommand_mem) & cl : (1..3)*{COMMAND} & cl = select_command(i_slow_speed,i_close_left_doors,i_open_left_doors,Leftcommand_mem) & i_manual = TRUE & i_controlled = TRUE & not(i_leader = TRUE) & not(i_opposite = TRUE));
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & i_tl_sensor_right_open = TRUE & cond = TRUE & cr : (1..3)*{COMMAND} & cr = select_command(i_slow_speed,i_close_right_doors,i_open_right_doors,Rightcommand_mem) & cl : (1..3)*{COMMAND} & cl = select_command(i_slow_speed,i_close_left_doors,i_open_left_doors,Leftcommand_mem) & i_manual = TRUE & not(i_controlled = TRUE) & i_leader = TRUE & i_opposite = TRUE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & i_tl_sensor_right_open = TRUE & cond = TRUE & cr : (1..3)*{COMMAND} & cr = select_command(i_slow_speed,i_close_right_doors,i_open_right_doors,Rightcommand_mem) & cl : (1..3)*{COMMAND} & cl = select_command(i_slow_speed,i_close_left_doors,i_open_left_doors,Leftcommand_mem) & i_manual = TRUE & not(i_controlled = TRUE) & i_leader = TRUE & i_leader = FALSE & i_opposite = FALSE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & i_tl_sensor_right_open = TRUE & cond = TRUE & cr : (1..3)*{COMMAND} & cr = select_command(i_slow_speed,i_close_right_doors,i_open_right_doors,Rightcommand_mem) & cl : (1..3)*{COMMAND} & cl = select_command(i_slow_speed,i_close_left_doors,i_open_left_doors,Leftcommand_mem) & i_manual = TRUE & not(i_controlled = TRUE) & i_leader = TRUE & i_manual = FALSE & i_controlled = FALSE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & i_tl_sensor_right_open = TRUE & cond = TRUE & cr : (1..3)*{COMMAND} & cr = select_command(i_slow_speed,i_close_right_doors,i_open_right_doors,Rightcommand_mem) & cl : (1..3)*{COMMAND} & cl = select_command(i_slow_speed,i_close_left_doors,i_open_left_doors,Leftcommand_mem) & i_manual = TRUE & not(i_controlled = TRUE) & i_leader = TRUE & i_slow_speed = FALSE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & i_tl_sensor_right_open = TRUE & cond = TRUE & cr : (1..3)*{COMMAND} & cr = select_command(i_slow_speed,i_close_right_doors,i_open_right_doors,Rightcommand_mem) & cl : (1..3)*{COMMAND} & cl = select_command(i_slow_speed,i_close_left_doors,i_open_left_doors,Leftcommand_mem) & i_manual = TRUE & not(i_controlled = TRUE) & not(i_leader = TRUE) & i_opposite = TRUE & i_leader = FALSE & i_opposite = FALSE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & i_tl_sensor_right_open = TRUE & cond = TRUE & cr : (1..3)*{COMMAND} & cr = select_command(i_slow_speed,i_close_right_doors,i_open_right_doors,Rightcommand_mem) & cl : (1..3)*{COMMAND} & cl = select_command(i_slow_speed,i_close_left_doors,i_open_left_doors,Leftcommand_mem) & i_manual = TRUE & not(i_controlled = TRUE) & not(i_leader = TRUE) & i_opposite = TRUE & i_manual = FALSE & i_controlled = FALSE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & i_tl_sensor_right_open = TRUE & cond = TRUE & cr : (1..3)*{COMMAND} & cr = select_command(i_slow_speed,i_close_right_doors,i_open_right_doors,Rightcommand_mem) & cl : (1..3)*{COMMAND} & cl = select_command(i_slow_speed,i_close_left_doors,i_open_left_doors,Leftcommand_mem) & i_manual = TRUE & not(i_controlled = TRUE) & not(i_leader = TRUE) & not(i_opposite = TRUE) & i_manual = FALSE & i_controlled = FALSE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & i_tl_sensor_right_open = TRUE & cond = TRUE & cr : (1..3)*{COMMAND} & cr = select_command(i_slow_speed,i_close_right_doors,i_open_right_doors,Rightcommand_mem) & cl : (1..3)*{COMMAND} & cl = select_command(i_slow_speed,i_close_left_doors,i_open_left_doors,Leftcommand_mem) & not(i_manual = TRUE) & i_controlled = TRUE & i_leader = TRUE & i_opposite = TRUE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & i_tl_sensor_right_open = TRUE & cond = TRUE & cr : (1..3)*{COMMAND} & cr = select_command(i_slow_speed,i_close_right_doors,i_open_right_doors,Rightcommand_mem) & cl : (1..3)*{COMMAND} & cl = select_command(i_slow_speed,i_close_left_doors,i_open_left_doors,Leftcommand_mem) & not(i_manual = TRUE) & i_controlled = TRUE & i_leader = TRUE & i_leader = FALSE & i_opposite = FALSE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & i_tl_sensor_right_open = TRUE & cond = TRUE & cr : (1..3)*{COMMAND} & cr = select_command(i_slow_speed,i_close_right_doors,i_open_right_doors,Rightcommand_mem) & cl : (1..3)*{COMMAND} & cl = select_command(i_slow_speed,i_close_left_doors,i_open_left_doors,Leftcommand_mem) & not(i_manual = TRUE) & i_controlled = TRUE & i_leader = TRUE & i_manual = FALSE & i_controlled = FALSE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & i_tl_sensor_right_open = TRUE & cond = TRUE & cr : (1..3)*{COMMAND} & cr = select_command(i_slow_speed,i_close_right_doors,i_open_right_doors,Rightcommand_mem) & cl : (1..3)*{COMMAND} & cl = select_command(i_slow_speed,i_close_left_doors,i_open_left_doors,Leftcommand_mem) & not(i_manual = TRUE) & i_controlled = TRUE & i_leader = TRUE & i_slow_speed = FALSE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & i_tl_sensor_right_open = TRUE & cond = TRUE & cr : (1..3)*{COMMAND} & cr = select_command(i_slow_speed,i_close_right_doors,i_open_right_doors,Rightcommand_mem) & cl : (1..3)*{COMMAND} & cl = select_command(i_slow_speed,i_close_left_doors,i_open_left_doors,Leftcommand_mem) & not(i_manual = TRUE) & i_controlled = TRUE & not(i_leader = TRUE) & i_opposite = TRUE & i_leader = FALSE & i_opposite = FALSE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & i_tl_sensor_right_open = TRUE & cond = TRUE & cr : (1..3)*{COMMAND} & cr = select_command(i_slow_speed,i_close_right_doors,i_open_right_doors,Rightcommand_mem) & cl : (1..3)*{COMMAND} & cl = select_command(i_slow_speed,i_close_left_doors,i_open_left_doors,Leftcommand_mem) & not(i_manual = TRUE) & i_controlled = TRUE & not(i_leader = TRUE) & i_opposite = TRUE & i_manual = FALSE & i_controlled = FALSE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & i_tl_sensor_right_open = TRUE & cond = TRUE & cr : (1..3)*{COMMAND} & cr = select_command(i_slow_speed,i_close_right_doors,i_open_right_doors,Rightcommand_mem) & cl : (1..3)*{COMMAND} & cl = select_command(i_slow_speed,i_close_left_doors,i_open_left_doors,Leftcommand_mem) & not(i_manual = TRUE) & i_controlled = TRUE & not(i_leader = TRUE) & not(i_opposite = TRUE) & i_manual = FALSE & i_controlled = FALSE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & i_tl_sensor_right_open = TRUE & cond = TRUE & cr : (1..3)*{COMMAND} & cr = select_command(i_slow_speed,i_close_right_doors,i_open_right_doors,Rightcommand_mem) & cl : (1..3)*{COMMAND} & cl = select_command(i_slow_speed,i_close_left_doors,i_open_left_doors,Leftcommand_mem) & not(i_manual = TRUE) & not(i_controlled = TRUE) & i_leader = TRUE & i_opposite = TRUE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & i_tl_sensor_right_open = TRUE & cond = TRUE & cr : (1..3)*{COMMAND} & cr = select_command(i_slow_speed,i_close_right_doors,i_open_right_doors,Rightcommand_mem) & cl : (1..3)*{COMMAND} & cl = select_command(i_slow_speed,i_close_left_doors,i_open_left_doors,Leftcommand_mem) & not(i_manual = TRUE) & not(i_controlled = TRUE) & i_leader = TRUE & i_leader = FALSE & i_opposite = FALSE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & i_tl_sensor_right_open = TRUE & cond = TRUE & cr : (1..3)*{COMMAND} & cr = select_command(i_slow_speed,i_close_right_doors,i_open_right_doors,Rightcommand_mem) & cl : (1..3)*{COMMAND} & cl = select_command(i_slow_speed,i_close_left_doors,i_open_left_doors,Leftcommand_mem) & not(i_manual = TRUE) & not(i_controlled = TRUE) & i_leader = TRUE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & i_tl_sensor_right_open = TRUE & cond = TRUE & cr : (1..3)*{COMMAND} & cr = select_command(i_slow_speed,i_close_right_doors,i_open_right_doors,Rightcommand_mem) & cl : (1..3)*{COMMAND} & cl = select_command(i_slow_speed,i_close_left_doors,i_open_left_doors,Leftcommand_mem) & not(i_manual = TRUE) & not(i_controlled = TRUE) & not(i_leader = TRUE) & i_opposite = TRUE & i_leader = FALSE & i_opposite = FALSE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & i_tl_sensor_right_open = TRUE & cond = TRUE & cr : (1..3)*{COMMAND} & cr = select_command(i_slow_speed,i_close_right_doors,i_open_right_doors,Rightcommand_mem) & cl : (1..3)*{COMMAND} & cl = select_command(i_slow_speed,i_close_left_doors,i_open_left_doors,Leftcommand_mem) & not(i_manual = TRUE) & not(i_controlled = TRUE) & not(i_leader = TRUE) & i_opposite = TRUE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & i_tl_sensor_right_open = TRUE & cond = TRUE & cr : (1..3)*{COMMAND} & cr = select_command(i_slow_speed,i_close_right_doors,i_open_right_doors,Rightcommand_mem) & cl : (1..3)*{COMMAND} & cl = select_command(i_slow_speed,i_close_left_doors,i_open_left_doors,Leftcommand_mem) & not(i_manual = TRUE) & not(i_controlled = TRUE) & not(i_leader = TRUE) & not(i_opposite = TRUE));
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & i_tl_sensor_right_open = TRUE & not(cond = TRUE) & i_manual = TRUE & i_controlled = TRUE & i_leader = TRUE & i_opposite = TRUE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & i_tl_sensor_right_open = TRUE & not(cond = TRUE) & i_manual = TRUE & i_controlled = TRUE & i_leader = TRUE & i_leader = FALSE & i_opposite = FALSE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & i_tl_sensor_right_open = TRUE & not(cond = TRUE) & i_manual = TRUE & i_controlled = TRUE & i_leader = TRUE & i_controlled = FALSE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & i_tl_sensor_right_open = TRUE & not(cond = TRUE) & i_manual = TRUE & i_controlled = TRUE & i_leader = TRUE & i_manual = FALSE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & i_tl_sensor_right_open = TRUE & not(cond = TRUE) & i_manual = TRUE & i_controlled = TRUE & i_leader = TRUE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & i_tl_sensor_right_open = TRUE & not(cond = TRUE) & i_manual = TRUE & i_controlled = TRUE & not(i_leader = TRUE) & i_opposite = TRUE & i_leader = FALSE & i_opposite = FALSE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & i_tl_sensor_right_open = TRUE & not(cond = TRUE) & i_manual = TRUE & i_controlled = TRUE & not(i_leader = TRUE) & i_opposite = TRUE & i_controlled = FALSE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & i_tl_sensor_right_open = TRUE & not(cond = TRUE) & i_manual = TRUE & i_controlled = TRUE & not(i_leader = TRUE) & i_opposite = TRUE & i_manual = FALSE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & i_tl_sensor_right_open = TRUE & not(cond = TRUE) & i_manual = TRUE & i_controlled = TRUE & not(i_leader = TRUE) & i_opposite = TRUE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & i_tl_sensor_right_open = TRUE & not(cond = TRUE) & i_manual = TRUE & i_controlled = TRUE & not(i_leader = TRUE) & not(i_opposite = TRUE) & i_controlled = FALSE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & i_tl_sensor_right_open = TRUE & not(cond = TRUE) & i_manual = TRUE & i_controlled = TRUE & not(i_leader = TRUE) & not(i_opposite = TRUE) & i_manual = FALSE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & i_tl_sensor_right_open = TRUE & not(cond = TRUE) & i_manual = TRUE & i_controlled = TRUE & not(i_leader = TRUE) & not(i_opposite = TRUE));
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & i_tl_sensor_right_open = TRUE & not(cond = TRUE) & i_manual = TRUE & not(i_controlled = TRUE) & i_leader = TRUE & i_opposite = TRUE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & i_tl_sensor_right_open = TRUE & not(cond = TRUE) & i_manual = TRUE & not(i_controlled = TRUE) & i_leader = TRUE & i_leader = FALSE & i_opposite = FALSE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & i_tl_sensor_right_open = TRUE & not(cond = TRUE) & i_manual = TRUE & not(i_controlled = TRUE) & i_leader = TRUE & i_manual = FALSE & i_controlled = FALSE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & i_tl_sensor_right_open = TRUE & not(cond = TRUE) & i_manual = TRUE & not(i_controlled = TRUE) & i_leader = TRUE & i_slow_speed = FALSE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & i_tl_sensor_right_open = TRUE & not(cond = TRUE) & i_manual = TRUE & not(i_controlled = TRUE) & not(i_leader = TRUE) & i_opposite = TRUE & i_leader = FALSE & i_opposite = FALSE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & i_tl_sensor_right_open = TRUE & not(cond = TRUE) & i_manual = TRUE & not(i_controlled = TRUE) & not(i_leader = TRUE) & i_opposite = TRUE & i_manual = FALSE & i_controlled = FALSE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & i_tl_sensor_right_open = TRUE & not(cond = TRUE) & i_manual = TRUE & not(i_controlled = TRUE) & not(i_leader = TRUE) & not(i_opposite = TRUE) & i_manual = FALSE & i_controlled = FALSE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & i_tl_sensor_right_open = TRUE & not(cond = TRUE) & not(i_manual = TRUE) & i_controlled = TRUE & i_leader = TRUE & i_opposite = TRUE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & i_tl_sensor_right_open = TRUE & not(cond = TRUE) & not(i_manual = TRUE) & i_controlled = TRUE & i_leader = TRUE & i_leader = FALSE & i_opposite = FALSE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & i_tl_sensor_right_open = TRUE & not(cond = TRUE) & not(i_manual = TRUE) & i_controlled = TRUE & i_leader = TRUE & i_manual = FALSE & i_controlled = FALSE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & i_tl_sensor_right_open = TRUE & not(cond = TRUE) & not(i_manual = TRUE) & i_controlled = TRUE & i_leader = TRUE & i_slow_speed = FALSE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & i_tl_sensor_right_open = TRUE & not(cond = TRUE) & not(i_manual = TRUE) & i_controlled = TRUE & not(i_leader = TRUE) & i_opposite = TRUE & i_leader = FALSE & i_opposite = FALSE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & i_tl_sensor_right_open = TRUE & not(cond = TRUE) & not(i_manual = TRUE) & i_controlled = TRUE & not(i_leader = TRUE) & i_opposite = TRUE & i_manual = FALSE & i_controlled = FALSE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & i_tl_sensor_right_open = TRUE & not(cond = TRUE) & not(i_manual = TRUE) & i_controlled = TRUE & not(i_leader = TRUE) & not(i_opposite = TRUE) & i_manual = FALSE & i_controlled = FALSE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & i_tl_sensor_right_open = TRUE & not(cond = TRUE) & not(i_manual = TRUE) & not(i_controlled = TRUE) & i_leader = TRUE & i_opposite = TRUE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & i_tl_sensor_right_open = TRUE & not(cond = TRUE) & not(i_manual = TRUE) & not(i_controlled = TRUE) & i_leader = TRUE & i_leader = FALSE & i_opposite = FALSE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & i_tl_sensor_right_open = TRUE & not(cond = TRUE) & not(i_manual = TRUE) & not(i_controlled = TRUE) & i_leader = TRUE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & i_tl_sensor_right_open = TRUE & not(cond = TRUE) & not(i_manual = TRUE) & not(i_controlled = TRUE) & not(i_leader = TRUE) & i_opposite = TRUE & i_leader = FALSE & i_opposite = FALSE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & i_tl_sensor_right_open = TRUE & not(cond = TRUE) & not(i_manual = TRUE) & not(i_controlled = TRUE) & not(i_leader = TRUE) & i_opposite = TRUE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & i_tl_sensor_right_open = TRUE & not(cond = TRUE) & not(i_manual = TRUE) & not(i_controlled = TRUE) & not(i_leader = TRUE) & not(i_opposite = TRUE));
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & not(i_tl_sensor_left_open = TRUE) & not(i_tl_sensor_right_open = TRUE) & cond = TRUE & cr : (1..3)*{COMMAND} & cr = select_command(i_slow_speed,i_close_right_doors,i_open_right_doors,Rightcommand_mem) & cl : (1..3)*{COMMAND} & cl = select_command(i_slow_speed,i_close_left_doors,i_open_left_doors,Leftcommand_mem) & i_manual = TRUE & i_controlled = TRUE & i_leader = TRUE & i_opposite = TRUE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & not(i_tl_sensor_left_open = TRUE) & not(i_tl_sensor_right_open = TRUE) & cond = TRUE & cr : (1..3)*{COMMAND} & cr = select_command(i_slow_speed,i_close_right_doors,i_open_right_doors,Rightcommand_mem) & cl : (1..3)*{COMMAND} & cl = select_command(i_slow_speed,i_close_left_doors,i_open_left_doors,Leftcommand_mem) & i_manual = TRUE & i_controlled = TRUE & i_leader = TRUE & i_leader = FALSE & i_opposite = FALSE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & not(i_tl_sensor_left_open = TRUE) & not(i_tl_sensor_right_open = TRUE) & cond = TRUE & cr : (1..3)*{COMMAND} & cr = select_command(i_slow_speed,i_close_right_doors,i_open_right_doors,Rightcommand_mem) & cl : (1..3)*{COMMAND} & cl = select_command(i_slow_speed,i_close_left_doors,i_open_left_doors,Leftcommand_mem) & i_manual = TRUE & i_controlled = TRUE & i_leader = TRUE & i_controlled = FALSE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & not(i_tl_sensor_left_open = TRUE) & not(i_tl_sensor_right_open = TRUE) & cond = TRUE & cr : (1..3)*{COMMAND} & cr = select_command(i_slow_speed,i_close_right_doors,i_open_right_doors,Rightcommand_mem) & cl : (1..3)*{COMMAND} & cl = select_command(i_slow_speed,i_close_left_doors,i_open_left_doors,Leftcommand_mem) & i_manual = TRUE & i_controlled = TRUE & i_leader = TRUE & i_manual = FALSE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & not(i_tl_sensor_left_open = TRUE) & not(i_tl_sensor_right_open = TRUE) & cond = TRUE & cr : (1..3)*{COMMAND} & cr = select_command(i_slow_speed,i_close_right_doors,i_open_right_doors,Rightcommand_mem) & cl : (1..3)*{COMMAND} & cl = select_command(i_slow_speed,i_close_left_doors,i_open_left_doors,Leftcommand_mem) & i_manual = TRUE & i_controlled = TRUE & i_leader = TRUE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & not(i_tl_sensor_left_open = TRUE) & not(i_tl_sensor_right_open = TRUE) & cond = TRUE & cr : (1..3)*{COMMAND} & cr = select_command(i_slow_speed,i_close_right_doors,i_open_right_doors,Rightcommand_mem) & cl : (1..3)*{COMMAND} & cl = select_command(i_slow_speed,i_close_left_doors,i_open_left_doors,Leftcommand_mem) & i_manual = TRUE & i_controlled = TRUE & not(i_leader = TRUE) & i_opposite = TRUE & i_leader = FALSE & i_opposite = FALSE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & not(i_tl_sensor_left_open = TRUE) & not(i_tl_sensor_right_open = TRUE) & cond = TRUE & cr : (1..3)*{COMMAND} & cr = select_command(i_slow_speed,i_close_right_doors,i_open_right_doors,Rightcommand_mem) & cl : (1..3)*{COMMAND} & cl = select_command(i_slow_speed,i_close_left_doors,i_open_left_doors,Leftcommand_mem) & i_manual = TRUE & i_controlled = TRUE & not(i_leader = TRUE) & i_opposite = TRUE & i_controlled = FALSE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & not(i_tl_sensor_left_open = TRUE) & not(i_tl_sensor_right_open = TRUE) & cond = TRUE & cr : (1..3)*{COMMAND} & cr = select_command(i_slow_speed,i_close_right_doors,i_open_right_doors,Rightcommand_mem) & cl : (1..3)*{COMMAND} & cl = select_command(i_slow_speed,i_close_left_doors,i_open_left_doors,Leftcommand_mem) & i_manual = TRUE & i_controlled = TRUE & not(i_leader = TRUE) & i_opposite = TRUE & i_manual = FALSE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & not(i_tl_sensor_left_open = TRUE) & not(i_tl_sensor_right_open = TRUE) & cond = TRUE & cr : (1..3)*{COMMAND} & cr = select_command(i_slow_speed,i_close_right_doors,i_open_right_doors,Rightcommand_mem) & cl : (1..3)*{COMMAND} & cl = select_command(i_slow_speed,i_close_left_doors,i_open_left_doors,Leftcommand_mem) & i_manual = TRUE & i_controlled = TRUE & not(i_leader = TRUE) & i_opposite = TRUE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & not(i_tl_sensor_left_open = TRUE) & not(i_tl_sensor_right_open = TRUE) & cond = TRUE & cr : (1..3)*{COMMAND} & cr = select_command(i_slow_speed,i_close_right_doors,i_open_right_doors,Rightcommand_mem) & cl : (1..3)*{COMMAND} & cl = select_command(i_slow_speed,i_close_left_doors,i_open_left_doors,Leftcommand_mem) & i_manual = TRUE & i_controlled = TRUE & not(i_leader = TRUE) & not(i_opposite = TRUE) & i_controlled = FALSE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & not(i_tl_sensor_left_open = TRUE) & not(i_tl_sensor_right_open = TRUE) & cond = TRUE & cr : (1..3)*{COMMAND} & cr = select_command(i_slow_speed,i_close_right_doors,i_open_right_doors,Rightcommand_mem) & cl : (1..3)*{COMMAND} & cl = select_command(i_slow_speed,i_close_left_doors,i_open_left_doors,Leftcommand_mem) & i_manual = TRUE & i_controlled = TRUE & not(i_leader = TRUE) & not(i_opposite = TRUE) & i_manual = FALSE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & not(i_tl_sensor_left_open = TRUE) & not(i_tl_sensor_right_open = TRUE) & cond = TRUE & cr : (1..3)*{COMMAND} & cr = select_command(i_slow_speed,i_close_right_doors,i_open_right_doors,Rightcommand_mem) & cl : (1..3)*{COMMAND} & cl = select_command(i_slow_speed,i_close_left_doors,i_open_left_doors,Leftcommand_mem) & i_manual = TRUE & i_controlled = TRUE & not(i_leader = TRUE) & not(i_opposite = TRUE));
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & not(i_tl_sensor_left_open = TRUE) & not(i_tl_sensor_right_open = TRUE) & cond = TRUE & cr : (1..3)*{COMMAND} & cr = select_command(i_slow_speed,i_close_right_doors,i_open_right_doors,Rightcommand_mem) & cl : (1..3)*{COMMAND} & cl = select_command(i_slow_speed,i_close_left_doors,i_open_left_doors,Leftcommand_mem) & i_manual = TRUE & not(i_controlled = TRUE) & i_leader = TRUE & i_opposite = TRUE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & not(i_tl_sensor_left_open = TRUE) & not(i_tl_sensor_right_open = TRUE) & cond = TRUE & cr : (1..3)*{COMMAND} & cr = select_command(i_slow_speed,i_close_right_doors,i_open_right_doors,Rightcommand_mem) & cl : (1..3)*{COMMAND} & cl = select_command(i_slow_speed,i_close_left_doors,i_open_left_doors,Leftcommand_mem) & i_manual = TRUE & not(i_controlled = TRUE) & i_leader = TRUE & i_leader = FALSE & i_opposite = FALSE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & not(i_tl_sensor_left_open = TRUE) & not(i_tl_sensor_right_open = TRUE) & cond = TRUE & cr : (1..3)*{COMMAND} & cr = select_command(i_slow_speed,i_close_right_doors,i_open_right_doors,Rightcommand_mem) & cl : (1..3)*{COMMAND} & cl = select_command(i_slow_speed,i_close_left_doors,i_open_left_doors,Leftcommand_mem) & i_manual = TRUE & not(i_controlled = TRUE) & i_leader = TRUE & i_manual = FALSE & i_controlled = FALSE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & not(i_tl_sensor_left_open = TRUE) & not(i_tl_sensor_right_open = TRUE) & cond = TRUE & cr : (1..3)*{COMMAND} & cr = select_command(i_slow_speed,i_close_right_doors,i_open_right_doors,Rightcommand_mem) & cl : (1..3)*{COMMAND} & cl = select_command(i_slow_speed,i_close_left_doors,i_open_left_doors,Leftcommand_mem) & i_manual = TRUE & not(i_controlled = TRUE) & i_leader = TRUE & i_slow_speed = FALSE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & not(i_tl_sensor_left_open = TRUE) & not(i_tl_sensor_right_open = TRUE) & cond = TRUE & cr : (1..3)*{COMMAND} & cr = select_command(i_slow_speed,i_close_right_doors,i_open_right_doors,Rightcommand_mem) & cl : (1..3)*{COMMAND} & cl = select_command(i_slow_speed,i_close_left_doors,i_open_left_doors,Leftcommand_mem) & i_manual = TRUE & not(i_controlled = TRUE) & not(i_leader = TRUE) & i_opposite = TRUE & i_leader = FALSE & i_opposite = FALSE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & not(i_tl_sensor_left_open = TRUE) & not(i_tl_sensor_right_open = TRUE) & cond = TRUE & cr : (1..3)*{COMMAND} & cr = select_command(i_slow_speed,i_close_right_doors,i_open_right_doors,Rightcommand_mem) & cl : (1..3)*{COMMAND} & cl = select_command(i_slow_speed,i_close_left_doors,i_open_left_doors,Leftcommand_mem) & i_manual = TRUE & not(i_controlled = TRUE) & not(i_leader = TRUE) & i_opposite = TRUE & i_manual = FALSE & i_controlled = FALSE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & not(i_tl_sensor_left_open = TRUE) & not(i_tl_sensor_right_open = TRUE) & cond = TRUE & cr : (1..3)*{COMMAND} & cr = select_command(i_slow_speed,i_close_right_doors,i_open_right_doors,Rightcommand_mem) & cl : (1..3)*{COMMAND} & cl = select_command(i_slow_speed,i_close_left_doors,i_open_left_doors,Leftcommand_mem) & i_manual = TRUE & not(i_controlled = TRUE) & not(i_leader = TRUE) & not(i_opposite = TRUE) & i_manual = FALSE & i_controlled = FALSE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & not(i_tl_sensor_left_open = TRUE) & not(i_tl_sensor_right_open = TRUE) & cond = TRUE & cr : (1..3)*{COMMAND} & cr = select_command(i_slow_speed,i_close_right_doors,i_open_right_doors,Rightcommand_mem) & cl : (1..3)*{COMMAND} & cl = select_command(i_slow_speed,i_close_left_doors,i_open_left_doors,Leftcommand_mem) & not(i_manual = TRUE) & i_controlled = TRUE & i_leader = TRUE & i_opposite = TRUE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & not(i_tl_sensor_left_open = TRUE) & not(i_tl_sensor_right_open = TRUE) & cond = TRUE & cr : (1..3)*{COMMAND} & cr = select_command(i_slow_speed,i_close_right_doors,i_open_right_doors,Rightcommand_mem) & cl : (1..3)*{COMMAND} & cl = select_command(i_slow_speed,i_close_left_doors,i_open_left_doors,Leftcommand_mem) & not(i_manual = TRUE) & i_controlled = TRUE & i_leader = TRUE & i_leader = FALSE & i_opposite = FALSE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & not(i_tl_sensor_left_open = TRUE) & not(i_tl_sensor_right_open = TRUE) & cond = TRUE & cr : (1..3)*{COMMAND} & cr = select_command(i_slow_speed,i_close_right_doors,i_open_right_doors,Rightcommand_mem) & cl : (1..3)*{COMMAND} & cl = select_command(i_slow_speed,i_close_left_doors,i_open_left_doors,Leftcommand_mem) & not(i_manual = TRUE) & i_controlled = TRUE & i_leader = TRUE & i_manual = FALSE & i_controlled = FALSE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & not(i_tl_sensor_left_open = TRUE) & not(i_tl_sensor_right_open = TRUE) & cond = TRUE & cr : (1..3)*{COMMAND} & cr = select_command(i_slow_speed,i_close_right_doors,i_open_right_doors,Rightcommand_mem) & cl : (1..3)*{COMMAND} & cl = select_command(i_slow_speed,i_close_left_doors,i_open_left_doors,Leftcommand_mem) & not(i_manual = TRUE) & i_controlled = TRUE & i_leader = TRUE & i_slow_speed = FALSE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & not(i_tl_sensor_left_open = TRUE) & not(i_tl_sensor_right_open = TRUE) & cond = TRUE & cr : (1..3)*{COMMAND} & cr = select_command(i_slow_speed,i_close_right_doors,i_open_right_doors,Rightcommand_mem) & cl : (1..3)*{COMMAND} & cl = select_command(i_slow_speed,i_close_left_doors,i_open_left_doors,Leftcommand_mem) & not(i_manual = TRUE) & i_controlled = TRUE & not(i_leader = TRUE) & i_opposite = TRUE & i_leader = FALSE & i_opposite = FALSE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & not(i_tl_sensor_left_open = TRUE) & not(i_tl_sensor_right_open = TRUE) & cond = TRUE & cr : (1..3)*{COMMAND} & cr = select_command(i_slow_speed,i_close_right_doors,i_open_right_doors,Rightcommand_mem) & cl : (1..3)*{COMMAND} & cl = select_command(i_slow_speed,i_close_left_doors,i_open_left_doors,Leftcommand_mem) & not(i_manual = TRUE) & i_controlled = TRUE & not(i_leader = TRUE) & i_opposite = TRUE & i_manual = FALSE & i_controlled = FALSE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & not(i_tl_sensor_left_open = TRUE) & not(i_tl_sensor_right_open = TRUE) & cond = TRUE & cr : (1..3)*{COMMAND} & cr = select_command(i_slow_speed,i_close_right_doors,i_open_right_doors,Rightcommand_mem) & cl : (1..3)*{COMMAND} & cl = select_command(i_slow_speed,i_close_left_doors,i_open_left_doors,Leftcommand_mem) & not(i_manual = TRUE) & i_controlled = TRUE & not(i_leader = TRUE) & not(i_opposite = TRUE) & i_manual = FALSE & i_controlled = FALSE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & not(i_tl_sensor_left_open = TRUE) & not(i_tl_sensor_right_open = TRUE) & cond = TRUE & cr : (1..3)*{COMMAND} & cr = select_command(i_slow_speed,i_close_right_doors,i_open_right_doors,Rightcommand_mem) & cl : (1..3)*{COMMAND} & cl = select_command(i_slow_speed,i_close_left_doors,i_open_left_doors,Leftcommand_mem) & not(i_manual = TRUE) & not(i_controlled = TRUE) & i_leader = TRUE & i_opposite = TRUE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & not(i_tl_sensor_left_open = TRUE) & not(i_tl_sensor_right_open = TRUE) & cond = TRUE & cr : (1..3)*{COMMAND} & cr = select_command(i_slow_speed,i_close_right_doors,i_open_right_doors,Rightcommand_mem) & cl : (1..3)*{COMMAND} & cl = select_command(i_slow_speed,i_close_left_doors,i_open_left_doors,Leftcommand_mem) & not(i_manual = TRUE) & not(i_controlled = TRUE) & i_leader = TRUE & i_leader = FALSE & i_opposite = FALSE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & not(i_tl_sensor_left_open = TRUE) & not(i_tl_sensor_right_open = TRUE) & cond = TRUE & cr : (1..3)*{COMMAND} & cr = select_command(i_slow_speed,i_close_right_doors,i_open_right_doors,Rightcommand_mem) & cl : (1..3)*{COMMAND} & cl = select_command(i_slow_speed,i_close_left_doors,i_open_left_doors,Leftcommand_mem) & not(i_manual = TRUE) & not(i_controlled = TRUE) & i_leader = TRUE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & not(i_tl_sensor_left_open = TRUE) & not(i_tl_sensor_right_open = TRUE) & cond = TRUE & cr : (1..3)*{COMMAND} & cr = select_command(i_slow_speed,i_close_right_doors,i_open_right_doors,Rightcommand_mem) & cl : (1..3)*{COMMAND} & cl = select_command(i_slow_speed,i_close_left_doors,i_open_left_doors,Leftcommand_mem) & not(i_manual = TRUE) & not(i_controlled = TRUE) & not(i_leader = TRUE) & i_opposite = TRUE & i_leader = FALSE & i_opposite = FALSE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & not(i_tl_sensor_left_open = TRUE) & not(i_tl_sensor_right_open = TRUE) & cond = TRUE & cr : (1..3)*{COMMAND} & cr = select_command(i_slow_speed,i_close_right_doors,i_open_right_doors,Rightcommand_mem) & cl : (1..3)*{COMMAND} & cl = select_command(i_slow_speed,i_close_left_doors,i_open_left_doors,Leftcommand_mem) & not(i_manual = TRUE) & not(i_controlled = TRUE) & not(i_leader = TRUE) & i_opposite = TRUE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & not(i_tl_sensor_left_open = TRUE) & not(i_tl_sensor_right_open = TRUE) & cond = TRUE & cr : (1..3)*{COMMAND} & cr = select_command(i_slow_speed,i_close_right_doors,i_open_right_doors,Rightcommand_mem) & cl : (1..3)*{COMMAND} & cl = select_command(i_slow_speed,i_close_left_doors,i_open_left_doors,Leftcommand_mem) & not(i_manual = TRUE) & not(i_controlled = TRUE) & not(i_leader = TRUE) & not(i_opposite = TRUE));
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & not(i_tl_sensor_left_open = TRUE) & not(i_tl_sensor_right_open = TRUE) & not(cond = TRUE) & i_manual = TRUE & i_controlled = TRUE & i_leader = TRUE & i_opposite = TRUE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & not(i_tl_sensor_left_open = TRUE) & not(i_tl_sensor_right_open = TRUE) & not(cond = TRUE) & i_manual = TRUE & i_controlled = TRUE & i_leader = TRUE & i_leader = FALSE & i_opposite = FALSE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & not(i_tl_sensor_left_open = TRUE) & not(i_tl_sensor_right_open = TRUE) & not(cond = TRUE) & i_manual = TRUE & i_controlled = TRUE & i_leader = TRUE & i_controlled = FALSE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & not(i_tl_sensor_left_open = TRUE) & not(i_tl_sensor_right_open = TRUE) & not(cond = TRUE) & i_manual = TRUE & i_controlled = TRUE & i_leader = TRUE & i_manual = FALSE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & not(i_tl_sensor_left_open = TRUE) & not(i_tl_sensor_right_open = TRUE) & not(cond = TRUE) & i_manual = TRUE & i_controlled = TRUE & i_leader = TRUE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & not(i_tl_sensor_left_open = TRUE) & not(i_tl_sensor_right_open = TRUE) & not(cond = TRUE) & i_manual = TRUE & i_controlled = TRUE & not(i_leader = TRUE) & i_opposite = TRUE & i_leader = FALSE & i_opposite = FALSE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & not(i_tl_sensor_left_open = TRUE) & not(i_tl_sensor_right_open = TRUE) & not(cond = TRUE) & i_manual = TRUE & i_controlled = TRUE & not(i_leader = TRUE) & i_opposite = TRUE & i_controlled = FALSE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & not(i_tl_sensor_left_open = TRUE) & not(i_tl_sensor_right_open = TRUE) & not(cond = TRUE) & i_manual = TRUE & i_controlled = TRUE & not(i_leader = TRUE) & i_opposite = TRUE & i_manual = FALSE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & not(i_tl_sensor_left_open = TRUE) & not(i_tl_sensor_right_open = TRUE) & not(cond = TRUE) & i_manual = TRUE & i_controlled = TRUE & not(i_leader = TRUE) & i_opposite = TRUE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & not(i_tl_sensor_left_open = TRUE) & not(i_tl_sensor_right_open = TRUE) & not(cond = TRUE) & i_manual = TRUE & i_controlled = TRUE & not(i_leader = TRUE) & not(i_opposite = TRUE) & i_controlled = FALSE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & not(i_tl_sensor_left_open = TRUE) & not(i_tl_sensor_right_open = TRUE) & not(cond = TRUE) & i_manual = TRUE & i_controlled = TRUE & not(i_leader = TRUE) & not(i_opposite = TRUE) & i_manual = FALSE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & not(i_tl_sensor_left_open = TRUE) & not(i_tl_sensor_right_open = TRUE) & not(cond = TRUE) & i_manual = TRUE & i_controlled = TRUE & not(i_leader = TRUE) & not(i_opposite = TRUE));
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & not(i_tl_sensor_left_open = TRUE) & not(i_tl_sensor_right_open = TRUE) & not(cond = TRUE) & i_manual = TRUE & not(i_controlled = TRUE) & i_leader = TRUE & i_opposite = TRUE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & not(i_tl_sensor_left_open = TRUE) & not(i_tl_sensor_right_open = TRUE) & not(cond = TRUE) & i_manual = TRUE & not(i_controlled = TRUE) & i_leader = TRUE & i_leader = FALSE & i_opposite = FALSE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & not(i_tl_sensor_left_open = TRUE) & not(i_tl_sensor_right_open = TRUE) & not(cond = TRUE) & i_manual = TRUE & not(i_controlled = TRUE) & i_leader = TRUE & i_manual = FALSE & i_controlled = FALSE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & not(i_tl_sensor_left_open = TRUE) & not(i_tl_sensor_right_open = TRUE) & not(cond = TRUE) & i_manual = TRUE & not(i_controlled = TRUE) & i_leader = TRUE & i_slow_speed = FALSE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & not(i_tl_sensor_left_open = TRUE) & not(i_tl_sensor_right_open = TRUE) & not(cond = TRUE) & i_manual = TRUE & not(i_controlled = TRUE) & not(i_leader = TRUE) & i_opposite = TRUE & i_leader = FALSE & i_opposite = FALSE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & not(i_tl_sensor_left_open = TRUE) & not(i_tl_sensor_right_open = TRUE) & not(cond = TRUE) & i_manual = TRUE & not(i_controlled = TRUE) & not(i_leader = TRUE) & i_opposite = TRUE & i_manual = FALSE & i_controlled = FALSE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & not(i_tl_sensor_left_open = TRUE) & not(i_tl_sensor_right_open = TRUE) & not(cond = TRUE) & i_manual = TRUE & not(i_controlled = TRUE) & not(i_leader = TRUE) & not(i_opposite = TRUE) & i_manual = FALSE & i_controlled = FALSE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & not(i_tl_sensor_left_open = TRUE) & not(i_tl_sensor_right_open = TRUE) & not(cond = TRUE) & not(i_manual = TRUE) & i_controlled = TRUE & i_leader = TRUE & i_opposite = TRUE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & not(i_tl_sensor_left_open = TRUE) & not(i_tl_sensor_right_open = TRUE) & not(cond = TRUE) & not(i_manual = TRUE) & i_controlled = TRUE & i_leader = TRUE & i_leader = FALSE & i_opposite = FALSE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & not(i_tl_sensor_left_open = TRUE) & not(i_tl_sensor_right_open = TRUE) & not(cond = TRUE) & not(i_manual = TRUE) & i_controlled = TRUE & i_leader = TRUE & i_manual = FALSE & i_controlled = FALSE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & not(i_tl_sensor_left_open = TRUE) & not(i_tl_sensor_right_open = TRUE) & not(cond = TRUE) & not(i_manual = TRUE) & i_controlled = TRUE & i_leader = TRUE & i_slow_speed = FALSE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & not(i_tl_sensor_left_open = TRUE) & not(i_tl_sensor_right_open = TRUE) & not(cond = TRUE) & not(i_manual = TRUE) & i_controlled = TRUE & not(i_leader = TRUE) & i_opposite = TRUE & i_leader = FALSE & i_opposite = FALSE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & not(i_tl_sensor_left_open = TRUE) & not(i_tl_sensor_right_open = TRUE) & not(cond = TRUE) & not(i_manual = TRUE) & i_controlled = TRUE & not(i_leader = TRUE) & i_opposite = TRUE & i_manual = FALSE & i_controlled = FALSE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & not(i_tl_sensor_left_open = TRUE) & not(i_tl_sensor_right_open = TRUE) & not(cond = TRUE) & not(i_manual = TRUE) & i_controlled = TRUE & not(i_leader = TRUE) & not(i_opposite = TRUE) & i_manual = FALSE & i_controlled = FALSE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & not(i_tl_sensor_left_open = TRUE) & not(i_tl_sensor_right_open = TRUE) & not(cond = TRUE) & not(i_manual = TRUE) & not(i_controlled = TRUE) & i_leader = TRUE & i_opposite = TRUE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & not(i_tl_sensor_left_open = TRUE) & not(i_tl_sensor_right_open = TRUE) & not(cond = TRUE) & not(i_manual = TRUE) & not(i_controlled = TRUE) & i_leader = TRUE & i_leader = FALSE & i_opposite = FALSE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & not(i_tl_sensor_left_open = TRUE) & not(i_tl_sensor_right_open = TRUE) & not(cond = TRUE) & not(i_manual = TRUE) & not(i_controlled = TRUE) & i_leader = TRUE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & not(i_tl_sensor_left_open = TRUE) & not(i_tl_sensor_right_open = TRUE) & not(cond = TRUE) & not(i_manual = TRUE) & not(i_controlled = TRUE) & not(i_leader = TRUE) & i_opposite = TRUE & i_leader = FALSE & i_opposite = FALSE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & not(i_tl_sensor_left_open = TRUE) & not(i_tl_sensor_right_open = TRUE) & not(cond = TRUE) & not(i_manual = TRUE) & not(i_controlled = TRUE) & not(i_leader = TRUE) & i_opposite = TRUE);
  ("`Local hypotheses'" & cond : BOOL & cond = conduction_p(i_leader,i_manual,i_controlled) & not(i_tl_sensor_left_open = TRUE) & not(i_tl_sensor_right_open = TRUE) & not(cond = TRUE) & not(i_manual = TRUE) & not(i_controlled = TRUE) & not(i_leader = TRUE) & not(i_opposite = TRUE))
END
&
THEORY EnumerateX IS
  STATE == {LEADER,NONE,OPPOSITE};
  CONDUCTION == {MANUAL,CONTROLLED,CONDUCTION_OFF};
  DOORS == {OPENED,CLOSED};
  COMMAND == {NO_COMMAND,OPEN_DOORS,CLOSE_DOORS}
END
&
THEORY Version IS
  POVersion(V3.8.3)(CLT == "V3.7.6")(local_op == OK)
END
