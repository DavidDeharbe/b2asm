THEORY OPOBalanceX IS
  assembly,29;
  ValuesLemmas,1;
  InstanciatedConstraintsLemmas,0;
  Initialisation,6;
  run,22
END
&
THEORY OPOProofList IS
  _f(1) & _f(14) & run.22,(_f(51) & _of(27) => _of(28));
  _f(1) & _f(14) & run.21,(_f(51) & _of(25) => _of(26));
  _f(1) & _f(14) & run.20,(_f(28) & _of(6) => _of(22));
  _f(1) & _f(14) & run.19,(_f(28) & _of(6) => _of(24));
  _f(1) & _f(14) & run.18,(_f(28) & _of(6) => _f(16));
  _f(1) & _f(14) & run.17,(_f(28) & _of(6) => _f(15));
  _f(1) & _f(14) & run.16,(_f(28) & _of(6) => _of(19));
  _f(1) & _f(14) & run.15,(_f(28) & _of(16) => _of(18));
  _f(1) & _f(14) & run.14,(_of(23) & _of(16) => _of(8));
  _f(1) & _f(14) & run.13,(_of(6) => _of(22));
  _f(1) & _f(14) & run.12,(_of(6) => _of(21));
  _f(1) & _f(14) & run.11,(_of(6) => _of(20));
  _f(1) & _f(14) & run.10,(_of(6) => _of(19));
  _f(1) & _f(14) & run.9,(_of(16) => _of(18));
  _f(1) & _f(14) & run.8,(_of(16) => _of(7));
  _f(1) & _f(14) & run.7,(_of(6) => _of(17));
  _f(1) & _f(14) & run.6,(_of(16) => _of(8));
  _f(1) & _f(14) & run.5,(_of(6) => _of(15));
  _f(1) & _f(14) & run.4,(_of(6) => _of(14));
  _f(1) & _f(14) & run.3,(_of(13) => _of(5));
  _f(1) & _f(14) & run.2,(_of(6) => _of(2));
  _f(1) & _f(14) & run.1,(_of(12) => _of(2));
  _f(1) & Initialisation.6,(_f(7) & _of(11) => _of(2));
  _f(1) & Initialisation.5,(_f(2) & _of(6) => _of(10));
  _f(1) & Initialisation.4,(_f(2) & _of(6) => _of(9));
  _f(1) & Initialisation.3,(_f(2) & _of(6) => _of(8));
  _f(1) & Initialisation.2,(_f(2) & _of(6) => _of(7));
  _f(1) & Initialisation.1,(_of(3) & _of(4) => _of(5));
  ValuesLemmas.1,(_of(1) => _of(2))
END
&
THEORY OPOFormulas IS
  "`Check that the property (btrue) is preserved by the valuations - ref 5.2'";
  (btrue);
  ("`Local hypotheses'" & memory_data$0 : NATURAL +-> NATURAL & dom(memory_data$0) = NATURAL);
  "`Check preconditions of called operation, or While loop construction, or Assert predicates'" & "`Check preconditions of called operation, or While loop construction, or Assert predicates'" & "`Check preconditions of called operation, or While loop construction, or Assert predicates'" & "`Check preconditions of called operation, or While loop construction, or Assert predicates'";
  (0 : NATURAL);
  "`Check preconditions of called operation, or While loop construction, or Assert predicates'";
  (1 : NATURAL);
  (2 : NATURAL);
  (6 : NATURAL);
  (0<=6);
  "`Check that the invariant (s = ucmemory_data(2)) is established by the initialisation - ref 4.3, 5.4'" & "`Check initialisation refinement - ref 4.3, 5.4'";
  "`Check precondition (btrue) deduction'";
  "`Check preconditions of called operation, or While loop construction, or Assert predicates'" & "`Check preconditions of called operation, or While loop construction, or Assert predicates'" & "`Check preconditions of called operation, or While loop construction, or Assert predicates'";
  (10 : NATURAL);
  (0<=10);
  "`Check preconditions of called operation, or While loop construction, or Assert predicates'" & "`Check preconditions of called operation, or While loop construction, or Assert predicates'";
  (1<=10);
  (3 : NATURAL);
  (2<=10);
  ((ucmemory_data$1<+{2|->ucmemory_data$1(0)}<+{3|->0})(1) = (ucmemory_data$1<+{2|->ucmemory_data$1(0)}<+{3|->0})(1));
  ((ucmemory_data$1<+{2|->ucmemory_data$1(0)}<+{3|->0})(3) = (ucmemory_data$1<+{2|->ucmemory_data$1(0)}<+{3|->0})(3));
  (2 = 2);
  ("`Local hypotheses'" & (ucmemory_data$1<+{2|->ucmemory_data$1(0)}<+{3|->0})(1) : INTEGER & (ucmemory_data$1<+{2|->ucmemory_data$1(0)}<+{3|->0})(1) = b & vv$0 : INTEGER & 0<=vv$0 & vv$0<=(ucmemory_data$1<+{2|->ucmemory_data$1(0)}<+{3|->0})(1) & a = ucmemory_data$2(0) & b = ucmemory_data$2(1) & (ucmemory_data$1<+{2|->ucmemory_data$1(0)}<+{3|->0})(1) = ucmemory_data$2(1) & ucmemory_data$2(2) = ucmemory_data$2(0)+ucmemory_data$2(3) & ucmemory_data$2 : NATURAL +-> NATURAL & dom(ucmemory_data$2) = NATURAL & vv$0 = ucmemory_data$2(3) & ucpc$2 = 2 & vv$0+1<=(ucmemory_data$1<+{2|->ucmemory_data$1(0)}<+{3|->0})(1));
  ((ucmemory_data$2<+{2|->ucmemory_data$2(2)+1}<+{3|->(ucmemory_data$2<+{2|->ucmemory_data$2(2)+1})(3)+1})(3) = (ucmemory_data$2<+{2|->ucmemory_data$2(2)+1}<+{3|->(ucmemory_data$2<+{2|->ucmemory_data$2(2)+1})(3)+1})(3));
  "`Check that the invariant (a = ucmemory_data(0)) is preserved by the operation - ref 4.4, 5.5'";
  (a = ucmemory_dataz$7777(0));
  "`Check that the invariant (b = ucmemory_data(1)) is preserved by the operation - ref 4.4, 5.5'";
  (b = ucmemory_dataz$7777(1))
END
&
THEORY Version IS
  POVersion(V3.8.3)(CLT == "V3.7.6")(local_op == OK)
END
