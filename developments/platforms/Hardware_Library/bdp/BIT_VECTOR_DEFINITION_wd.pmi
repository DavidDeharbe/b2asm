THEORY BalanceX IS
  BIT_VECTOR_DEFINITION,89,44,0,45,0,0,0;
  Properties,25,12,0,13,0,0,0;
  Assertions,64,32,0,32,0,0,0
END
&
THEORY ProofState IS
  Proved(Util);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util)
END
&
THEORY MethodList IS
  dd & eh(dom(bv_get)) & pr;
  pr;
  dd & eh(dom(bv_get)) & pr;
  pr;
  dd & eh(dom(bv_get)) & pr;
  dd & eh(dom(bv_xor)) & pr;
  dd & eh(dom(bv_get)) & pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  dd & eh(dom(bv_get)) & pr;
  dd & eh(dom(bv_or)) & pr;
  pr;
  dd & eh(dom(bv_get)) & pr;
  pr;
  dd & eh(dom(bv_get)) & pr;
  dd & eh(dom(bv_or)) & pr;
  pr;
  dd & eh(dom(bv_get)) & pr;
  dd & eh(dom(bv_or),_h,Goal) & pr;
  pr;
  dd & eh(dom(bv_get),_h,Goal) & pr;
  dd & eh(dom(bv_or),_h,Goal) & pr;
  dd & eh(dom(bv_or),_h,Goal) & pr;
  pr;
  pr;
  dd & eh(dom(bv_get),_h,Goal) & pr;
  dd & eh(dom(bv_or),_h,Goal) & pr;
  dd & eh(dom(bv_get),_h,Goal) & pr;
  pr;
  pr;
  pr;
  pr;
  dd & eh(dom(bv_get),_h,Goal) & pr;
  dd & eh(dom(bv_and),_h,Goal) & pr;
  pr;
  dd & eh(dom(bv_get)) & pr;
  pr;
  dd & eh(dom(bv_get),_h,Goal) & pr;
  dd & eh(dom(bv_and),_h,Goal) & pr;
  pr;
  dd & eh(dom(bv_get),_h,Goal) & pr;
  dd & eh(dom(bv_and),_h,Goal) & pr;
  pr;
  dd & eh(dom(bv_get),_h,Goal) & pr;
  dd & eh(dom(bv_and),_h,Goal) & pr;
  dd & eh(dom(bv_and),_h,Goal) & pr;
  dd & eh(dom(bv_get),_h,Goal) & pr;
  dd & eh(dom(bv_and),_h,Goal) & pr;
  eh(dom(bv_get),_h,Goal) & dd & pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  eh(dom(bv_get),_h,Goal) & pr;
  pr;
  pr;
  pr;
  dd & ah(v1: BIT_VECTOR & idx: 0..bv_size(v1)-1) & pr & pr & eh(BIT_VECTOR,_h,Goal) & pr & ah(idx: 0..bv_size(v1)-1) & pr & ah(idx: 0..bv_size(v1)-1) & eh(bv_size,_h,Goal) & ss & pr;
  pr;
  pr;
  dd & ah(bv_size(v1) = bv_size(v2)) & pr & ah(idx: 1..bv_size(v1)) & pp(rt.0) & ah(bv_size(v1) = bv_size(v2)) & eh(bv_size,_h,Goal) & eh(BIT_VECTOR,_h,Goal) & ss & ah(idx: 1..bv_size(v1)) & ss & eh(bv_size,_h,Goal) & ss & pp(rt.0);
  pr;
  dd & ah(bv_size(v1) = bv_size(v2)) & pr & ah(idx: 1..bv_size(v1)) & pp(rt.0) & ah(bv_size(v1) = bv_size(v2)) & eh(bv_size,_h,Goal) & eh(BIT_VECTOR,_h,Goal) & ss & ah(idx: 1..bv_size(v1)) & ss & eh(bv_size,_h,Goal) & ss & pp(rt.0);
  pr;
  pr;
  dd & ah(bv_size(v1) = bv_size(v2)) & pr & ah(idx: 1..bv_size(v1)) & pp(rt.0) & ah(bv_size(v1) = bv_size(v2)) & eh(bv_size,_h,Goal) & eh(BIT_VECTOR,_h,Goal) & ss & ah(idx: 1..bv_size(v1)) & ss & eh(bv_size,_h,Goal) & ss & pp(rt.0);
  pr;
  dd & ah(v1: BIT_VECTOR & idx: 1..bv_size(v1)) & pr & pr & eh(BIT_VECTOR,_h,Goal) & eh(bv_size,_h,Goal) & eh(BIT_VECTOR,_h,Goal) & pr;
  pr;
  pr;
  dd & ah(v1: BIT_VECTOR & v2: BIT_VECTOR & bv_size(v1) = bv_size(v2) & idx: 1..bv_size(v1)) & pr & pr & pr & pr & eh(bv_size,_h,Goal) & eh(BIT_VECTOR,_h,Goal) & ss & dd & pr & ah(v1: seq({0,1}) & not(v1 = {}) & v2: seq({0,1}) & not(v2 = {}) & size(v1) = size(v2) & idx: 1..size(v1)) & pr & pr & pr & pr & pr & pr & pr & pp(rt.0) & ah(v1: seq({0,1}) & not(v1 = {}) & v2: seq({0,1}) & not(v2 = {}) & size(v1) = size(v2) & idx: 1..size(v1)) & pr & pr & pr & pr & pr & pr & pr & pp(rt.0);
  pr;
  dd & ah(v1: BIT_VECTOR & idx: 1..bv_size(v1)) & pr & pr & eh(BIT_VECTOR,_h,Goal) & eh(bv_size,_h,Goal) & eh(BIT_VECTOR,_h,Goal) & pr;
  pr;
  pr;
  dd & ah(v1: BIT_VECTOR & idx: 1..bv_size(v1)) & pr & pr & eh(BIT_VECTOR,_h,Goal) & eh(bv_size,_h,Goal) & eh(BIT_VECTOR,_h,Goal) & pr;
  pr;
  dd & ah(i0: 1..high-low+1 & high: low..bv_size(bv)-1 & low: 0..bv_size(bv)-1) & pr & pr & pr & pr & pr;
  dd & ah(v2: BIT_VECTOR) & eh(BIT_VECTOR,_h,Goal) & eh(BIT,_h,Goal) & pp(rt.0);
  dd & ah(v1: BIT_VECTOR) & eh(BIT_VECTOR,_h,Goal) & eh(BIT,_h,Goal) & pp(rt.0);
  dd & ah(bv: BIT_VECTOR) & eh(BIT_VECTOR,_h,Goal) & eh(BIT,_h,Goal) & pp(rt.0)
END
&
THEORY PassList IS
  Force(0),?;
  Force(0),?;
  Force(0),(?;0);
  Force(0),?;
  Force(0),(?;0);
  Force(0),(?;0);
  Force(0),(?;0);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),(?;0);
  Force(0),(?;0);
  Force(0),?;
  Force(0),(?;0);
  Force(0),?;
  Force(0),(?;0);
  Force(0),(?;0);
  Force(0),?;
  Force(0),(?;0);
  Force(0),(?;0);
  Force(0),?;
  Force(0),(?;0);
  Force(0),(?;0);
  Force(0),(?;0);
  Force(0),?;
  Force(0),?;
  Force(0),(?;0);
  Force(0),(?;0);
  Force(0),(?;0);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),(?;0);
  Force(0),(?;0);
  Force(0),?;
  Force(0),(?;0);
  Force(0),?;
  Force(0),(?;0);
  Force(0),(?;0);
  Force(0),?;
  Force(0),(?;0);
  Force(0),(?;0);
  Force(0),?;
  Force(0),(?;0);
  Force(0),(?;0);
  Force(0),(?;0);
  Force(0),(?;0);
  Force(0),(?;0);
  Force(0),(?;0);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),(?;0);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),(?;0);
  Force(0),?;
  Force(0),?;
  Force(0),(?;0);
  Force(0),?;
  Force(0),(?;0);
  Force(0),?;
  Force(0),?;
  Force(0),(?;0);
  Force(0),?;
  Force(0),(?;0);
  Force(0),?;
  Force(0),?;
  Force(0),(?;0);
  Force(0),?;
  Force(0),(?;0);
  Force(0),?;
  Force(0),?;
  Force(0),(?;0);
  Force(0),?;
  Force(0),(?;0);
  Force(0),(?;0);
  Force(0),(?;0);
  Force(0),(?;0)
END
&
THEORY ManForms 
END
&
THEORY Version IS
  PRVersion("V3.3.3.p39")(CLT == "V3.7.6")
END
