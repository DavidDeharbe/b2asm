THEORY BalanceX IS
  Z80_header,169,126,0,43,0,0,0;
  Properties,49,6,0,43,0,0,0;
  Assertions,119,119,0,0,0,0,0;
  Initialisation,1,1,0,0,0,0,0
END
&
THEORY ProofState IS
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0)
END
&
THEORY MethodList IS
  dd & eh(dom(uchar_byte)) & eh(UCHAR) & ss & pr;
  dd & eh(dom(dec),_h,Goal) & ss & pr;
  dd & eh(dom(rgs8)) & ss & pr;
  dd & eh(dom(io_ports)) & ss & pr;
  dd & eh(dom(rgs8)) & ss & pr;
  dd & eh(dom(bitget)) & ss & pr;
  dd & eh(dom(rgs8)) & ss & pr;
  dd & eh(dom(bitget)) & ss & pr;
  dd & eh(dom(rgs8)) & ss & pr;
  dd & eh(dom(bitget)) & ss & pr;
  dd & eh(dom(rgs8)) & ss & pr;
  dd & eh(dom(bitget)) & ss & pr;
  dd & eh(dom(rgs8)) & ss & pr;
  dd & eh(dom(bitget)) & ss & pr;
  dd & eh(dom(rgs8)) & ss & pr;
  dd & eh(dom(bitget)) & ss & pr;
  dd & eh(dom(rgs8)) & ss & pr;
  dd & eh(dom(bitget)) & ss & pr;
  dd & eh(dom(rgs8)) & ss & pr;
  dd & eh(dom(bitget)) & ss & pr;
  dd & eh(dom(rgs8)) & ss & pr;
  dd & eh(dom(ushort_bv16)) & ss & pr;
  dd & eh(dom(sub16USHORT)) & ss & eh(USHORT) & ss & pr;
  dd & eh(dom(ushort_bv16)) & ss & pr;
  dd & eh(dom(sub16USHORT)) & ss & eh(USHORT) & ss & pr;
  dd & eh(dom(ushort_bv16)) & ss & pr;
  dd & eh(dom(add16USHORT)) & ss & eh(USHORT) & ss & pr;
  dd & eh(dom(ushort_bv16)) & ss & pr;
  dd & eh(dom(add16USHORT)) & ss & eh(USHORT) & ss & pr;
  dd & eh(dom(byte_bv16)) & ss & pr;
  dd & eh(dom(rgs8)) & ss & pr;
  dd & eh(dom(rgs8)) & ss & pr;
  dd & eh(dom(byte_bv16)) & ss & pr;
  dd & eh(dom(rgs8)) & ss & pr;
  dd & eh(dom(rgs8)) & ss & pr;
  dd & eh(dom(byte_bv16)) & ss & pr;
  dd & eh(dom(rgs8)) & ss & pr;
  dd & eh(dom(rgs8)) & ss & pr;
  dd & eh(dom(byte_bv16)) & ss & pr;
  dd & eh(dom(rgs8)) & ss & pr;
  dd & eh(dom(rgs8)) & ss & pr;
  dd & eh(dom(byte_bv16)) & ss & pr;
  dd & eh(dom(rgs8)) & ss & pr;
  dd & eh(dom(rgs8)) & ss & pr;
  dd & eh(dom(byte_bv16)) & ss & pr;
  dd & eh(dom(rgs8)) & ss & pr;
  dd & eh(dom(rgs8)) & ss & pr;
  dd & eh(dom(byte_bv16)) & ss & pr;
  dd & eh(dom(rgs8)) & ss & pr;
  dd & eh(dom(rgs8)) & ss & pr;
  dd & eh(dom(byte_bv16)) & ss & pr;
  dd & eh(dom(rgs8)) & ss & pr;
  dd & eh(dom(rgs8)) & ss & pr;
  dd & eh(dom(byte_bv16)) & ss & pr;
  dd & eh(dom(rgs8)) & ss & pr;
  dd & eh(dom(rgs8)) & ss & pr;
  dd & eh(dom(byte_bv16)) & ss & pr;
  dd & eh(dom(rgs8)) & ss & pr;
  dd & eh(dom(rgs8)) & ss & pr;
  dd & eh(dom(byte_bv16)) & ss & pr;
  dd & eh(dom(rgs8)) & ss & pr;
  dd & eh(dom(rgs8)) & ss & pr;
  dd & eh(dom(byte_bv16)) & ss & pr;
  dd & eh(dom(rgs8)) & ss & pr;
  dd & eh(dom(rgs8)) & ss & pr;
  dd & eh(dom(byte_bv16)) & ss & pr;
  dd & eh(dom(rgs8)) & ss & pr;
  dd & eh(dom(rgs8)) & ss & pr;
  dd & eh(dom(byte_bv16)) & ss & pr;
  dd & eh(dom(rgs8)) & ss & pr;
  dd & eh(dom(rgs8)) & ss & pr;
  dd & eh(dom(bv_9ireg_plus_d0)) & ss & pr;
  dd & eh(dom(bv_9ireg_plus_d0)) & ss & pr;
  dd & eh(dom(bv_ireg_plus_d)) & ss & pr;
  dd & eh(dom(bv_ireg_plus_d)) & ss & pr;
  dd & eh(dom(update_flag_reg),_h,Goal) & ss & pr;
  dd & eh(dom(mem)) & ss & pr;
  dd & eh(dom(byte_bv16)) & ss & pr;
  dd & eh(dom(mem)) & ss & pr;
  dd & eh(dom(byte_bv16)) & ss & pr;
  dd & eh(dom(rgs8)) & ss & pr;
  dd & eh(dom(rgs8)) & ss & pr;
  dd & eh(dom(schar_byte)) & eh(SCHAR) & ss & pr;
  dd & eh(dom(mem)) & ss & pr;
  dd & eh(dom(byte_bv16)) & ss & pr;
  dd & eh(dom(rgs8)) & ss & pr;
  dd & eh(dom(rgs8)) & ss & pr;
  dd & eh(dom(mem)) & ss & pr;
  dd & eh(dom(byte_bv16)) & ss & pr;
  dd & eh(dom(mem)) & ss & pr;
  dd & eh(dom(byte_bv16)) & ss & pr;
  dd & eh(dom(rgs8)) & ss & pr;
  dd & eh(dom(rgs8)) & ss & pr;
  dd & eh(dom(schar_byte)) & eh(SCHAR) & ss & pr;
  dd & eh(dom(mem)) & ss & pr;
  dd & eh(dom(byte_bv16)) & ss & pr;
  dd & eh(dom(rgs8)) & ss & pr;
  dd & eh(dom(rgs8)) & ss & pr;
  dd & eh(dom(mem)) & ss & pr;
  dd & eh(dom(byte_bv16)) & ss & pr;
  dd & eh(dom(mem)) & ss & pr;
  dd & eh(dom(byte_bv16)) & ss & pr;
  dd & eh(dom(rgs8)) & ss & pr;
  dd & eh(dom(rgs8)) & ss & pr;
  dd & eh(dom(schar_byte)) & eh(SCHAR) & ss & pr;
  dd & eh(dom(mem)) & ss & pr;
  dd & eh(dom(byte_bv16)) & ss & pr;
  dd & eh(dom(rgs8)) & ss & pr;
  dd & eh(dom(rgs8)) & ss & pr;
  dd & eh(dom(mem)) & ss & pr;
  dd & eh(dom(byte_bv16)) & ss & pr;
  dd & eh(dom(mem)) & ss & pr;
  dd & eh(dom(byte_bv16)) & ss & pr;
  dd & eh(dom(rgs8)) & ss & pr;
  dd & eh(dom(rgs8)) & ss & pr;
  dd & eh(dom(schar_byte)) & eh(SCHAR) & ss & pr;
  dd & eh(dom(mem)) & ss & pr;
  dd & eh(dom(byte_bv16)) & ss & pr;
  dd & eh(dom(rgs8)) & ss & pr;
  dd & eh(dom(rgs8)) & ss & pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  dd & eh(dom(ushort_bv16),_h,Goal) & eh(USHORT,_h,Goal) & ah(bv16_ushort(ix_iy): USHORT) & pr & ah(desloc: USHORT) & pr & mp & ah(desloc: USHORT & bv16_ushort(ix_iy): USHORT) & pr & pr & eh(USHORT,_h,Goal) & mp & ah(desloc: 0..65535 & bv16_ushort(ix_iy): 0..65535) & pr & pr & ss & pp(rt.0);
  dd & ah(bv16_ushort(ix_iy): USHORT & desloc: USHORT) & pr & pr & pr;
  pr;
  pr;
  pr;
  pr;
  dd & eh(dom(byte_bv16)) & ss & pr;
  pr;
  pr;
  pr;
  pr;
  dd & eh(dom(byte_bv16)) & ss & pr;
  pr;
  pr;
  pr;
  dd & eh(dom(byte_bv16)) & ss & pr;
  pr;
  pr;
  pr;
  dd & eh(dom(byte_bv16)) & ss & pr;
  pr;
  pr;
  pr
END
&
THEORY PassList IS
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),(?;0);
  Force(0),(?;0);
  Force(0),(?;0);
  Force(0),(?;0);
  Force(0),(?;0);
  Force(0),(?;0);
  Force(0),(?;0);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),(?;0);
  Force(0),(?;0);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),(?;0);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),(?;0);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),(?;0);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),(?;0);
  Force(0),?;
  Force(0),?;
  Force(0),?
END
&
THEORY ManForms 
END
&
THEORY Version IS
  PRVersion("V3.3.3.p39")(CLT == "V3.7.6")
END
