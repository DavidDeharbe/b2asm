THEORY ProofList IS
  _f(1) & _f(2) & _f(10) & _f(70) & _f(272) & OUTIR.9,(_f(274) & _f(238) => _f(271));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(272) & OUTIR.8,(_f(274) & _f(238) => _f(270));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(272) & OUTIR.7,(_f(274) & _f(72) => _f(250));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(272) & OUTIR.6,(_f(274) & _f(72) => _f(249));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(272) & OUTIR.5,(_f(273) & _f(238) => _f(271));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(272) & OUTIR.4,(_f(273) & _f(238) => _f(270));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(272) & OUTIR.3,(_f(273) & _f(75) => _f(76));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(272) & OUTIR.2,(_f(273) & _f(72) => _f(250));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(272) & OUTIR.1,(_f(273) & _f(72) => _f(249));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(268) & OUTI.5,(_f(269) & _f(238) => _f(271));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(268) & OUTI.4,(_f(269) & _f(238) => _f(270));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(268) & OUTI.3,(_f(269) & _f(75) => _f(76));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(268) & OUTI.2,(_f(269) & _f(72) => _f(250));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(268) & OUTI.1,(_f(269) & _f(72) => _f(249));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(265) & OUT_9C0_r.3,(_f(238) => _f(267));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(265) & OUT_9C0_r.2,(_f(238) => _f(266));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(265) & OUT_9C0_r.1,(_f(75) => _f(76));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(262) & OUT_9n0_A.3,(_f(238) => _f(264));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(262) & OUT_9n0_A.2,(_f(238) => _f(263));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(262) & OUT_9n0_A.1,(_f(75) => _f(76));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(259) & INDR.11,(_f(261) & _f(238) => _f(252));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(259) & INDR.10,(_f(261) & _f(238) => _f(251));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(259) & INDR.9,(_f(261) & _f(72) => _f(250));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(259) & INDR.8,(_f(261) & _f(72) => _f(249));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(259) & INDR.7,(_f(260) & _f(238) => _f(252));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(259) & INDR.6,(_f(260) & _f(238) => _f(251));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(259) & INDR.5,(_f(260) & _f(75) => _f(76));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(259) & INDR.4,(_f(260) & _f(72) => _f(250));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(259) & INDR.3,(_f(260) & _f(72) => _f(249));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(259) & INDR.2,(_f(257) & _f(90) => _f(247));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(259) & INDR.1,(_f(257) & _f(90) => _f(246));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(256) & IND.7,(_f(258) & _f(238) => _f(252));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(256) & IND.6,(_f(258) & _f(238) => _f(251));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(256) & IND.5,(_f(258) & _f(75) => _f(76));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(256) & IND.4,(_f(258) & _f(72) => _f(250));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(256) & IND.3,(_f(258) & _f(72) => _f(249));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(256) & IND.2,(_f(257) & _f(90) => _f(247));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(256) & IND.1,(_f(257) & _f(90) => _f(246));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(253) & INIR.11,(_f(255) & _f(238) => _f(252));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(253) & INIR.10,(_f(255) & _f(238) => _f(251));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(253) & INIR.9,(_f(255) & _f(72) => _f(250));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(253) & INIR.8,(_f(255) & _f(72) => _f(249));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(253) & INIR.7,(_f(254) & _f(238) => _f(252));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(253) & INIR.6,(_f(254) & _f(238) => _f(251));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(253) & INIR.5,(_f(254) & _f(75) => _f(76));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(253) & INIR.4,(_f(254) & _f(72) => _f(250));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(253) & INIR.3,(_f(254) & _f(72) => _f(249));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(253) & INIR.2,(_f(245) & _f(90) => _f(247));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(253) & INIR.1,(_f(245) & _f(90) => _f(246));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(244) & INI.7,(_f(248) & _f(238) => _f(252));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(244) & INI.6,(_f(248) & _f(238) => _f(251));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(244) & INI.5,(_f(248) & _f(75) => _f(76));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(244) & INI.4,(_f(248) & _f(72) => _f(250));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(244) & INI.3,(_f(248) & _f(72) => _f(249));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(244) & INI.2,(_f(245) & _f(90) => _f(247));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(244) & INI.1,(_f(245) & _f(90) => _f(246));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(241) & IN_A_9n0.5,(_f(235) & _f(238) => _f(240));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(241) & IN_A_9n0.4,(_f(235) & _f(238) => _f(239));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(241) & IN_A_9n0.3,(_f(235) & _f(75) => _f(76));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(241) & IN_A_9n0.2,(_f(235) & _f(72) => _f(243));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(241) & IN_A_9n0.1,(_f(235) & _f(72) => _f(242));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(234) & IN_A_9n0_.5,(_f(235) & _f(238) => _f(240));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(234) & IN_A_9n0_.4,(_f(235) & _f(238) => _f(239));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(234) & IN_A_9n0_.3,(_f(235) & _f(75) => _f(76));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(234) & IN_A_9n0_.2,(_f(235) & _f(72) => _f(237));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(234) & IN_A_9n0_.1,(_f(235) & _f(72) => _f(236));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(230) & RETURN.2,(_f(231) & _f(121) => _f(233));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(230) & RETURN.1,(_f(231) & _f(75) => _f(232));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(227) & CALL.2,(_f(90) => _f(229));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(227) & CALL.1,(_f(90) => _f(228));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(224) & RES_b_HL.2,(_f(226) & _f(75) => _f(76));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(224) & RES_b_HL.1,(_f(225) & _f(90) => _f(222));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(220) & SET_b_HL.2,(_f(223) & _f(75) => _f(76));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(220) & SET_b_HL.1,(_f(221) & _f(90) => _f(222));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(217) & JR_Z_e.2,(_f(219) & _f(75) => _f(216));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(217) & JR_Z_e.1,(_f(218) & _f(75) => _f(76));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(213) & JR_NZ_e.2,(_f(215) & _f(75) => _f(216));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(213) & JR_NZ_e.1,(_f(214) & _f(75) => _f(76));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(211) & BIT_b_9HL0.3,(_f(212) & _f(75) => _f(76));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(211) & BIT_b_9HL0.2,(_f(212) & _f(72) => _f(210));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(211) & BIT_b_9HL0.1,(_f(212) & _f(72) => _f(209));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(207) & BIT_b_rr.3,(_f(208) & _f(75) => _f(76));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(207) & BIT_b_rr.2,(_f(208) & _f(72) => _f(210));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(207) & BIT_b_rr.1,(_f(208) & _f(72) => _f(209));
  _f(1) & _f(2) & _f(10) & _f(70) & CPI.1,(_f(206) & _f(75) => _f(76));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(204) & LDDR.4,(_f(205) & _f(75) => _f(76));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(204) & LDDR.3,(_f(205) & _f(72) => _f(195));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(204) & LDDR.2,(_f(205) & _f(72) => _f(194));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(204) & LDDR.1,(_f(201) & _f(90) => _f(192));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(200) & LDD.6,(_f(203) & _f(72) => _f(195));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(200) & LDD.5,(_f(203) & _f(72) => _f(194));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(200) & LDD.4,(_f(202) & _f(75) => _f(76));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(200) & LDD.3,(_f(202) & _f(72) => _f(195));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(200) & LDD.2,(_f(202) & _f(72) => _f(194));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(200) & LDD.1,(_f(201) & _f(90) => _f(192));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(196) & LDIR.6,(_f(199) & _f(72) => _f(195));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(196) & LDIR.5,(_f(199) & _f(72) => _f(194));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(196) & LDIR.4,(_f(198) & _f(75) => _f(76));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(196) & LDIR.3,(_f(198) & _f(72) => _f(195));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(196) & LDIR.2,(_f(198) & _f(72) => _f(194));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(196) & LDIR.1,(_f(197) & _f(90) => _f(192));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(190) & LDI.4,(_f(193) & _f(75) => _f(76));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(190) & LDI.3,(_f(193) & _f(72) => _f(195));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(190) & LDI.2,(_f(193) & _f(72) => _f(194));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(190) & LDI.1,(_f(191) & _f(90) => _f(192));
  _f(1) & _f(2) & _f(10) & _f(70) & EX_9SP0_IY.2,(_f(189) & _f(129) => _f(188));
  _f(1) & _f(2) & _f(10) & _f(70) & EX_9SP0_IY.1,(_f(189) & _f(75) => _f(76));
  _f(1) & _f(2) & _f(10) & _f(70) & EX_9SP0_IX.2,(_f(187) & _f(127) => _f(188));
  _f(1) & _f(2) & _f(10) & _f(70) & EX_9SP0_IX.1,(_f(187) & _f(75) => _f(76));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(183) & EX_9SP0_HL.3,(_f(184) & _f(75) => _f(76));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(183) & EX_9SP0_HL.2,(_f(184) & _f(72) => _f(186));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(183) & EX_9SP0_HL.1,(_f(184) & _f(72) => _f(185));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(180) & EXX.3,(_f(75) => _f(76));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(180) & EXX.2,(_f(72) => _f(182));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(180) & EXX.1,(_f(72) => _f(181));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(177) & EX_AF_AF_.3,(_f(75) => _f(76));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(177) & EX_AF_AF_.2,(_f(72) => _f(179));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(177) & EX_AF_AF_.1,(_f(72) => _f(178));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(174) & EX_DE_HL.3,(_f(75) => _f(76));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(174) & EX_DE_HL.2,(_f(72) => _f(176));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(174) & EX_DE_HL.1,(_f(72) => _f(175));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(173) & POP_IY.2,(_f(171) & _f(129) => _f(172));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(173) & POP_IY.1,(_f(171) & _f(75) => _f(76));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(170) & POP_IX.2,(_f(171) & _f(127) => _f(172));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(170) & POP_IX.1,(_f(171) & _f(75) => _f(76));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(166) & POP_qq.3,(_f(167) & _f(75) => _f(76));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(166) & POP_qq.2,(_f(167) & _f(72) => _f(169));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(166) & POP_qq.1,(_f(167) & _f(72) => _f(168));
  _f(1) & _f(2) & _f(10) & _f(70) & PUSH_IY.1,(_f(164) & _f(121) => _f(165));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(162) & PUSH_IX.1,(_f(163) & _f(75) => _f(76));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(160) & PUSH_qq.1,(_f(161) & _f(75) => _f(76));
  _f(1) & _f(2) & _f(10) & _f(70) & LD_SP_IY.2,(_f(121) => _f(159));
  _f(1) & _f(2) & _f(10) & _f(70) & LD_SP_IY.1,(_f(75) => _f(76));
  _f(1) & _f(2) & _f(10) & _f(70) & LD_SP_IX.2,(_f(121) => _f(158));
  _f(1) & _f(2) & _f(10) & _f(70) & LD_SP_IX.1,(_f(75) => _f(76));
  _f(1) & _f(2) & _f(10) & _f(70) & LD_SP_HL.2,(_f(121) => _f(157));
  _f(1) & _f(2) & _f(10) & _f(70) & LD_SP_HL.1,(_f(75) => _f(76));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(152) & LD_9nn0_IY.3,(_f(156) & _f(75) => _f(76));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(152) & LD_9nn0_IY.2,(_f(153) & _f(90) => _f(155));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(152) & LD_9nn0_IY.1,(_f(153) & _f(90) => _f(154));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(147) & LD_9nn0_IX.3,(_f(151) & _f(75) => _f(76));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(147) & LD_9nn0_IX.2,(_f(148) & _f(90) => _f(150));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(147) & LD_9nn0_IX.1,(_f(148) & _f(90) => _f(149));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(142) & LD_9nn0_dd.3,(_f(146) & _f(75) => _f(76));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(142) & LD_9nn0_dd.2,(_f(143) & _f(90) => _f(145));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(142) & LD_9nn0_dd.1,(_f(143) & _f(90) => _f(144));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(138) & LD_9nn0_HL.3,(_f(141) & _f(75) => _f(76));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(138) & LD_9nn0_HL.2,(_f(90) => _f(140));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(138) & LD_9nn0_HL.1,(_f(90) => _f(139));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(137) & LD_IY_9nn0.2,(_f(129) => _f(134));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(137) & LD_IY_9nn0.1,(_f(75) => _f(76));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(136) & LD_IX_9nn0.2,(_f(127) => _f(134));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(136) & LD_IX_9nn0.1,(_f(75) => _f(76));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(133) & LD_dd_9nn0.4,(_f(135) & _f(75) => _f(76));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(133) & LD_dd_9nn0.3,(_f(135) & _f(72) => _f(125));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(133) & LD_dd_9nn0.2,(_f(135) & _f(72) => _f(124));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(133) & LD_dd_9nn0.1,(_f(120) & _f(121) => _f(134));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(130) & LD_HL_9nn0.3,(_f(75) => _f(76));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(130) & LD_HL_9nn0.2,(_f(72) => _f(132));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(130) & LD_HL_9nn0.1,(_f(72) => _f(131));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(128) & LD_IY_nn.2,(_f(129) => _f(122));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(128) & LD_IY_nn.1,(_f(75) => _f(76));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(126) & LD_IX_nn.2,(_f(127) => _f(122));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(126) & LD_IX_nn.1,(_f(75) => _f(76));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(119) & LD_dd_nn.4,(_f(123) & _f(75) => _f(76));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(119) & LD_dd_nn.3,(_f(123) & _f(72) => _f(125));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(119) & LD_dd_nn.2,(_f(123) & _f(72) => _f(124));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(119) & LD_dd_nn.1,(_f(120) & _f(121) => _f(122));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(117) & LD_9nn0_A.2,(_f(118) & _f(75) => _f(76));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(117) & LD_9nn0_A.1,(_f(90) => _f(113));
  _f(1) & _f(2) & _f(10) & _f(70) & LD_9DE0_A.2,(_f(116) & _f(75) => _f(76));
  _f(1) & _f(2) & _f(10) & _f(70) & LD_9DE0_A.1,(_f(115) & _f(90) => _f(113));
  _f(1) & _f(2) & _f(10) & _f(70) & LD_9BC0_A.2,(_f(114) & _f(75) => _f(76));
  _f(1) & _f(2) & _f(10) & _f(70) & LD_9BC0_A.1,(_f(112) & _f(90) => _f(113));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(109) & LD_A_9nn0.3,(_f(75) => _f(76));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(109) & LD_A_9nn0.2,(_f(72) => _f(111));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(109) & LD_A_9nn0.1,(_f(72) => _f(110));
  _f(1) & _f(2) & _f(10) & _f(70) & LD_A_9DE0.3,(_f(108) & _f(75) => _f(76));
  _f(1) & _f(2) & _f(10) & _f(70) & LD_A_9DE0.2,(_f(108) & _f(72) => _f(107));
  _f(1) & _f(2) & _f(10) & _f(70) & LD_A_9DE0.1,(_f(108) & _f(72) => _f(106));
  _f(1) & _f(2) & _f(10) & _f(70) & LD_A_9BC0.3,(_f(105) & _f(75) => _f(76));
  _f(1) & _f(2) & _f(10) & _f(70) & LD_A_9BC0.2,(_f(105) & _f(72) => _f(107));
  _f(1) & _f(2) & _f(10) & _f(70) & LD_A_9BC0.1,(_f(105) & _f(72) => _f(106));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(103) & LD_9IY_d0_n.2,(_f(104) & _f(75) => _f(76));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(103) & LD_9IY_d0_n.1,(_f(87) & _f(90) => _f(95));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(101) & LD_9IX_d0_n.2,(_f(102) & _f(75) => _f(76));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(101) & LD_9IX_d0_n.1,(_f(94) & _f(90) => _f(95));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(99) & LD_9HL0_n.1,(_f(100) & _f(75) => _f(76));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(97) & LD_9IY_d0_r.3,(_f(98) & _f(75) => _f(76));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(97) & LD_9IY_d0_r.2,(_f(87) & _f(90) => _f(91));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(97) & LD_9IY_d0_r.1,(_f(87) & _f(90) => _f(95));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(93) & LD_9IX_d0_r.3,(_f(96) & _f(75) => _f(76));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(93) & LD_9IX_d0_r.2,(_f(94) & _f(90) => _f(91));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(93) & LD_9IX_d0_r.1,(_f(94) & _f(90) => _f(95));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(88) & LD_9HL0_r.2,(_f(92) & _f(75) => _f(76));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(88) & LD_9HL0_r.1,(_f(89) & _f(90) => _f(91));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(86) & LD_r_9IY_d0.3,(_f(87) & _f(75) => _f(76));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(86) & LD_r_9IY_d0.2,(_f(87) & _f(72) => _f(83));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(86) & LD_r_9IY_d0.1,(_f(87) & _f(72) => _f(82));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(84) & LD_r_9IX_d0.3,(_f(85) & _f(75) => _f(76));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(84) & LD_r_9IX_d0.2,(_f(85) & _f(72) => _f(83));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(84) & LD_r_9IX_d0.1,(_f(85) & _f(72) => _f(82));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(80) & LD_r_9HL0.3,(_f(81) & _f(75) => _f(76));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(80) & LD_r_9HL0.2,(_f(81) & _f(72) => _f(83));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(80) & LD_r_9HL0.1,(_f(81) & _f(72) => _f(82));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(77) & LD_r_n_.3,(_f(75) => _f(76));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(77) & LD_r_n_.2,(_f(72) => _f(79));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(77) & LD_r_n_.1,(_f(72) => _f(78));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(71) & LD_r_r_.3,(_f(75) => _f(76));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(71) & LD_r_r_.2,(_f(72) => _f(74));
  _f(1) & _f(2) & _f(10) & _f(70) & _f(71) & LD_r_r_.1,(_f(72) => _f(73));
  _f(1) & _f(2) & _f(10) & AssertionLemmas.29,(_f(68) => _f(69));
  _f(1) & _f(2) & _f(10) & AssertionLemmas.28,(_f(66) => _f(67));
  _f(1) & _f(2) & _f(10) & AssertionLemmas.27,(_f(64) => _f(65));
  _f(1) & _f(2) & _f(10) & AssertionLemmas.26,(_f(62) => _f(63));
  _f(1) & _f(2) & _f(10) & AssertionLemmas.25,(_f(60) => _f(61));
  _f(1) & _f(2) & _f(10) & AssertionLemmas.24,(_f(58) => _f(59));
  _f(1) & _f(2) & _f(10) & AssertionLemmas.23,(_f(56) => _f(57));
  _f(1) & _f(2) & _f(10) & AssertionLemmas.22,(_f(54) => _f(55));
  _f(1) & _f(2) & _f(10) & AssertionLemmas.21,(_f(52) => _f(53));
  _f(1) & _f(2) & _f(10) & AssertionLemmas.20,(_f(50) => _f(51));
  _f(1) & _f(2) & _f(10) & AssertionLemmas.19,(_f(48) => _f(49));
  _f(1) & _f(2) & _f(10) & AssertionLemmas.18,(_f(46) => _f(47));
  _f(1) & _f(2) & _f(10) & AssertionLemmas.17,(_f(44) => _f(45));
  _f(1) & _f(2) & _f(10) & AssertionLemmas.16,(_f(42) => _f(43));
  _f(1) & _f(2) & _f(10) & AssertionLemmas.15,(_f(40) => _f(41));
  _f(1) & _f(2) & _f(10) & AssertionLemmas.14,(_f(38) => _f(39));
  _f(1) & _f(2) & _f(10) & AssertionLemmas.13,(_f(36) => _f(37));
  _f(1) & _f(2) & _f(10) & AssertionLemmas.12,(_f(33) & _f(34) => _f(35));
  _f(1) & _f(2) & _f(10) & AssertionLemmas.11,(_f(31) => _f(32));
  _f(1) & _f(2) & _f(10) & AssertionLemmas.10,(_f(29) => _f(30));
  _f(1) & _f(2) & _f(10) & AssertionLemmas.9,(_f(27) => _f(28));
  _f(1) & _f(2) & _f(10) & AssertionLemmas.8,(_f(25) => _f(26));
  _f(1) & _f(2) & _f(10) & AssertionLemmas.7,(_f(23) => _f(24));
  _f(1) & _f(2) & _f(10) & AssertionLemmas.6,(_f(21) => _f(22));
  _f(1) & _f(2) & _f(10) & AssertionLemmas.5,(_f(19) => _f(20));
  _f(1) & _f(2) & _f(10) & AssertionLemmas.4,(_f(17) => _f(18));
  _f(1) & _f(2) & _f(10) & AssertionLemmas.3,(_f(15) => _f(16));
  _f(1) & _f(2) & _f(10) & AssertionLemmas.2,(_f(13) => _f(14));
  _f(1) & _f(2) & _f(10) & AssertionLemmas.1,(_f(11) => _f(12));
  _f(1) & _f(2) & Initialisation.3,(_f(3) & _f(8) => _f(9));
  _f(1) & _f(2) & Initialisation.2,(_f(3) & _f(6) => _f(7));
  _f(1) & _f(2) & Initialisation.1,(_f(3) & _f(4) => _f(5))
END
&
THEORY Formulas IS
  ("`Seen and used machines properties'" & SCHAR_LENGTH: INTEGER & 0<=SCHAR_LENGTH & SCHAR_LENGTH = 8 & NB_SCHARS: INTEGER & 0<=NB_SCHARS & NB_SCHARS = 2**SCHAR_LENGTH & SCHAR = -128..127 & SCHAR_POSITION = 0..SCHAR_LENGTH-1 & UCHAR = 0..255 & SSHORTINT_LENGTH: INTEGER & 0<=SSHORTINT_LENGTH & SSHORTINT_LENGTH = 16 & NB_SSHORTINTS: INTEGER & 0<=NB_SSHORTINTS & NB_SSHORTINTS = 2**SSHORTINT_LENGTH & SSHORTINT = -32768..32767 & SSHORTINT_POSITION = 0..SSHORTINT_LENGTH-1 & BV16: POW(BIT_VECTOR) & BV16 = SET(vv).(vv: BIT_VECTOR & size(vv) = SSHORTINT_LENGTH) & BYTE_TO_UCHAR: BYTE +-> UCHAR & dom(BYTE_TO_UCHAR) = BYTE & BYTE_TO_UCHAR = %v0.(v0: BYTE | (-128)*v0(7)+64*v0(6)+32*v0(5)+16*v0(4)+8*v0(3)+4*v0(2)+2*v0(1)+v0(0)) & UCHAR_TO_BYTE: UCHAR +-> BYTE & dom(UCHAR_TO_BYTE) = UCHAR & UCHAR_TO_BYTE = BYTE_TO_UCHAR~ & USHORTINT = 0..65535 & NB_INSTRUCTIONS: INTEGER & 0<=NB_INSTRUCTIONS & INST_SZ: INTEGER & 0<=INST_SZ & INST_SZ = 16 & NB_INSTRUCTIONS = 2**INST_SZ & INSTRUCTION_MAX = NB_INSTRUCTIONS-1 & INSTRUCTION = USHORTINT & INSTRUCTION_NEXT: USHORTINT +-> USHORTINT & dom(INSTRUCTION_NEXT) = USHORTINT & INSTRUCTION_NEXT = SET(p0,q0).(p0: INSTRUCTION & q0: INSTRUCTION & 0<=p0 & p0+1<=NB_INSTRUCTIONS-1 & q0 = p0+1)\/{NB_INSTRUCTIONS-1|->0} & INSTRUCTION_JUMP = %(p0,e0).(p0: INSTRUCTION & e0: -126..129 | p0+e0) & BYTE_TO_SCHAR: BYTE +-> SCHAR & dom(BYTE_TO_SCHAR) = BYTE & BYTE_TO_SCHAR = %v0.(v0: BYTE | (-128)*v0(7)+64*v0(6)+32*v0(5)+16*v0(4)+8*v0(3)+4*v0(2)+2*v0(1)+v0(0)) & SCHAR_TO_BYTE: SCHAR +-> BYTE & dom(SCHAR_TO_BYTE) = SCHAR & SCHAR_TO_BYTE = BYTE_TO_SCHAR~ & BV16_TO_SSHORTINT: BV16 +-> SSHORTINT & dom(BV16_TO_SSHORTINT) = BV16 & BV16_TO_SSHORTINT = %v0.(v0: BV16 | (-32768)*v0(15)+16384*v0(14)+8192*v0(13)+4096*v0(12)+2048*v0(11)+1024*v0(10)+512*v0(9)+256*v0(8)+128*v0(7)+64*v0(6)+32*v0(5)+16*v0(4)+8*v0(3)+4*v0(2)+2*v0(1)+v0(0)) & SSHORTINT_TO_BV16: SSHORTINT +-> BV16 & dom(SSHORTINT_TO_BV16) = SSHORTINT & SSHORTINT_TO_BV16 = BV16_TO_SSHORTINT~ & BYTE_TO_BV16: BYTE*BYTE +-> BV16 & dom(BYTE_TO_BV16) = BYTE*BYTE & BYTE_TO_BV16 = %(v1,v2).(v1: BV16 & v2: BV16 | {0|->v2(0)}\/{1|->v2(1)}\/{2|->v2(2)}\/{3|->v2(3)}\/{4|->v2(4)}\/{5|->v2(5)}\/{6|->v2(6)}\/{7|->v2(7)}\/{8|->v1(0)}\/{9|->v1(1)}\/{10|->v1(2)}\/{11|->v1(3)}\/{12|->v1(4)}\/{13|->v1(5)}\/{14|->v1(6)}\/{15|->v1(7)}) & BV16_TO_BYTE: BV16 +-> BYTE*BYTE & dom(BV16_TO_BYTE) = BV16 & BV16_TO_BYTE = BYTE_TO_BV16~ & SCHAR_TO_SSHORTINT: SCHAR*SCHAR +-> SSHORTINT & dom(SCHAR_TO_SSHORTINT) = SCHAR*SCHAR & SCHAR_TO_SSHORTINT = %(w1,w2).(w1: SCHAR & w2: SCHAR | BV16_TO_SSHORTINT(BYTE_TO_BV16(SCHAR_TO_BYTE(w1),SCHAR_TO_BYTE(w2)))) & SSHORTINT_TO_SCHAR: SSHORTINT +-> SCHAR*SCHAR & dom(SSHORTINT_TO_SCHAR) = SSHORTINT & SSHORTINT_TO_SCHAR = SCHAR_TO_SSHORTINT~ & BV16_TO_USHORTINT: BV16 +-> USHORTINT & dom(BV16_TO_USHORTINT) = BV16 & BV16_TO_USHORTINT = %v0.(v0: BV16 | (-32768)*v0(15)+16384*v0(14)+8192*v0(13)+4096*v0(12)+2048*v0(11)+1024*v0(10)+512*v0(9)+256*v0(8)+128*v0(7)+64*v0(6)+32*v0(5)+16*v0(4)+8*v0(3)+4*v0(2)+2*v0(1)+v0(0)) & USHORTINT_TO_BV16: USHORTINT +-> BV16 & dom(USHORTINT_TO_BV16) = USHORTINT & USHORTINT_TO_BV16 = BV16_TO_USHORTINT~ & parity_bit_from_BYTE: BIT_VECTOR +-> BIT & dom(parity_bit_from_BYTE) = BIT_VECTOR & parity_bit_from_BYTE = %bv.(bv: BIT_VECTOR | SIGMA(idx).(idx: dom(bv) | bv(idx)) mod 2) & SSHORTINT_TO_USHORTINT: SSHORTINT +-> USHORTINT & dom(SSHORTINT_TO_USHORTINT) = SSHORTINT & SSHORTINT_TO_USHORTINT = %v0.(v0: SSHORTINT | v0-32768) & USHORTINT_TO_SSHORTINT: USHORTINT +-> SSHORTINT & dom(USHORTINT_TO_SSHORTINT) = USHORTINT & USHORTINT_TO_SSHORTINT = SSHORTINT_TO_USHORTINT~ & BIT = 0..1 & bit_not: BIT +-> BIT & dom(bit_not) = BIT & !bb.(bb: BIT => bit_not(bb) = 1-bb) & bit_and: BIT*BIT +-> BIT & dom(bit_and) = BIT*BIT & !(b1,b2).(b1: BIT & b2: BIT => (bit_and(b1,b2) = 1 => b1 = 1) & (b1 = 1 => bit_and(b1,b2) = 1) & b2 = 1) & bit_or: BIT*BIT +-> BIT & dom(bit_or) = BIT*BIT & !(b1,b2).(b1: BIT & b2: BIT => (bit_or(b1,b2) = 1 => b1 = 1) & (b1 = 1 => bit_or(b1,b2) = 1) or b2 = 1) & bit_xor: BIT*BIT +-> BIT & dom(bit_xor) = BIT*BIT & !(b1,b2).(b1: BIT & b2: BIT => (bit_xor(b1,b2) = 1 => not(b1 = b2)) & (not(b1 = b2) => bit_xor(b1,b2) = 1)) & bool_to_bit: BOOL +-> BIT & dom(bool_to_bit) = BOOL & bool_to_bit = {TRUE|->1}\/{FALSE|->0} & BIT_VECTOR = SET(bt).(bt: NATURAL +-> BIT)-{{}} & bv_size: BIT_VECTOR +-> NATURAL-{0} & dom(bv_size) = BIT_VECTOR & bv_size = %bv.(bv: BIT_VECTOR | size(bv)) & BV_INDX: BIT_VECTOR +-> POW(NATURAL) & dom(BV_INDX) = BIT_VECTOR & BV_INDX = %bv.(bv: BIT_VECTOR | 0..bv_size(bv)-1) & bv_catenate: BIT_VECTOR*BIT_VECTOR +-> BIT_VECTOR & dom(bv_catenate) = BIT_VECTOR*BIT_VECTOR & bv_catenate = %(v1,v2).(v1: BIT_VECTOR & v2: BIT_VECTOR | v1^v2) & bv_sub: BIT_VECTOR*NATURAL*NATURAL +-> BIT_VECTOR & dom(bv_sub) = BIT_VECTOR*NATURAL*NATURAL & bv_sub = %(bv,low,high).(bv: BIT_VECTOR & low: BV_INDX(bv) & high: BV_INDX(bv) & low<=high | low..high<|bv) & bv_zero: NATURAL-{0} +-> BIT_VECTOR & dom(bv_zero) = NATURAL-{0} & bv_zero = %sz.(sz: INTEGER & 0<=sz & not(sz = 0) | (0..sz)*{0}) & bv_one: NATURAL-{0} +-> BIT_VECTOR & dom(bv_one) = NATURAL-{0} & bv_one = %sz.(sz: INTEGER & 0<=sz & not(sz = 0) | (0..sz)*{1}) & bv_not: BIT_VECTOR +-> BIT_VECTOR & dom(bv_not) = BIT_VECTOR & bv_not = %v1.(v1: BIT_VECTOR | %idx.(idx: BV_INDX(v1) | bit_not(v1(idx)))) & bv_and: BIT_VECTOR*BIT_VECTOR +-> BIT_VECTOR & dom(bv_and) = BIT_VECTOR*BIT_VECTOR & bv_and = %(v1,v2).(v1: BIT_VECTOR & v2: BIT_VECTOR & bv_size(v1) = bv_size(v2) | %idx.(idx: BV_INDX(v1) | bit_and(v1(idx),v2(idx)))) & bv_or: BIT_VECTOR*BIT_VECTOR +-> BIT_VECTOR & dom(bv_or) = BIT_VECTOR*BIT_VECTOR & bv_or = %(v1,v2).(v1: BIT_VECTOR & v2: BIT_VECTOR & bv_size(v1) = bv_size(v2) | %idx.(idx: BV_INDX(v1) | bit_or(v1(idx),v2(idx)))) & bv_xor: BIT_VECTOR*BIT_VECTOR +-> BIT_VECTOR & dom(bv_xor) = BIT_VECTOR*BIT_VECTOR & bv_xor = %(v1,v2).(v1: BIT_VECTOR & v2: BIT_VECTOR & bv_size(v1) = bv_size(v2) | %idx.(idx: BV_INDX(v1) | bit_xor(v1(idx),v2(idx)))) & bv_at: BIT_VECTOR*NATURAL +-> BIT & dom(bv_at) = BIT_VECTOR*NATURAL & bv_at = %(v1,idx).(v1: BIT_VECTOR & idx: BV_INDX(v1) | v1(idx)) & bv_set: BIT_VECTOR*NATURAL +-> BIT_VECTOR & dom(bv_set) = BIT_VECTOR*NATURAL & bv_set = %(v1,idx).(v1: BIT_VECTOR & idx: BV_INDX(v1) | v1<+{idx|->1}) & bv_clear: BIT_VECTOR*NATURAL +-> BIT_VECTOR & dom(bv_clear) = BIT_VECTOR*NATURAL & bv_clear = %(v1,idx).(v1: BIT_VECTOR & idx: BV_INDX(v1) | v1<+{idx|->0}) & bv_put: BIT_VECTOR*NATURAL*BIT +-> BIT_VECTOR & dom(bv_put) = BIT_VECTOR*NATURAL*BIT & bv_put = %(v1,idx,bit).(v1: BIT_VECTOR & idx: BV_INDX(v1) & bit: BIT | v1<+{idx|->bit}) & BYTE_WIDTH = 8 & BYTE_INDEX = 0..BYTE_WIDTH-1 & BYTE: POW(BIT_VECTOR) & BYTE = SET(vv).(vv: BIT_VECTOR & bv_size(vv) = BYTE_WIDTH) & BYTE_ZERO: BYTE & BYTE_ZERO = BYTE_INDEX*{0} & is_zeroSCHAR: SCHAR +-> BIT & dom(is_zeroSCHAR) = SCHAR & is_zeroSCHAR = %w1.(w1: SCHAR | bool_to_bit(bool(w1 = 0))) & is_negative: SCHAR +-> BIT & dom(is_negative) = SCHAR & is_negative = %w1.(w1: SCHAR | bool_to_bit(bool(w1+1<=0))) & halfSCHAR: SCHAR +-> SCHAR & dom(halfSCHAR) = SCHAR & halfSCHAR = %ww.(ww: SCHAR | ww mod 16) & add8SCHAR: SCHAR*SCHAR +-> SCHAR*BOOL*BOOL*BOOL*BOOL & dom(add8SCHAR) = SCHAR*SCHAR & add8SCHAR = %(w1,w2).(w1: UCHAR & w2: UCHAR & w1+w2+1<= -128 | 256-(w1+w2),bool(w1+w2+1<=0),TRUE,bool(16<=halfSCHAR(w1)+halfSCHAR(w2)),FALSE)\/%(w1,w2).(w1: UCHAR & w2: UCHAR & not(w1+w2+1<= -128) | (w1+w2) mod 128,bool(w1+w2+1<=0),bool(128<=w1+w2),bool(16<=halfSCHAR(w1)+halfSCHAR(w2)),bool(w1 = 0)) & substract8SCHAR: SCHAR*SCHAR +-> SCHAR*BOOL*BOOL*BOOL*BOOL & dom(substract8SCHAR) = SCHAR*SCHAR & substract8SCHAR = %(w1,w2).(w1: UCHAR & w2: UCHAR & w1-w2+1<= -128 | 256-(w1-w2),bool(w1-w2+1<=0),TRUE,bool(16<=halfSCHAR(w1)-halfSCHAR(w2)),FALSE)\/%(w1,w2).(w1: UCHAR & w2: UCHAR & not(w1-w2+1<= -128) | (w1-w2) mod 128,bool(w1-w2+1<=0),bool(128<=w1-w2),bool(16<=halfSCHAR(w1)-halfSCHAR(w2)),bool(w1 = 0)) & add16SCHAR: SSHORTINT*SSHORTINT +-> SSHORTINT*BOOL*BOOL & dom(add16SCHAR) = SSHORTINT*SSHORTINT & !(w1,w2).(w1: SSHORTINT & w2: SSHORTINT & (w1+w2: INTEGER & 0<=w1+w2) => (w1+w2<=65535 => add16SCHAR(w1,w2) = (w1+w2,bool(w1+w2 = 0))|->FALSE) & (65536<=w1+w2 => add16SCHAR(w1,w2) = (w1+w2-65536,bool(w1+w2 = 65536))|->TRUE)) & andSCHAR: SCHAR*SCHAR +-> SCHAR*BOOL & dom(andSCHAR) = SCHAR*SCHAR & !(w1,w2).(w1: SCHAR & w2: SCHAR & BYTE_TO_SCHAR(bv_and(SCHAR_TO_BYTE(w1),SCHAR_TO_BYTE(w2))): SCHAR => andSCHAR(w1,w2) = BYTE_TO_SCHAR(bv_and(SCHAR_TO_BYTE(w1),SCHAR_TO_BYTE(w2)))|->bool(BYTE_TO_SCHAR(bv_and(SCHAR_TO_BYTE(w1),SCHAR_TO_BYTE(w2))) = 0)) & iorSCHAR: SCHAR*SCHAR +-> SCHAR*BOOL & dom(iorSCHAR) = SCHAR*SCHAR & !(w1,w2).(w1: SCHAR & w2: SCHAR & BYTE_TO_SCHAR(bv_or(SCHAR_TO_BYTE(w1),SCHAR_TO_BYTE(w2))): SCHAR => iorSCHAR(w1,w2) = BYTE_TO_SCHAR(bv_or(SCHAR_TO_BYTE(w1),SCHAR_TO_BYTE(w2)))|->bool(BYTE_TO_SCHAR(bv_or(SCHAR_TO_BYTE(w1),SCHAR_TO_BYTE(w2))) = 0)) & xorSCHAR: SCHAR*SCHAR +-> SCHAR*BOOL & dom(xorSCHAR) = SCHAR*SCHAR & !(w1,w2).(w1: SCHAR & w2: SCHAR & BYTE_TO_SCHAR(bv_xor(SCHAR_TO_BYTE(w1),SCHAR_TO_BYTE(w2))): SCHAR => xorSCHAR(w1,w2) = BYTE_TO_SCHAR(bv_xor(SCHAR_TO_BYTE(w1),SCHAR_TO_BYTE(w2)))|->bool(BYTE_TO_SCHAR(bv_xor(SCHAR_TO_BYTE(w1),SCHAR_TO_BYTE(w2))) = 0)) & bitgetSCHAR: SCHAR*SCHAR_POSITION +-> BIT & dom(bitgetSCHAR) = SCHAR*SCHAR_POSITION & bitgetSCHAR = %(w0,i0).(w0: SCHAR & i0: SCHAR_POSITION & i0 = 7 | 1-(w0+2**7)/128 mod 2)\/%(w0,i0).(w0: SCHAR & i0: SCHAR_POSITION & not(i0 = 7) | (w0+2**7)/2**i0 mod 2) & bitsetSCHAR: SCHAR*SCHAR_POSITION +-> SCHAR & dom(bitsetSCHAR) = SCHAR*SCHAR_POSITION & bitsetSCHAR = %(w0,i0).(w0: SCHAR & i0: SCHAR_POSITION & bitgetSCHAR(w0,i0) = 1 | w0)\/%(w0,i0).(w0: SCHAR & i0: SCHAR_POSITION & not(bitgetSCHAR(w0,i0) = 1) | w0+2**i0) & bitclearSCHAR: SCHAR*SCHAR_POSITION +-> SCHAR & dom(bitclearSCHAR) = SCHAR*SCHAR_POSITION & bitclearSCHAR = %(w0,i0).(w0: SCHAR & i0: SCHAR_POSITION & bitgetSCHAR(w0,i0) = 0 | w0)\/%(w0,i0).(w0: SCHAR & i0: SCHAR_POSITION & not(bitgetSCHAR(w0,i0) = 0) & i0 = 7 | w0+128)\/%(w0,i0).(w0: SCHAR & i0: SCHAR_POSITION & not(bitgetSCHAR(w0,i0) = 0) & not(i0 = 7) | w0-2**i0) & complementSCHAR: SCHAR +-> SCHAR & dom(complementSCHAR) = SCHAR & complementSCHAR = %w0.(w0: SCHAR | 255-w0) & swapSCHAR: SCHAR +-> SCHAR & dom(swapSCHAR) = SCHAR & !w0.(w0: SCHAR & SCHAR_TO_BYTE(w0): BIT_VECTOR => swapSCHAR(w0) = BYTE_TO_SCHAR({0|->SCHAR_TO_BYTE(w0)(4)}\/{1|->SCHAR_TO_BYTE(w0)(5)}\/{2|->SCHAR_TO_BYTE(w0)(6)}\/{3|->SCHAR_TO_BYTE(w0)(7)}\/{4|->SCHAR_TO_BYTE(w0)(0)}\/{5|->SCHAR_TO_BYTE(w0)(1)}\/{6|->SCHAR_TO_BYTE(w0)(2)}\/{7|->SCHAR_TO_BYTE(w0)(3)})) & rotateleftSCHAR: SCHAR +-> SCHAR*BOOL & dom(rotateleftSCHAR) = SCHAR & !w0.(w0: SCHAR & SCHAR_TO_BYTE(w0): BIT_VECTOR => rotateleftSCHAR(w0) = BYTE_TO_SCHAR({0|->SCHAR_TO_BYTE(w0)(7)}\/{1|->SCHAR_TO_BYTE(w0)(0)}\/{2|->SCHAR_TO_BYTE(w0)(1)}\/{3|->SCHAR_TO_BYTE(w0)(2)}\/{4|->SCHAR_TO_BYTE(w0)(3)}\/{5|->SCHAR_TO_BYTE(w0)(4)}\/{6|->SCHAR_TO_BYTE(w0)(5)}\/{7|->SCHAR_TO_BYTE(w0)(6)})|->bool(SCHAR_TO_BYTE(w0)(7) = 1)) & rotaterightSCHAR: SCHAR +-> SCHAR*BOOL & dom(rotaterightSCHAR) = SCHAR & !w0.(w0: SCHAR & SCHAR_TO_BYTE(w0): BIT_VECTOR => rotaterightSCHAR(w0) = BYTE_TO_SCHAR({0|->SCHAR_TO_BYTE(w0)(1)}\/{1|->SCHAR_TO_BYTE(w0)(2)}\/{2|->SCHAR_TO_BYTE(w0)(3)}\/{3|->SCHAR_TO_BYTE(w0)(4)}\/{4|->SCHAR_TO_BYTE(w0)(5)}\/{5|->SCHAR_TO_BYTE(w0)(6)}\/{6|->SCHAR_TO_BYTE(w0)(7)}\/{7|->SCHAR_TO_BYTE(w0)(0)})|->bool(SCHAR_TO_BYTE(w0)(0) = 1)) & "`Component properties'" & REG16_TO_REG8: (1..5)*{id_reg_16} +-> (1..18)*{id_reg_8}*((1..18)*{id_reg_8}) & dom(REG16_TO_REG8) = (1..5)*{id_reg_16} & !(r1,r2,r3).(r1: (1..5)*{id_reg_16} & r2: (1..18)*{id_reg_8} & r3: (1..18)*{id_reg_8} => (r1 = 1|->id_reg_16 => REG16_TO_REG8(r1) = 5|->id_reg_8|->(6|->id_reg_8)) & (r1 = 2|->id_reg_16 => REG16_TO_REG8(r1) = 9|->id_reg_8|->(10|->id_reg_8)) & (r1 = 3|->id_reg_16 => REG16_TO_REG8(r1) = 13|->id_reg_8|->(14|->id_reg_8)) & (r1 = 5|->id_reg_16 => REG16_TO_REG8(r1) = 1|->id_reg_8|->(2|->id_reg_8))) & REG8_TO_REG16 = REG16_TO_REG8~ & update_flag_register = %(rgs8_$0,c0$0,n_add_sub$0,pv2$0,h4$0,z6$0,s7$0).(rgs8_$0: (1..18)*{id_reg_8} +-> SCHAR & dom(rgs8_$0) = (1..18)*{id_reg_8} & c0$0: BOOL & n_add_sub$0: BOOL & pv2$0: BOOL & h4$0: BOOL & z6$0: BOOL & s7$0: BOOL | rgs8_$0<+{2|->id_reg_8|->BYTE_TO_SCHAR(SCHAR_TO_BYTE(rgs8_$0(2|->id_reg_8))<+({7|->bool_to_bit(s7$0)}\/{6|->bool_to_bit(z6$0)}\/{4|->bool_to_bit(h4$0)}\/{2|->bool_to_bit(pv2$0)}\/{1|->bool_to_bit(n_add_sub$0)}\/{0|->bool_to_bit(c0$0)}))}) & get_new_flag_register = %(rgs8_$0,c0$0,n_add_sub$0,pv2$0,h4$0,z6$0,s7$0).(rgs8_$0: (1..18)*{id_reg_8} +-> SCHAR & dom(rgs8_$0) = (1..18)*{id_reg_8} & c0$0: BOOL & n_add_sub$0: BOOL & pv2$0: BOOL & h4$0: BOOL & z6$0: BOOL & s7$0: BOOL | 2|->id_reg_8|->BYTE_TO_SCHAR(SCHAR_TO_BYTE(rgs8_$0(2|->id_reg_8))<+({7|->bool_to_bit(s7$0)}\/{6|->bool_to_bit(z6$0)}\/{4|->bool_to_bit(h4$0)}\/{2|->bool_to_bit(pv2$0)}\/{1|->bool_to_bit(n_add_sub$0)}\/{0|->bool_to_bit(c0$0)}))) & (1..18)*{id_reg_8}: FIN(NATURAL*{id_reg_8}) & not((1..18)*{id_reg_8} = {}) & (1..5)*{id_reg_16}: FIN(NATURAL*{id_reg_16}) & not((1..5)*{id_reg_16} = {}));
  ("`Included,imported and extended machines invariants'" & stack: USHORTINT +-> SCHAR & dom(stack) = USHORTINT & mem: USHORTINT +-> SCHAR & dom(mem) = USHORTINT & "`Seen and used machines assertions'" & NB_SCHARS = 256 & !n0.(n0: SCHAR => 0<=n0) & !n0.(n0: SCHAR => n0<=255) & 2**16 = 65536 & INSTRUCTION_NEXT: USHORTINT +-> USHORTINT & dom(INSTRUCTION_NEXT) = USHORTINT & 0 = SCHAR_TO_SSHORTINT(0,0) & bit_not(0) = 1 & bit_not(1) = 0 & !bb.(bb: BIT => bit_not(bit_not(bb)) = bb) & bit_and(0,0) = 0 & bit_and(0,1) = 0 & bit_and(1,0) = 0 & bit_and(1,1) = 1 & !(b1,b2).(b1: BIT & b2: BIT => bit_and(b1,b2) = bit_and(b2,b1)) & !(b1,b2).(b1: BIT & b2: BIT & bit_and(b1,b2) = 1 => bit_and(b2,b1) = 1) & !(b1,b2).(b1: BIT & b2: BIT & bit_and(b1,b2) = 0 => bit_and(b2,b1) = 0) & !(b1,b2,b3).(b1: BIT & b2: BIT & b3: BIT => bit_and(b1,bit_and(b2,b3)) = bit_and(bit_and(b1,b2),b3)) & !b1.(b1: BIT => bit_and(b1,1) = b1) & !b1.(b1: BIT => bit_and(b1,0) = 0) & bit_or(0,0) = 0 & bit_or(0,1) = 1 & bit_or(1,0) = 1 & bit_or(1,1) = 1 & !(b1,b2).(b1: BIT & b2: BIT => bit_or(b1,b2) = bit_or(b2,b1)) & !(b1,b2).(b1: BIT & b2: BIT & bit_or(b1,b2) = 1 => bit_or(b2,b1) = 1) & !(b1,b2).(b1: BIT & b2: BIT & bit_or(b1,b2) = 0 => bit_or(b2,b1) = 0) & !(b1,b2).(b1: BIT & b2: BIT & bit_or(b1,0) = 1 => b1 = 1) & !(b1,b2).(b1: BIT & b2: BIT & bit_or(b1,0) = 0 => b1 = 0) & !(b1,b2,b3).(b1: BIT & b2: BIT & b3: BIT => bit_or(b1,bit_or(b2,b3)) = bit_or(bit_or(b1,b2),b3)) & !(b1,b2,b3).(b1: BIT & b2: BIT & b3: BIT & bit_or(b1,b2) = 1 => bit_or(b1,bit_or(b2,b3)) = 1) & !(b1,b2,b3).(b1: BIT & b2: BIT & b3: BIT & bit_or(b1,b2) = 1 => bit_or(b1,bit_or(b2,b3)) = bit_or(1,b3)) & !b1.(b1: BIT => bit_or(b1,1) = 1) & !b1.(b1: BIT => bit_or(b1,0) = b1) & !b1.(b1: BIT => bit_or(1,b1) = 1) & !b1.(b1: BIT => bit_or(0,b1) = b1) & bit_xor(0,0) = 0 & bit_xor(0,1) = 1 & bit_xor(1,0) = 1 & bit_xor(1,1) = 0 & !(b1,b2).(b1: BIT & b2: BIT => bit_xor(b1,b2) = bit_xor(b2,b1)) & !(b1,b2).(b1: BIT & b2: BIT & bit_xor(b1,b2) = 1 => bit_xor(b2,b1) = 1) & !(b1,b2).(b1: BIT & b2: BIT & bit_xor(b1,b2) = 0 => bit_xor(b2,b1) = 0) & !(b1,b2,b3).(b1: BIT & b2: BIT & b3: BIT => bit_xor(b1,bit_xor(b2,b3)) = bit_xor(bit_xor(b1,b2),b3)) & !(b1,b2,b3).(b1: BIT & b2: BIT & b3: BIT & bit_xor(b1,b2) = 1 => bit_xor(b1,bit_xor(b2,b3)) = 1) & !(b1,b2,b3).(b1: BIT & b2: BIT & b3: BIT & bit_xor(b1,b2) = 1 => bit_xor(b1,bit_xor(b2,b3)) = bit_xor(1,b3)) & !bb.(bb: BIT => bit_xor(bb,bb) = 0) & bool_to_bit(TRUE) = 1 & bool_to_bit(FALSE) = 0 & !bb.(bb: BIT => bb = 0 or bb = 1) & !bb.(bb: BIT & not(bb = 0) => bb = 1) & !bb.(bb: BIT & not(bb = 1) => bb = 0) & !(bv,indx).(bv: BIT_VECTOR & indx: BV_INDX(bv) => bv_xor(bv,bv)(indx) = bv_zero(bv_size(bv))(indx)) & !(v1,v2,indx).(v1: BIT_VECTOR & v2: BIT_VECTOR & bv_size(v1) = bv_size(v2) & indx: BV_INDX(v1) => bv_xor(v1,v2)(indx) = bv_xor(v2,v1)(indx)) & !(v1,v2).(v1: BIT_VECTOR & v2: BIT_VECTOR & bv_size(v1) = bv_size(v2) => bv_size(bv_xor(v1,v2)) = bv_size(v2)) & !(v1,v2).(v1: BIT_VECTOR & v2: BIT_VECTOR & bv_size(v1) = bv_size(v2) => bv_size(bv_xor(v1,v2)) = bv_size(v1)) & !(bv,indx).(bv: BIT_VECTOR & indx: BV_INDX(bv) => bv_or(bv,bv_zero(bv_size(bv)))(indx) = bv(indx)) & !(bv,indx).(bv: BIT_VECTOR & indx: BV_INDX(bv) => bv_or(bv,bv_one(bv_size(bv)))(indx) = bv_one(bv_size(bv))(indx)) & !(v1,v2,v3,indx).(v1: BIT_VECTOR & v2: BIT_VECTOR & v3: BIT_VECTOR & bv_size(v1) = bv_size(v2) & bv_size(v1) = bv_size(v3) & indx: BV_INDX(v1) => bv_or(v1,bv_or(v2,v3))(indx) = bv_or(bv_or(v1,v2),v3)(indx)) & !(v1,v2).(v1: BIT_VECTOR & v2: BIT_VECTOR & bv_size(v1) = bv_size(v2) => bv_size(bv_or(v1,v2)) = bv_size(v2)) & !(v1,v2,indx).(v1: BIT_VECTOR & v2: BIT_VECTOR & bv_size(v1) = bv_size(v2) & indx: BV_INDX(v1) => bv_or(v1,v2)(indx) = bv_or(v2,v1)(indx)) & !(v1,v2).(v1: BIT_VECTOR & v2: BIT_VECTOR & bv_size(v1) = bv_size(v2) => bv_size(bv_or(v1,v2)) = bv_size(v1)) & !(bv,indx).(bv: BIT_VECTOR & indx: BV_INDX(bv) => bv_and(bv,bv_one(bv_size(bv)))(indx) = bv(indx)) & !(bv,indx).(bv: BIT_VECTOR & indx: BV_INDX(bv) => bv_and(bv,bv_zero(bv_size(bv)))(indx) = bv_zero(bv_size(bv))(indx)) & !(v1,v2,v3,indx).(v1: BIT_VECTOR & v2: BIT_VECTOR & v3: BIT_VECTOR & bv_size(v1) = bv_size(v2) & bv_size(v1) = bv_size(v3) & indx: BV_INDX(v1) => bv_and(v1,bv_and(v2,v3))(indx) = bv_and(bv_and(v1,v2),v3)(indx)) & !(v1,v2,indx).(v1: BIT_VECTOR & v2: BIT_VECTOR & bv_size(v1) = bv_size(v2) & indx: BV_INDX(v1) => bv_and(v1,v2)(indx) = bv_and(v2,v1)(indx)) & !(v1,v2).(v1: BIT_VECTOR & v2: BIT_VECTOR & bv_size(v1) = bv_size(v2) => bv_size(bv_and(v1,v2)) = bv_size(v2)) & !(bv,low,high).(bv: BIT_VECTOR & low: BV_INDX(bv) & high: BV_INDX(bv) & low<=high => bv_size(bv_sub(bv,low,high)) = high-low) & !(v1,v2).(v1: BIT_VECTOR & v2: BIT_VECTOR => bv_size(bv_catenate(v1,v2)) = bv_size(v1)+bv_size(v2)) & !(bv,indx).(bv: BIT_VECTOR & indx: BV_INDX(bv) => bv_not(bv_not(bv))(indx) = bv(indx)) & !bv.(bv: BIT_VECTOR => bv_size(bv_not(bv)) = bv_size(bv)) & dom(add8SCHAR) = SCHAR*SCHAR & ran(add8SCHAR): POW(SCHAR*BOOL*BOOL*BOOL*BOOL) & dom(substract8SCHAR) = SCHAR*SCHAR & ran(substract8SCHAR): POW(SCHAR*BOOL*BOOL*BOOL*BOOL) & dom(andSCHAR) = SCHAR*SCHAR & ran(andSCHAR): POW(SCHAR*BOOL) & dom(iorSCHAR) = SCHAR*SCHAR & ran(iorSCHAR): POW(SCHAR*BOOL) & dom(xorSCHAR) = SCHAR*SCHAR & ran(xorSCHAR): POW(SCHAR*BOOL) & dom(bitclearSCHAR) = SCHAR*SCHAR_POSITION & ran(bitclearSCHAR): POW(SCHAR) & dom(bitsetSCHAR) = SCHAR*SCHAR_POSITION & ran(bitsetSCHAR): POW(SCHAR) & dom(bitgetSCHAR) = SCHAR*SCHAR_POSITION & ran(bitgetSCHAR): POW(BIT) & dom(complementSCHAR) = SCHAR & ran(complementSCHAR): POW(SCHAR) & dom(swapSCHAR) = SCHAR & ran(swapSCHAR): POW(SCHAR) & ran(rotateleftSCHAR): POW(SCHAR*BOOL) & dom(rotateleftSCHAR) = SCHAR & dom(rotaterightSCHAR) = SCHAR & ran(rotaterightSCHAR): POW(SCHAR*BOOL) & !(w0,idx).(w0: SCHAR & idx: SCHAR_POSITION => bitgetSCHAR(w0,idx) = SCHAR_TO_BYTE(w0)(idx)) & max(SCHAR) = 127 & 2**15 = 32768 & 2**14 = 16384 & 2**13 = 8192 & 2**12 = 4096 & 2**11 = 2048 & 2**10 = 1024 & 2**9 = 512 & 2**8 = 256 & 2**7 = 128 & 2**6 = 64 & 2**5 = 32 & 2**4 = 16 & 2**3 = 8 & 2**2 = 4 & 2**1 = 2 & 2**0 = 1);
  ("`Local hypotheses'" & stack$0: USHORTINT +-> SCHAR & dom(stack$0) = USHORTINT & mem$0: USHORTINT +-> SCHAR & dom(mem$0) = USHORTINT & iy$0: SSHORTINT & i_o_ports$0: UCHAR +-> SCHAR & dom(i_o_ports$0) = UCHAR & ix$0: SSHORTINT & sp$0: SSHORTINT & pc$0: USHORTINT & rgs8$0: (1..18)*{id_reg_8} +-> SCHAR & dom(rgs8$0) = (1..18)*{id_reg_8} & ran(rgs8$0) = SCHAR);
  "`Check that the invariant (sp: USHORTINT) is established by the initialisation - ref 3.3'";
  (sp$0: USHORTINT);
  "`Check that the invariant (ix: USHORTINT) is established by the initialisation - ref 3.3'";
  (ix$0: USHORTINT);
  "`Check that the invariant (iy: USHORTINT) is established by the initialisation - ref 3.3'";
  (iy$0: USHORTINT);
  ("`Component invariant'" & stack: USHORTINT +-> SCHAR & dom(stack) = USHORTINT & rgs8: (1..18)*{id_reg_8} +-> SCHAR & dom(rgs8) = (1..18)*{id_reg_8} & pc: USHORTINT & sp: USHORTINT & ix: USHORTINT & iy: USHORTINT & i_o_ports: UCHAR +-> SCHAR & dom(i_o_ports) = UCHAR);
  "`Check assertion (mem(SSHORTINT_TO_USHORTINT(iy)): SCHAR) deduction - ref 3.2, 4.2, 5.3'";
  (mem(SSHORTINT_TO_USHORTINT(iy)): SCHAR);
  "`Check assertion (mem(SSHORTINT_TO_USHORTINT(ix)): SCHAR) deduction - ref 3.2, 4.2, 5.3'";
  (mem(SSHORTINT_TO_USHORTINT(ix)): SCHAR);
  "`Check assertion (mem(SSHORTINT_TO_USHORTINT(sp)): SCHAR) deduction - ref 3.2, 4.2, 5.3'";
  (mem(SSHORTINT_TO_USHORTINT(sp)): SCHAR);
  "`Check assertion (mem(SSHORTINT_TO_USHORTINT(mem(SSHORTINT_TO_USHORTINT(SCHAR_TO_SSHORTINT(rgs8(a0),rgs8(f0)))))): SCHAR) deduction - ref 3.2, 4.2, 5.3'";
  (mem(SSHORTINT_TO_USHORTINT(mem(SSHORTINT_TO_USHORTINT(SCHAR_TO_SSHORTINT(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8)))))): SCHAR);
  "`Check assertion (mem(SSHORTINT_TO_USHORTINT(SCHAR_TO_SSHORTINT(rgs8(a0),rgs8(f0)))): SCHAR) deduction - ref 3.2, 4.2, 5.3'";
  (mem(SSHORTINT_TO_USHORTINT(SCHAR_TO_SSHORTINT(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8)))): SCHAR);
  "`Check assertion (mem(SSHORTINT_TO_USHORTINT(mem(SSHORTINT_TO_USHORTINT(SCHAR_TO_SSHORTINT(rgs8(h0),rgs8(l0)))))): SCHAR) deduction - ref 3.2, 4.2, 5.3'";
  (mem(SSHORTINT_TO_USHORTINT(mem(SSHORTINT_TO_USHORTINT(SCHAR_TO_SSHORTINT(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))))): SCHAR);
  "`Check assertion (mem(SSHORTINT_TO_USHORTINT(SCHAR_TO_SSHORTINT(rgs8(h0),rgs8(l0)))): SCHAR) deduction - ref 3.2, 4.2, 5.3'";
  (mem(SSHORTINT_TO_USHORTINT(SCHAR_TO_SSHORTINT(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))): SCHAR);
  "`Check assertion (mem(SSHORTINT_TO_USHORTINT(mem(SSHORTINT_TO_USHORTINT(SCHAR_TO_SSHORTINT(rgs8(d0),rgs8(e0)))))): SCHAR) deduction - ref 3.2, 4.2, 5.3'";
  (mem(SSHORTINT_TO_USHORTINT(mem(SSHORTINT_TO_USHORTINT(SCHAR_TO_SSHORTINT(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))))): SCHAR);
  "`Check assertion (mem(SSHORTINT_TO_USHORTINT(SCHAR_TO_SSHORTINT(rgs8(d0),rgs8(e0)))): SCHAR) deduction - ref 3.2, 4.2, 5.3'";
  (mem(SSHORTINT_TO_USHORTINT(SCHAR_TO_SSHORTINT(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))): SCHAR);
  "`Check assertion (mem(SSHORTINT_TO_USHORTINT(mem(SSHORTINT_TO_USHORTINT(SCHAR_TO_SSHORTINT(rgs8(b0),rgs8(c0)))))): SCHAR) deduction - ref 3.2, 4.2, 5.3'";
  (mem(SSHORTINT_TO_USHORTINT(mem(SSHORTINT_TO_USHORTINT(SCHAR_TO_SSHORTINT(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))))): SCHAR);
  "`Check assertion (mem(SSHORTINT_TO_USHORTINT(SCHAR_TO_SSHORTINT(rgs8(b0),rgs8(c0)))): SCHAR) deduction - ref 3.2, 4.2, 5.3'";
  (mem(SSHORTINT_TO_USHORTINT(SCHAR_TO_SSHORTINT(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))): SCHAR);
  ("`Local hypotheses'" & vec: BYTE & in0: 0..7);
  "`Check assertion (!(vec,in0).(vec: BYTE & in0: 0..7 => bitgetSCHAR(BYTE_TO_SCHAR(vec),in0) = vec(in0))) deduction - ref 3.2, 4.2, 5.3'";
  (bitgetSCHAR(BYTE_TO_SCHAR(vec),in0) = vec(in0));
  "`Check assertion (INSTRUCTION_NEXT(13) = 14) deduction - ref 3.2, 4.2, 5.3'";
  (INSTRUCTION_NEXT(13) = 14);
  "`Check assertion (INSTRUCTION_NEXT(12) = 13) deduction - ref 3.2, 4.2, 5.3'";
  (INSTRUCTION_NEXT(12) = 13);
  "`Check assertion (INSTRUCTION_NEXT(11) = 12) deduction - ref 3.2, 4.2, 5.3'";
  (INSTRUCTION_NEXT(11) = 12);
  "`Check assertion (INSTRUCTION_NEXT(10) = 11) deduction - ref 3.2, 4.2, 5.3'";
  (INSTRUCTION_NEXT(10) = 11);
  "`Check assertion (INSTRUCTION_NEXT(9) = 10) deduction - ref 3.2, 4.2, 5.3'";
  (INSTRUCTION_NEXT(9) = 10);
  "`Check assertion (INSTRUCTION_NEXT(8) = 9) deduction - ref 3.2, 4.2, 5.3'";
  (INSTRUCTION_NEXT(8) = 9);
  "`Check assertion (INSTRUCTION_NEXT(7) = 8) deduction - ref 3.2, 4.2, 5.3'";
  (INSTRUCTION_NEXT(7) = 8);
  "`Check assertion (INSTRUCTION_NEXT(6) = 7) deduction - ref 3.2, 4.2, 5.3'";
  (INSTRUCTION_NEXT(6) = 7);
  "`Check assertion (INSTRUCTION_NEXT(5) = 6) deduction - ref 3.2, 4.2, 5.3'";
  (INSTRUCTION_NEXT(5) = 6);
  "`Check assertion (INSTRUCTION_NEXT(4) = 5) deduction - ref 3.2, 4.2, 5.3'";
  (INSTRUCTION_NEXT(4) = 5);
  "`Check assertion (INSTRUCTION_NEXT(3) = 4) deduction - ref 3.2, 4.2, 5.3'";
  (INSTRUCTION_NEXT(3) = 4);
  "`Check assertion (INSTRUCTION_NEXT(2) = 3) deduction - ref 3.2, 4.2, 5.3'";
  (INSTRUCTION_NEXT(2) = 3);
  "`Check assertion (INSTRUCTION_NEXT(1) = 2) deduction - ref 3.2, 4.2, 5.3'";
  (INSTRUCTION_NEXT(1) = 2);
  "`Check assertion (INSTRUCTION_NEXT(0) = 1) deduction - ref 3.2, 4.2, 5.3'";
  (INSTRUCTION_NEXT(0) = 1);
  "`Check assertion (ran(rgs8) <: SCHAR) deduction - ref 3.2, 4.2, 5.3'";
  (ran(rgs8): POW(SCHAR));
  "`Check assertion (ran(mem) <: SCHAR) deduction - ref 3.2, 4.2, 5.3'";
  (ran(mem): POW(SCHAR));
  "`Check assertion (ran(stack) <: SCHAR) deduction - ref 3.2, 4.2, 5.3'";
  (ran(stack): POW(SCHAR));
  ("`Component assertions'" & dom(stack) = USHORTINT & ran(stack): POW(SCHAR) & ran(mem): POW(SCHAR) & dom(mem) = USHORTINT & ran(rgs8): POW(SCHAR) & dom(rgs8) = (1..18)*{id_reg_8} & INSTRUCTION_NEXT(0) = 1 & INSTRUCTION_NEXT(1) = 2 & INSTRUCTION_NEXT(2) = 3 & INSTRUCTION_NEXT(3) = 4 & INSTRUCTION_NEXT(4) = 5 & INSTRUCTION_NEXT(5) = 6 & INSTRUCTION_NEXT(6) = 7 & INSTRUCTION_NEXT(7) = 8 & INSTRUCTION_NEXT(8) = 9 & INSTRUCTION_NEXT(9) = 10 & INSTRUCTION_NEXT(10) = 11 & INSTRUCTION_NEXT(11) = 12 & INSTRUCTION_NEXT(12) = 13 & INSTRUCTION_NEXT(13) = 14 & !(vec,in0).(vec: BYTE & in0: 0..7 => bitgetSCHAR(BYTE_TO_SCHAR(vec),in0) = vec(in0)) & mem(SSHORTINT_TO_USHORTINT(SCHAR_TO_SSHORTINT(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))): SCHAR & mem(SSHORTINT_TO_USHORTINT(mem(SSHORTINT_TO_USHORTINT(SCHAR_TO_SSHORTINT(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))))): SCHAR & mem(SSHORTINT_TO_USHORTINT(SCHAR_TO_SSHORTINT(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))): SCHAR & mem(SSHORTINT_TO_USHORTINT(mem(SSHORTINT_TO_USHORTINT(SCHAR_TO_SSHORTINT(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))))): SCHAR & mem(SSHORTINT_TO_USHORTINT(SCHAR_TO_SSHORTINT(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))): SCHAR & mem(SSHORTINT_TO_USHORTINT(mem(SSHORTINT_TO_USHORTINT(SCHAR_TO_SSHORTINT(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))))): SCHAR & mem(SSHORTINT_TO_USHORTINT(SCHAR_TO_SSHORTINT(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8)))): SCHAR & mem(SSHORTINT_TO_USHORTINT(mem(SSHORTINT_TO_USHORTINT(SCHAR_TO_SSHORTINT(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8)))))): SCHAR & mem(SSHORTINT_TO_USHORTINT(sp)): SCHAR & mem(SSHORTINT_TO_USHORTINT(ix)): SCHAR & mem(SSHORTINT_TO_USHORTINT(iy)): SCHAR);
  ("`LD_r_r_ preconditions in this component'" & rr: (1..18)*{id_reg_8} & rr_: (1..18)*{id_reg_8});
  "`Check that the invariant (rgs8: id_reg_8 --> SCHAR) is preserved by the operation - ref 3.4'";
  (rgs8<+{rr|->rgs8(rr_)}: (1..18)*{id_reg_8} +-> SCHAR);
  (dom(rgs8<+{rr|->rgs8(rr_)}) = (1..18)*{id_reg_8});
  "`Check that the invariant (pc: USHORTINT) is preserved by the operation - ref 3.4'";
  (INSTRUCTION_NEXT(pc): USHORTINT);
  ("`LD_r_n_ preconditions in this component'" & rr: (1..18)*{id_reg_8} & n0: SCHAR);
  (rgs8<+{rr|->n0}: (1..18)*{id_reg_8} +-> SCHAR);
  (dom(rgs8<+{rr|->n0}) = (1..18)*{id_reg_8});
  ("`LD_r_9HL0 preconditions in this component'" & rr: (1..18)*{id_reg_8});
  ("`Local hypotheses'" & address: SSHORTINT & address = SCHAR_TO_SSHORTINT(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)));
  (rgs8<+{rr|->mem(address)}: (1..18)*{id_reg_8} +-> SCHAR);
  (dom(rgs8<+{rr|->mem(address)}) = (1..18)*{id_reg_8});
  ("`LD_r_9IX_d0 preconditions in this component'" & rr: (1..18)*{id_reg_8} & dd: SCHAR);
  ("`Local hypotheses'" & address: SSHORTINT & iszero: BOOL & overflow: BOOL & address,iszero,overflow = add16SCHAR(ix,SCHAR_TO_SSHORTINT(0,dd)));
  ("`LD_r_9IY_d0 preconditions in this component'" & rr: (1..18)*{id_reg_8} & dd: SCHAR);
  ("`Local hypotheses'" & address: SSHORTINT & iszero: BOOL & overflow: BOOL & address,iszero,overflow = add16SCHAR(iy,SCHAR_TO_SSHORTINT(0,dd)));
  ("`LD_9HL0_r preconditions in this component'" & rr: (1..18)*{id_reg_8});
  ("`Local hypotheses'" & address: USHORTINT & address = SSHORTINT_TO_USHORTINT(mem(SSHORTINT_TO_USHORTINT(SCHAR_TO_SSHORTINT(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))) & not(address: dom(stack)));
  "`Check preconditions of called operation, or While loop construction, or Assert predicates'";
  (rgs8(rr): SCHAR);
  ("`Local hypotheses'" & address: USHORTINT & address = SSHORTINT_TO_USHORTINT(mem(SSHORTINT_TO_USHORTINT(SCHAR_TO_SSHORTINT(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))) & not(address: dom(stack)) & mem<+{address|->rgs8(rr)}: USHORTINT +-> SCHAR & dom(mem<+{address|->rgs8(rr)}) = USHORTINT);
  ("`LD_9IX_d0_r preconditions in this component'" & dd: SCHAR & rr: (1..18)*{id_reg_8});
  ("`Local hypotheses'" & address: SSHORTINT & iszero: BOOL & overflow: BOOL & address,iszero,overflow = add16SCHAR(ix,SCHAR_TO_SSHORTINT(0,dd)) & not(address: dom(stack)));
  (address: USHORTINT);
  ("`Local hypotheses'" & address: SSHORTINT & iszero: BOOL & overflow: BOOL & address,iszero,overflow = add16SCHAR(ix,SCHAR_TO_SSHORTINT(0,dd)) & not(address: dom(stack)) & mem<+{address|->rgs8(rr)}: USHORTINT +-> SCHAR & dom(mem<+{address|->rgs8(rr)}) = USHORTINT);
  ("`LD_9IY_d0_r preconditions in this component'" & dd: SCHAR & rr: (1..18)*{id_reg_8});
  ("`Local hypotheses'" & address: SSHORTINT & iszero: BOOL & overflow: BOOL & address,iszero,overflow = add16SCHAR(iy,SCHAR_TO_SSHORTINT(0,dd)) & mem<+{address|->rgs8(rr)}: USHORTINT +-> SCHAR & dom(mem<+{address|->rgs8(rr)}) = USHORTINT);
  ("`LD_9HL0_n preconditions in this component'" & n0: SCHAR);
  ("`Local hypotheses'" & address: USHORTINT & address = mem(SSHORTINT_TO_USHORTINT(SCHAR_TO_SSHORTINT(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & not(address: dom(stack)) & mem<+{address|->n0}: USHORTINT +-> SCHAR & dom(mem<+{address|->n0}) = USHORTINT);
  ("`LD_9IX_d0_n preconditions in this component'" & dd: SCHAR & n0: SCHAR);
  ("`Local hypotheses'" & address: SSHORTINT & iszero: BOOL & overflow: BOOL & address,iszero,overflow = add16SCHAR(ix,SCHAR_TO_SSHORTINT(0,dd)) & not(address: dom(stack)) & mem<+{address|->n0}: USHORTINT +-> SCHAR & dom(mem<+{address|->n0}) = USHORTINT);
  ("`LD_9IY_d0_n preconditions in this component'" & dd: SCHAR & n0: SCHAR);
  ("`Local hypotheses'" & address: SSHORTINT & iszero: BOOL & overflow: BOOL & address,iszero,overflow = add16SCHAR(iy,SCHAR_TO_SSHORTINT(0,dd)) & mem<+{address|->n0}: USHORTINT +-> SCHAR & dom(mem<+{address|->n0}) = USHORTINT);
  ("`Local hypotheses'" & address: USHORTINT & address = SSHORTINT_TO_USHORTINT(mem(SSHORTINT_TO_USHORTINT(SCHAR_TO_SSHORTINT(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))));
  (rgs8<+{1|->id_reg_8|->mem(address)}: (1..18)*{id_reg_8} +-> SCHAR);
  (dom(rgs8<+{1|->id_reg_8|->mem(address)}) = (1..18)*{id_reg_8});
  ("`Local hypotheses'" & address: USHORTINT & address = SSHORTINT_TO_USHORTINT(mem(SSHORTINT_TO_USHORTINT(SCHAR_TO_SSHORTINT(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))));
  ("`LD_A_9nn0 preconditions in this component'" & nn: USHORTINT);
  (rgs8<+{1|->id_reg_8|->mem(nn)}: (1..18)*{id_reg_8} +-> SCHAR);
  (dom(rgs8<+{1|->id_reg_8|->mem(nn)}) = (1..18)*{id_reg_8});
  ("`Local hypotheses'" & address: USHORTINT & address = SSHORTINT_TO_USHORTINT(mem(SSHORTINT_TO_USHORTINT(SCHAR_TO_SSHORTINT(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))) & not(address: dom(stack)));
  (rgs8(1|->id_reg_8): SCHAR);
  ("`Local hypotheses'" & address: USHORTINT & address = SSHORTINT_TO_USHORTINT(mem(SSHORTINT_TO_USHORTINT(SCHAR_TO_SSHORTINT(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))) & not(address: dom(stack)) & mem<+{address|->rgs8(1|->id_reg_8)}: USHORTINT +-> SCHAR & dom(mem<+{address|->rgs8(1|->id_reg_8)}) = USHORTINT);
  ("`Local hypotheses'" & address: USHORTINT & address = SSHORTINT_TO_USHORTINT(mem(SSHORTINT_TO_USHORTINT(SCHAR_TO_SSHORTINT(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))) & not(address: dom(stack)));
  ("`Local hypotheses'" & address: USHORTINT & address = SSHORTINT_TO_USHORTINT(mem(SSHORTINT_TO_USHORTINT(SCHAR_TO_SSHORTINT(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))) & not(address: dom(stack)) & mem<+{address|->rgs8(1|->id_reg_8)}: USHORTINT +-> SCHAR & dom(mem<+{address|->rgs8(1|->id_reg_8)}) = USHORTINT);
  ("`LD_9nn0_A preconditions in this component'" & nn: USHORTINT & not(nn: dom(stack)));
  ("`Local hypotheses'" & mem<+{nn|->rgs8(1|->id_reg_8)}: USHORTINT +-> SCHAR & dom(mem<+{nn|->rgs8(1|->id_reg_8)}) = USHORTINT);
  ("`LD_dd_nn preconditions in this component'" & dd: (1..5)*{id_reg_16} & nn: SSHORTINT & not(dd = 5|->id_reg_16));
  ("`Local hypotheses'" & dd = 4|->id_reg_16);
  "`Check that the invariant (sp: USHORTINT) is preserved by the operation - ref 3.4'";
  (nn: USHORTINT);
  ("`Local hypotheses'" & not(dd = 4|->id_reg_16) & rh: (1..18)*{id_reg_8} & rl: (1..18)*{id_reg_8} & w1: SCHAR & w2: SCHAR & rh,rl = REG16_TO_REG8(dd) & {rh|->w1}\/{rl|->w2}: (1..18)*{id_reg_8} +-> SCHAR & dom({rh|->w1}\/{rl|->w2}) = (1..18)*{id_reg_8} & SSHORTINT_TO_SCHAR(nn) = w1|->w2);
  (rgs8<+({rh|->w1}\/{rl|->w2}): (1..18)*{id_reg_8} +-> SCHAR);
  (dom(rgs8<+({rh|->w1}\/{rl|->w2})) = (1..18)*{id_reg_8});
  ("`LD_IX_nn preconditions in this component'" & nn: SSHORTINT);
  "`Check that the invariant (ix: USHORTINT) is preserved by the operation - ref 3.4'";
  ("`LD_IY_nn preconditions in this component'" & nn: SSHORTINT);
  "`Check that the invariant (iy: USHORTINT) is preserved by the operation - ref 3.4'";
  ("`LD_HL_9nn0 preconditions in this component'" & nn: SSHORTINT & nn+1: SSHORTINT);
  (rgs8<+({13|->id_reg_8|->mem(nn+1)}\/{14|->id_reg_8|->mem(nn)}): (1..18)*{id_reg_8} +-> SCHAR);
  (dom(rgs8<+({13|->id_reg_8|->mem(nn+1)}\/{14|->id_reg_8|->mem(nn)})) = (1..18)*{id_reg_8});
  ("`LD_dd_9nn0 preconditions in this component'" & dd: (1..5)*{id_reg_16} & nn: USHORTINT & not(dd = 5|->id_reg_16));
  (SSHORTINT_TO_USHORTINT(SCHAR_TO_SSHORTINT(mem(nn+1),mem(nn))): USHORTINT);
  ("`Local hypotheses'" & not(dd = 4|->id_reg_16) & rh: (1..18)*{id_reg_8} & rl: (1..18)*{id_reg_8} & w1: SCHAR & w2: SCHAR & rh,rl = REG16_TO_REG8(dd) & w1 = mem(nn+1) & w2 = mem(nn) & {rh|->w1}\/{rl|->w2}: (1..18)*{id_reg_8} +-> SCHAR & dom({rh|->w1}\/{rl|->w2}) = (1..18)*{id_reg_8});
  ("`LD_IX_9nn0 preconditions in this component'" & nn: USHORTINT & nn+1: USHORTINT);
  ("`LD_IY_9nn0 preconditions in this component'" & nn: SSHORTINT & nn+1: SSHORTINT);
  ("`LD_9nn0_HL preconditions in this component'" & nn: USHORTINT & nn+1: USHORTINT & not(nn: dom(stack)) & not(nn+1: dom(stack)));
  ({nn+1|->rgs8(13|->id_reg_8)}\/{nn|->rgs8(14|->id_reg_8)}: USHORTINT +-> SCHAR);
  (dom({nn+1|->rgs8(13|->id_reg_8)}\/{nn|->rgs8(14|->id_reg_8)}) = USHORTINT);
  ("`Local hypotheses'" & mem<+({nn+1|->rgs8(13|->id_reg_8)}\/{nn|->rgs8(14|->id_reg_8)}): USHORTINT +-> SCHAR & dom(mem<+({nn+1|->rgs8(13|->id_reg_8)}\/{nn|->rgs8(14|->id_reg_8)})) = USHORTINT);
  ("`LD_9nn0_dd preconditions in this component'" & dd: (1..5)*{id_reg_16} & not(dd = 5|->id_reg_16) & nn: USHORTINT & nn+1: USHORTINT & not(nn: dom(stack)) & not(nn+1: dom(stack)));
  ("`Local hypotheses'" & dd = 4|->id_reg_16 & vh: SCHAR & vl: SCHAR & SSHORTINT_TO_SCHAR(sp) = vh|->vl & {nn+1|->vh}\/{nn|->vl}: SSHORTINT +-> SCHAR & dom({nn+1|->vh}\/{nn|->vl}) = SSHORTINT);
  ({nn+1|->vh}\/{nn|->vl}: USHORTINT +-> SCHAR);
  (dom({nn+1|->vh}\/{nn|->vl}) = USHORTINT);
  ("`Local hypotheses'" & not(dd = 4|->id_reg_16) & rh: (1..18)*{id_reg_8} & rl: (1..18)*{id_reg_8} & w1: SCHAR & w2: SCHAR & rh,rl = REG16_TO_REG8(dd) & {nn+1|->rgs8(rh)}\/{nn|->rgs8(rl)}: USHORTINT +-> SCHAR & dom({nn+1|->rgs8(rh)}\/{nn|->rgs8(rl)}) = USHORTINT & mem<+({nn+1|->rgs8(rh)}\/{nn|->rgs8(rl)}): USHORTINT +-> SCHAR & dom(mem<+({nn+1|->rgs8(rh)}\/{nn|->rgs8(rl)})) = USHORTINT);
  ("`LD_9nn0_IX preconditions in this component'" & nn: USHORTINT & nn+1: USHORTINT);
  ("`Local hypotheses'" & h_ix: SCHAR & l_ix: SCHAR & h_ix,l_ix = SSHORTINT_TO_SCHAR(ix) & not(nn: dom(stack)) & not(nn+1: dom(stack)));
  ({nn+1|->h_ix}\/{nn|->l_ix}: USHORTINT +-> SCHAR);
  (dom({nn+1|->h_ix}\/{nn|->l_ix}) = USHORTINT);
  ("`Local hypotheses'" & h_ix: SCHAR & l_ix: SCHAR & h_ix,l_ix = SSHORTINT_TO_SCHAR(ix) & not(nn: dom(stack)) & not(nn+1: dom(stack)) & mem<+({nn+1|->h_ix}\/{nn|->l_ix}): USHORTINT +-> SCHAR & dom(mem<+({nn+1|->h_ix}\/{nn|->l_ix})) = USHORTINT);
  ("`LD_9nn0_IY preconditions in this component'" & nn: USHORTINT & nn+1: USHORTINT);
  ("`Local hypotheses'" & h_iy: SCHAR & l_iy: SCHAR & h_iy,l_iy = SSHORTINT_TO_SCHAR(ix) & not(nn: dom(stack)) & not(nn+1: dom(stack)));
  ({nn+1|->h_iy}\/{nn|->l_iy}: USHORTINT +-> SCHAR);
  (dom({nn+1|->h_iy}\/{nn|->l_iy}) = USHORTINT);
  ("`Local hypotheses'" & h_iy: SCHAR & l_iy: SCHAR & h_iy,l_iy = SSHORTINT_TO_SCHAR(ix) & not(nn: dom(stack)) & not(nn+1: dom(stack)) & mem<+({nn+1|->h_iy}\/{nn|->l_iy}): USHORTINT +-> SCHAR & dom(mem<+({nn+1|->h_iy}\/{nn|->l_iy})) = USHORTINT);
  (SSHORTINT_TO_USHORTINT(SCHAR_TO_SSHORTINT(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): USHORTINT);
  (SSHORTINT_TO_USHORTINT(ix): USHORTINT);
  (SSHORTINT_TO_USHORTINT(iy): USHORTINT);
  ("`PUSH_qq preconditions in this component'" & qq: (1..5)*{id_reg_16} & not(qq = 4|->id_reg_16) & sp-2: USHORTINT);
  ("`Local hypotheses'" & qqh: (1..18)*{id_reg_8} & qql: (1..18)*{id_reg_8} & REG16_TO_REG8(qq) = qqh|->qql & {sp-2|->rgs8(qql)}\/{sp-1|->rgs8(qqh)}: USHORTINT +-> SCHAR & dom({sp-2|->rgs8(qql)}\/{sp-1|->rgs8(qqh)}) = USHORTINT & stack<+({sp-2|->rgs8(qql)}\/{sp-1|->rgs8(qqh)}): USHORTINT +-> SCHAR & dom(stack<+({sp-2|->rgs8(qql)}\/{sp-1|->rgs8(qqh)})) = USHORTINT);
  ("`PUSH_IX preconditions in this component'" & sp-2: USHORTINT);
  ("`Local hypotheses'" & wh: SCHAR & wl: SCHAR & SSHORTINT_TO_SCHAR(ix) = wh|->wl & {sp-2|->wl}\/{sp-1|->wh}: USHORTINT +-> SCHAR & dom({sp-2|->wl}\/{sp-1|->wh}) = USHORTINT & stack<+({sp-2|->wl}\/{sp-1|->wh}): USHORTINT +-> SCHAR & dom(stack<+({sp-2|->wl}\/{sp-1|->wh})) = USHORTINT);
  ("`Local hypotheses'" & wh: SCHAR & wl: SCHAR & SSHORTINT_TO_SCHAR(iy) = wh|->wl & {sp-2|->wl}\/{sp-1|->wh}: USHORTINT +-> SCHAR & dom({sp-2|->wl}\/{sp-1|->wh}) = USHORTINT & stack<+({sp-2|->wl}\/{sp-1|->wh}): USHORTINT +-> SCHAR & dom(stack<+({sp-2|->wl}\/{sp-1|->wh})) = USHORTINT);
  (sp-2: USHORTINT);
  ("`POP_qq preconditions in this component'" & qq: (1..5)*{id_reg_16} & not(qq = 4|->id_reg_16) & sp+2: USHORTINT);
  ("`Local hypotheses'" & qqh: (1..18)*{id_reg_8} & qql: (1..18)*{id_reg_8} & REG16_TO_REG8(qq) = qqh|->qql & {qql|->mem(sp+2)}\/{qqh|->mem(sp+1)}: (1..18)*{id_reg_8} +-> SCHAR & dom({qql|->mem(sp+2)}\/{qqh|->mem(sp+1)}) = (1..18)*{id_reg_8});
  (rgs8<+({qql|->mem(sp+2)}\/{qqh|->mem(sp+1)}): (1..18)*{id_reg_8} +-> SCHAR);
  (dom(rgs8<+({qql|->mem(sp+2)}\/{qqh|->mem(sp+1)})) = (1..18)*{id_reg_8});
  ("`POP_IX preconditions in this component'" & sp: USHORTINT & sp+2: USHORTINT);
  ("`Local hypotheses'" & nw8: SCHAR & SCHAR_TO_SSHORTINT(mem(sp+1),mem(sp+2)) = nw8);
  (nw8: USHORTINT);
  ("`POP_IY preconditions in this component'" & sp+2: USHORTINT);
  ("`EX_DE_HL preconditions in this component'" & {9|->id_reg_8|->rgs8(13|->id_reg_8)}\/{10|->id_reg_8|->rgs8(14|->id_reg_8)}\/{13|->id_reg_8|->rgs8(9|->id_reg_8)}\/{14|->id_reg_8|->rgs8(10|->id_reg_8)}: (1..18)*{id_reg_8} +-> SCHAR & dom({9|->id_reg_8|->rgs8(13|->id_reg_8)}\/{10|->id_reg_8|->rgs8(14|->id_reg_8)}\/{13|->id_reg_8|->rgs8(9|->id_reg_8)}\/{14|->id_reg_8|->rgs8(10|->id_reg_8)}) = (1..18)*{id_reg_8});
  (rgs8<+({9|->id_reg_8|->rgs8(13|->id_reg_8)}\/{10|->id_reg_8|->rgs8(14|->id_reg_8)}\/{13|->id_reg_8|->rgs8(9|->id_reg_8)}\/{14|->id_reg_8|->rgs8(10|->id_reg_8)}): (1..18)*{id_reg_8} +-> SCHAR);
  (dom(rgs8<+({9|->id_reg_8|->rgs8(13|->id_reg_8)}\/{10|->id_reg_8|->rgs8(14|->id_reg_8)}\/{13|->id_reg_8|->rgs8(9|->id_reg_8)}\/{14|->id_reg_8|->rgs8(10|->id_reg_8)})) = (1..18)*{id_reg_8});
  ("`EX_AF_AF_ preconditions in this component'" & {1|->id_reg_8|->rgs8(4|->id_reg_8)}\/{2|->id_reg_8|->rgs8(3|->id_reg_8)}\/{4|->id_reg_8|->rgs8(1|->id_reg_8)}\/{3|->id_reg_8|->rgs8(2|->id_reg_8)}: (1..18)*{id_reg_8} +-> SCHAR & dom({1|->id_reg_8|->rgs8(4|->id_reg_8)}\/{2|->id_reg_8|->rgs8(3|->id_reg_8)}\/{4|->id_reg_8|->rgs8(1|->id_reg_8)}\/{3|->id_reg_8|->rgs8(2|->id_reg_8)}) = (1..18)*{id_reg_8});
  (rgs8<+({1|->id_reg_8|->rgs8(4|->id_reg_8)}\/{2|->id_reg_8|->rgs8(3|->id_reg_8)}\/{4|->id_reg_8|->rgs8(1|->id_reg_8)}\/{3|->id_reg_8|->rgs8(2|->id_reg_8)}): (1..18)*{id_reg_8} +-> SCHAR);
  (dom(rgs8<+({1|->id_reg_8|->rgs8(4|->id_reg_8)}\/{2|->id_reg_8|->rgs8(3|->id_reg_8)}\/{4|->id_reg_8|->rgs8(1|->id_reg_8)}\/{3|->id_reg_8|->rgs8(2|->id_reg_8)})) = (1..18)*{id_reg_8});
  ("`EXX preconditions in this component'" & {5|->id_reg_8|->rgs8(7|->id_reg_8)}\/{6|->id_reg_8|->rgs8(8|->id_reg_8)}\/{9|->id_reg_8|->rgs8(11|->id_reg_8)}\/{10|->id_reg_8|->rgs8(12|->id_reg_8)}\/{13|->id_reg_8|->rgs8(15|->id_reg_8)}\/{14|->id_reg_8|->rgs8(16|->id_reg_8)}\/{7|->id_reg_8|->rgs8(5|->id_reg_8)}\/{8|->id_reg_8|->rgs8(6|->id_reg_8)}\/{11|->id_reg_8|->rgs8(9|->id_reg_8)}\/{12|->id_reg_8|->rgs8(10|->id_reg_8)}\/{15|->id_reg_8|->rgs8(13|->id_reg_8)}\/{16|->id_reg_8|->rgs8(14|->id_reg_8)}: (1..18)*{id_reg_8} +-> SCHAR & dom({5|->id_reg_8|->rgs8(7|->id_reg_8)}\/{6|->id_reg_8|->rgs8(8|->id_reg_8)}\/{9|->id_reg_8|->rgs8(11|->id_reg_8)}\/{10|->id_reg_8|->rgs8(12|->id_reg_8)}\/{13|->id_reg_8|->rgs8(15|->id_reg_8)}\/{14|->id_reg_8|->rgs8(16|->id_reg_8)}\/{7|->id_reg_8|->rgs8(5|->id_reg_8)}\/{8|->id_reg_8|->rgs8(6|->id_reg_8)}\/{11|->id_reg_8|->rgs8(9|->id_reg_8)}\/{12|->id_reg_8|->rgs8(10|->id_reg_8)}\/{15|->id_reg_8|->rgs8(13|->id_reg_8)}\/{16|->id_reg_8|->rgs8(14|->id_reg_8)}) = (1..18)*{id_reg_8});
  (rgs8<+({5|->id_reg_8|->rgs8(7|->id_reg_8)}\/{6|->id_reg_8|->rgs8(8|->id_reg_8)}\/{9|->id_reg_8|->rgs8(11|->id_reg_8)}\/{10|->id_reg_8|->rgs8(12|->id_reg_8)}\/{13|->id_reg_8|->rgs8(15|->id_reg_8)}\/{14|->id_reg_8|->rgs8(16|->id_reg_8)}\/{7|->id_reg_8|->rgs8(5|->id_reg_8)}\/{8|->id_reg_8|->rgs8(6|->id_reg_8)}\/{11|->id_reg_8|->rgs8(9|->id_reg_8)}\/{12|->id_reg_8|->rgs8(10|->id_reg_8)}\/{15|->id_reg_8|->rgs8(13|->id_reg_8)}\/{16|->id_reg_8|->rgs8(14|->id_reg_8)}): (1..18)*{id_reg_8} +-> SCHAR);
  (dom(rgs8<+({5|->id_reg_8|->rgs8(7|->id_reg_8)}\/{6|->id_reg_8|->rgs8(8|->id_reg_8)}\/{9|->id_reg_8|->rgs8(11|->id_reg_8)}\/{10|->id_reg_8|->rgs8(12|->id_reg_8)}\/{13|->id_reg_8|->rgs8(15|->id_reg_8)}\/{14|->id_reg_8|->rgs8(16|->id_reg_8)}\/{7|->id_reg_8|->rgs8(5|->id_reg_8)}\/{8|->id_reg_8|->rgs8(6|->id_reg_8)}\/{11|->id_reg_8|->rgs8(9|->id_reg_8)}\/{12|->id_reg_8|->rgs8(10|->id_reg_8)}\/{15|->id_reg_8|->rgs8(13|->id_reg_8)}\/{16|->id_reg_8|->rgs8(14|->id_reg_8)})) = (1..18)*{id_reg_8});
  ("`EX_9SP0_HL preconditions in this component'" & {sp+1|->rgs8(13|->id_reg_8)}\/{sp|->rgs8(14|->id_reg_8)}: USHORTINT +-> SCHAR & dom({sp+1|->rgs8(13|->id_reg_8)}\/{sp|->rgs8(14|->id_reg_8)}) = USHORTINT & stack<+({sp+1|->rgs8(13|->id_reg_8)}\/{sp|->rgs8(14|->id_reg_8)}): POW(mem));
  ("`Local hypotheses'" & stack<+({sp+1|->rgs8(13|->id_reg_8)}\/{sp|->rgs8(14|->id_reg_8)}): USHORTINT +-> SCHAR & dom(stack<+({sp+1|->rgs8(13|->id_reg_8)}\/{sp|->rgs8(14|->id_reg_8)})) = USHORTINT);
  (rgs8<+({13|->id_reg_8|->stack(sp+1)}\/{14|->id_reg_8|->stack(sp)}): (1..18)*{id_reg_8} +-> SCHAR);
  (dom(rgs8<+({13|->id_reg_8|->stack(sp+1)}\/{14|->id_reg_8|->stack(sp)})) = (1..18)*{id_reg_8});
  ("`Local hypotheses'" & wh: SCHAR & wl: SCHAR & SSHORTINT_TO_SCHAR(ix) = wh|->wl & {sp+1|->wh}\/{sp|->wl}: USHORTINT +-> SCHAR & dom({sp+1|->wh}\/{sp|->wl}) = USHORTINT & stack<+({sp+1|->wh}\/{sp|->wl}): POW(mem) & stack<+({sp+1|->wh}\/{sp|->wl}): USHORTINT +-> SCHAR & dom(stack<+({sp+1|->wh}\/{sp|->wl})) = USHORTINT);
  (SSHORTINT_TO_USHORTINT(SCHAR_TO_SSHORTINT(stack(sp+1),stack(sp))): USHORTINT);
  ("`Local hypotheses'" & wh: SCHAR & wl: SCHAR & SSHORTINT_TO_SCHAR(iy) = wh|->wl & {sp+1|->wh}\/{sp|->wl}: USHORTINT +-> SCHAR & dom({sp+1|->wh}\/{sp|->wl}) = USHORTINT & stack<+({sp+1|->wh}\/{sp|->wl}): POW(mem) & stack<+({sp+1|->wh}\/{sp|->wl}): USHORTINT +-> SCHAR & dom(stack<+({sp+1|->wh}\/{sp|->wl})) = USHORTINT);
  ("`LDI preconditions in this component'" & mem(SSHORTINT_TO_USHORTINT(SCHAR_TO_SSHORTINT(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))+1: SSHORTINT & mem(SSHORTINT_TO_USHORTINT(SCHAR_TO_SSHORTINT(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))+1: SSHORTINT & SCHAR_TO_SSHORTINT(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))-1: SSHORTINT);
  ("`Local hypotheses'" & hvn,lvn = SSHORTINT_TO_SCHAR(SCHAR_TO_SSHORTINT(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))+1) & dvn,evn = SSHORTINT_TO_SCHAR(SCHAR_TO_SSHORTINT(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))+1) & bvn,cvn = SSHORTINT_TO_SCHAR(SCHAR_TO_SSHORTINT(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))-1));
  (SSHORTINT_TO_USHORTINT(mem(SSHORTINT_TO_USHORTINT(SCHAR_TO_SSHORTINT(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): USHORTINT);
  ("`Local hypotheses'" & hvn,lvn = SSHORTINT_TO_SCHAR(SCHAR_TO_SSHORTINT(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))+1) & dvn,evn = SSHORTINT_TO_SCHAR(SCHAR_TO_SSHORTINT(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))+1) & bvn,cvn = SSHORTINT_TO_SCHAR(SCHAR_TO_SSHORTINT(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))-1) & mem<+{SSHORTINT_TO_USHORTINT(mem(SSHORTINT_TO_USHORTINT(SCHAR_TO_SSHORTINT(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))))|->mem(SSHORTINT_TO_USHORTINT(SCHAR_TO_SSHORTINT(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))}: USHORTINT +-> SCHAR & dom(mem<+{SSHORTINT_TO_USHORTINT(mem(SSHORTINT_TO_USHORTINT(SCHAR_TO_SSHORTINT(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))))|->mem(SSHORTINT_TO_USHORTINT(SCHAR_TO_SSHORTINT(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))}) = USHORTINT);
  (rgs8<+({13|->id_reg_8|->hvn}\/{14|->id_reg_8|->lvn}\/{9|->id_reg_8|->hvn}\/{10|->id_reg_8|->lvn}\/{5|->id_reg_8|->hvn}\/{6|->id_reg_8|->lvn}): (1..18)*{id_reg_8} +-> SCHAR);
  (dom(rgs8<+({13|->id_reg_8|->hvn}\/{14|->id_reg_8|->lvn}\/{9|->id_reg_8|->hvn}\/{10|->id_reg_8|->lvn}\/{5|->id_reg_8|->hvn}\/{6|->id_reg_8|->lvn})) = (1..18)*{id_reg_8});
  ("`LDIR preconditions in this component'" & mem(SSHORTINT_TO_USHORTINT(SCHAR_TO_SSHORTINT(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))+1: SSHORTINT & mem(SSHORTINT_TO_USHORTINT(SCHAR_TO_SSHORTINT(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))+1: SSHORTINT & SCHAR_TO_SSHORTINT(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))-1: SSHORTINT);
  ("`Local hypotheses'" & hvn,lvn = SSHORTINT_TO_SCHAR(SCHAR_TO_SSHORTINT(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))+1) & dvn,evn = SSHORTINT_TO_SCHAR(SCHAR_TO_SSHORTINT(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))+1) & bvn,cvn = SSHORTINT_TO_SCHAR(SCHAR_TO_SSHORTINT(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))-1) & {13|->id_reg_8|->hvn}\/{14|->id_reg_8|->lvn}\/{9|->id_reg_8|->hvn}\/{10|->id_reg_8|->lvn}\/{5|->id_reg_8|->hvn}\/{6|->id_reg_8|->lvn}: (1..18)*{id_reg_8} +-> SCHAR & dom({13|->id_reg_8|->hvn}\/{14|->id_reg_8|->lvn}\/{9|->id_reg_8|->hvn}\/{10|->id_reg_8|->lvn}\/{5|->id_reg_8|->hvn}\/{6|->id_reg_8|->lvn}) = (1..18)*{id_reg_8});
  ("`Local hypotheses'" & hvn,lvn = SSHORTINT_TO_SCHAR(SCHAR_TO_SSHORTINT(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))+1) & dvn,evn = SSHORTINT_TO_SCHAR(SCHAR_TO_SSHORTINT(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))+1) & bvn,cvn = SSHORTINT_TO_SCHAR(SCHAR_TO_SSHORTINT(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))-1) & {13|->id_reg_8|->hvn}\/{14|->id_reg_8|->lvn}\/{9|->id_reg_8|->hvn}\/{10|->id_reg_8|->lvn}\/{5|->id_reg_8|->hvn}\/{6|->id_reg_8|->lvn}: (1..18)*{id_reg_8} +-> SCHAR & dom({13|->id_reg_8|->hvn}\/{14|->id_reg_8|->lvn}\/{9|->id_reg_8|->hvn}\/{10|->id_reg_8|->lvn}\/{5|->id_reg_8|->hvn}\/{6|->id_reg_8|->lvn}) = (1..18)*{id_reg_8} & SCHAR_TO_SSHORTINT(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))-1 = 0 & mem<+{SSHORTINT_TO_USHORTINT(mem(SSHORTINT_TO_USHORTINT(SCHAR_TO_SSHORTINT(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))))|->mem(SSHORTINT_TO_USHORTINT(mem(SSHORTINT_TO_USHORTINT(SCHAR_TO_SSHORTINT(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))))}: USHORTINT +-> SCHAR & dom(mem<+{SSHORTINT_TO_USHORTINT(mem(SSHORTINT_TO_USHORTINT(SCHAR_TO_SSHORTINT(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))))|->mem(SSHORTINT_TO_USHORTINT(mem(SSHORTINT_TO_USHORTINT(SCHAR_TO_SSHORTINT(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))))}) = USHORTINT);
  ("`Local hypotheses'" & hvn,lvn = SSHORTINT_TO_SCHAR(SCHAR_TO_SSHORTINT(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))+1) & dvn,evn = SSHORTINT_TO_SCHAR(SCHAR_TO_SSHORTINT(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))+1) & bvn,cvn = SSHORTINT_TO_SCHAR(SCHAR_TO_SSHORTINT(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))-1) & {13|->id_reg_8|->hvn}\/{14|->id_reg_8|->lvn}\/{9|->id_reg_8|->hvn}\/{10|->id_reg_8|->lvn}\/{5|->id_reg_8|->hvn}\/{6|->id_reg_8|->lvn}: (1..18)*{id_reg_8} +-> SCHAR & dom({13|->id_reg_8|->hvn}\/{14|->id_reg_8|->lvn}\/{9|->id_reg_8|->hvn}\/{10|->id_reg_8|->lvn}\/{5|->id_reg_8|->hvn}\/{6|->id_reg_8|->lvn}) = (1..18)*{id_reg_8} & not(SCHAR_TO_SSHORTINT(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))-1 = 0) & mem<+{SSHORTINT_TO_USHORTINT(mem(SSHORTINT_TO_USHORTINT(SCHAR_TO_SSHORTINT(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))))|->mem(SSHORTINT_TO_USHORTINT(mem(SSHORTINT_TO_USHORTINT(SCHAR_TO_SSHORTINT(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))))}: USHORTINT +-> SCHAR & dom(mem<+{SSHORTINT_TO_USHORTINT(mem(SSHORTINT_TO_USHORTINT(SCHAR_TO_SSHORTINT(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))))|->mem(SSHORTINT_TO_USHORTINT(mem(SSHORTINT_TO_USHORTINT(SCHAR_TO_SSHORTINT(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))))}) = USHORTINT);
  ("`LDD preconditions in this component'" & mem(SSHORTINT_TO_USHORTINT(SCHAR_TO_SSHORTINT(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))-1: SSHORTINT & mem(SSHORTINT_TO_USHORTINT(SCHAR_TO_SSHORTINT(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))-1: SSHORTINT & SCHAR_TO_SSHORTINT(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))-1: SSHORTINT);
  ("`Local hypotheses'" & hvn,lvn = SSHORTINT_TO_SCHAR(SCHAR_TO_SSHORTINT(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))-1) & dvn,evn = SSHORTINT_TO_SCHAR(SCHAR_TO_SSHORTINT(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))-1) & bvn,cvn = SSHORTINT_TO_SCHAR(SCHAR_TO_SSHORTINT(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))-1) & {13|->id_reg_8|->hvn}\/{14|->id_reg_8|->lvn}\/{9|->id_reg_8|->hvn}\/{10|->id_reg_8|->lvn}\/{5|->id_reg_8|->hvn}\/{6|->id_reg_8|->lvn}: (1..18)*{id_reg_8} +-> SCHAR & dom({13|->id_reg_8|->hvn}\/{14|->id_reg_8|->lvn}\/{9|->id_reg_8|->hvn}\/{10|->id_reg_8|->lvn}\/{5|->id_reg_8|->hvn}\/{6|->id_reg_8|->lvn}) = (1..18)*{id_reg_8});
  ("`Local hypotheses'" & hvn,lvn = SSHORTINT_TO_SCHAR(SCHAR_TO_SSHORTINT(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))-1) & dvn,evn = SSHORTINT_TO_SCHAR(SCHAR_TO_SSHORTINT(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))-1) & bvn,cvn = SSHORTINT_TO_SCHAR(SCHAR_TO_SSHORTINT(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))-1) & {13|->id_reg_8|->hvn}\/{14|->id_reg_8|->lvn}\/{9|->id_reg_8|->hvn}\/{10|->id_reg_8|->lvn}\/{5|->id_reg_8|->hvn}\/{6|->id_reg_8|->lvn}: (1..18)*{id_reg_8} +-> SCHAR & dom({13|->id_reg_8|->hvn}\/{14|->id_reg_8|->lvn}\/{9|->id_reg_8|->hvn}\/{10|->id_reg_8|->lvn}\/{5|->id_reg_8|->hvn}\/{6|->id_reg_8|->lvn}) = (1..18)*{id_reg_8} & SCHAR_TO_SSHORTINT(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))-1 = 0 & mem<+{SSHORTINT_TO_USHORTINT(mem(SSHORTINT_TO_USHORTINT(SCHAR_TO_SSHORTINT(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))))|->mem(SSHORTINT_TO_USHORTINT(mem(SSHORTINT_TO_USHORTINT(SCHAR_TO_SSHORTINT(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))))}: USHORTINT +-> SCHAR & dom(mem<+{SSHORTINT_TO_USHORTINT(mem(SSHORTINT_TO_USHORTINT(SCHAR_TO_SSHORTINT(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))))|->mem(SSHORTINT_TO_USHORTINT(mem(SSHORTINT_TO_USHORTINT(SCHAR_TO_SSHORTINT(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))))}) = USHORTINT);
  ("`Local hypotheses'" & hvn,lvn = SSHORTINT_TO_SCHAR(SCHAR_TO_SSHORTINT(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))-1) & dvn,evn = SSHORTINT_TO_SCHAR(SCHAR_TO_SSHORTINT(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))-1) & bvn,cvn = SSHORTINT_TO_SCHAR(SCHAR_TO_SSHORTINT(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))-1) & {13|->id_reg_8|->hvn}\/{14|->id_reg_8|->lvn}\/{9|->id_reg_8|->hvn}\/{10|->id_reg_8|->lvn}\/{5|->id_reg_8|->hvn}\/{6|->id_reg_8|->lvn}: (1..18)*{id_reg_8} +-> SCHAR & dom({13|->id_reg_8|->hvn}\/{14|->id_reg_8|->lvn}\/{9|->id_reg_8|->hvn}\/{10|->id_reg_8|->lvn}\/{5|->id_reg_8|->hvn}\/{6|->id_reg_8|->lvn}) = (1..18)*{id_reg_8} & not(SCHAR_TO_SSHORTINT(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))-1 = 0) & mem<+{SSHORTINT_TO_USHORTINT(mem(SSHORTINT_TO_USHORTINT(SCHAR_TO_SSHORTINT(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))))|->mem(SSHORTINT_TO_USHORTINT(mem(SSHORTINT_TO_USHORTINT(SCHAR_TO_SSHORTINT(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))))}: USHORTINT +-> SCHAR & dom(mem<+{SSHORTINT_TO_USHORTINT(mem(SSHORTINT_TO_USHORTINT(SCHAR_TO_SSHORTINT(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))))|->mem(SSHORTINT_TO_USHORTINT(mem(SSHORTINT_TO_USHORTINT(SCHAR_TO_SSHORTINT(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))))}) = USHORTINT);
  ("`LDDR preconditions in this component'" & mem(SSHORTINT_TO_USHORTINT(SCHAR_TO_SSHORTINT(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))-1: SSHORTINT & mem(SSHORTINT_TO_USHORTINT(SCHAR_TO_SSHORTINT(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))-1: SSHORTINT & SCHAR_TO_SSHORTINT(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))-1: SSHORTINT);
  ("`Local hypotheses'" & hvn,lvn = SSHORTINT_TO_SCHAR(SCHAR_TO_SSHORTINT(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))-1) & dvn,evn = SSHORTINT_TO_SCHAR(SCHAR_TO_SSHORTINT(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))-1) & bvn,cvn = SSHORTINT_TO_SCHAR(SCHAR_TO_SSHORTINT(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))-1) & {13|->id_reg_8|->hvn}\/{14|->id_reg_8|->lvn}\/{9|->id_reg_8|->hvn}\/{10|->id_reg_8|->lvn}\/{5|->id_reg_8|->hvn}\/{6|->id_reg_8|->lvn}: (1..18)*{id_reg_8} +-> SCHAR & dom({13|->id_reg_8|->hvn}\/{14|->id_reg_8|->lvn}\/{9|->id_reg_8|->hvn}\/{10|->id_reg_8|->lvn}\/{5|->id_reg_8|->hvn}\/{6|->id_reg_8|->lvn}) = (1..18)*{id_reg_8} & mem<+{SSHORTINT_TO_USHORTINT(mem(SSHORTINT_TO_USHORTINT(SCHAR_TO_SSHORTINT(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))))|->mem(SSHORTINT_TO_USHORTINT(mem(SSHORTINT_TO_USHORTINT(SCHAR_TO_SSHORTINT(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))))}: USHORTINT +-> SCHAR & dom(mem<+{SSHORTINT_TO_USHORTINT(mem(SSHORTINT_TO_USHORTINT(SCHAR_TO_SSHORTINT(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))))|->mem(SSHORTINT_TO_USHORTINT(mem(SSHORTINT_TO_USHORTINT(SCHAR_TO_SSHORTINT(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))))}) = USHORTINT);
  ("`Local hypotheses'" & sum$0: SCHAR & is_negative$0: BOOL & carry$0: BOOL & digit_carry$0: BOOL & zero$0: BOOL & substract8SCHAR(rgs8(1|->id_reg_8),mem(SSHORTINT_TO_USHORTINT(SCHAR_TO_SSHORTINT(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))) = (sum$0,is_negative$0,carry$0,digit_carry$0)|->zero$0 & not(zero$0 = TRUE));
  ("`BIT_b_rr preconditions in this component'" & bb: 0..SCHAR_LENGTH-1 & rr: (1..18)*{id_reg_8});
  ("`Local hypotheses'" & ib: BIT & nw8: BYTE & ib = SCHAR_TO_BYTE(rgs8(rr))(bb) & nw8 = bv_set(SCHAR_TO_BYTE(rgs8(2|->id_reg_8)),6));
  (rgs8<+{3|->id_reg_8|->BYTE_TO_SCHAR(nw8)}: (1..18)*{id_reg_8} +-> SCHAR);
  (dom(rgs8<+{3|->id_reg_8|->BYTE_TO_SCHAR(nw8)}) = (1..18)*{id_reg_8});
  ("`BIT_b_9HL0 preconditions in this component'" & bb: 0..SCHAR_LENGTH-1);
  ("`Local hypotheses'" & address: SSHORTINT & ib: BIT & nw8: BYTE & address = SCHAR_TO_SSHORTINT(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)) & ib = SCHAR_TO_BYTE(mem(address))(bb) & nw8 = bv_set(SCHAR_TO_BYTE(rgs8(3|->id_reg_8)),6));
  ("`JR_NZ_e preconditions in this component'" & ee: -126..129 & ee+pc: USHORTINT);
  ("`Local hypotheses'" & SCHAR_TO_BYTE(rgs8(3|->id_reg_8))(6) = 1);
  ("`Local hypotheses'" & not(SCHAR_TO_BYTE(rgs8(3|->id_reg_8))(6) = 1));
  (INSTRUCTION_JUMP(pc,ee): USHORTINT);
  ("`JR_Z_e preconditions in this component'" & ee: -126..129 & ee+pc: USHORTINT);
  ("`Local hypotheses'" & SCHAR_TO_BYTE(rgs8(3|->id_reg_8))(6) = 0);
  ("`Local hypotheses'" & not(SCHAR_TO_BYTE(rgs8(3|->id_reg_8))(6) = 0));
  ("`SET_b_HL preconditions in this component'" & bb: 0..SCHAR_LENGTH-1);
  ("`Local hypotheses'" & address: USHORTINT & nw8: BYTE & address = SCHAR_TO_SSHORTINT(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)) & not(address: dom(stack)) & nw8 = bv_set(SCHAR_TO_BYTE(mem(address)),bb));
  (BYTE_TO_SCHAR(nw8): SCHAR);
  ("`Local hypotheses'" & address: USHORTINT & nw8: BYTE & address = SCHAR_TO_SSHORTINT(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)) & not(address: dom(stack)) & nw8 = bv_set(SCHAR_TO_BYTE(mem(address)),bb) & mem<+{address|->BYTE_TO_SCHAR(nw8)}: USHORTINT +-> SCHAR & dom(mem<+{address|->BYTE_TO_SCHAR(nw8)}) = USHORTINT);
  ("`RES_b_HL preconditions in this component'" & bb: 0..SCHAR_LENGTH-1);
  ("`Local hypotheses'" & address: USHORTINT & nw8: BYTE & address = SCHAR_TO_SSHORTINT(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)) & not(address: dom(stack)) & nw8 = bv_clear(SCHAR_TO_BYTE(mem(address)),bb));
  ("`Local hypotheses'" & address: USHORTINT & nw8: BYTE & address = SCHAR_TO_SSHORTINT(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)) & not(address: dom(stack)) & nw8 = bv_clear(SCHAR_TO_BYTE(mem(address)),bb) & mem<+{address|->BYTE_TO_SCHAR(nw8)}: USHORTINT +-> SCHAR & dom(mem<+{address|->BYTE_TO_SCHAR(nw8)}) = USHORTINT);
  ("`CALL preconditions in this component'" & k0: USHORTINT & sp+1: USHORTINT);
  (stack(sp): USHORTINT);
  (INSTRUCTION_NEXT(pc): SCHAR);
  ("`RETURN preconditions in this component'" & 1<=sp);
  ("`Local hypotheses'" & {sp-1}<<|stack: USHORTINT +-> SCHAR & dom({sp-1}<<|stack) = USHORTINT);
  (stack(sp-1): USHORTINT);
  (sp-1: USHORTINT);
  ("`IN_A_9n0_ preconditions in this component'" & nn: UCHAR & k_in: SCHAR);
  ("`Local hypotheses'" & data_in: SCHAR);
  (rgs8<+{1|->id_reg_8|->k_in}: (1..18)*{id_reg_8} +-> SCHAR);
  (dom(rgs8<+{1|->id_reg_8|->k_in}) = (1..18)*{id_reg_8});
  "`Check that the invariant (i_o_ports: UCHAR --> SCHAR) is preserved by the operation - ref 3.4'";
  (i_o_ports<+{nn|->data_in}: UCHAR +-> SCHAR);
  (dom(i_o_ports<+{nn|->data_in}) = UCHAR);
  ("`IN_A_9n0 preconditions in this component'" & nn: UCHAR);
  (rgs8<+{1|->id_reg_8|->i_o_ports(nn)}: (1..18)*{id_reg_8} +-> SCHAR);
  (dom(rgs8<+{1|->id_reg_8|->i_o_ports(nn)}) = (1..18)*{id_reg_8});
  ("`INI preconditions in this component'" & rgs8(5|->id_reg_8)-1: SCHAR & mem(SSHORTINT_TO_USHORTINT(SCHAR_TO_SSHORTINT(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))+1: SSHORTINT);
  ("`Local hypotheses'" & data_in: SCHAR & hvn,lvn = SSHORTINT_TO_SCHAR(mem(SSHORTINT_TO_USHORTINT(SCHAR_TO_SSHORTINT(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))+1) & {13|->id_reg_8|->hvn}\/{14|->id_reg_8|->lvn}\/{5|->id_reg_8|->rgs8(5|->id_reg_8)-1}: (1..18)*{id_reg_8} +-> SCHAR & dom({13|->id_reg_8|->hvn}\/{14|->id_reg_8|->lvn}\/{5|->id_reg_8|->rgs8(5|->id_reg_8)-1}) = (1..18)*{id_reg_8});
  (SSHORTINT_TO_USHORTINT(mem(SSHORTINT_TO_USHORTINT(SCHAR_TO_SSHORTINT(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): USHORTINT);
  (i_o_ports(rgs8(6|->id_reg_8)): SCHAR);
  ("`Local hypotheses'" & data_in: SCHAR & hvn,lvn = SSHORTINT_TO_SCHAR(mem(SSHORTINT_TO_USHORTINT(SCHAR_TO_SSHORTINT(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))+1) & {13|->id_reg_8|->hvn}\/{14|->id_reg_8|->lvn}\/{5|->id_reg_8|->rgs8(5|->id_reg_8)-1}: (1..18)*{id_reg_8} +-> SCHAR & dom({13|->id_reg_8|->hvn}\/{14|->id_reg_8|->lvn}\/{5|->id_reg_8|->rgs8(5|->id_reg_8)-1}) = (1..18)*{id_reg_8} & mem<+{SSHORTINT_TO_USHORTINT(mem(SSHORTINT_TO_USHORTINT(SCHAR_TO_SSHORTINT(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))))|->i_o_ports(rgs8(6|->id_reg_8))}: USHORTINT +-> SCHAR & dom(mem<+{SSHORTINT_TO_USHORTINT(mem(SSHORTINT_TO_USHORTINT(SCHAR_TO_SSHORTINT(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))))|->i_o_ports(rgs8(6|->id_reg_8))}) = USHORTINT);
  (rgs8<+({13|->id_reg_8|->hvn}\/{14|->id_reg_8|->lvn}\/{5|->id_reg_8|->rgs8(5|->id_reg_8)-1}): (1..18)*{id_reg_8} +-> SCHAR);
  (dom(rgs8<+({13|->id_reg_8|->hvn}\/{14|->id_reg_8|->lvn}\/{5|->id_reg_8|->rgs8(5|->id_reg_8)-1})) = (1..18)*{id_reg_8});
  (i_o_ports<+{rgs8(6|->id_reg_8)|->data_in}: UCHAR +-> SCHAR);
  (dom(i_o_ports<+{rgs8(6|->id_reg_8)|->data_in}) = UCHAR);
  ("`INIR preconditions in this component'" & rgs8(5|->id_reg_8)-1: SCHAR & mem(SSHORTINT_TO_USHORTINT(SCHAR_TO_SSHORTINT(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))+1: SSHORTINT);
  ("`Local hypotheses'" & data_in: SCHAR & hvn,lvn = SSHORTINT_TO_SCHAR(mem(SSHORTINT_TO_USHORTINT(SCHAR_TO_SSHORTINT(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))+1) & {13|->id_reg_8|->hvn}\/{14|->id_reg_8|->lvn}\/{5|->id_reg_8|->rgs8(5|->id_reg_8)-1}: (1..18)*{id_reg_8} +-> SCHAR & dom({13|->id_reg_8|->hvn}\/{14|->id_reg_8|->lvn}\/{5|->id_reg_8|->rgs8(5|->id_reg_8)-1}) = (1..18)*{id_reg_8} & rgs8(5|->id_reg_8)-1 = 0 & mem<+{SSHORTINT_TO_USHORTINT(mem(SSHORTINT_TO_USHORTINT(SCHAR_TO_SSHORTINT(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))))|->i_o_ports(rgs8(6|->id_reg_8))}: USHORTINT +-> SCHAR & dom(mem<+{SSHORTINT_TO_USHORTINT(mem(SSHORTINT_TO_USHORTINT(SCHAR_TO_SSHORTINT(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))))|->i_o_ports(rgs8(6|->id_reg_8))}) = USHORTINT);
  ("`Local hypotheses'" & data_in: SCHAR & hvn,lvn = SSHORTINT_TO_SCHAR(mem(SSHORTINT_TO_USHORTINT(SCHAR_TO_SSHORTINT(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))+1) & {13|->id_reg_8|->hvn}\/{14|->id_reg_8|->lvn}\/{5|->id_reg_8|->rgs8(5|->id_reg_8)-1}: (1..18)*{id_reg_8} +-> SCHAR & dom({13|->id_reg_8|->hvn}\/{14|->id_reg_8|->lvn}\/{5|->id_reg_8|->rgs8(5|->id_reg_8)-1}) = (1..18)*{id_reg_8} & not(rgs8(5|->id_reg_8)-1 = 0) & mem<+{SSHORTINT_TO_USHORTINT(mem(SSHORTINT_TO_USHORTINT(SCHAR_TO_SSHORTINT(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))))|->i_o_ports(rgs8(6|->id_reg_8))}: USHORTINT +-> SCHAR & dom(mem<+{SSHORTINT_TO_USHORTINT(mem(SSHORTINT_TO_USHORTINT(SCHAR_TO_SSHORTINT(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))))|->i_o_ports(rgs8(6|->id_reg_8))}) = USHORTINT);
  ("`IND preconditions in this component'" & rgs8(5|->id_reg_8)-1: SCHAR & mem(SSHORTINT_TO_USHORTINT(SCHAR_TO_SSHORTINT(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))-1: SSHORTINT);
  ("`Local hypotheses'" & data_in: SCHAR & hvn,lvn = SSHORTINT_TO_SCHAR(mem(SSHORTINT_TO_USHORTINT(SCHAR_TO_SSHORTINT(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))-1) & {13|->id_reg_8|->hvn}\/{14|->id_reg_8|->lvn}\/{5|->id_reg_8|->rgs8(5|->id_reg_8)-1}: (1..18)*{id_reg_8} +-> SCHAR & dom({13|->id_reg_8|->hvn}\/{14|->id_reg_8|->lvn}\/{5|->id_reg_8|->rgs8(5|->id_reg_8)-1}) = (1..18)*{id_reg_8});
  ("`Local hypotheses'" & data_in: SCHAR & hvn,lvn = SSHORTINT_TO_SCHAR(mem(SSHORTINT_TO_USHORTINT(SCHAR_TO_SSHORTINT(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))-1) & {13|->id_reg_8|->hvn}\/{14|->id_reg_8|->lvn}\/{5|->id_reg_8|->rgs8(5|->id_reg_8)-1}: (1..18)*{id_reg_8} +-> SCHAR & dom({13|->id_reg_8|->hvn}\/{14|->id_reg_8|->lvn}\/{5|->id_reg_8|->rgs8(5|->id_reg_8)-1}) = (1..18)*{id_reg_8} & mem<+{SSHORTINT_TO_USHORTINT(mem(SSHORTINT_TO_USHORTINT(SCHAR_TO_SSHORTINT(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))))|->i_o_ports(rgs8(6|->id_reg_8))}: USHORTINT +-> SCHAR & dom(mem<+{SSHORTINT_TO_USHORTINT(mem(SSHORTINT_TO_USHORTINT(SCHAR_TO_SSHORTINT(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))))|->i_o_ports(rgs8(6|->id_reg_8))}) = USHORTINT);
  ("`INDR preconditions in this component'" & rgs8(5|->id_reg_8)-1: SCHAR & mem(SSHORTINT_TO_USHORTINT(SCHAR_TO_SSHORTINT(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))-1: SSHORTINT);
  ("`Local hypotheses'" & data_in: SCHAR & hvn,lvn = SSHORTINT_TO_SCHAR(mem(SSHORTINT_TO_USHORTINT(SCHAR_TO_SSHORTINT(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))-1) & {13|->id_reg_8|->hvn}\/{14|->id_reg_8|->lvn}\/{5|->id_reg_8|->rgs8(5|->id_reg_8)-1}: (1..18)*{id_reg_8} +-> SCHAR & dom({13|->id_reg_8|->hvn}\/{14|->id_reg_8|->lvn}\/{5|->id_reg_8|->rgs8(5|->id_reg_8)-1}) = (1..18)*{id_reg_8} & rgs8(5|->id_reg_8)-1 = 0 & mem<+{SSHORTINT_TO_USHORTINT(mem(SSHORTINT_TO_USHORTINT(SCHAR_TO_SSHORTINT(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))))|->i_o_ports(rgs8(6|->id_reg_8))}: USHORTINT +-> SCHAR & dom(mem<+{SSHORTINT_TO_USHORTINT(mem(SSHORTINT_TO_USHORTINT(SCHAR_TO_SSHORTINT(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))))|->i_o_ports(rgs8(6|->id_reg_8))}) = USHORTINT);
  ("`Local hypotheses'" & data_in: SCHAR & hvn,lvn = SSHORTINT_TO_SCHAR(mem(SSHORTINT_TO_USHORTINT(SCHAR_TO_SSHORTINT(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))-1) & {13|->id_reg_8|->hvn}\/{14|->id_reg_8|->lvn}\/{5|->id_reg_8|->rgs8(5|->id_reg_8)-1}: (1..18)*{id_reg_8} +-> SCHAR & dom({13|->id_reg_8|->hvn}\/{14|->id_reg_8|->lvn}\/{5|->id_reg_8|->rgs8(5|->id_reg_8)-1}) = (1..18)*{id_reg_8} & not(rgs8(5|->id_reg_8)-1 = 0) & mem<+{SSHORTINT_TO_USHORTINT(mem(SSHORTINT_TO_USHORTINT(SCHAR_TO_SSHORTINT(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))))|->i_o_ports(rgs8(6|->id_reg_8))}: USHORTINT +-> SCHAR & dom(mem<+{SSHORTINT_TO_USHORTINT(mem(SSHORTINT_TO_USHORTINT(SCHAR_TO_SSHORTINT(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))))|->i_o_ports(rgs8(6|->id_reg_8))}) = USHORTINT);
  ("`OUT_9n0_A preconditions in this component'" & nn: UCHAR);
  (i_o_ports<+{nn|->rgs8(1|->id_reg_8)}: UCHAR +-> SCHAR);
  (dom(i_o_ports<+{nn|->rgs8(1|->id_reg_8)}) = UCHAR);
  ("`OUT_9C0_r preconditions in this component'" & rr: (1..18)*{id_reg_8});
  (i_o_ports<+{rgs8(rr)|->rgs8(6|->id_reg_8)}: UCHAR +-> SCHAR);
  (dom(i_o_ports<+{rgs8(rr)|->rgs8(6|->id_reg_8)}) = UCHAR);
  ("`OUTI preconditions in this component'" & rgs8(5|->id_reg_8)-1: SCHAR & mem(SSHORTINT_TO_USHORTINT(SCHAR_TO_SSHORTINT(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))+1: SSHORTINT);
  ("`Local hypotheses'" & hvn,lvn = SSHORTINT_TO_SCHAR(mem(SSHORTINT_TO_USHORTINT(SCHAR_TO_SSHORTINT(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))+1) & {13|->id_reg_8|->hvn}\/{14|->id_reg_8|->lvn}\/{5|->id_reg_8|->rgs8(5|->id_reg_8)-1}: (1..18)*{id_reg_8} +-> SCHAR & dom({13|->id_reg_8|->hvn}\/{14|->id_reg_8|->lvn}\/{5|->id_reg_8|->rgs8(5|->id_reg_8)-1}) = (1..18)*{id_reg_8});
  (i_o_ports<+{rgs8(6|->id_reg_8)|->mem(SSHORTINT_TO_USHORTINT(mem(SSHORTINT_TO_USHORTINT(SCHAR_TO_SSHORTINT(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))))}: UCHAR +-> SCHAR);
  (dom(i_o_ports<+{rgs8(6|->id_reg_8)|->mem(SSHORTINT_TO_USHORTINT(mem(SSHORTINT_TO_USHORTINT(SCHAR_TO_SSHORTINT(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))))}) = UCHAR);
  ("`OUTIR preconditions in this component'" & rgs8(5|->id_reg_8)-1: SCHAR & mem(SSHORTINT_TO_USHORTINT(SCHAR_TO_SSHORTINT(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))+1: SSHORTINT);
  ("`Local hypotheses'" & hvn,lvn = SSHORTINT_TO_SCHAR(mem(SSHORTINT_TO_USHORTINT(SCHAR_TO_SSHORTINT(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))+1) & {13|->id_reg_8|->hvn}\/{14|->id_reg_8|->lvn}\/{5|->id_reg_8|->rgs8(5|->id_reg_8)-1}: (1..18)*{id_reg_8} +-> SCHAR & dom({13|->id_reg_8|->hvn}\/{14|->id_reg_8|->lvn}\/{5|->id_reg_8|->rgs8(5|->id_reg_8)-1}) = (1..18)*{id_reg_8} & rgs8(5|->id_reg_8)-1 = 0);
  ("`Local hypotheses'" & hvn,lvn = SSHORTINT_TO_SCHAR(mem(SSHORTINT_TO_USHORTINT(SCHAR_TO_SSHORTINT(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))+1) & {13|->id_reg_8|->hvn}\/{14|->id_reg_8|->lvn}\/{5|->id_reg_8|->rgs8(5|->id_reg_8)-1}: (1..18)*{id_reg_8} +-> SCHAR & dom({13|->id_reg_8|->hvn}\/{14|->id_reg_8|->lvn}\/{5|->id_reg_8|->rgs8(5|->id_reg_8)-1}) = (1..18)*{id_reg_8} & not(rgs8(5|->id_reg_8)-1 = 0))
END
&
THEORY EnumerateX IS
  id_reg_8 == {a0,f0,f_0,a_0,b0,c0,b_0,c_0,d0,e0,d_0,e_0,h0,l0,h_0,l_0,i0,r0};
  id_reg_16 == {BC,DE,HL,SP,AF}
END
&
THEORY Version IS
  POVersion(V3.8.3)(CLT == "V3.7.6")(genOPO == KO, local_op == OK)
END
