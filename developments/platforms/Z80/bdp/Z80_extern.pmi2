THEORY BalanceX IS
  Z80_extern,119,21,0,50,48,0,0;
  InstanciatedConstraintsLemmas,0,0,0,0,0,0,0;
  AssertionLemmas,62,18,0,42,2,0,0;
  Initialisation,6,0,0,6,0,0,0;
  ext_NMI,5,3,0,0,2,0,0;
  ext_INT,40,0,0,1,39,0,0;
  ext_RESET,6,0,0,1,5,0,0
END
&
THEORY ProofState IS
  Proved(0);
  Proved(1);
  Proved(1);
  Proved(1);
  Proved(1);
  Proved(1);
  Proved(0);
  Proved(1);
  Proved(1);
  Proved(1);
  Proved(1);
  Proved(1);
  Proved(1);
  Proved(1);
  Proved(1);
  Proved(1);
  Proved(1);
  Proved(1);
  Proved(1);
  Proved(1);
  Proved(1);
  Proved(1);
  Proved(1);
  Proved(1);
  Proved(1);
  Proved(1);
  Proved(1);
  Proved(1);
  Proved(1);
  Proved(1);
  Proved(1);
  Proved(1);
  Proved(1);
  Proved(1);
  Proved(1);
  Proved(1);
  Proved(1);
  Proved(1);
  Proved(1);
  Proved(1);
  Proved(1);
  Proved(1);
  Proved(1);
  Proved(1);
  Proved(1);
  Proved(1);
  Proved(1);
  Proved(Util);
  Proved(1);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(1);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(1);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0)
END
&
THEORY MethodList IS
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  eh(USHORT,_h,Goal) & ss & pr;
  pr;
  dd & ah(ran(ushort_bv16) = BV16 & dom(ushort_bv16) = USHORT) & pr & pr & pr;
  ah(not(ushort_bv16(add16USHORT(0,bv16_ushort(sp), -2)) = ushort_bv16(add16USHORT(0,bv16_ushort(sp), -1)))) & ar(BitX.1,Once) & ss & pr & ss & pr & ss & pr & dd & dd & ah(ushort_bv16(add16USHORT(0,bv16_ushort(sp), -2)): BV16 & ushort_bv16(add16USHORT(0,bv16_ushort(sp), -1)): BV16 & pc_high: BYTE & pc_low: BYTE & not(ushort_bv16(add16USHORT(0,bv16_ushort(sp), -2)) = ushort_bv16(add16USHORT(0,bv16_ushort(sp), -1)))) & pr & pr & pr & pr & pr & pp(rt.0);
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  dd & ah(instruction_next: USHORT +-> USHORT & ran(instruction_next) = USHORT & pc: USHORT) & pr & pr & pr & pr;
  dd & ss & eh(dom(rgs8),_h,Goal) & ss & pr;
  pp(rt.0);
  dd & ss & eh(dom(rgs8),_h,Goal) & ss & pr;
  pp(rt.0);
  dd & ss & eh(dom(rgs8),_h,Goal) & ss & pr;
  pp(rt.0);
  dd & ss & eh(dom(rgs8),_h,Goal) & ss & pr;
  dd & pr(Tac(Update_flag));
  dd & ss & eh(dom(rgs8),_h,Goal) & ss & pr;
  dd & pr(Tac(Update_flag));
  dd & ss & eh(dom(rgs8),_h,Goal) & ss & pr;
  dd & pr(Tac(Update_flag));
  dd & ss & eh(dom(rgs8),_h,Goal) & ss & pr;
  dd & pr(Tac(Update_flag));
  dd & ss & eh(dom(rgs8),_h,Goal) & ss & pr;
  dd & pr(Tac(Update_flag));
  pr;
  pr;
  pr;
  eh(bv_9ireg_plus_d0,_h,Goal) & pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr
END
&
THEORY PassList IS
  Force(0),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(0),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(1),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(1),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(1),?;
  Force(0),?;
  Force(0),?;
  Force(1),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(1),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?
END
&
THEORY ManForms 
END
&
THEORY Version IS
  POVersion(V3.8.3)(CLT == "V3.7.6")(genOPO == KO,genDivergencePO == KO,local_op == OK);
  PRVersion("V3.3.3.p39")(CLT == "V3.7.6")
END
