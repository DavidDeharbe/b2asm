
THEORY ProofList IS
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & LDDRPrecondition.3,(_f(1394) => _f(1395));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & LDDRPrecondition.2,(_f(1392) => _f(1393));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & LDDRPrecondition.1,(_f(1390) => _f(1391));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1311) & LDDRSubstitution.39,(_f(1388) => _f(1389));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1311) & LDDRSubstitution.38,(_f(1386) => _f(1387));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1311) & LDDRSubstitution.37,(_f(1384) => _f(1385));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1311) & LDDRSubstitution.36,(_f(1382) => _f(1383));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1311) & LDDRSubstitution.35,(_f(1380) => _f(1381));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1311) & LDDRSubstitution.34,(_f(1378) => _f(1379));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1311) & LDDRSubstitution.33,(_f(1376) => _f(1377));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1311) & LDDRSubstitution.32,(_f(1374) => _f(1375));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1311) & LDDRSubstitution.31,(_f(1372) => _f(1373));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1311) & LDDRSubstitution.30,(_f(1370) => _f(1371));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1311) & LDDRSubstitution.29,(_f(1368) => _f(1369));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1311) & LDDRSubstitution.28,(_f(1366) => _f(1367));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1311) & LDDRSubstitution.27,(_f(1364) => _f(1365));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1311) & LDDRSubstitution.26,(_f(1362) => _f(1363));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1311) & LDDRSubstitution.25,(_f(1360) => _f(1361));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1311) & LDDRSubstitution.24,(_f(1358) => _f(1359));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1311) & LDDRSubstitution.23,(_f(1356) => _f(1357));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1311) & LDDRSubstitution.22,(_f(1354) => _f(1355));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1311) & LDDRSubstitution.21,(_f(1352) => _f(1353));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1311) & LDDRSubstitution.20,(_f(1350) => _f(1351));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1311) & LDDRSubstitution.19,(_f(1348) => _f(1349));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1311) & LDDRSubstitution.18,(_f(1346) => _f(1347));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1311) & LDDRSubstitution.17,(_f(1344) => _f(1345));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1311) & LDDRSubstitution.16,(_f(1342) => _f(1343));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1311) & LDDRSubstitution.15,(_f(1340) => _f(1341));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1311) & LDDRSubstitution.14,(_f(1338) => _f(1339));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1311) & LDDRSubstitution.13,(_f(1336) => _f(1337));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1311) & LDDRSubstitution.12,(_f(1334) => _f(1335));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1311) & LDDRSubstitution.11,(_f(1332) => _f(1333));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1311) & LDDRSubstitution.10,(_f(1330) => _f(1331));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1311) & LDDRSubstitution.9,(_f(1328) => _f(1329));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1311) & LDDRSubstitution.8,(_f(1326) => _f(1327));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1311) & LDDRSubstitution.7,(_f(1324) => _f(1325));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1311) & LDDRSubstitution.6,(_f(1322) => _f(1323));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1311) & LDDRSubstitution.5,(_f(1320) => _f(1321));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1311) & LDDRSubstitution.4,(_f(1318) => _f(1319));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1311) & LDDRSubstitution.3,(_f(1316) => _f(1317));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1311) & LDDRSubstitution.2,(_f(1314) => _f(1315));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1311) & LDDRSubstitution.1,(_f(1312) => _f(1313));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & LDDPrecondition.3,(_f(1308) => _f(1309));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & LDDPrecondition.2,(_f(1306) => _f(1307));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & LDDPrecondition.1,(_f(1304) => _f(1305));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1231) & LDDSubstitution.36,(_f(1302) => _f(1303));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1231) & LDDSubstitution.35,(_f(1300) => _f(1301));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1231) & LDDSubstitution.34,(_f(1298) => _f(1299));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1231) & LDDSubstitution.33,(_f(1296) => _f(1297));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1231) & LDDSubstitution.32,(_f(1294) => _f(1295));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1231) & LDDSubstitution.31,(_f(1292) => _f(1293));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1231) & LDDSubstitution.30,(_f(1290) => _f(1291));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1231) & LDDSubstitution.29,(_f(1288) => _f(1289));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1231) & LDDSubstitution.28,(_f(1286) => _f(1287));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1231) & LDDSubstitution.27,(_f(1284) => _f(1285));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1231) & LDDSubstitution.26,(_f(1282) => _f(1283));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1231) & LDDSubstitution.25,(_f(1280) => _f(1281));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1231) & LDDSubstitution.24,(_f(1278) => _f(1279));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1231) & LDDSubstitution.23,(_f(1276) => _f(1277));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1231) & LDDSubstitution.22,(_f(1274) => _f(1275));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1231) & LDDSubstitution.21,(_f(1272) => _f(1273));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1231) & LDDSubstitution.20,(_f(1270) => _f(1271));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1231) & LDDSubstitution.19,(_f(1268) => _f(1269));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1231) & LDDSubstitution.18,(_f(1266) => _f(1267));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1231) & LDDSubstitution.17,(_f(1264) => _f(1265));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1231) & LDDSubstitution.16,(_f(1262) => _f(1263));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1231) & LDDSubstitution.15,(_f(1260) => _f(1261));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1231) & LDDSubstitution.14,(_f(1258) => _f(1259));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1231) & LDDSubstitution.13,(_f(1256) => _f(1257));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1231) & LDDSubstitution.12,(_f(1254) => _f(1255));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1231) & LDDSubstitution.11,(_f(1252) => _f(1253));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1231) & LDDSubstitution.10,(_f(1250) => _f(1251));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1231) & LDDSubstitution.9,(_f(1248) => _f(1249));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1231) & LDDSubstitution.8,(_f(1246) => _f(1247));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1231) & LDDSubstitution.7,(_f(1244) => _f(1245));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1231) & LDDSubstitution.6,(_f(1242) => _f(1243));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1231) & LDDSubstitution.5,(_f(1240) => _f(1241));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1231) & LDDSubstitution.4,(_f(1238) => _f(1239));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1231) & LDDSubstitution.3,(_f(1236) => _f(1237));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1231) & LDDSubstitution.2,(_f(1234) => _f(1235));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1231) & LDDSubstitution.1,(_f(1232) => _f(1233));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & LDIRPrecondition.3,(_f(1228) => _f(1229));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & LDIRPrecondition.2,(_f(1226) => _f(1227));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & LDIRPrecondition.1,(_f(1224) => _f(1225));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1145) & LDIRSubstitution.39,(_f(1222) => _f(1223));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1145) & LDIRSubstitution.38,(_f(1220) => _f(1221));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1145) & LDIRSubstitution.37,(_f(1218) => _f(1219));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1145) & LDIRSubstitution.36,(_f(1216) => _f(1217));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1145) & LDIRSubstitution.35,(_f(1214) => _f(1215));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1145) & LDIRSubstitution.34,(_f(1212) => _f(1213));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1145) & LDIRSubstitution.33,(_f(1210) => _f(1211));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1145) & LDIRSubstitution.32,(_f(1208) => _f(1209));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1145) & LDIRSubstitution.31,(_f(1206) => _f(1207));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1145) & LDIRSubstitution.30,(_f(1204) => _f(1205));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1145) & LDIRSubstitution.29,(_f(1202) => _f(1203));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1145) & LDIRSubstitution.28,(_f(1200) => _f(1201));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1145) & LDIRSubstitution.27,(_f(1198) => _f(1199));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1145) & LDIRSubstitution.26,(_f(1196) => _f(1197));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1145) & LDIRSubstitution.25,(_f(1194) => _f(1195));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1145) & LDIRSubstitution.24,(_f(1192) => _f(1193));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1145) & LDIRSubstitution.23,(_f(1190) => _f(1191));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1145) & LDIRSubstitution.22,(_f(1188) => _f(1189));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1145) & LDIRSubstitution.21,(_f(1186) => _f(1187));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1145) & LDIRSubstitution.20,(_f(1184) => _f(1185));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1145) & LDIRSubstitution.19,(_f(1182) => _f(1183));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1145) & LDIRSubstitution.18,(_f(1180) => _f(1181));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1145) & LDIRSubstitution.17,(_f(1178) => _f(1179));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1145) & LDIRSubstitution.16,(_f(1176) => _f(1177));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1145) & LDIRSubstitution.15,(_f(1174) => _f(1175));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1145) & LDIRSubstitution.14,(_f(1172) => _f(1173));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1145) & LDIRSubstitution.13,(_f(1170) => _f(1171));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1145) & LDIRSubstitution.12,(_f(1168) => _f(1169));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1145) & LDIRSubstitution.11,(_f(1166) => _f(1167));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1145) & LDIRSubstitution.10,(_f(1164) => _f(1165));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1145) & LDIRSubstitution.9,(_f(1162) => _f(1163));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1145) & LDIRSubstitution.8,(_f(1160) => _f(1161));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1145) & LDIRSubstitution.7,(_f(1158) => _f(1159));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1145) & LDIRSubstitution.6,(_f(1156) => _f(1157));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1145) & LDIRSubstitution.5,(_f(1154) => _f(1155));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1145) & LDIRSubstitution.4,(_f(1152) => _f(1153));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1145) & LDIRSubstitution.3,(_f(1150) => _f(1151));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1145) & LDIRSubstitution.2,(_f(1148) => _f(1149));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1145) & LDIRSubstitution.1,(_f(1146) => _f(1147));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & LDIPrecondition.3,(_f(1142) => _f(1143));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & LDIPrecondition.2,(_f(1140) => _f(1141));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & LDIPrecondition.1,(_f(1138) => _f(1139));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1065) & LDISubstitution.36,(_f(1136) => _f(1137));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1065) & LDISubstitution.35,(_f(1134) => _f(1135));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1065) & LDISubstitution.34,(_f(1132) => _f(1133));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1065) & LDISubstitution.33,(_f(1130) => _f(1131));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1065) & LDISubstitution.32,(_f(1128) => _f(1129));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1065) & LDISubstitution.31,(_f(1126) => _f(1127));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1065) & LDISubstitution.30,(_f(1124) => _f(1125));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1065) & LDISubstitution.29,(_f(1122) => _f(1123));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1065) & LDISubstitution.28,(_f(1120) => _f(1121));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1065) & LDISubstitution.27,(_f(1118) => _f(1119));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1065) & LDISubstitution.26,(_f(1116) => _f(1117));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1065) & LDISubstitution.25,(_f(1114) => _f(1115));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1065) & LDISubstitution.24,(_f(1112) => _f(1113));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1065) & LDISubstitution.23,(_f(1110) => _f(1111));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1065) & LDISubstitution.22,(_f(1108) => _f(1109));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1065) & LDISubstitution.21,(_f(1106) => _f(1107));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1065) & LDISubstitution.20,(_f(1104) => _f(1105));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1065) & LDISubstitution.19,(_f(1102) => _f(1103));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1065) & LDISubstitution.18,(_f(1100) => _f(1101));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1065) & LDISubstitution.17,(_f(1098) => _f(1099));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1065) & LDISubstitution.16,(_f(1096) => _f(1097));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1065) & LDISubstitution.15,(_f(1094) => _f(1095));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1065) & LDISubstitution.14,(_f(1092) => _f(1093));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1065) & LDISubstitution.13,(_f(1090) => _f(1091));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1065) & LDISubstitution.12,(_f(1088) => _f(1089));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1065) & LDISubstitution.11,(_f(1086) => _f(1087));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1065) & LDISubstitution.10,(_f(1084) => _f(1085));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1065) & LDISubstitution.9,(_f(1082) => _f(1083));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1065) & LDISubstitution.8,(_f(1080) => _f(1081));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1065) & LDISubstitution.7,(_f(1078) => _f(1079));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1065) & LDISubstitution.6,(_f(1076) => _f(1077));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1065) & LDISubstitution.5,(_f(1074) => _f(1075));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1065) & LDISubstitution.4,(_f(1072) => _f(1073));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1065) & LDISubstitution.3,(_f(1070) => _f(1071));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1065) & LDISubstitution.2,(_f(1068) => _f(1069));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1065) & LDISubstitution.1,(_f(1066) => _f(1067));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & EX_9SP0_IYPrecondition.2,(_f(1062) => _f(1063));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & EX_9SP0_IYPrecondition.1,(_f(1060) => _f(1061));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1039) & EX_9SP0_IYSubstitution.10,(_f(1058) => _f(1059));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1039) & EX_9SP0_IYSubstitution.9,(_f(1056) => _f(1057));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1039) & EX_9SP0_IYSubstitution.8,(_f(1054) => _f(1055));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1039) & EX_9SP0_IYSubstitution.7,(_f(1052) => _f(1053));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1039) & EX_9SP0_IYSubstitution.6,(_f(1050) => _f(1051));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1039) & EX_9SP0_IYSubstitution.5,(_f(1048) => _f(1049));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1039) & EX_9SP0_IYSubstitution.4,(_f(1046) => _f(1047));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1039) & EX_9SP0_IYSubstitution.3,(_f(1044) => _f(1045));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1039) & EX_9SP0_IYSubstitution.2,(_f(1042) => _f(1043));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1039) & EX_9SP0_IYSubstitution.1,(_f(1040) => _f(1041));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & EX_9SP0_IXPrecondition.2,(_f(1036) => _f(1037));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & EX_9SP0_IXPrecondition.1,(_f(1034) => _f(1035));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1013) & EX_9SP0_IXSubstitution.10,(_f(1032) => _f(1033));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1013) & EX_9SP0_IXSubstitution.9,(_f(1030) => _f(1031));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1013) & EX_9SP0_IXSubstitution.8,(_f(1028) => _f(1029));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1013) & EX_9SP0_IXSubstitution.7,(_f(1026) => _f(1027));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1013) & EX_9SP0_IXSubstitution.6,(_f(1024) => _f(1025));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1013) & EX_9SP0_IXSubstitution.5,(_f(1022) => _f(1023));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1013) & EX_9SP0_IXSubstitution.4,(_f(1020) => _f(1021));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1013) & EX_9SP0_IXSubstitution.3,(_f(1018) => _f(1019));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1013) & EX_9SP0_IXSubstitution.2,(_f(1016) => _f(1017));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(1013) & EX_9SP0_IXSubstitution.1,(_f(1014) => _f(1015));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & EX_9SP0_HLPrecondition.2,(_f(1010) => _f(1011));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & EX_9SP0_HLPrecondition.1,(_f(1008) => _f(1009));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(977) & EX_9SP0_HLSubstitution.15,(_f(1006) => _f(1007));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(977) & EX_9SP0_HLSubstitution.14,(_f(1004) => _f(1005));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(977) & EX_9SP0_HLSubstitution.13,(_f(1002) => _f(1003));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(977) & EX_9SP0_HLSubstitution.12,(_f(1000) => _f(1001));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(977) & EX_9SP0_HLSubstitution.11,(_f(998) => _f(999));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(977) & EX_9SP0_HLSubstitution.10,(_f(996) => _f(997));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(977) & EX_9SP0_HLSubstitution.9,(_f(994) => _f(995));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(977) & EX_9SP0_HLSubstitution.8,(_f(992) => _f(993));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(977) & EX_9SP0_HLSubstitution.7,(_f(990) => _f(991));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(977) & EX_9SP0_HLSubstitution.6,(_f(988) => _f(989));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(977) & EX_9SP0_HLSubstitution.5,(_f(986) => _f(987));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(977) & EX_9SP0_HLSubstitution.4,(_f(984) => _f(985));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(977) & EX_9SP0_HLSubstitution.3,(_f(982) => _f(983));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(977) & EX_9SP0_HLSubstitution.2,(_f(980) => _f(981));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(977) & EX_9SP0_HLSubstitution.1,(_f(978) => _f(979));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(951) & EXXSubstitution.12,(_f(974) => _f(975));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(951) & EXXSubstitution.11,(_f(972) => _f(973));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(951) & EXXSubstitution.10,(_f(970) => _f(971));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(951) & EXXSubstitution.9,(_f(968) => _f(969));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(951) & EXXSubstitution.8,(_f(966) => _f(967));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(951) & EXXSubstitution.7,(_f(964) => _f(965));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(951) & EXXSubstitution.6,(_f(962) => _f(963));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(951) & EXXSubstitution.5,(_f(960) => _f(961));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(951) & EXXSubstitution.4,(_f(958) => _f(959));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(951) & EXXSubstitution.3,(_f(956) => _f(957));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(951) & EXXSubstitution.2,(_f(954) => _f(955));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(951) & EXXSubstitution.1,(_f(952) => _f(953));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(941) & EX_AF_AF_Substitution.4,(_f(948) => _f(949));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(941) & EX_AF_AF_Substitution.3,(_f(946) => _f(947));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(941) & EX_AF_AF_Substitution.2,(_f(944) => _f(945));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(941) & EX_AF_AF_Substitution.1,(_f(942) => _f(943));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(931) & EX_DE_HLSubstitution.4,(_f(938) => _f(939));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(931) & EX_DE_HLSubstitution.3,(_f(936) => _f(937));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(931) & EX_DE_HLSubstitution.2,(_f(934) => _f(935));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(931) & EX_DE_HLSubstitution.1,(_f(932) => _f(933));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(915) & POP_IYSubstitution.7,(_f(928) => _f(929));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(915) & POP_IYSubstitution.6,(_f(926) => _f(927));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(915) & POP_IYSubstitution.5,(_f(924) => _f(925));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(915) & POP_IYSubstitution.4,(_f(922) => _f(923));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(915) & POP_IYSubstitution.3,(_f(920) => _f(921));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(915) & POP_IYSubstitution.2,(_f(918) => _f(919));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(915) & POP_IYSubstitution.1,(_f(916) => _f(917));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(899) & POP_IXSubstitution.7,(_f(912) => _f(913));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(899) & POP_IXSubstitution.6,(_f(910) => _f(911));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(899) & POP_IXSubstitution.5,(_f(908) => _f(909));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(899) & POP_IXSubstitution.4,(_f(906) => _f(907));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(899) & POP_IXSubstitution.3,(_f(904) => _f(905));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(899) & POP_IXSubstitution.2,(_f(902) => _f(903));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(899) & POP_IXSubstitution.1,(_f(900) => _f(901));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(877) & POP_qqSubstitution.10,(_f(896) => _f(897));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(877) & POP_qqSubstitution.9,(_f(894) => _f(895));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(877) & POP_qqSubstitution.8,(_f(892) => _f(893));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(877) & POP_qqSubstitution.7,(_f(890) => _f(891));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(877) & POP_qqSubstitution.6,(_f(888) => _f(889));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(877) & POP_qqSubstitution.5,(_f(886) => _f(887));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(877) & POP_qqSubstitution.4,(_f(884) => _f(885));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(877) & POP_qqSubstitution.3,(_f(882) => _f(883));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(877) & POP_qqSubstitution.2,(_f(880) => _f(881));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(877) & POP_qqSubstitution.1,(_f(878) => _f(879));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(837) & PUSH_IYSubstitution.19,(_f(874) => _f(875));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(837) & PUSH_IYSubstitution.18,(_f(872) => _f(873));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(837) & PUSH_IYSubstitution.17,(_f(870) => _f(871));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(837) & PUSH_IYSubstitution.16,(_f(868) => _f(869));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(837) & PUSH_IYSubstitution.15,(_f(866) => _f(867));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(837) & PUSH_IYSubstitution.14,(_f(864) => _f(865));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(837) & PUSH_IYSubstitution.13,(_f(862) => _f(863));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(837) & PUSH_IYSubstitution.12,(_f(860) => _f(861));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(837) & PUSH_IYSubstitution.11,(_f(858) => _f(859));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(837) & PUSH_IYSubstitution.10,(_f(856) => _f(857));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(837) & PUSH_IYSubstitution.9,(_f(854) => _f(855));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(837) & PUSH_IYSubstitution.8,(_f(852) => _f(853));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(837) & PUSH_IYSubstitution.7,(_f(850) => _f(851));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(837) & PUSH_IYSubstitution.6,(_f(848) => _f(849));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(837) & PUSH_IYSubstitution.5,(_f(846) => _f(847));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(837) & PUSH_IYSubstitution.4,(_f(844) => _f(845));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(837) & PUSH_IYSubstitution.3,(_f(842) => _f(843));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(837) & PUSH_IYSubstitution.2,(_f(840) => _f(841));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(837) & PUSH_IYSubstitution.1,(_f(838) => _f(839));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(797) & PUSH_IXSubstitution.19,(_f(834) => _f(835));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(797) & PUSH_IXSubstitution.18,(_f(832) => _f(833));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(797) & PUSH_IXSubstitution.17,(_f(830) => _f(831));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(797) & PUSH_IXSubstitution.16,(_f(828) => _f(829));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(797) & PUSH_IXSubstitution.15,(_f(826) => _f(827));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(797) & PUSH_IXSubstitution.14,(_f(824) => _f(825));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(797) & PUSH_IXSubstitution.13,(_f(822) => _f(823));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(797) & PUSH_IXSubstitution.12,(_f(820) => _f(821));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(797) & PUSH_IXSubstitution.11,(_f(818) => _f(819));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(797) & PUSH_IXSubstitution.10,(_f(816) => _f(817));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(797) & PUSH_IXSubstitution.9,(_f(814) => _f(815));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(797) & PUSH_IXSubstitution.8,(_f(812) => _f(813));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(797) & PUSH_IXSubstitution.7,(_f(810) => _f(811));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(797) & PUSH_IXSubstitution.6,(_f(808) => _f(809));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(797) & PUSH_IXSubstitution.5,(_f(806) => _f(807));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(797) & PUSH_IXSubstitution.4,(_f(804) => _f(805));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(797) & PUSH_IXSubstitution.3,(_f(802) => _f(803));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(797) & PUSH_IXSubstitution.2,(_f(800) => _f(801));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(797) & PUSH_IXSubstitution.1,(_f(798) => _f(799));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(757) & PUSH_qqSubstitution.19,(_f(794) => _f(795));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(757) & PUSH_qqSubstitution.18,(_f(792) => _f(793));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(757) & PUSH_qqSubstitution.17,(_f(790) => _f(791));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(757) & PUSH_qqSubstitution.16,(_f(788) => _f(789));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(757) & PUSH_qqSubstitution.15,(_f(786) => _f(787));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(757) & PUSH_qqSubstitution.14,(_f(784) => _f(785));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(757) & PUSH_qqSubstitution.13,(_f(782) => _f(783));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(757) & PUSH_qqSubstitution.12,(_f(780) => _f(781));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(757) & PUSH_qqSubstitution.11,(_f(778) => _f(779));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(757) & PUSH_qqSubstitution.10,(_f(776) => _f(777));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(757) & PUSH_qqSubstitution.9,(_f(774) => _f(775));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(757) & PUSH_qqSubstitution.8,(_f(772) => _f(773));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(757) & PUSH_qqSubstitution.7,(_f(770) => _f(771));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(757) & PUSH_qqSubstitution.6,(_f(768) => _f(769));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(757) & PUSH_qqSubstitution.5,(_f(766) => _f(767));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(757) & PUSH_qqSubstitution.4,(_f(764) => _f(765));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(757) & PUSH_qqSubstitution.3,(_f(762) => _f(763));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(757) & PUSH_qqSubstitution.2,(_f(760) => _f(761));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(757) & PUSH_qqSubstitution.1,(_f(758) => _f(759));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(745) & LD_SP_HLSubstitution.3,(_f(750) => _f(751));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(745) & LD_SP_HLSubstitution.2,(_f(748) => _f(749));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(745) & LD_SP_HLSubstitution.1,(_f(746) => _f(747));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & LD_9nn0_IYPrecondition.1,(_f(742) => _f(743));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(727) & LD_9nn0_IYSubstitution.7,(_f(740) => _f(741));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(727) & LD_9nn0_IYSubstitution.6,(_f(738) => _f(739));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(727) & LD_9nn0_IYSubstitution.5,(_f(736) => _f(737));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(727) & LD_9nn0_IYSubstitution.4,(_f(734) => _f(735));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(727) & LD_9nn0_IYSubstitution.3,(_f(732) => _f(733));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(727) & LD_9nn0_IYSubstitution.2,(_f(730) => _f(731));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(727) & LD_9nn0_IYSubstitution.1,(_f(728) => _f(729));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & LD_9nn0_IXPrecondition.1,(_f(724) => _f(725));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(709) & LD_9nn0_IXSubstitution.7,(_f(722) => _f(723));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(709) & LD_9nn0_IXSubstitution.6,(_f(720) => _f(721));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(709) & LD_9nn0_IXSubstitution.5,(_f(718) => _f(719));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(709) & LD_9nn0_IXSubstitution.4,(_f(716) => _f(717));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(709) & LD_9nn0_IXSubstitution.3,(_f(714) => _f(715));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(709) & LD_9nn0_IXSubstitution.2,(_f(712) => _f(713));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(709) & LD_9nn0_IXSubstitution.1,(_f(710) => _f(711));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & LD_9nn0_ddPrecondition.1,(_f(706) => _f(707));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(673) & LD_9nn0_ddSubstitution.16,(_f(704) => _f(705));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(673) & LD_9nn0_ddSubstitution.15,(_f(702) => _f(703));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(673) & LD_9nn0_ddSubstitution.14,(_f(700) => _f(701));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(673) & LD_9nn0_ddSubstitution.13,(_f(698) => _f(699));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(673) & LD_9nn0_ddSubstitution.12,(_f(696) => _f(697));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(673) & LD_9nn0_ddSubstitution.11,(_f(694) => _f(695));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(673) & LD_9nn0_ddSubstitution.10,(_f(692) => _f(693));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(673) & LD_9nn0_ddSubstitution.9,(_f(690) => _f(691));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(673) & LD_9nn0_ddSubstitution.8,(_f(688) => _f(689));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(673) & LD_9nn0_ddSubstitution.7,(_f(686) => _f(687));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(673) & LD_9nn0_ddSubstitution.6,(_f(684) => _f(685));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(673) & LD_9nn0_ddSubstitution.5,(_f(682) => _f(683));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(673) & LD_9nn0_ddSubstitution.4,(_f(680) => _f(681));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(673) & LD_9nn0_ddSubstitution.3,(_f(678) => _f(679));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(673) & LD_9nn0_ddSubstitution.2,(_f(676) => _f(677));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(673) & LD_9nn0_ddSubstitution.1,(_f(674) => _f(675));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & LD_9nn0_HLPrecondition.1,(_f(670) => _f(671));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(643) & LD_9nn0_HLSubstitution.13,(_f(668) => _f(669));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(643) & LD_9nn0_HLSubstitution.12,(_f(666) => _f(667));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(643) & LD_9nn0_HLSubstitution.11,(_f(664) => _f(665));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(643) & LD_9nn0_HLSubstitution.10,(_f(662) => _f(663));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(643) & LD_9nn0_HLSubstitution.9,(_f(660) => _f(661));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(643) & LD_9nn0_HLSubstitution.8,(_f(658) => _f(659));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(643) & LD_9nn0_HLSubstitution.7,(_f(656) => _f(657));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(643) & LD_9nn0_HLSubstitution.6,(_f(654) => _f(655));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(643) & LD_9nn0_HLSubstitution.5,(_f(652) => _f(653));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(643) & LD_9nn0_HLSubstitution.4,(_f(650) => _f(651));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(643) & LD_9nn0_HLSubstitution.3,(_f(648) => _f(649));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(643) & LD_9nn0_HLSubstitution.2,(_f(646) => _f(647));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(643) & LD_9nn0_HLSubstitution.1,(_f(644) => _f(645));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(631) & LD_IY_9nn0Substitution.5,(_f(640) => _f(641));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(631) & LD_IY_9nn0Substitution.4,(_f(638) => _f(639));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(631) & LD_IY_9nn0Substitution.3,(_f(636) => _f(637));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(631) & LD_IY_9nn0Substitution.2,(_f(634) => _f(635));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(631) & LD_IY_9nn0Substitution.1,(_f(632) => _f(633));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(619) & LD_IX_9nn0Substitution.5,(_f(628) => _f(629));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(619) & LD_IX_9nn0Substitution.4,(_f(626) => _f(627));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(619) & LD_IX_9nn0Substitution.3,(_f(624) => _f(625));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(619) & LD_IX_9nn0Substitution.2,(_f(622) => _f(623));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(619) & LD_IX_9nn0Substitution.1,(_f(620) => _f(621));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(599) & LD_dd_9nn0Substitution.9,(_f(616) => _f(617));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(599) & LD_dd_9nn0Substitution.8,(_f(614) => _f(615));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(599) & LD_dd_9nn0Substitution.7,(_f(612) => _f(613));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(599) & LD_dd_9nn0Substitution.6,(_f(610) => _f(611));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(599) & LD_dd_9nn0Substitution.5,(_f(608) => _f(609));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(599) & LD_dd_9nn0Substitution.4,(_f(606) => _f(607));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(599) & LD_dd_9nn0Substitution.3,(_f(604) => _f(605));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(599) & LD_dd_9nn0Substitution.2,(_f(602) => _f(603));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(599) & LD_dd_9nn0Substitution.1,(_f(600) => _f(601));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(589) & LD_HL_9nn0Substitution.4,(_f(596) => _f(597));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(589) & LD_HL_9nn0Substitution.3,(_f(594) => _f(595));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(589) & LD_HL_9nn0Substitution.2,(_f(592) => _f(593));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(589) & LD_HL_9nn0Substitution.1,(_f(590) => _f(591));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(581) & LD_dd_nnSubstitution.1,(_f(582) => _f(583));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(577) & LD_R_ASubstitution.1,(_f(578) => _f(579));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(573) & LD_I_ASubstitution.1,(_f(574) => _f(575));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(565) & LD_A_RSubstitution.3,(_f(570) => _f(571));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(565) & LD_A_RSubstitution.2,(_f(568) => _f(569));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(565) & LD_A_RSubstitution.1,(_f(566) => _f(567));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(557) & LD_A_ISubstitution.3,(_f(562) => _f(563));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(557) & LD_A_ISubstitution.2,(_f(560) => _f(561));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(557) & LD_A_ISubstitution.1,(_f(558) => _f(559));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(551) & LD_9nn0_ASubstitution.2,(_f(554) => _f(555));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(551) & LD_9nn0_ASubstitution.1,(_f(552) => _f(553));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & LD_9DE0_APrecondition.3,(_f(548) => _f(549));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & LD_9DE0_APrecondition.2,(_f(546) => _f(547));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & LD_9DE0_APrecondition.1,(_f(544) => _f(545));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(521) & LD_9DE0_ASubstitution.11,(_f(542) => _f(543));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(521) & LD_9DE0_ASubstitution.10,(_f(540) => _f(541));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(521) & LD_9DE0_ASubstitution.9,(_f(538) => _f(539));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(521) & LD_9DE0_ASubstitution.8,(_f(536) => _f(537));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(521) & LD_9DE0_ASubstitution.7,(_f(534) => _f(535));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(521) & LD_9DE0_ASubstitution.6,(_f(532) => _f(533));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(521) & LD_9DE0_ASubstitution.5,(_f(530) => _f(531));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(521) & LD_9DE0_ASubstitution.4,(_f(528) => _f(529));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(521) & LD_9DE0_ASubstitution.3,(_f(526) => _f(527));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(521) & LD_9DE0_ASubstitution.2,(_f(524) => _f(525));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(521) & LD_9DE0_ASubstitution.1,(_f(522) => _f(523));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & LD_9BC0_APrecondition.3,(_f(518) => _f(519));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & LD_9BC0_APrecondition.2,(_f(516) => _f(517));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & LD_9BC0_APrecondition.1,(_f(514) => _f(515));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(491) & LD_9BC0_ASubstitution.11,(_f(512) => _f(513));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(491) & LD_9BC0_ASubstitution.10,(_f(510) => _f(511));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(491) & LD_9BC0_ASubstitution.9,(_f(508) => _f(509));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(491) & LD_9BC0_ASubstitution.8,(_f(506) => _f(507));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(491) & LD_9BC0_ASubstitution.7,(_f(504) => _f(505));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(491) & LD_9BC0_ASubstitution.6,(_f(502) => _f(503));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(491) & LD_9BC0_ASubstitution.5,(_f(500) => _f(501));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(491) & LD_9BC0_ASubstitution.4,(_f(498) => _f(499));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(491) & LD_9BC0_ASubstitution.3,(_f(496) => _f(497));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(491) & LD_9BC0_ASubstitution.2,(_f(494) => _f(495));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(491) & LD_9BC0_ASubstitution.1,(_f(492) => _f(493));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(487) & LD_A_9nn0Substitution.1,(_f(488) => _f(489));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(479) & LD_A_9DE0Substitution.3,(_f(484) => _f(485));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(479) & LD_A_9DE0Substitution.2,(_f(482) => _f(483));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(479) & LD_A_9DE0Substitution.1,(_f(480) => _f(481));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(471) & LD_A_9BC0Substitution.3,(_f(476) => _f(477));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(471) & LD_A_9BC0Substitution.2,(_f(474) => _f(475));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(471) & LD_A_9BC0Substitution.1,(_f(472) => _f(473));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & LD_9IY_d0_nPrecondition.2,(_f(468) => _f(469));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & LD_9IY_d0_nPrecondition.1,(_f(466) => _f(467));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(459) & LD_9IY_d0_nSubstitution.3,(_f(464) => _f(465));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(459) & LD_9IY_d0_nSubstitution.2,(_f(462) => _f(463));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(459) & LD_9IY_d0_nSubstitution.1,(_f(460) => _f(461));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & LD_9IX_d0_nPrecondition.2,(_f(456) => _f(457));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & LD_9IX_d0_nPrecondition.1,(_f(454) => _f(455));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(447) & LD_9IX_d0_nSubstitution.3,(_f(452) => _f(453));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(447) & LD_9IX_d0_nSubstitution.2,(_f(450) => _f(451));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(447) & LD_9IX_d0_nSubstitution.1,(_f(448) => _f(449));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & LD_9HL0_nPrecondition.3,(_f(444) => _f(445));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & LD_9HL0_nPrecondition.2,(_f(442) => _f(443));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & LD_9HL0_nPrecondition.1,(_f(440) => _f(441));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(421) & LD_9HL0_nSubstitution.9,(_f(438) => _f(439));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(421) & LD_9HL0_nSubstitution.8,(_f(436) => _f(437));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(421) & LD_9HL0_nSubstitution.7,(_f(434) => _f(435));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(421) & LD_9HL0_nSubstitution.6,(_f(432) => _f(433));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(421) & LD_9HL0_nSubstitution.5,(_f(430) => _f(431));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(421) & LD_9HL0_nSubstitution.4,(_f(428) => _f(429));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(421) & LD_9HL0_nSubstitution.3,(_f(426) => _f(427));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(421) & LD_9HL0_nSubstitution.2,(_f(424) => _f(425));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(421) & LD_9HL0_nSubstitution.1,(_f(422) => _f(423));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & LD_9IY_d0_rPrecondition.2,(_f(418) => _f(419));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & LD_9IY_d0_rPrecondition.1,(_f(416) => _f(417));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(409) & LD_9IY_d0_rSubstitution.3,(_f(414) => _f(415));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(409) & LD_9IY_d0_rSubstitution.2,(_f(412) => _f(413));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(409) & LD_9IY_d0_rSubstitution.1,(_f(410) => _f(411));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & LD_9IX_d0_rPrecondition.2,(_f(406) => _f(407));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & LD_9IX_d0_rPrecondition.1,(_f(404) => _f(405));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(397) & LD_9IX_d0_rSubstitution.3,(_f(402) => _f(403));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(397) & LD_9IX_d0_rSubstitution.2,(_f(400) => _f(401));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(397) & LD_9IX_d0_rSubstitution.1,(_f(398) => _f(399));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & LD_9HL0_rPrecondition.3,(_f(394) => _f(395));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & LD_9HL0_rPrecondition.2,(_f(392) => _f(393));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & LD_9HL0_rPrecondition.1,(_f(390) => _f(391));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(371) & LD_9HL0_rSubstitution.9,(_f(388) => _f(389));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(371) & LD_9HL0_rSubstitution.8,(_f(386) => _f(387));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(371) & LD_9HL0_rSubstitution.7,(_f(384) => _f(385));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(371) & LD_9HL0_rSubstitution.6,(_f(382) => _f(383));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(371) & LD_9HL0_rSubstitution.5,(_f(380) => _f(381));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(371) & LD_9HL0_rSubstitution.4,(_f(378) => _f(379));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(371) & LD_9HL0_rSubstitution.3,(_f(376) => _f(377));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(371) & LD_9HL0_rSubstitution.2,(_f(374) => _f(375));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(371) & LD_9HL0_rSubstitution.1,(_f(372) => _f(373));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(367) & LD_r_9IY_d0Substitution.1,(_f(368) => _f(369));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(363) & LD_r_9IX_d0Substitution.1,(_f(364) => _f(365));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(355) & LD_r_9HL0Substitution.3,(_f(360) => _f(361));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(355) & LD_r_9HL0Substitution.2,(_f(358) => _f(359));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & _f(355) & LD_r_9HL0Substitution.1,(_f(356) => _f(357));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & _f(9) & Initialisation.1,(_f(348) => _f(349));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.119,(_f(346) => _f(347));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.118,(_f(344) => _f(345));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.117,(_f(342) => _f(343));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.116,(_f(340) => _f(341));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.115,(_f(338) => _f(339));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.114,(_f(336) => _f(337));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.113,(_f(334) => _f(335));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.112,(_f(332) => _f(333));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.111,(_f(330) => _f(331));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.110,(_f(328) => _f(329));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.109,(_f(326) => _f(327));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.108,(_f(324) => _f(325));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.107,(_f(322) => _f(323));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.106,(_f(320) => _f(321));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.105,(_f(318) => _f(319));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.104,(_f(316) => _f(317));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.103,(_f(314) => _f(315));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.102,(_f(312) => _f(313));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.101,(_f(310) => _f(311));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.100,(_f(308) => _f(309));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.99,(_f(306) => _f(307));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.98,(_f(304) => _f(305));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.97,(_f(302) => _f(303));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.96,(_f(300) => _f(301));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.95,(_f(298) => _f(299));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.94,(_f(296) => _f(297));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.93,(_f(294) => _f(295));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.92,(_f(292) => _f(293));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.91,(_f(290) => _f(291));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.90,(_f(288) => _f(289));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.89,(_f(286) => _f(287));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.88,(_f(284) => _f(285));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.87,(_f(282) => _f(283));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.86,(_f(280) => _f(281));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.85,(_f(278) => _f(279));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.84,(_f(276) => _f(277));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.83,(_f(274) => _f(275));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.82,(_f(272) => _f(273));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.81,(_f(270) => _f(271));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.80,(_f(268) => _f(269));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.79,(_f(266) => _f(267));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.78,(_f(264) => _f(265));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.77,(_f(262) => _f(263));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.76,(_f(260) => _f(261));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.75,(_f(258) => _f(259));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.74,(_f(256) => _f(257));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.73,(_f(254) => _f(255));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.72,(_f(252) => _f(253));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.71,(_f(250) => _f(251));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.70,(_f(248) => _f(249));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.69,(_f(246) => _f(247));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.68,(_f(244) => _f(245));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.67,(_f(242) => _f(243));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.66,(_f(240) => _f(241));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.65,(_f(238) => _f(239));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.64,(_f(236) => _f(237));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.63,(_f(234) => _f(235));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.62,(_f(232) => _f(233));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.61,(_f(230) => _f(231));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.60,(_f(228) => _f(229));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.59,(_f(226) => _f(227));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.58,(_f(224) => _f(225));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.57,(_f(222) => _f(223));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.56,(_f(220) => _f(221));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.55,(_f(218) => _f(219));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.54,(_f(216) => _f(217));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.53,(_f(214) => _f(215));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.52,(_f(212) => _f(213));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.51,(_f(210) => _f(211));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.50,(_f(208) => _f(209));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.49,(_f(206) => _f(207));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.48,(_f(204) => _f(205));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.47,(_f(202) => _f(203));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.46,(_f(200) => _f(201));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.45,(_f(198) => _f(199));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.44,(_f(196) => _f(197));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.43,(_f(194) => _f(195));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.42,(_f(192) => _f(193));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.41,(_f(190) => _f(191));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.40,(_f(188) => _f(189));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.39,(_f(186) => _f(187));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.38,(_f(184) => _f(185));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.37,(_f(182) => _f(183));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.36,(_f(180) => _f(181));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.35,(_f(178) => _f(179));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.34,(_f(176) => _f(177));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.33,(_f(174) => _f(175));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.32,(_f(172) => _f(173));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.31,(_f(170) => _f(171));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.30,(_f(168) => _f(169));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.29,(_f(166) => _f(167));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.28,(_f(164) => _f(165));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.27,(_f(162) => _f(163));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.26,(_f(160) => _f(161));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.25,(_f(158) => _f(159));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.24,(_f(156) => _f(157));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.23,(_f(154) => _f(155));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.22,(_f(152) => _f(153));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.21,(_f(150) => _f(151));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.20,(_f(148) => _f(149));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.19,(_f(146) => _f(147));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.18,(_f(144) => _f(145));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.17,(_f(142) => _f(143));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.16,(_f(140) => _f(141));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.15,(_f(138) => _f(139));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.14,(_f(136) => _f(137));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.13,(_f(134) => _f(135));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.12,(_f(132) => _f(133));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.11,(_f(130) => _f(131));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.10,(_f(128) => _f(129));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.9,(_f(126) => _f(127));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.8,(_f(124) => _f(125));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.7,(_f(122) => _f(123));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.6,(_f(120) => _f(121));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.5,(_f(118) => _f(119));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.4,(_f(116) => _f(117));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.3,(_f(114) => _f(115));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.2,(_f(112) => _f(113));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.1,(_f(110) => _f(111));
_f(5) & _f(4) & Properties.49,(_f(108) => _f(109));
_f(5) & _f(4) & Properties.48,(_f(106) => _f(107));
_f(5) & _f(4) & Properties.47,(_f(104) => _f(105));
_f(5) & _f(4) & Properties.46,(_f(102) => _f(103));
_f(5) & _f(4) & Properties.45,(_f(100) => _f(101));
_f(5) & _f(4) & Properties.44,(_f(98) => _f(99));
_f(5) & _f(4) & Properties.43,(_f(96) => _f(97));
_f(5) & _f(4) & Properties.42,(_f(94) => _f(95));
_f(5) & _f(4) & Properties.41,(_f(92) => _f(93));
_f(5) & _f(4) & Properties.40,(_f(90) => _f(91));
_f(5) & _f(4) & Properties.39,(_f(88) => _f(89));
_f(5) & _f(4) & Properties.38,(_f(86) => _f(87));
_f(5) & _f(4) & Properties.37,(_f(84) => _f(85));
_f(5) & _f(4) & Properties.36,(_f(82) => _f(83));
_f(5) & _f(4) & Properties.35,(_f(80) => _f(81));
_f(5) & _f(4) & Properties.34,(_f(78) => _f(79));
_f(5) & _f(4) & Properties.33,(_f(76) => _f(77));
_f(5) & _f(4) & Properties.32,(_f(74) => _f(75));
_f(5) & _f(4) & Properties.31,(_f(72) => _f(73));
_f(5) & _f(4) & Properties.30,(_f(70) => _f(71));
_f(5) & _f(4) & Properties.29,(_f(68) => _f(69));
_f(5) & _f(4) & Properties.28,(_f(66) => _f(67));
_f(5) & _f(4) & Properties.27,(_f(64) => _f(65));
_f(5) & _f(4) & Properties.26,(_f(62) => _f(63));
_f(5) & _f(4) & Properties.25,(_f(60) => _f(61));
_f(5) & _f(4) & Properties.24,(_f(58) => _f(59));
_f(5) & _f(4) & Properties.23,(_f(56) => _f(57));
_f(5) & _f(4) & Properties.22,(_f(54) => _f(55));
_f(5) & _f(4) & Properties.21,(_f(52) => _f(53));
_f(5) & _f(4) & Properties.20,(_f(50) => _f(51));
_f(5) & _f(4) & Properties.19,(_f(48) => _f(49));
_f(5) & _f(4) & Properties.18,(_f(46) => _f(47));
_f(5) & _f(4) & Properties.17,(_f(44) => _f(45));
_f(5) & _f(4) & Properties.16,(_f(42) => _f(43));
_f(5) & _f(4) & Properties.15,(_f(40) => _f(41));
_f(5) & _f(4) & Properties.14,(_f(38) => _f(39));
_f(5) & _f(4) & Properties.13,(_f(36) => _f(37));
_f(5) & _f(4) & Properties.12,(_f(34) => _f(35));
_f(5) & _f(4) & Properties.11,(_f(32) => _f(33));
_f(5) & _f(4) & Properties.10,(_f(30) => _f(31));
_f(5) & _f(4) & Properties.9,(_f(28) => _f(29));
_f(5) & _f(4) & Properties.8,(_f(26) => _f(27));
_f(5) & _f(4) & Properties.7,(_f(24) => _f(25));
_f(5) & _f(4) & Properties.6,(_f(22) => _f(23));
_f(5) & _f(4) & Properties.5,(_f(20) => _f(21));
_f(5) & _f(4) & Properties.4,(_f(18) => _f(19));
_f(5) & _f(4) & Properties.3,(_f(16) => _f(17));
_f(5) & _f(4) & Properties.2,(_f(14) => _f(15));
_f(5) & _f(4) & Properties.1,(_f(12) => _f(13))

END
&

THEORY Formulas IS
("`Component constraints'" & btrue);
("`Used machines constraints'" & btrue);
("`Component properties'" & (1..16)*{id_reg_8}: FIN(NATURAL*{id_reg_8}) & not((1..16)*{id_reg_8} = {}) & (1..5)*{id_reg_16}: FIN(NATURAL*{id_reg_16}) & not((1..5)*{id_reg_16} = {}) & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & dom(get_bv_reg16) = BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) & !(sp_,rgs8_,r1).(sp_: BV16 & rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & r1: (1..5)*{id_reg_16} => (r1 = 1|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(5|->id_reg_8),rgs8_(6|->id_reg_8))) & (r1 = 2|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(9|->id_reg_8),rgs8_(10|->id_reg_8))) & (r1 = 3|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(13|->id_reg_8),rgs8_(14|->id_reg_8))) & (r1 = 4|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = sp_) & (r1 = 5|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(1|->id_reg_8),rgs8_(2|->id_reg_8)))) & REG16_TO_REG8: (1..5)*{id_reg_16} +-> (1..16)*{id_reg_8}*((1..16)*{id_reg_8}) & dom(REG16_TO_REG8) = (1..5)*{id_reg_16} & REG16_TO_REG8(1|->id_reg_16) = 5|->id_reg_8|->(6|->id_reg_8) & REG16_TO_REG8(2|->id_reg_16) = 9|->id_reg_8|->(10|->id_reg_8) & REG16_TO_REG8(3|->id_reg_16) = 13|->id_reg_8|->(14|->id_reg_8) & REG16_TO_REG8(5|->id_reg_16) = 1|->id_reg_8|->(2|->id_reg_8) & REG8_TO_REG16: (1..16)*{id_reg_8}*((1..16)*{id_reg_8}) +-> (1..5)*{id_reg_16} & REG8_TO_REG16 = REG16_TO_REG8~ & update_flag_reg: BIT*BIT*BIT*BIT*BIT*BIT +-> {2|->id_reg_8}*BYTE & dom(update_flag_reg) = BIT*BIT*BIT*BIT*BIT*BIT & update_flag_reg = %(s7$0,z6$0,h4$0,pv2$0,n_add_sub$0,c0$0).(s7$0: BIT & z6$0: BIT & h4$0: BIT & pv2$0: BIT & n_add_sub$0: BIT & c0$0: BIT | 2|->id_reg_8|->[c0$0,n_add_sub$0,pv2$0,1,h4$0,1,z6$0,s7$0]) & bv_ireg_plus_d: BV16*SCHAR +-> BV16 & dom(bv_ireg_plus_d) = BV16*SCHAR & bv_ireg_plus_d = %(ix_iy,desloc).(ix_iy: BV16 & desloc: SCHAR | ushort_bv16((bv16_ushort(ix_iy)+desloc) mod 65536)) & bv_9ireg_plus_d0: (BV16 --> BYTE)*BV16*SCHAR +-> BYTE & dom(bv_9ireg_plus_d0) = (BV16 --> BYTE)*BV16*SCHAR & bv_9ireg_plus_d0 = %(mem,ix_iy,desloc).(mem: BV16 +-> BYTE & dom(mem) = BV16 & ix_iy: BV16 & desloc: SCHAR | mem(bv_ireg_plus_d(ix_iy,desloc))) & cc_get: ((1..16)*{id_reg_8} --> BYTE)*(0..8) +-> BIT & dom(cc_get) = ((1..16)*{id_reg_8} --> BYTE)*(0..8) & !rgs8_.(rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} => cc_get(rgs8_,0) = 1-bitget(rgs8_(2|->id_reg_8),6) & cc_get(rgs8_,1) = bitget(rgs8_(2|->id_reg_8),6) & cc_get(rgs8_,2) = 1-bitget(rgs8_(2|->id_reg_8),0) & cc_get(rgs8_,3) = bitget(rgs8_(2|->id_reg_8),0) & cc_get(rgs8_,4) = 1-bitget(rgs8_(2|->id_reg_8),2) & cc_get(rgs8_,5) = bitget(rgs8_(2|->id_reg_8),2) & cc_get(rgs8_,6) = 1-bitget(rgs8_(2|->id_reg_8),7) & cc_get(rgs8_,7) = bitget(rgs8_(2|->id_reg_8),7)));
("`Seen and used machines properties'" & abs: INT +-> INT & dom(abs) = INT & abs = %nn.(nn: INTEGER & nn<=maxint & minint<=nn & 0<=nn | nn)\/%nn.(nn: INTEGER & nn<=maxint & minint<=nn & nn+1<=0 | -nn) & is_zero16USHORT: USHORT +-> BIT & dom(is_zero16USHORT) = USHORT & is_zero16USHORT = %nat1.(nat1: USHORT | bool_bit(bool(nat1 = 0))) & is_negative: BYTE +-> BIT & dom(is_negative) = BYTE & is_negative = %w1.(w1: BYTE | w1(7)) & half8UCHAR: UCHAR +-> UCHAR & dom(half8UCHAR) = UCHAR & half8UCHAR = %ww.(ww: UCHAR | ww mod 16) & inc: BYTE +-> BYTE & dom(inc) = BYTE & inc = %w1.(w1: BYTE | uchar_byte((byte_uchar(w1)+1) mod 256)) & dec: BYTE +-> BYTE & dom(dec) = BYTE & dec = %w1.(w1: BYTE | uchar_byte(abs(byte_uchar(w1)-1) mod 256)) & simple_add8UCHAR: UCHAR*UCHAR +-> UCHAR & dom(simple_add8UCHAR) = UCHAR*UCHAR & simple_add8UCHAR = %(w1,w2).(w1: UCHAR & w2: UCHAR | (w1+w2) mod 256) & add8UCHAR: BIT*UCHAR*UCHAR +-> UCHAR*BIT*BIT*BIT*BIT & dom(add8UCHAR) = BIT*UCHAR*UCHAR & add8UCHAR = %(carry,w1,w2).(carry: BIT & w1: UCHAR & w2: UCHAR | (carry+w1+w2) mod 256,bool_bit(bool(carry+uchar_schar(w1)+uchar_schar(w2)+1<=0)),bool_bit(bool(UCHAR_MAX+1<=carry+w1+w2)),bool_bit(bool(16<=carry+half8UCHAR(w1)+half8UCHAR(w2))),bool_bit(bool((carry+w1+w2) mod 256 = 0))) & substract8UCHAR: BIT*UCHAR*UCHAR +-> UCHAR*BIT*BIT*BIT*BIT & dom(substract8UCHAR) = BIT*UCHAR*UCHAR & substract8UCHAR = %(carry,w1,w2).(carry: BIT & w1: UCHAR & w2: UCHAR | (carry+w1-w2) mod 256,bool_bit(bool(carry+uchar_schar(w1)-uchar_schar(w2)+1<=0)),bool_bit(bool(UCHAR_MAX+1<=carry+w1-w2)),bool_bit(bool(16<=carry+half8UCHAR(w1)-half8UCHAR(w2))),bool_bit(bool((carry+w1-w2) mod 256 = 0))) & add16USHORT: BIT*USHORT*USHORT +-> USHORT & dom(add16USHORT) = BIT*USHORT*USHORT & add16USHORT = %(b1,w1,w2).(b1: BIT & w1: USHORT & w2: USHORT | (b1+w1+w2) mod 65536) & add_carryUSHORT: BIT*USHORT*USHORT +-> BIT & dom(add_carryUSHORT) = BIT*USHORT*USHORT & add_carryUSHORT = %(b1,w1,w2).(b1: BIT & w1: USHORT & w2: USHORT | bool_bit(bool(65537<=b1+w1+w2))) & add_halfcarryUSHORT: BIT*USHORT*USHORT +-> BIT & dom(add_halfcarryUSHORT) = BIT*USHORT*USHORT & add_halfcarryUSHORT = %(b1,w1,w2).(b1: BIT & w1: USHORT & w2: USHORT | bool_bit(bool(4097<=b1+w1 mod 4096+w2 mod 4096))) & sub16USHORT: BIT*USHORT*USHORT +-> USHORT & dom(sub16USHORT) = BIT*USHORT*USHORT & sub16USHORT = %(b1,w1,w2).(b1: BIT & w1: USHORT & w2: USHORT | (w1-w2-b1) mod 65536) & sub_carryUSHORT: BIT*USHORT*USHORT +-> BIT & dom(sub_carryUSHORT) = BIT*USHORT*USHORT & sub_carryUSHORT = %(b1,w1,w2).(b1: BIT & w1: USHORT & w2: USHORT | bool_bit(bool(65537<=w1-w2-b1))) & sub_halfcarryUSHORT: BIT*USHORT*USHORT +-> BIT & dom(sub_halfcarryUSHORT) = BIT*USHORT*USHORT & sub_halfcarryUSHORT = %(b1,w1,w2).(b1: BIT & w1: USHORT & w2: USHORT | bool_bit(bool(4097<=w1 mod 4096-w2 mod 4096-b1))) & inc_BV16: BV16 +-> BV16 & dom(inc_BV16) = BV16 & inc_BV16 = %w1.(w1: BV16 | ushort_bv16((bv16_ushort(w1)+1) mod 65536)) & dec_BV16: BV16 +-> BV16 & dom(dec_BV16) = BV16 & dec_BV16 = %w1.(w1: BV16 | ushort_bv16(abs(bv16_ushort(w1)-1) mod 65536)) & update_refresh_reg: BYTE +-> BYTE & dom(update_refresh_reg) = BYTE & update_refresh_reg = %v0.(v0: BYTE | uchar_byte(128*v0(7)+(64*v0(6)+32*v0(5)+16*v0(4)+8*v0(3)+4*v0(2)+2*v0(1)+v0(0)) mod 128)) & instruction_next: USHORT +-> USHORT & dom(instruction_next) = USHORT & instruction_next = %w1.(w1: USHORT | (w1+1) mod 65536) & instruction_jump: USHORT*(-126..129) +-> USHORT & dom(instruction_jump) = USHORT*(-126..129) & instruction_jump = %(p0,e0).(p0: USHORT & e0: -126..129 | (p0+e0) mod 65536) & daa_function: BIT*BIT*BIT*BYTE +-> BYTE*BIT*BIT & dom(daa_function) = BIT*BIT*BIT*BYTE & !(zn,c0,h0,value).(zn: BIT & c0: BIT & h0: BIT & value: BYTE => (zn = 0 & c0 = 0 & get_upper_digit(value): 0..9 & h0 = 0 & get_lower_digit(value): 0..9 => daa_function(zn,c0,h0,value) = (value,0)|->0) & (zn = 0 & c0 = 0 & get_upper_digit(value): 0..8 & h0 = 0 & get_lower_digit(value): 10..15 => daa_function(zn,c0,h0,value) = (uchar_byte(simple_add8UCHAR(byte_uchar(value),6)),0)|->bool_bit(bool(16<=half8UCHAR(byte_uchar(value))+half8UCHAR(6)))) & (zn = 0 & c0 = 0 & get_upper_digit(value): 0..9 & h0 = 1 & get_lower_digit(value): 0..3 => daa_function(zn,c0,h0,value) = (uchar_byte(simple_add8UCHAR(byte_uchar(value),6)),0)|->bool_bit(bool(16<=half8UCHAR(byte_uchar(value))+half8UCHAR(6)))) & (zn = 0 & c0 = 0 & get_upper_digit(value): 10..15 & h0 = 0 & get_lower_digit(value): 0..9 => daa_function(zn,c0,h0,value) = (uchar_byte(simple_add8UCHAR(byte_uchar(value),96)),1)|->bool_bit(bool(16<=half8UCHAR(byte_uchar(value))+half8UCHAR(96)))) & (zn = 0 & c0 = 0 & get_upper_digit(value): 9..15 & h0 = 0 & get_lower_digit(value): 10..15 => daa_function(zn,c0,h0,value) = (uchar_byte(simple_add8UCHAR(byte_uchar(value),102)),1)|->bool_bit(bool(16<=half8UCHAR(byte_uchar(value))+half8UCHAR(102)))) & (zn = 0 & c0 = 0 & get_upper_digit(value): 10..15 & h0 = 1 & get_lower_digit(value): 0..3 => daa_function(zn,c0,h0,value) = (uchar_byte(simple_add8UCHAR(byte_uchar(value),102)),1)|->bool_bit(bool(16<=half8UCHAR(byte_uchar(value))+half8UCHAR(102)))) & (zn = 0 & c0 = 1 & get_upper_digit(value): 0..2 & h0 = 0 & get_lower_digit(value): 0..9 => daa_function(zn,c0,h0,value) = (uchar_byte(simple_add8UCHAR(byte_uchar(value),96)),1)|->bool_bit(bool(16<=half8UCHAR(byte_uchar(value))+half8UCHAR(96)))) & (zn = 0 & c0 = 1 & get_upper_digit(value): 0..2 & h0 = 0 & get_lower_digit(value): 10..15 => daa_function(zn,c0,h0,value) = (uchar_byte(simple_add8UCHAR(byte_uchar(value),102)),1)|->bool_bit(bool(16<=half8UCHAR(byte_uchar(value))+half8UCHAR(102)))) & (zn = 0 & c0 = 1 & get_upper_digit(value): 0..3 & h0 = 1 & get_lower_digit(value): 0..3 => daa_function(zn,c0,h0,value) = (uchar_byte(simple_add8UCHAR(byte_uchar(value),102)),1)|->bool_bit(bool(16<=half8UCHAR(byte_uchar(value))+half8UCHAR(102)))) & (zn = 1 & c0 = 0 & get_upper_digit(value): 0..9 & h0 = 0 & get_lower_digit(value): 0..9 => daa_function(zn,c0,h0,value) = (value,0)|->0) & (zn = 1 & c0 = 0 & get_upper_digit(value): 0..8 & h0 = 1 & get_lower_digit(value): 6..15 => daa_function(zn,c0,h0,value) = (uchar_byte(simple_add8UCHAR(byte_uchar(value),250)),0)|->bool_bit(bool(16<=half8UCHAR(byte_uchar(value))+half8UCHAR(250)))) & (zn = 1 & c0 = 1 & get_upper_digit(value): 7..15 & h0 = 0 & get_lower_digit(value): 0..9 => daa_function(zn,c0,h0,value) = (uchar_byte(simple_add8UCHAR(byte_uchar(value),160)),1)|->bool_bit(bool(16<=half8UCHAR(byte_uchar(value))+half8UCHAR(160)))) & (zn = 1 & c0 = 1 & get_upper_digit(value): 6..7 & h0 = 1 & get_lower_digit(value): 6..15 => daa_function(zn,c0,h0,value) = (uchar_byte(simple_add8UCHAR(byte_uchar(value),154)),1)|->bool_bit(bool(16<=half8UCHAR(byte_uchar(value))+half8UCHAR(154))))) & BIT = 0..1 & bit_not: BIT +-> BIT & dom(bit_not) = BIT & bit_not = %bb.(bb: BIT | 1-bb) & bit_and: BIT*BIT +-> BIT & dom(bit_and) = BIT*BIT & !(b1,b2).(b1: BIT & b2: BIT => (bit_and(b1,b2) = 1 => b1 = 1) & (b1 = 1 => bit_and(b1,b2) = 1) & b2 = 1) & bit_or: BIT*BIT +-> BIT & dom(bit_or) = BIT*BIT & !(b1,b2).(b1: BIT & b2: BIT => (bit_or(b1,b2) = 1 => b1 = 1) & (b1 = 1 => bit_or(b1,b2) = 1) or b2 = 1) & bit_xor: BIT*BIT +-> BIT & dom(bit_xor) = BIT*BIT & !(b1,b2).(b1: BIT & b2: BIT => (bit_xor(b1,b2) = 1 => not(b1 = b2)) & (not(b1 = b2) => bit_xor(b1,b2) = 1)) & bool_bit: BOOL +-> BIT & dom(bool_bit) = BOOL & bool_bit = {TRUE|->1}\/{FALSE|->0} & BIT_VECTOR = seq(BIT)-{{}} & bv_size: BIT_VECTOR +-> NATURAL-{0} & dom(bv_size) = BIT_VECTOR & bv_size = %bv.(bv: BIT_VECTOR | size(bv)) & bv_catenate: BIT_VECTOR*BIT_VECTOR +-> BIT_VECTOR & dom(bv_catenate) = BIT_VECTOR*BIT_VECTOR & bv_catenate = %(v1,v2).(v1: BIT_VECTOR & v2: BIT_VECTOR | v1^v2) & phys_bv_index: BIT_VECTOR +-> POW(NATURAL) & dom(phys_bv_index) = BIT_VECTOR & phys_bv_index = %v1.(v1: BIT_VECTOR | 0..bv_size(v1)-1) & bv_sub: BIT_VECTOR*NATURAL*NATURAL +-> BIT_VECTOR & dom(bv_sub) = BIT_VECTOR*NATURAL*NATURAL & bv_sub = %(bv,low,high).(bv: BIT_VECTOR & low: 0..bv_size(bv)-1 & high: low..bv_size(bv)-1 | %i0.(i0: 1..high-low+1 | bv(i0+low))) & bv_zero: NATURAL-{0} +-> BIT_VECTOR & dom(bv_zero) = NATURAL-{0} & bv_zero = %sz.(sz: INTEGER & 0<=sz & not(sz = 0) | (1..sz)*{0}) & bv_one: NATURAL-{0} +-> BIT_VECTOR & dom(bv_one) = NATURAL-{0} & bv_one = %sz.(sz: INTEGER & 0<=sz & not(sz = 0) | (1..sz)*{1}) & bv_not: BIT_VECTOR +-> BIT_VECTOR & dom(bv_not) = BIT_VECTOR & bv_not = %v1.(v1: BIT_VECTOR | %idx.(idx: 1..bv_size(v1) | bit_not(v1(idx)))) & bv_and: BIT_VECTOR*BIT_VECTOR +-> BIT_VECTOR & dom(bv_and) = BIT_VECTOR*BIT_VECTOR & bv_and = %(v1,v2).(v1: BIT_VECTOR & v2: BIT_VECTOR & bv_size(v1) = bv_size(v2) | %idx.(idx: 1..bv_size(v1) | bit_and(v1(idx),v2(idx)))) & bv_or: BIT_VECTOR*BIT_VECTOR +-> BIT_VECTOR & dom(bv_or) = BIT_VECTOR*BIT_VECTOR & bv_or = %(v1,v2).(v1: BIT_VECTOR & v2: BIT_VECTOR & bv_size(v1) = bv_size(v2) | %idx.(idx: 1..bv_size(v1) | bit_or(v1(idx),v2(idx)))) & bv_xor: BIT_VECTOR*BIT_VECTOR +-> BIT_VECTOR & dom(bv_xor) = BIT_VECTOR*BIT_VECTOR & bv_xor = %(v1,v2).(v1: BIT_VECTOR & v2: BIT_VECTOR & bv_size(v1) = bv_size(v2) | %idx.(idx: 1..bv_size(v1) | bit_xor(v1(idx),v2(idx)))) & bv_clear: BIT_VECTOR*NATURAL +-> BIT_VECTOR & dom(bv_clear) = BIT_VECTOR*NATURAL & bv_clear = %(v1,idx).(v1: BIT_VECTOR & idx: 0..bv_size(v1)-1 | v1<+{idx+1|->0}) & bv_set: BIT_VECTOR*NATURAL +-> BIT_VECTOR & dom(bv_set) = BIT_VECTOR*NATURAL & bv_set = %(v1,idx).(v1: BIT_VECTOR & idx: 0..bv_size(v1)-1 | v1<+{idx+1|->1}) & bv_get: BIT_VECTOR*NATURAL +-> BIT & dom(bv_get) = BIT_VECTOR*NATURAL & bv_get = %(v1,idx).(v1: BIT_VECTOR & idx: 0..bv_size(v1)-1 | v1(idx+1)) & bv_put: BIT_VECTOR*NATURAL*BIT +-> BIT_VECTOR & dom(bv_put) = BIT_VECTOR*NATURAL*BIT & bv_put = %(v1,idx,bit).(v1: BIT_VECTOR & idx: 0..bv_size(v1)-1 & bit: BIT | v1<+{idx+1|->bit}) & BYTE_INDEX = 1..8 & PHYS_BYTE_INDEX = 0..7 & BYTE = SET(bt).(bt: BIT_VECTOR & bv_size(bt) = 8) & BYTE_ZERO: BYTE & BYTE_ZERO = BYTE_INDEX*{0} & is_zero: BYTE +-> BIT & dom(is_zero) = BYTE & is_zero = %w1.(w1: BYTE | bool_bit(bool(w1(1)+w1(2)+w1(3)+w1(4)+w1(5)+w1(6)+w1(7)+w1(8) = 0))) & parity_even: BYTE +-> BIT & dom(parity_even) = BYTE & parity_even = %bv.(bv: BYTE | 1-(bv(1)+bv(2)+bv(3)+bv(4)+bv(5)+bv(6)+bv(7)+bv(8) mod 2)) & and: BYTE*BYTE +-> BYTE & dom(and) = BYTE*BYTE & and = %(bt1,bt2).(bt1: BYTE & bt2: BYTE | bv_and(bt1,bt2)) & ior: BYTE*BYTE +-> BYTE & dom(ior) = BYTE*BYTE & ior = %(bt1,bt2).(bt1: BYTE & bt2: BYTE | bv_or(bt1,bt2)) & xor: BYTE*BYTE +-> BYTE & dom(xor) = BYTE*BYTE & xor = %(bt1,bt2).(bt1: BYTE & bt2: BYTE | bv_xor(bt1,bt2)) & bitget: BYTE*PHYS_BYTE_INDEX +-> BIT & dom(bitget) = BYTE*PHYS_BYTE_INDEX & bitget = %(bt1,ii).(bt1: BYTE & ii: PHYS_BYTE_INDEX | bt1(ii+1)) & bitset: BYTE*PHYS_BYTE_INDEX +-> BYTE & dom(bitset) = BYTE*PHYS_BYTE_INDEX & bitset = %(bt1,ii).(bt1: BYTE & ii: PHYS_BYTE_INDEX | bv_set(bt1,ii)) & bitclear: BYTE*PHYS_BYTE_INDEX +-> BYTE & dom(bitclear) = BYTE*PHYS_BYTE_INDEX & !(ww,ii,bb).(ww: BYTE & ii: PHYS_BYTE_INDEX & bb: BIT => bitclear(ww,ii) = bv_clear(ww,ii)) & complement: BYTE +-> BYTE & dom(complement) = BYTE & complement = %bt.(bt: BYTE | bv_not(bt)) & swap: BYTE +-> BYTE & dom(swap) = BYTE & swap = %bt.(bt: BYTE | {1|->bt(5)}\/{2|->bt(6)}\/{3|->bt(7)}\/{4|->bt(8)}\/{5|->bt(1)}\/{6|->bt(2)}\/{7|->bt(3)}\/{8|->bt(4)}) & rotateleft: BYTE +-> BYTE & dom(rotateleft) = BYTE & rotateleft = %bv.(bv: BYTE | {1|->bv(8)}\/{2|->bv(1)}\/{3|->bv(2)}\/{4|->bv(3)}\/{5|->bv(4)}\/{6|->bv(5)}\/{7|->bv(6)}\/{8|->bv(7)}) & rotateright: BYTE +-> BYTE & dom(rotateright) = BYTE & rotateright = %bv.(bv: BYTE | {1|->bv(2)}\/{2|->bv(3)}\/{3|->bv(4)}\/{4|->bv(5)}\/{5|->bv(6)}\/{6|->bv(7)}\/{7|->bv(8)}\/{8|->bv(1)}) & get_upper_digit = %by.(by: BYTE | 8*by(8)+4*by(7)+2*by(6)+by(5)) & get_lower_digit = %by.(by: BYTE | 8*by(4)+4*by(3)+2*by(2)+by(1)) & BV16_INDX = 1..16 & PHYS_BV16_INDEX = 0..15 & BV16 = SET(bt).(bt: BIT_VECTOR & bv_size(bt) = 16) & BV16_ZERO = BV16_INDX*{0} & bv16_byte: BV16 +-> BYTE*BYTE & dom(bv16_byte) = BV16 & bv16_byte = %bv.(bv: BV16 | {1|->bv(9)}\/{2|->bv(10)}\/{3|->bv(11)}\/{4|->bv(12)}\/{5|->bv(13)}\/{6|->bv(14)}\/{7|->bv(15)}\/{8|->bv(16)},{1|->bv(1)}\/{2|->bv(2)}\/{3|->bv(3)}\/{4|->bv(4)}\/{5|->bv(5)}\/{6|->bv(6)}\/{7|->bv(7)}\/{8|->bv(8)}) & byte_bv16: BYTE*BYTE +-> BV16 & dom(byte_bv16) = BYTE*BYTE & byte_bv16 = bv16_byte~ & bv16_bit_get: BV16*PHYS_BV16_INDEX +-> BIT & dom(bv16_bit_get) = BV16*PHYS_BV16_INDEX & bv16_bit_get = %(bt,ind).(bt: BV16 & ind: PHYS_BV16_INDEX | bt(ind+1)) & UCHAR_MAX = 255 & UCHAR_MIN = 0 & UCHAR = UCHAR_MIN..UCHAR_MAX & byte_uchar: BYTE +-> UCHAR & dom(byte_uchar) = BYTE & byte_uchar = %v0.(v0: BYTE | 128*bitget(v0,7)+64*bitget(v0,6)+32*bitget(v0,5)+16*bitget(v0,4)+8*bitget(v0,3)+4*bitget(v0,2)+2*bitget(v0,1)+128*bitget(v0,0)) & uchar_byte: UCHAR +-> BYTE & dom(uchar_byte) = UCHAR & uchar_byte = byte_uchar~ & SCHAR_MAX = 127 & SCHAR_MIN = -128 & SCHAR = SCHAR_MIN..SCHAR_MAX & byte_schar: BYTE +-> SCHAR & dom(byte_schar) = BYTE & byte_schar = %v0.(v0: BYTE | (-128)*bitget(v0,7)+64*bitget(v0,6)+32*bitget(v0,5)+16*bitget(v0,4)+8*bitget(v0,3)+4*bitget(v0,2)+2*bitget(v0,1)+bitget(v0,0)) & schar_byte: SCHAR +-> BYTE & dom(schar_byte) = SCHAR & schar_byte = byte_schar~ & uchar_schar: UCHAR +-> SCHAR & dom(uchar_schar) = UCHAR & uchar_schar = %v1.(v1: UCHAR & v1<=SCHAR_MAX | v1) & uchar_schar = %v1.(v1: UCHAR & not(v1<=SCHAR_MAX) | v1-UCHAR_MAX+1) & schar_uchar: SCHAR +-> UCHAR & dom(schar_uchar) = SCHAR & schar_uchar = uchar_schar~ & SSHORT_MIN = -32768 & SSHORT_MAX = 32767 & SSHORT = SSHORT_MIN..SSHORT_MAX & bv16_sshort: BV16 +-> SSHORT & dom(bv16_sshort) = BV16 & bv16_sshort = %v0.(v0: BV16 | (-32768)*v0(16)+16384*v0(15)+8192*v0(14)+4096*v0(13)+2048*v0(12)+1024*v0(11)+512*v0(10)+256*v0(9)+128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+v0(1)) & sshort_bv16: SSHORT +-> BV16 & dom(sshort_bv16) = SSHORT & sshort_bv16 = bv16_sshort~ & schar_sshort: SCHAR*SCHAR +-> SSHORT & dom(schar_sshort) = SCHAR*SCHAR & schar_sshort = %(w1,w2).(w1: SCHAR & w2: SCHAR | bv16_sshort(byte_bv16(schar_byte(w1),schar_byte(w2)))) & sshort_schar: SSHORT +-> SCHAR*SCHAR & dom(sshort_schar) = SSHORT & sshort_schar = schar_sshort~ & USHORT_MAX = 65535 & USHORT_MIN = 0 & USHORT = USHORT_MIN..USHORT_MAX & bv16_ushort: BV16 +-> USHORT & dom(bv16_ushort) = BV16 & bv16_ushort = %v0.(v0: BV16 | 32768*bv16_bit_get(v0,15)+16384*bv16_bit_get(v0,14)+8192*bv16_bit_get(v0,13)+4096*bv16_bit_get(v0,12)+2048*bv16_bit_get(v0,11)+1024*bv16_bit_get(v0,10)+512*bv16_bit_get(v0,9)+256*bv16_bit_get(v0,8)+128*bv16_bit_get(v0,7)+64*bv16_bit_get(v0,6)+32*bv16_bit_get(v0,5)+16*bv16_bit_get(v0,4)+8*bv16_bit_get(v0,3)+4*bv16_bit_get(v0,2)+2*bv16_bit_get(v0,1)+bv16_bit_get(v0,0)) & ushort_bv16: USHORT +-> BV16 & dom(ushort_bv16) = USHORT & ushort_bv16 = bv16_ushort~ & uchar_ushort: UCHAR*UCHAR +-> USHORT & dom(uchar_ushort) = UCHAR*UCHAR & uchar_ushort = %(w1,w2).(w1: UCHAR & w2: UCHAR | bv16_ushort(byte_bv16(uchar_byte(w1),uchar_byte(w2)))) & ushort_uchar: USHORT +-> UCHAR*UCHAR & dom(ushort_uchar) = USHORT & ushort_uchar = uchar_ushort~);
("`Included,imported and extended machines properties'" & PROGRAM_R_ADR = USHORT & DATA_R_ADR = USHORT & STACK_R_ADR = USHORT);
("`Component invariant'" & rgs8: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8) = (1..16)*{id_reg_8} & pc: USHORT & sp: BV16 & ix: BV16 & iy: BV16 & i_: BYTE & r_: BYTE & iff1: BIT & iff2: BIT & im: BIT*BIT & io_ports: BYTE +-> BYTE & dom(io_ports) = BYTE & btrue & btrue);
("`Seen and used machines invariants'" & btrue);
("`Included,imported and extended machines invariants'" & mem: BV16 +-> BYTE & dom(mem) = BV16);
("`Component assertions'" & ran(mem): POW(BYTE) & dom(mem) = BV16 & ran(rgs8): POW(BYTE) & dom(rgs8) = (1..16)*{id_reg_8} & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & dom(update_flag_reg) = BIT*BIT*BIT*BIT*BIT*BIT & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & !(b1,b2,b3,b4,b5,b6).(b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT => update_flag_reg(b1,b2,b3,b4,b5,b6): {2|->id_reg_8}*BYTE) & !xx.(xx: (1..16)*{id_reg_8} +-> BYTE & dom(xx) = (1..16)*{id_reg_8} => rgs8<+xx: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+xx) = (1..16)*{id_reg_8}) & !(xx,xxr).(xx: (1..16)*{id_reg_8} & xxr: BYTE => rgs8<+{xx|->xxr}: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+{xx|->xxr}) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & not(xx = yy) => rgs8<+({xx|->xxr}\/{yy|->yyr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & not(xx = yy) & not(xx = zz) & not(yy = zz) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(yy = zz) & not(yy = vv) & not(zz = vv) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(zz = vv) & not(zz = ww) & not(vv = ww) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(vv = ww) & not(vv = aa) & not(ww = aa) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar,bb,bbr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & bb: (1..16)*{id_reg_8} & bbr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(xx = bb) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(yy = bb) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(zz = bb) & not(vv = ww) & not(vv = aa) & not(vv = bb) & not(ww = aa) & not(ww = bb) & not(aa = bb) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr})) = (1..16)*{id_reg_8}) & dom(bv_ireg_plus_d) = BV16*SCHAR & ran(bv_ireg_plus_d) = BV16 & !dd.(dd: SCHAR => bv_ireg_plus_d(ix,dd): BV16) & !dd.(dd: SCHAR => bv_ireg_plus_d(iy,dd): BV16) & dom(bv_9ireg_plus_d0) = (BV16 --> BYTE)*BV16*SCHAR & ran(bv_9ireg_plus_d0) = BYTE & !dd.(dd: SCHAR => bv_9ireg_plus_d0(mem,ix,dd): BYTE) & !dd.(dd: SCHAR => bv_9ireg_plus_d0(mem,iy,dd): BYTE) & byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)): BV16 & byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)): BV16 & byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)): BV16 & byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8)): BV16 & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BV16 & dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BV16 & ushort_bv16(add16USHORT(0,bv16_ushort(sp),1)): BV16 & ushort_bv16(add16USHORT(0,bv16_ushort(sp),2)): BV16 & ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1)): BV16 & ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2)): BV16 & bitget(rgs8(2|->id_reg_8),7): BIT & bitget(rgs8(2|->id_reg_8),6): BIT & bitget(rgs8(2|->id_reg_8),5): BIT & bitget(rgs8(2|->id_reg_8),4): BIT & bitget(rgs8(2|->id_reg_8),3): BIT & bitget(rgs8(2|->id_reg_8),2): BIT & bitget(rgs8(2|->id_reg_8),1): BIT & bitget(rgs8(2|->id_reg_8),0): BIT & io_ports(rgs8(6|->id_reg_8)): BYTE & dec(rgs8(5|->id_reg_8)): BYTE);
("`Seen and used machines assertions'" & dom(is_zero16USHORT) = USHORT & ran(is_zero16USHORT) = BIT & dom(is_negative) = BYTE & ran(is_negative) = BIT & dom(half8UCHAR) = UCHAR & ran(half8UCHAR) = UCHAR & dom(inc) = BYTE & ran(inc) = BYTE & dom(dec) = BYTE & ran(dec) = BYTE & dom(simple_add8UCHAR) = UCHAR*UCHAR & ran(simple_add8UCHAR) = UCHAR & dom(add8UCHAR) = BIT*UCHAR*UCHAR & ran(add8UCHAR): POW(UCHAR*BIT*BIT*BIT*BIT) & dom(substract8UCHAR) = BIT*UCHAR*UCHAR & ran(substract8UCHAR): POW(UCHAR*BIT*BIT*BIT*BIT) & dom(add16USHORT) = BIT*USHORT*USHORT & ran(add16USHORT) = USHORT & dom(add_carryUSHORT) = BIT*USHORT*USHORT & ran(add_carryUSHORT) = BIT & dom(add_halfcarryUSHORT) = BIT*USHORT*USHORT & ran(add_halfcarryUSHORT) = BIT & dom(sub16USHORT) = BIT*USHORT*USHORT & ran(sub16USHORT) = USHORT & dom(sub_carryUSHORT) = BIT*USHORT*USHORT & ran(sub_carryUSHORT) = BIT & dom(sub_halfcarryUSHORT) = BIT*USHORT*USHORT & ran(sub_halfcarryUSHORT) = BIT & dom(inc_BV16) = BV16 & ran(inc_BV16) = BV16 & dom(dec_BV16) = BV16 & ran(dec_BV16) = BV16 & dom(update_refresh_reg) = BYTE & ran(update_refresh_reg) = BYTE & dom(instruction_next) = USHORT & ran(instruction_next) = USHORT & dom(instruction_jump) = USHORT*(-126..129) & ran(instruction_jump) = USHORT & dom(daa_function) = BIT*BIT*BIT*BYTE & ran(daa_function): POW(BYTE*BIT*BIT) & dom(abs) = INT & ran(abs) = INT & 0 = schar_sshort(0,0) & 1 = 2**0 & 2 = 2**1 & 4 = 2**2 & 8 = 2**3 & 16 = 2**4 & 32 = 2**5 & 64 = 2**6 & 128 = 2**7 & 256 = 2**8 & 512 = 2**9 & 1024 = 2**10 & 2048 = 2**11 & 4096 = 2**12 & 8192 = 2**13 & 16384 = 2**14 & 32768 = 2**15 & 65536 = 2**16 & !bb.(bb: BIT => bit_not(bb) = 1-bb) & dom(bit_and) = BIT*BIT & ran(bit_not) = BIT & bit_not(0) = 1 & bit_not(1) = 0 & !bb.(bb: BIT => bit_not(bit_not(bb)) = bb) & dom(bit_and) = BIT*BIT & ran(bit_and) = BIT & bit_and(0,0) = 0 & bit_and(0,1) = 0 & bit_and(1,0) = 0 & bit_and(1,1) = 1 & !(b1,b2).(b1: BIT & b2: BIT => bit_and(b1,b2) = bit_and(b2,b1)) & !(b1,b2).(b1: BIT & b2: BIT & bit_and(b1,b2) = 1 => bit_and(b2,b1) = 1) & !(b1,b2).(b1: BIT & b2: BIT & bit_and(b1,b2) = 0 => bit_and(b2,b1) = 0) & !(b1,b2,b3).(b1: BIT & b2: BIT & b3: BIT => bit_and(b1,bit_and(b2,b3)) = bit_and(bit_and(b1,b2),b3)) & !b1.(b1: BIT => bit_and(b1,1) = b1) & !b1.(b1: BIT => bit_and(b1,0) = 0) & dom(bit_or) = BIT*BIT & ran(bit_or) = BIT & bit_or(0,0) = 0 & bit_or(0,1) = 1 & bit_or(1,0) = 1 & bit_or(1,1) = 1 & !(b1,b2).(b1: BIT & b2: BIT => bit_or(b1,b2) = bit_or(b2,b1)) & !(b1,b2).(b1: BIT & b2: BIT & bit_or(b1,b2) = 1 => bit_or(b2,b1) = 1) & !(b1,b2).(b1: BIT & b2: BIT & bit_or(b1,b2) = 0 => bit_or(b2,b1) = 0) & !(b1,b2).(b1: BIT & b2: BIT & bit_or(b1,0) = 1 => b1 = 1) & !(b1,b2).(b1: BIT & b2: BIT & bit_or(b1,0) = 0 => b1 = 0) & !(b1,b2,b3).(b1: BIT & b2: BIT & b3: BIT => bit_or(b1,bit_or(b2,b3)) = bit_or(bit_or(b1,b2),b3)) & !(b1,b2,b3).(b1: BIT & b2: BIT & b3: BIT & bit_or(b1,b2) = 1 => bit_or(b1,bit_or(b2,b3)) = 1) & !(b1,b2,b3).(b1: BIT & b2: BIT & b3: BIT & bit_or(b1,b2) = 1 => bit_or(b1,bit_or(b2,b3)) = bit_or(1,b3)) & !b1.(b1: BIT => bit_or(b1,1) = 1) & !b1.(b1: BIT => bit_or(b1,0) = b1) & !b1.(b1: BIT => bit_or(1,b1) = 1) & !b1.(b1: BIT => bit_or(0,b1) = b1) & dom(bit_xor) = BIT*BIT & ran(bit_xor) = BIT & bit_xor(0,0) = 0 & bit_xor(0,1) = 1 & bit_xor(1,0) = 1 & bit_xor(1,1) = 0 & !(b1,b2).(b1: BIT & b2: BIT => bit_xor(b1,b2) = bit_xor(b2,b1)) & !(b1,b2).(b1: BIT & b2: BIT & bit_xor(b1,b2) = 1 => bit_xor(b2,b1) = 1) & !(b1,b2).(b1: BIT & b2: BIT & bit_xor(b1,b2) = 0 => bit_xor(b2,b1) = 0) & !(b1,b2,b3).(b1: BIT & b2: BIT & b3: BIT => bit_xor(b1,bit_xor(b2,b3)) = bit_xor(bit_xor(b1,b2),b3)) & !(b1,b2,b3).(b1: BIT & b2: BIT & b3: BIT & bit_xor(b1,b2) = 1 => bit_xor(b1,bit_xor(b2,b3)) = 1) & !(b1,b2,b3).(b1: BIT & b2: BIT & b3: BIT & bit_xor(b1,b2) = 1 => bit_xor(b1,bit_xor(b2,b3)) = bit_xor(1,b3)) & !bb.(bb: BIT => bit_xor(bb,bb) = 0) & dom(bool_bit) = BOOL & ran(bit_xor) = BIT & bool_bit(TRUE) = 1 & bool_bit(FALSE) = 0 & !bb.(bb: BIT => bb = 0 or bb = 1) & !bb.(bb: BIT & not(bb = 0) => bb = 1) & !bb.(bb: BIT & not(bb = 1) => bb = 0) & !bv.(bv: BIT_VECTOR => bv_size(bv_not(bv)) = bv_size(bv)) & !(bv,indx).(bv: BIT_VECTOR & indx: 0..bv_size(bv)-1 => bv_get(bv_not(bv_not(bv)),indx) = bv_get(bv,indx)) & !(v1,v2).(v1: BIT_VECTOR & v2: BIT_VECTOR => bv_size(bv_catenate(v1,v2)) = bv_size(v1)+bv_size(v2)) & !(bv,low,high).(bv: BIT_VECTOR & low: 0..bv_size(bv)-1 & high: 0..bv_size(bv)-1 & low<=high => bv_size(bv_sub(bv,low,high)) = high-low) & !(v1,v2).(v1: BIT_VECTOR & v2: BIT_VECTOR & bv_size(v1) = bv_size(v2) => bv_size(bv_and(v1,v2)) = bv_size(v2)) & !(v1,v2,indx).(v1: BIT_VECTOR & v2: BIT_VECTOR & bv_size(v1) = bv_size(v2) & indx: 0..bv_size(v1)-1 => bv_get(bv_and(v1,v2),indx) = bv_get(bv_and(v2,v1),indx)) & !(v1,v2,v3,indx).(v1: BIT_VECTOR & v2: BIT_VECTOR & v3: BIT_VECTOR & bv_size(v1) = bv_size(v2) & bv_size(v1) = bv_size(v3) & indx: 0..bv_size(v1)-1 => bv_get(bv_and(v1,bv_and(v2,v3)),indx) = bv_get(bv_and(bv_and(v1,v2),v3),indx)) & !(bv,indx).(bv: BIT_VECTOR & indx: 0..bv_size(bv)-1 => bv_get(bv_and(bv,bv_zero(bv_size(bv))),indx) = bv_get(bv_zero(bv_size(bv)),indx)) & !(bv,indx).(bv: BIT_VECTOR & indx: 0..bv_size(bv)-1 => bv_get(bv_and(bv,bv_one(bv_size(bv))),indx) = bv_get(bv,indx)) & !(v1,v2).(v1: BIT_VECTOR & v2: BIT_VECTOR & bv_size(v1) = bv_size(v2) => bv_size(bv_or(v1,v2)) = bv_size(v1)) & !(v1,v2,indx).(v1: BIT_VECTOR & v2: BIT_VECTOR & bv_size(v1) = bv_size(v2) & indx: 0..bv_size(v1)-1 => bv_get(bv_or(v1,v2),indx) = bv_get(bv_or(v2,v1),indx)) & !(v1,v2).(v1: BIT_VECTOR & v2: BIT_VECTOR & bv_size(v1) = bv_size(v2) => bv_size(bv_or(v1,v2)) = bv_size(v2)) & !(v1,v2,v3,indx).(v1: BIT_VECTOR & v2: BIT_VECTOR & v3: BIT_VECTOR & bv_size(v1) = bv_size(v2) & bv_size(v1) = bv_size(v3) & indx: 0..bv_size(v1)-1 => bv_get(bv_or(v1,bv_or(v2,v3)),indx) = bv_get(bv_or(bv_or(v1,v2),v3),indx)) & !(bv,indx).(bv: BIT_VECTOR & indx: 0..bv_size(bv)-1 => bv_get(bv_or(bv,bv_one(bv_size(bv))),indx) = bv_get(bv_one(bv_size(bv)),indx)) & !(bv,indx).(bv: BIT_VECTOR & indx: 0..bv_size(bv)-1 => bv_get(bv_or(bv,bv_zero(bv_size(bv))),indx) = bv_get(bv,indx)) & !(v1,v2).(v1: BIT_VECTOR & v2: BIT_VECTOR & bv_size(v1) = bv_size(v2) => bv_size(bv_xor(v1,v2)) = bv_size(v1)) & !(v1,v2).(v1: BIT_VECTOR & v2: BIT_VECTOR & bv_size(v1) = bv_size(v2) => bv_size(bv_xor(v1,v2)) = bv_size(v2)) & !(v1,v2,indx).(v1: BIT_VECTOR & v2: BIT_VECTOR & bv_size(v1) = bv_size(v2) & indx: 0..bv_size(v1)-1 => bv_get(bv_xor(v1,v2),indx) = bv_get(bv_xor(v2,v1),indx)) & !(bv,indx).(bv: BIT_VECTOR & indx: 0..bv_size(bv)-1 => bv_get(bv_xor(bv,bv),indx) = bv_get(bv_zero(bv_size(bv)),indx)) & size(BYTE_ZERO) = 8 & BYTE: POW(BIT_VECTOR) & BYTE_ZERO: BIT_VECTOR & first(BYTE_ZERO) = 0 & !bt.(bt: BYTE => bv_size(bt) = size(bt) & bv_size(bt) = 8 & bt: seq(BIT) & not(bt = {})) & 8: INTEGER & btrue & dom(is_zero) = BYTE & ran(is_zero) = BIT & dom(parity_even) = BYTE & ran(parity_even) = BIT & dom(and) = BYTE*BYTE & ran(and) = BYTE & dom(ior) = BYTE*BYTE & ran(ior) = BYTE & dom(xor) = BYTE*BYTE & ran(xor) = BYTE & dom(bitget) = BYTE*PHYS_BYTE_INDEX & ran(bitget) = BIT & dom(bitset) = BYTE*PHYS_BYTE_INDEX & ran(bitset) = BYTE & dom(bitclear) = BYTE*PHYS_BYTE_INDEX & ran(bitclear) = BYTE & dom(complement) = BYTE & ran(complement) = BYTE & dom(swap) = BYTE & ran(swap) = BYTE & dom(rotateleft) = BYTE & ran(rotateleft) = BYTE & dom(rotateright) = BYTE & ran(rotateright) = BYTE & dom(get_upper_digit) = BYTE & ran(get_upper_digit) = 0..15 & dom(get_lower_digit) = BYTE & ran(get_lower_digit) = 0..15 & [1,1,1,1,1,1,1,1]: BYTE & [0,0,0,0,0,0,0,0]: BYTE & 1 = 2**0 & 2 = 2**1 & 4 = 2**2 & 8 = 2**3 & 16 = 2**4 & 32 = 2**5 & 64 = 2**6 & 128 = 2**7 & 256 = 2**8 & 512 = 2**9 & 1024 = 2**10 & 2048 = 2**11 & 4096 = 2**12 & 8192 = 2**13 & 16384 = 2**14 & 32768 = 2**15 & 65536 = 2**16 & BV16_ZERO: BV16 & BV16: POW(BIT_VECTOR) & !bt.(bt: BV16 => bv_size(bt) = size(bt) & bv_size(bt) = 16 & bt: seq(BIT) & not(bt = {})) & dom(bv16_byte) = BV16 & ran(bv16_byte) = BYTE*BYTE & dom(byte_bv16) = BYTE*BYTE & ran(byte_bv16) = BV16 & dom(bv16_bit_get) = BV16*PHYS_BV16_INDEX & ran(bv16_bit_get) = BIT & [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]: BV16 & [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]: BV16 & UCHAR_MAX: INTEGER & UCHAR_MIN: INTEGER & dom(byte_uchar) = BYTE & ran(byte_uchar) = UCHAR & dom(uchar_byte) = UCHAR & ran(uchar_byte) = BYTE & 1 = 2**0 & 2 = 2**1 & 4 = 2**2 & 8 = 2**3 & 16 = 2**4 & 32 = 2**5 & 64 = 2**6 & 128 = 2**7 & 256 = 2**8 & SCHAR_MAX: INTEGER & SCHAR_MIN: INTEGER & dom(byte_schar) = BYTE & ran(byte_schar) = SCHAR & dom(schar_byte) = SCHAR & ran(schar_byte) = BYTE & dom(uchar_schar) = UCHAR & ran(uchar_schar) = SCHAR & dom(schar_uchar) = SCHAR & ran(schar_uchar) = UCHAR & 1 = 2**0 & 2 = 2**1 & 4 = 2**2 & 8 = 2**3 & 16 = 2**4 & 32 = 2**5 & 64 = 2**6 & 128 = 2**7 & 256 = 2**8 & SSHORT_MIN: SSHORT & SSHORT_MAX: SSHORT & dom(bv16_sshort) = BV16 & ran(bv16_sshort) = SSHORT & dom(sshort_bv16) = SSHORT & ran(sshort_bv16) = BV16 & dom(schar_sshort) = SCHAR*SCHAR & ran(schar_sshort) = SSHORT & dom(sshort_schar) = SSHORT & ran(sshort_schar) = SCHAR*SCHAR & 1 = 2**0 & 2 = 2**1 & 4 = 2**2 & 8 = 2**3 & 16 = 2**4 & 32 = 2**5 & 64 = 2**6 & 128 = 2**7 & 256 = 2**8 & 512 = 2**9 & 1024 = 2**10 & 2048 = 2**11 & 4096 = 2**12 & 8192 = 2**13 & 16384 = 2**14 & 32768 = 2**15 & 65536 = 2**16 & USHORT_MAX: INTEGER & USHORT_MIN: INTEGER & dom(bv16_ushort) = BV16 & ran(bv16_ushort) = USHORT & dom(ushort_bv16) = USHORT & ran(ushort_bv16) = BV16 & dom(uchar_ushort) = UCHAR*UCHAR & ran(uchar_ushort) = USHORT & dom(ushort_uchar) = USHORT & ran(ushort_uchar) = UCHAR*UCHAR & 1 = 2**0 & 2 = 2**1 & 4 = 2**2 & 8 = 2**3 & 16 = 2**4 & 32 = 2**5 & 64 = 2**6 & 128 = 2**7 & 256 = 2**8 & 512 = 2**9 & 1024 = 2**10 & 2048 = 2**11 & 4096 = 2**12 & 8192 = 2**13 & 16384 = 2**14 & 32768 = 2**15 & 65536 = 2**16 & 2**0 = 1 & 2**1 = 2 & 2**2 = 4 & 2**3 = 8 & 2**4 = 16 & 2**5 = 32 & 2**6 = 64 & 2**7 = 128 & (-2)**7 = -128 & 2**8 = 256 & 2**9 = 512 & 2**10 = 1024 & 2**11 = 2048 & 2**12 = 4096 & 2**13 = 8192 & 2**14 = 16384 & 2**15 = 32768 & 2**16 = 65536);
("`Included,imported and extended machines assertions'" & ran(mem): POW(BYTE) & dom(mem) = BV16 & !(address,value).(address: BV16 & value: BYTE => mem<+{address|->value}: BV16 +-> BYTE & dom(mem<+{address|->value}) = BV16));
("`Local hypotheses'" & (1..16)*{id_reg_8}: FIN(NATURAL*{id_reg_8}) & not((1..16)*{id_reg_8} = {}) & (1..5)*{id_reg_16}: FIN(NATURAL*{id_reg_16}) & not((1..5)*{id_reg_16} = {}) & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & dom(get_bv_reg16) = BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) & sp_: BV16 & rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & r1: (1..5)*{id_reg_16} & r1 = 1|->id_reg_16);
(sp_,rgs8_,r1: dom(get_bv_reg16));
("`Local hypotheses'" & (1..16)*{id_reg_8}: FIN(NATURAL*{id_reg_8}) & not((1..16)*{id_reg_8} = {}) & (1..5)*{id_reg_16}: FIN(NATURAL*{id_reg_16}) & not((1..5)*{id_reg_16} = {}) & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & dom(get_bv_reg16) = BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) & sp_: BV16 & rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & r1: (1..5)*{id_reg_16} & r1 = 1|->id_reg_16);
(5|->id_reg_8: dom(rgs8_));
("`Local hypotheses'" & (1..16)*{id_reg_8}: FIN(NATURAL*{id_reg_8}) & not((1..16)*{id_reg_8} = {}) & (1..5)*{id_reg_16}: FIN(NATURAL*{id_reg_16}) & not((1..5)*{id_reg_16} = {}) & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & dom(get_bv_reg16) = BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) & sp_: BV16 & rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & r1: (1..5)*{id_reg_16} & r1 = 1|->id_reg_16);
(6|->id_reg_8: dom(rgs8_));
("`Local hypotheses'" & (1..16)*{id_reg_8}: FIN(NATURAL*{id_reg_8}) & not((1..16)*{id_reg_8} = {}) & (1..5)*{id_reg_16}: FIN(NATURAL*{id_reg_16}) & not((1..5)*{id_reg_16} = {}) & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & dom(get_bv_reg16) = BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) & sp_: BV16 & rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & r1: (1..5)*{id_reg_16} & r1 = 1|->id_reg_16);
(rgs8_(5|->id_reg_8),rgs8_(6|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & (1..16)*{id_reg_8}: FIN(NATURAL*{id_reg_8}) & not((1..16)*{id_reg_8} = {}) & (1..5)*{id_reg_16}: FIN(NATURAL*{id_reg_16}) & not((1..5)*{id_reg_16} = {}) & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & dom(get_bv_reg16) = BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) & sp_: BV16 & rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & r1: (1..5)*{id_reg_16} & (r1 = 1|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(5|->id_reg_8),rgs8_(6|->id_reg_8))) & r1 = 2|->id_reg_16);
(sp_,rgs8_,r1: dom(get_bv_reg16));
("`Local hypotheses'" & (1..16)*{id_reg_8}: FIN(NATURAL*{id_reg_8}) & not((1..16)*{id_reg_8} = {}) & (1..5)*{id_reg_16}: FIN(NATURAL*{id_reg_16}) & not((1..5)*{id_reg_16} = {}) & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & dom(get_bv_reg16) = BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) & sp_: BV16 & rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & r1: (1..5)*{id_reg_16} & (r1 = 1|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(5|->id_reg_8),rgs8_(6|->id_reg_8))) & r1 = 2|->id_reg_16);
(9|->id_reg_8: dom(rgs8_));
("`Local hypotheses'" & (1..16)*{id_reg_8}: FIN(NATURAL*{id_reg_8}) & not((1..16)*{id_reg_8} = {}) & (1..5)*{id_reg_16}: FIN(NATURAL*{id_reg_16}) & not((1..5)*{id_reg_16} = {}) & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & dom(get_bv_reg16) = BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) & sp_: BV16 & rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & r1: (1..5)*{id_reg_16} & (r1 = 1|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(5|->id_reg_8),rgs8_(6|->id_reg_8))) & r1 = 2|->id_reg_16);
(10|->id_reg_8: dom(rgs8_));
("`Local hypotheses'" & (1..16)*{id_reg_8}: FIN(NATURAL*{id_reg_8}) & not((1..16)*{id_reg_8} = {}) & (1..5)*{id_reg_16}: FIN(NATURAL*{id_reg_16}) & not((1..5)*{id_reg_16} = {}) & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & dom(get_bv_reg16) = BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) & sp_: BV16 & rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & r1: (1..5)*{id_reg_16} & (r1 = 1|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(5|->id_reg_8),rgs8_(6|->id_reg_8))) & r1 = 2|->id_reg_16);
(rgs8_(9|->id_reg_8),rgs8_(10|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & (1..16)*{id_reg_8}: FIN(NATURAL*{id_reg_8}) & not((1..16)*{id_reg_8} = {}) & (1..5)*{id_reg_16}: FIN(NATURAL*{id_reg_16}) & not((1..5)*{id_reg_16} = {}) & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & dom(get_bv_reg16) = BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) & sp_: BV16 & rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & r1: (1..5)*{id_reg_16} & (r1 = 1|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(5|->id_reg_8),rgs8_(6|->id_reg_8))) & (r1 = 2|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(9|->id_reg_8),rgs8_(10|->id_reg_8))) & r1 = 3|->id_reg_16);
(sp_,rgs8_,r1: dom(get_bv_reg16));
("`Local hypotheses'" & (1..16)*{id_reg_8}: FIN(NATURAL*{id_reg_8}) & not((1..16)*{id_reg_8} = {}) & (1..5)*{id_reg_16}: FIN(NATURAL*{id_reg_16}) & not((1..5)*{id_reg_16} = {}) & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & dom(get_bv_reg16) = BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) & sp_: BV16 & rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & r1: (1..5)*{id_reg_16} & (r1 = 1|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(5|->id_reg_8),rgs8_(6|->id_reg_8))) & (r1 = 2|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(9|->id_reg_8),rgs8_(10|->id_reg_8))) & r1 = 3|->id_reg_16);
(13|->id_reg_8: dom(rgs8_));
("`Local hypotheses'" & (1..16)*{id_reg_8}: FIN(NATURAL*{id_reg_8}) & not((1..16)*{id_reg_8} = {}) & (1..5)*{id_reg_16}: FIN(NATURAL*{id_reg_16}) & not((1..5)*{id_reg_16} = {}) & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & dom(get_bv_reg16) = BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) & sp_: BV16 & rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & r1: (1..5)*{id_reg_16} & (r1 = 1|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(5|->id_reg_8),rgs8_(6|->id_reg_8))) & (r1 = 2|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(9|->id_reg_8),rgs8_(10|->id_reg_8))) & r1 = 3|->id_reg_16);
(14|->id_reg_8: dom(rgs8_));
("`Local hypotheses'" & (1..16)*{id_reg_8}: FIN(NATURAL*{id_reg_8}) & not((1..16)*{id_reg_8} = {}) & (1..5)*{id_reg_16}: FIN(NATURAL*{id_reg_16}) & not((1..5)*{id_reg_16} = {}) & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & dom(get_bv_reg16) = BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) & sp_: BV16 & rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & r1: (1..5)*{id_reg_16} & (r1 = 1|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(5|->id_reg_8),rgs8_(6|->id_reg_8))) & (r1 = 2|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(9|->id_reg_8),rgs8_(10|->id_reg_8))) & r1 = 3|->id_reg_16);
(rgs8_(13|->id_reg_8),rgs8_(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & (1..16)*{id_reg_8}: FIN(NATURAL*{id_reg_8}) & not((1..16)*{id_reg_8} = {}) & (1..5)*{id_reg_16}: FIN(NATURAL*{id_reg_16}) & not((1..5)*{id_reg_16} = {}) & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & dom(get_bv_reg16) = BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) & sp_: BV16 & rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & r1: (1..5)*{id_reg_16} & (r1 = 1|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(5|->id_reg_8),rgs8_(6|->id_reg_8))) & (r1 = 2|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(9|->id_reg_8),rgs8_(10|->id_reg_8))) & (r1 = 3|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(13|->id_reg_8),rgs8_(14|->id_reg_8))) & r1 = 4|->id_reg_16);
(sp_,rgs8_,r1: dom(get_bv_reg16));
("`Local hypotheses'" & (1..16)*{id_reg_8}: FIN(NATURAL*{id_reg_8}) & not((1..16)*{id_reg_8} = {}) & (1..5)*{id_reg_16}: FIN(NATURAL*{id_reg_16}) & not((1..5)*{id_reg_16} = {}) & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & dom(get_bv_reg16) = BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) & sp_: BV16 & rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & r1: (1..5)*{id_reg_16} & (r1 = 1|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(5|->id_reg_8),rgs8_(6|->id_reg_8))) & (r1 = 2|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(9|->id_reg_8),rgs8_(10|->id_reg_8))) & (r1 = 3|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(13|->id_reg_8),rgs8_(14|->id_reg_8))) & (r1 = 4|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = sp_) & r1 = 5|->id_reg_16);
(sp_,rgs8_,r1: dom(get_bv_reg16));
("`Local hypotheses'" & (1..16)*{id_reg_8}: FIN(NATURAL*{id_reg_8}) & not((1..16)*{id_reg_8} = {}) & (1..5)*{id_reg_16}: FIN(NATURAL*{id_reg_16}) & not((1..5)*{id_reg_16} = {}) & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & dom(get_bv_reg16) = BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) & sp_: BV16 & rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & r1: (1..5)*{id_reg_16} & (r1 = 1|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(5|->id_reg_8),rgs8_(6|->id_reg_8))) & (r1 = 2|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(9|->id_reg_8),rgs8_(10|->id_reg_8))) & (r1 = 3|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(13|->id_reg_8),rgs8_(14|->id_reg_8))) & (r1 = 4|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = sp_) & r1 = 5|->id_reg_16);
(1|->id_reg_8: dom(rgs8_));
("`Local hypotheses'" & (1..16)*{id_reg_8}: FIN(NATURAL*{id_reg_8}) & not((1..16)*{id_reg_8} = {}) & (1..5)*{id_reg_16}: FIN(NATURAL*{id_reg_16}) & not((1..5)*{id_reg_16} = {}) & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & dom(get_bv_reg16) = BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) & sp_: BV16 & rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & r1: (1..5)*{id_reg_16} & (r1 = 1|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(5|->id_reg_8),rgs8_(6|->id_reg_8))) & (r1 = 2|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(9|->id_reg_8),rgs8_(10|->id_reg_8))) & (r1 = 3|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(13|->id_reg_8),rgs8_(14|->id_reg_8))) & (r1 = 4|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = sp_) & r1 = 5|->id_reg_16);
(2|->id_reg_8: dom(rgs8_));
("`Local hypotheses'" & (1..16)*{id_reg_8}: FIN(NATURAL*{id_reg_8}) & not((1..16)*{id_reg_8} = {}) & (1..5)*{id_reg_16}: FIN(NATURAL*{id_reg_16}) & not((1..5)*{id_reg_16} = {}) & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & dom(get_bv_reg16) = BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) & sp_: BV16 & rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & r1: (1..5)*{id_reg_16} & (r1 = 1|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(5|->id_reg_8),rgs8_(6|->id_reg_8))) & (r1 = 2|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(9|->id_reg_8),rgs8_(10|->id_reg_8))) & (r1 = 3|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(13|->id_reg_8),rgs8_(14|->id_reg_8))) & (r1 = 4|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = sp_) & r1 = 5|->id_reg_16);
(rgs8_(1|->id_reg_8),rgs8_(2|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & (1..16)*{id_reg_8}: FIN(NATURAL*{id_reg_8}) & not((1..16)*{id_reg_8} = {}) & (1..5)*{id_reg_16}: FIN(NATURAL*{id_reg_16}) & not((1..5)*{id_reg_16} = {}) & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & dom(get_bv_reg16) = BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) & !(sp_,rgs8_,r1).(sp_: BV16 & rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & r1: (1..5)*{id_reg_16} => (r1 = 1|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(5|->id_reg_8),rgs8_(6|->id_reg_8))) & (r1 = 2|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(9|->id_reg_8),rgs8_(10|->id_reg_8))) & (r1 = 3|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(13|->id_reg_8),rgs8_(14|->id_reg_8))) & (r1 = 4|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = sp_) & (r1 = 5|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(1|->id_reg_8),rgs8_(2|->id_reg_8)))) & REG16_TO_REG8: (1..5)*{id_reg_16} +-> (1..16)*{id_reg_8}*((1..16)*{id_reg_8}) & dom(REG16_TO_REG8) = (1..5)*{id_reg_16});
(1|->id_reg_16: dom(REG16_TO_REG8));
("`Local hypotheses'" & (1..16)*{id_reg_8}: FIN(NATURAL*{id_reg_8}) & not((1..16)*{id_reg_8} = {}) & (1..5)*{id_reg_16}: FIN(NATURAL*{id_reg_16}) & not((1..5)*{id_reg_16} = {}) & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & dom(get_bv_reg16) = BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) & !(sp_,rgs8_,r1).(sp_: BV16 & rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & r1: (1..5)*{id_reg_16} => (r1 = 1|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(5|->id_reg_8),rgs8_(6|->id_reg_8))) & (r1 = 2|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(9|->id_reg_8),rgs8_(10|->id_reg_8))) & (r1 = 3|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(13|->id_reg_8),rgs8_(14|->id_reg_8))) & (r1 = 4|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = sp_) & (r1 = 5|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(1|->id_reg_8),rgs8_(2|->id_reg_8)))) & REG16_TO_REG8: (1..5)*{id_reg_16} +-> (1..16)*{id_reg_8}*((1..16)*{id_reg_8}) & dom(REG16_TO_REG8) = (1..5)*{id_reg_16} & REG16_TO_REG8(1|->id_reg_16) = 5|->id_reg_8|->(6|->id_reg_8));
(2|->id_reg_16: dom(REG16_TO_REG8));
("`Local hypotheses'" & (1..16)*{id_reg_8}: FIN(NATURAL*{id_reg_8}) & not((1..16)*{id_reg_8} = {}) & (1..5)*{id_reg_16}: FIN(NATURAL*{id_reg_16}) & not((1..5)*{id_reg_16} = {}) & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & dom(get_bv_reg16) = BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) & !(sp_,rgs8_,r1).(sp_: BV16 & rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & r1: (1..5)*{id_reg_16} => (r1 = 1|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(5|->id_reg_8),rgs8_(6|->id_reg_8))) & (r1 = 2|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(9|->id_reg_8),rgs8_(10|->id_reg_8))) & (r1 = 3|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(13|->id_reg_8),rgs8_(14|->id_reg_8))) & (r1 = 4|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = sp_) & (r1 = 5|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(1|->id_reg_8),rgs8_(2|->id_reg_8)))) & REG16_TO_REG8: (1..5)*{id_reg_16} +-> (1..16)*{id_reg_8}*((1..16)*{id_reg_8}) & dom(REG16_TO_REG8) = (1..5)*{id_reg_16} & REG16_TO_REG8(1|->id_reg_16) = 5|->id_reg_8|->(6|->id_reg_8) & REG16_TO_REG8(2|->id_reg_16) = 9|->id_reg_8|->(10|->id_reg_8));
(3|->id_reg_16: dom(REG16_TO_REG8));
("`Local hypotheses'" & (1..16)*{id_reg_8}: FIN(NATURAL*{id_reg_8}) & not((1..16)*{id_reg_8} = {}) & (1..5)*{id_reg_16}: FIN(NATURAL*{id_reg_16}) & not((1..5)*{id_reg_16} = {}) & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & dom(get_bv_reg16) = BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) & !(sp_,rgs8_,r1).(sp_: BV16 & rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & r1: (1..5)*{id_reg_16} => (r1 = 1|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(5|->id_reg_8),rgs8_(6|->id_reg_8))) & (r1 = 2|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(9|->id_reg_8),rgs8_(10|->id_reg_8))) & (r1 = 3|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(13|->id_reg_8),rgs8_(14|->id_reg_8))) & (r1 = 4|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = sp_) & (r1 = 5|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(1|->id_reg_8),rgs8_(2|->id_reg_8)))) & REG16_TO_REG8: (1..5)*{id_reg_16} +-> (1..16)*{id_reg_8}*((1..16)*{id_reg_8}) & dom(REG16_TO_REG8) = (1..5)*{id_reg_16} & REG16_TO_REG8(1|->id_reg_16) = 5|->id_reg_8|->(6|->id_reg_8) & REG16_TO_REG8(2|->id_reg_16) = 9|->id_reg_8|->(10|->id_reg_8) & REG16_TO_REG8(3|->id_reg_16) = 13|->id_reg_8|->(14|->id_reg_8));
(5|->id_reg_16: dom(REG16_TO_REG8));
("`Local hypotheses'" & (1..16)*{id_reg_8}: FIN(NATURAL*{id_reg_8}) & not((1..16)*{id_reg_8} = {}) & (1..5)*{id_reg_16}: FIN(NATURAL*{id_reg_16}) & not((1..5)*{id_reg_16} = {}) & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & dom(get_bv_reg16) = BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) & !(sp_,rgs8_,r1).(sp_: BV16 & rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & r1: (1..5)*{id_reg_16} => (r1 = 1|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(5|->id_reg_8),rgs8_(6|->id_reg_8))) & (r1 = 2|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(9|->id_reg_8),rgs8_(10|->id_reg_8))) & (r1 = 3|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(13|->id_reg_8),rgs8_(14|->id_reg_8))) & (r1 = 4|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = sp_) & (r1 = 5|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(1|->id_reg_8),rgs8_(2|->id_reg_8)))) & REG16_TO_REG8: (1..5)*{id_reg_16} +-> (1..16)*{id_reg_8}*((1..16)*{id_reg_8}) & dom(REG16_TO_REG8) = (1..5)*{id_reg_16} & REG16_TO_REG8(1|->id_reg_16) = 5|->id_reg_8|->(6|->id_reg_8) & REG16_TO_REG8(2|->id_reg_16) = 9|->id_reg_8|->(10|->id_reg_8) & REG16_TO_REG8(3|->id_reg_16) = 13|->id_reg_8|->(14|->id_reg_8) & REG16_TO_REG8(5|->id_reg_16) = 1|->id_reg_8|->(2|->id_reg_8) & REG8_TO_REG16: (1..16)*{id_reg_8}*((1..16)*{id_reg_8}) +-> (1..5)*{id_reg_16} & REG8_TO_REG16 = REG16_TO_REG8~ & update_flag_reg: BIT*BIT*BIT*BIT*BIT*BIT +-> {2|->id_reg_8}*BYTE & dom(update_flag_reg) = BIT*BIT*BIT*BIT*BIT*BIT & update_flag_reg = %(s7$0,z6$0,h4$0,pv2$0,n_add_sub$0,c0$0).(s7$0: BIT & z6$0: BIT & h4$0: BIT & pv2$0: BIT & n_add_sub$0: BIT & c0$0: BIT | 2|->id_reg_8|->[c0$0,n_add_sub$0,pv2$0,1,h4$0,1,z6$0,s7$0]) & bv_ireg_plus_d: BV16*SCHAR +-> BV16 & dom(bv_ireg_plus_d) = BV16*SCHAR & ix_iy: BV16 & desloc: SCHAR);
(0<=bv16_ushort(ix_iy)+desloc);
("`Local hypotheses'" & (1..16)*{id_reg_8}: FIN(NATURAL*{id_reg_8}) & not((1..16)*{id_reg_8} = {}) & (1..5)*{id_reg_16}: FIN(NATURAL*{id_reg_16}) & not((1..5)*{id_reg_16} = {}) & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & dom(get_bv_reg16) = BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) & !(sp_,rgs8_,r1).(sp_: BV16 & rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & r1: (1..5)*{id_reg_16} => (r1 = 1|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(5|->id_reg_8),rgs8_(6|->id_reg_8))) & (r1 = 2|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(9|->id_reg_8),rgs8_(10|->id_reg_8))) & (r1 = 3|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(13|->id_reg_8),rgs8_(14|->id_reg_8))) & (r1 = 4|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = sp_) & (r1 = 5|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(1|->id_reg_8),rgs8_(2|->id_reg_8)))) & REG16_TO_REG8: (1..5)*{id_reg_16} +-> (1..16)*{id_reg_8}*((1..16)*{id_reg_8}) & dom(REG16_TO_REG8) = (1..5)*{id_reg_16} & REG16_TO_REG8(1|->id_reg_16) = 5|->id_reg_8|->(6|->id_reg_8) & REG16_TO_REG8(2|->id_reg_16) = 9|->id_reg_8|->(10|->id_reg_8) & REG16_TO_REG8(3|->id_reg_16) = 13|->id_reg_8|->(14|->id_reg_8) & REG16_TO_REG8(5|->id_reg_16) = 1|->id_reg_8|->(2|->id_reg_8) & REG8_TO_REG16: (1..16)*{id_reg_8}*((1..16)*{id_reg_8}) +-> (1..5)*{id_reg_16} & REG8_TO_REG16 = REG16_TO_REG8~ & update_flag_reg: BIT*BIT*BIT*BIT*BIT*BIT +-> {2|->id_reg_8}*BYTE & dom(update_flag_reg) = BIT*BIT*BIT*BIT*BIT*BIT & update_flag_reg = %(s7$0,z6$0,h4$0,pv2$0,n_add_sub$0,c0$0).(s7$0: BIT & z6$0: BIT & h4$0: BIT & pv2$0: BIT & n_add_sub$0: BIT & c0$0: BIT | 2|->id_reg_8|->[c0$0,n_add_sub$0,pv2$0,1,h4$0,1,z6$0,s7$0]) & bv_ireg_plus_d: BV16*SCHAR +-> BV16 & dom(bv_ireg_plus_d) = BV16*SCHAR & ix_iy: BV16 & desloc: SCHAR);
((bv16_ushort(ix_iy)+desloc) mod 65536: dom(ushort_bv16));
("`Local hypotheses'" & (1..16)*{id_reg_8}: FIN(NATURAL*{id_reg_8}) & not((1..16)*{id_reg_8} = {}) & (1..5)*{id_reg_16}: FIN(NATURAL*{id_reg_16}) & not((1..5)*{id_reg_16} = {}) & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & dom(get_bv_reg16) = BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) & !(sp_,rgs8_,r1).(sp_: BV16 & rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & r1: (1..5)*{id_reg_16} => (r1 = 1|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(5|->id_reg_8),rgs8_(6|->id_reg_8))) & (r1 = 2|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(9|->id_reg_8),rgs8_(10|->id_reg_8))) & (r1 = 3|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(13|->id_reg_8),rgs8_(14|->id_reg_8))) & (r1 = 4|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = sp_) & (r1 = 5|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(1|->id_reg_8),rgs8_(2|->id_reg_8)))) & REG16_TO_REG8: (1..5)*{id_reg_16} +-> (1..16)*{id_reg_8}*((1..16)*{id_reg_8}) & dom(REG16_TO_REG8) = (1..5)*{id_reg_16} & REG16_TO_REG8(1|->id_reg_16) = 5|->id_reg_8|->(6|->id_reg_8) & REG16_TO_REG8(2|->id_reg_16) = 9|->id_reg_8|->(10|->id_reg_8) & REG16_TO_REG8(3|->id_reg_16) = 13|->id_reg_8|->(14|->id_reg_8) & REG16_TO_REG8(5|->id_reg_16) = 1|->id_reg_8|->(2|->id_reg_8) & REG8_TO_REG16: (1..16)*{id_reg_8}*((1..16)*{id_reg_8}) +-> (1..5)*{id_reg_16} & REG8_TO_REG16 = REG16_TO_REG8~ & update_flag_reg: BIT*BIT*BIT*BIT*BIT*BIT +-> {2|->id_reg_8}*BYTE & dom(update_flag_reg) = BIT*BIT*BIT*BIT*BIT*BIT & update_flag_reg = %(s7$0,z6$0,h4$0,pv2$0,n_add_sub$0,c0$0).(s7$0: BIT & z6$0: BIT & h4$0: BIT & pv2$0: BIT & n_add_sub$0: BIT & c0$0: BIT | 2|->id_reg_8|->[c0$0,n_add_sub$0,pv2$0,1,h4$0,1,z6$0,s7$0]) & bv_ireg_plus_d: BV16*SCHAR +-> BV16 & dom(bv_ireg_plus_d) = BV16*SCHAR & bv_ireg_plus_d = %(ix_iy,desloc).(ix_iy: BV16 & desloc: SCHAR | ushort_bv16((bv16_ushort(ix_iy)+desloc) mod 65536)) & bv_9ireg_plus_d0: (BV16 --> BYTE)*BV16*SCHAR +-> BYTE & dom(bv_9ireg_plus_d0) = (BV16 --> BYTE)*BV16*SCHAR & mem: BV16 +-> BYTE & dom(mem) = BV16 & ix_iy: BV16 & desloc: SCHAR);
(ix_iy,desloc: dom(bv_ireg_plus_d));
("`Local hypotheses'" & (1..16)*{id_reg_8}: FIN(NATURAL*{id_reg_8}) & not((1..16)*{id_reg_8} = {}) & (1..5)*{id_reg_16}: FIN(NATURAL*{id_reg_16}) & not((1..5)*{id_reg_16} = {}) & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & dom(get_bv_reg16) = BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) & !(sp_,rgs8_,r1).(sp_: BV16 & rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & r1: (1..5)*{id_reg_16} => (r1 = 1|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(5|->id_reg_8),rgs8_(6|->id_reg_8))) & (r1 = 2|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(9|->id_reg_8),rgs8_(10|->id_reg_8))) & (r1 = 3|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(13|->id_reg_8),rgs8_(14|->id_reg_8))) & (r1 = 4|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = sp_) & (r1 = 5|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(1|->id_reg_8),rgs8_(2|->id_reg_8)))) & REG16_TO_REG8: (1..5)*{id_reg_16} +-> (1..16)*{id_reg_8}*((1..16)*{id_reg_8}) & dom(REG16_TO_REG8) = (1..5)*{id_reg_16} & REG16_TO_REG8(1|->id_reg_16) = 5|->id_reg_8|->(6|->id_reg_8) & REG16_TO_REG8(2|->id_reg_16) = 9|->id_reg_8|->(10|->id_reg_8) & REG16_TO_REG8(3|->id_reg_16) = 13|->id_reg_8|->(14|->id_reg_8) & REG16_TO_REG8(5|->id_reg_16) = 1|->id_reg_8|->(2|->id_reg_8) & REG8_TO_REG16: (1..16)*{id_reg_8}*((1..16)*{id_reg_8}) +-> (1..5)*{id_reg_16} & REG8_TO_REG16 = REG16_TO_REG8~ & update_flag_reg: BIT*BIT*BIT*BIT*BIT*BIT +-> {2|->id_reg_8}*BYTE & dom(update_flag_reg) = BIT*BIT*BIT*BIT*BIT*BIT & update_flag_reg = %(s7$0,z6$0,h4$0,pv2$0,n_add_sub$0,c0$0).(s7$0: BIT & z6$0: BIT & h4$0: BIT & pv2$0: BIT & n_add_sub$0: BIT & c0$0: BIT | 2|->id_reg_8|->[c0$0,n_add_sub$0,pv2$0,1,h4$0,1,z6$0,s7$0]) & bv_ireg_plus_d: BV16*SCHAR +-> BV16 & dom(bv_ireg_plus_d) = BV16*SCHAR & bv_ireg_plus_d = %(ix_iy,desloc).(ix_iy: BV16 & desloc: SCHAR | ushort_bv16((bv16_ushort(ix_iy)+desloc) mod 65536)) & bv_9ireg_plus_d0: (BV16 --> BYTE)*BV16*SCHAR +-> BYTE & dom(bv_9ireg_plus_d0) = (BV16 --> BYTE)*BV16*SCHAR & mem: BV16 +-> BYTE & dom(mem) = BV16 & ix_iy: BV16 & desloc: SCHAR);
(bv_ireg_plus_d(ix_iy,desloc): dom(mem));
("`Local hypotheses'" & (1..16)*{id_reg_8}: FIN(NATURAL*{id_reg_8}) & not((1..16)*{id_reg_8} = {}) & (1..5)*{id_reg_16}: FIN(NATURAL*{id_reg_16}) & not((1..5)*{id_reg_16} = {}) & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & dom(get_bv_reg16) = BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) & !(sp_,rgs8_,r1).(sp_: BV16 & rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & r1: (1..5)*{id_reg_16} => (r1 = 1|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(5|->id_reg_8),rgs8_(6|->id_reg_8))) & (r1 = 2|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(9|->id_reg_8),rgs8_(10|->id_reg_8))) & (r1 = 3|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(13|->id_reg_8),rgs8_(14|->id_reg_8))) & (r1 = 4|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = sp_) & (r1 = 5|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(1|->id_reg_8),rgs8_(2|->id_reg_8)))) & REG16_TO_REG8: (1..5)*{id_reg_16} +-> (1..16)*{id_reg_8}*((1..16)*{id_reg_8}) & dom(REG16_TO_REG8) = (1..5)*{id_reg_16} & REG16_TO_REG8(1|->id_reg_16) = 5|->id_reg_8|->(6|->id_reg_8) & REG16_TO_REG8(2|->id_reg_16) = 9|->id_reg_8|->(10|->id_reg_8) & REG16_TO_REG8(3|->id_reg_16) = 13|->id_reg_8|->(14|->id_reg_8) & REG16_TO_REG8(5|->id_reg_16) = 1|->id_reg_8|->(2|->id_reg_8) & REG8_TO_REG16: (1..16)*{id_reg_8}*((1..16)*{id_reg_8}) +-> (1..5)*{id_reg_16} & REG8_TO_REG16 = REG16_TO_REG8~ & update_flag_reg: BIT*BIT*BIT*BIT*BIT*BIT +-> {2|->id_reg_8}*BYTE & dom(update_flag_reg) = BIT*BIT*BIT*BIT*BIT*BIT & update_flag_reg = %(s7$0,z6$0,h4$0,pv2$0,n_add_sub$0,c0$0).(s7$0: BIT & z6$0: BIT & h4$0: BIT & pv2$0: BIT & n_add_sub$0: BIT & c0$0: BIT | 2|->id_reg_8|->[c0$0,n_add_sub$0,pv2$0,1,h4$0,1,z6$0,s7$0]) & bv_ireg_plus_d: BV16*SCHAR +-> BV16 & dom(bv_ireg_plus_d) = BV16*SCHAR & bv_ireg_plus_d = %(ix_iy,desloc).(ix_iy: BV16 & desloc: SCHAR | ushort_bv16((bv16_ushort(ix_iy)+desloc) mod 65536)) & bv_9ireg_plus_d0: (BV16 --> BYTE)*BV16*SCHAR +-> BYTE & dom(bv_9ireg_plus_d0) = (BV16 --> BYTE)*BV16*SCHAR & bv_9ireg_plus_d0 = %(mem,ix_iy,desloc).(mem: BV16 +-> BYTE & dom(mem) = BV16 & ix_iy: BV16 & desloc: SCHAR | mem(bv_ireg_plus_d(ix_iy,desloc))) & cc_get: ((1..16)*{id_reg_8} --> BYTE)*(0..8) +-> BIT & dom(cc_get) = ((1..16)*{id_reg_8} --> BYTE)*(0..8) & rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8});
(rgs8_,0: dom(cc_get));
("`Local hypotheses'" & (1..16)*{id_reg_8}: FIN(NATURAL*{id_reg_8}) & not((1..16)*{id_reg_8} = {}) & (1..5)*{id_reg_16}: FIN(NATURAL*{id_reg_16}) & not((1..5)*{id_reg_16} = {}) & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & dom(get_bv_reg16) = BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) & !(sp_,rgs8_,r1).(sp_: BV16 & rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & r1: (1..5)*{id_reg_16} => (r1 = 1|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(5|->id_reg_8),rgs8_(6|->id_reg_8))) & (r1 = 2|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(9|->id_reg_8),rgs8_(10|->id_reg_8))) & (r1 = 3|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(13|->id_reg_8),rgs8_(14|->id_reg_8))) & (r1 = 4|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = sp_) & (r1 = 5|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(1|->id_reg_8),rgs8_(2|->id_reg_8)))) & REG16_TO_REG8: (1..5)*{id_reg_16} +-> (1..16)*{id_reg_8}*((1..16)*{id_reg_8}) & dom(REG16_TO_REG8) = (1..5)*{id_reg_16} & REG16_TO_REG8(1|->id_reg_16) = 5|->id_reg_8|->(6|->id_reg_8) & REG16_TO_REG8(2|->id_reg_16) = 9|->id_reg_8|->(10|->id_reg_8) & REG16_TO_REG8(3|->id_reg_16) = 13|->id_reg_8|->(14|->id_reg_8) & REG16_TO_REG8(5|->id_reg_16) = 1|->id_reg_8|->(2|->id_reg_8) & REG8_TO_REG16: (1..16)*{id_reg_8}*((1..16)*{id_reg_8}) +-> (1..5)*{id_reg_16} & REG8_TO_REG16 = REG16_TO_REG8~ & update_flag_reg: BIT*BIT*BIT*BIT*BIT*BIT +-> {2|->id_reg_8}*BYTE & dom(update_flag_reg) = BIT*BIT*BIT*BIT*BIT*BIT & update_flag_reg = %(s7$0,z6$0,h4$0,pv2$0,n_add_sub$0,c0$0).(s7$0: BIT & z6$0: BIT & h4$0: BIT & pv2$0: BIT & n_add_sub$0: BIT & c0$0: BIT | 2|->id_reg_8|->[c0$0,n_add_sub$0,pv2$0,1,h4$0,1,z6$0,s7$0]) & bv_ireg_plus_d: BV16*SCHAR +-> BV16 & dom(bv_ireg_plus_d) = BV16*SCHAR & bv_ireg_plus_d = %(ix_iy,desloc).(ix_iy: BV16 & desloc: SCHAR | ushort_bv16((bv16_ushort(ix_iy)+desloc) mod 65536)) & bv_9ireg_plus_d0: (BV16 --> BYTE)*BV16*SCHAR +-> BYTE & dom(bv_9ireg_plus_d0) = (BV16 --> BYTE)*BV16*SCHAR & bv_9ireg_plus_d0 = %(mem,ix_iy,desloc).(mem: BV16 +-> BYTE & dom(mem) = BV16 & ix_iy: BV16 & desloc: SCHAR | mem(bv_ireg_plus_d(ix_iy,desloc))) & cc_get: ((1..16)*{id_reg_8} --> BYTE)*(0..8) +-> BIT & dom(cc_get) = ((1..16)*{id_reg_8} --> BYTE)*(0..8) & rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8});
(2|->id_reg_8: dom(rgs8_));
("`Local hypotheses'" & (1..16)*{id_reg_8}: FIN(NATURAL*{id_reg_8}) & not((1..16)*{id_reg_8} = {}) & (1..5)*{id_reg_16}: FIN(NATURAL*{id_reg_16}) & not((1..5)*{id_reg_16} = {}) & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & dom(get_bv_reg16) = BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) & !(sp_,rgs8_,r1).(sp_: BV16 & rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & r1: (1..5)*{id_reg_16} => (r1 = 1|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(5|->id_reg_8),rgs8_(6|->id_reg_8))) & (r1 = 2|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(9|->id_reg_8),rgs8_(10|->id_reg_8))) & (r1 = 3|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(13|->id_reg_8),rgs8_(14|->id_reg_8))) & (r1 = 4|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = sp_) & (r1 = 5|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(1|->id_reg_8),rgs8_(2|->id_reg_8)))) & REG16_TO_REG8: (1..5)*{id_reg_16} +-> (1..16)*{id_reg_8}*((1..16)*{id_reg_8}) & dom(REG16_TO_REG8) = (1..5)*{id_reg_16} & REG16_TO_REG8(1|->id_reg_16) = 5|->id_reg_8|->(6|->id_reg_8) & REG16_TO_REG8(2|->id_reg_16) = 9|->id_reg_8|->(10|->id_reg_8) & REG16_TO_REG8(3|->id_reg_16) = 13|->id_reg_8|->(14|->id_reg_8) & REG16_TO_REG8(5|->id_reg_16) = 1|->id_reg_8|->(2|->id_reg_8) & REG8_TO_REG16: (1..16)*{id_reg_8}*((1..16)*{id_reg_8}) +-> (1..5)*{id_reg_16} & REG8_TO_REG16 = REG16_TO_REG8~ & update_flag_reg: BIT*BIT*BIT*BIT*BIT*BIT +-> {2|->id_reg_8}*BYTE & dom(update_flag_reg) = BIT*BIT*BIT*BIT*BIT*BIT & update_flag_reg = %(s7$0,z6$0,h4$0,pv2$0,n_add_sub$0,c0$0).(s7$0: BIT & z6$0: BIT & h4$0: BIT & pv2$0: BIT & n_add_sub$0: BIT & c0$0: BIT | 2|->id_reg_8|->[c0$0,n_add_sub$0,pv2$0,1,h4$0,1,z6$0,s7$0]) & bv_ireg_plus_d: BV16*SCHAR +-> BV16 & dom(bv_ireg_plus_d) = BV16*SCHAR & bv_ireg_plus_d = %(ix_iy,desloc).(ix_iy: BV16 & desloc: SCHAR | ushort_bv16((bv16_ushort(ix_iy)+desloc) mod 65536)) & bv_9ireg_plus_d0: (BV16 --> BYTE)*BV16*SCHAR +-> BYTE & dom(bv_9ireg_plus_d0) = (BV16 --> BYTE)*BV16*SCHAR & bv_9ireg_plus_d0 = %(mem,ix_iy,desloc).(mem: BV16 +-> BYTE & dom(mem) = BV16 & ix_iy: BV16 & desloc: SCHAR | mem(bv_ireg_plus_d(ix_iy,desloc))) & cc_get: ((1..16)*{id_reg_8} --> BYTE)*(0..8) +-> BIT & dom(cc_get) = ((1..16)*{id_reg_8} --> BYTE)*(0..8) & rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8});
(rgs8_(2|->id_reg_8),6: dom(bitget));
("`Local hypotheses'" & (1..16)*{id_reg_8}: FIN(NATURAL*{id_reg_8}) & not((1..16)*{id_reg_8} = {}) & (1..5)*{id_reg_16}: FIN(NATURAL*{id_reg_16}) & not((1..5)*{id_reg_16} = {}) & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & dom(get_bv_reg16) = BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) & !(sp_,rgs8_,r1).(sp_: BV16 & rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & r1: (1..5)*{id_reg_16} => (r1 = 1|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(5|->id_reg_8),rgs8_(6|->id_reg_8))) & (r1 = 2|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(9|->id_reg_8),rgs8_(10|->id_reg_8))) & (r1 = 3|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(13|->id_reg_8),rgs8_(14|->id_reg_8))) & (r1 = 4|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = sp_) & (r1 = 5|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(1|->id_reg_8),rgs8_(2|->id_reg_8)))) & REG16_TO_REG8: (1..5)*{id_reg_16} +-> (1..16)*{id_reg_8}*((1..16)*{id_reg_8}) & dom(REG16_TO_REG8) = (1..5)*{id_reg_16} & REG16_TO_REG8(1|->id_reg_16) = 5|->id_reg_8|->(6|->id_reg_8) & REG16_TO_REG8(2|->id_reg_16) = 9|->id_reg_8|->(10|->id_reg_8) & REG16_TO_REG8(3|->id_reg_16) = 13|->id_reg_8|->(14|->id_reg_8) & REG16_TO_REG8(5|->id_reg_16) = 1|->id_reg_8|->(2|->id_reg_8) & REG8_TO_REG16: (1..16)*{id_reg_8}*((1..16)*{id_reg_8}) +-> (1..5)*{id_reg_16} & REG8_TO_REG16 = REG16_TO_REG8~ & update_flag_reg: BIT*BIT*BIT*BIT*BIT*BIT +-> {2|->id_reg_8}*BYTE & dom(update_flag_reg) = BIT*BIT*BIT*BIT*BIT*BIT & update_flag_reg = %(s7$0,z6$0,h4$0,pv2$0,n_add_sub$0,c0$0).(s7$0: BIT & z6$0: BIT & h4$0: BIT & pv2$0: BIT & n_add_sub$0: BIT & c0$0: BIT | 2|->id_reg_8|->[c0$0,n_add_sub$0,pv2$0,1,h4$0,1,z6$0,s7$0]) & bv_ireg_plus_d: BV16*SCHAR +-> BV16 & dom(bv_ireg_plus_d) = BV16*SCHAR & bv_ireg_plus_d = %(ix_iy,desloc).(ix_iy: BV16 & desloc: SCHAR | ushort_bv16((bv16_ushort(ix_iy)+desloc) mod 65536)) & bv_9ireg_plus_d0: (BV16 --> BYTE)*BV16*SCHAR +-> BYTE & dom(bv_9ireg_plus_d0) = (BV16 --> BYTE)*BV16*SCHAR & bv_9ireg_plus_d0 = %(mem,ix_iy,desloc).(mem: BV16 +-> BYTE & dom(mem) = BV16 & ix_iy: BV16 & desloc: SCHAR | mem(bv_ireg_plus_d(ix_iy,desloc))) & cc_get: ((1..16)*{id_reg_8} --> BYTE)*(0..8) +-> BIT & dom(cc_get) = ((1..16)*{id_reg_8} --> BYTE)*(0..8) & rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & cc_get(rgs8_,0) = 1-bitget(rgs8_(2|->id_reg_8),6));
(rgs8_,1: dom(cc_get));
("`Local hypotheses'" & (1..16)*{id_reg_8}: FIN(NATURAL*{id_reg_8}) & not((1..16)*{id_reg_8} = {}) & (1..5)*{id_reg_16}: FIN(NATURAL*{id_reg_16}) & not((1..5)*{id_reg_16} = {}) & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & dom(get_bv_reg16) = BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) & !(sp_,rgs8_,r1).(sp_: BV16 & rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & r1: (1..5)*{id_reg_16} => (r1 = 1|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(5|->id_reg_8),rgs8_(6|->id_reg_8))) & (r1 = 2|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(9|->id_reg_8),rgs8_(10|->id_reg_8))) & (r1 = 3|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(13|->id_reg_8),rgs8_(14|->id_reg_8))) & (r1 = 4|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = sp_) & (r1 = 5|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(1|->id_reg_8),rgs8_(2|->id_reg_8)))) & REG16_TO_REG8: (1..5)*{id_reg_16} +-> (1..16)*{id_reg_8}*((1..16)*{id_reg_8}) & dom(REG16_TO_REG8) = (1..5)*{id_reg_16} & REG16_TO_REG8(1|->id_reg_16) = 5|->id_reg_8|->(6|->id_reg_8) & REG16_TO_REG8(2|->id_reg_16) = 9|->id_reg_8|->(10|->id_reg_8) & REG16_TO_REG8(3|->id_reg_16) = 13|->id_reg_8|->(14|->id_reg_8) & REG16_TO_REG8(5|->id_reg_16) = 1|->id_reg_8|->(2|->id_reg_8) & REG8_TO_REG16: (1..16)*{id_reg_8}*((1..16)*{id_reg_8}) +-> (1..5)*{id_reg_16} & REG8_TO_REG16 = REG16_TO_REG8~ & update_flag_reg: BIT*BIT*BIT*BIT*BIT*BIT +-> {2|->id_reg_8}*BYTE & dom(update_flag_reg) = BIT*BIT*BIT*BIT*BIT*BIT & update_flag_reg = %(s7$0,z6$0,h4$0,pv2$0,n_add_sub$0,c0$0).(s7$0: BIT & z6$0: BIT & h4$0: BIT & pv2$0: BIT & n_add_sub$0: BIT & c0$0: BIT | 2|->id_reg_8|->[c0$0,n_add_sub$0,pv2$0,1,h4$0,1,z6$0,s7$0]) & bv_ireg_plus_d: BV16*SCHAR +-> BV16 & dom(bv_ireg_plus_d) = BV16*SCHAR & bv_ireg_plus_d = %(ix_iy,desloc).(ix_iy: BV16 & desloc: SCHAR | ushort_bv16((bv16_ushort(ix_iy)+desloc) mod 65536)) & bv_9ireg_plus_d0: (BV16 --> BYTE)*BV16*SCHAR +-> BYTE & dom(bv_9ireg_plus_d0) = (BV16 --> BYTE)*BV16*SCHAR & bv_9ireg_plus_d0 = %(mem,ix_iy,desloc).(mem: BV16 +-> BYTE & dom(mem) = BV16 & ix_iy: BV16 & desloc: SCHAR | mem(bv_ireg_plus_d(ix_iy,desloc))) & cc_get: ((1..16)*{id_reg_8} --> BYTE)*(0..8) +-> BIT & dom(cc_get) = ((1..16)*{id_reg_8} --> BYTE)*(0..8) & rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & cc_get(rgs8_,0) = 1-bitget(rgs8_(2|->id_reg_8),6));
(2|->id_reg_8: dom(rgs8_));
("`Local hypotheses'" & (1..16)*{id_reg_8}: FIN(NATURAL*{id_reg_8}) & not((1..16)*{id_reg_8} = {}) & (1..5)*{id_reg_16}: FIN(NATURAL*{id_reg_16}) & not((1..5)*{id_reg_16} = {}) & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & dom(get_bv_reg16) = BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) & !(sp_,rgs8_,r1).(sp_: BV16 & rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & r1: (1..5)*{id_reg_16} => (r1 = 1|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(5|->id_reg_8),rgs8_(6|->id_reg_8))) & (r1 = 2|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(9|->id_reg_8),rgs8_(10|->id_reg_8))) & (r1 = 3|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(13|->id_reg_8),rgs8_(14|->id_reg_8))) & (r1 = 4|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = sp_) & (r1 = 5|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(1|->id_reg_8),rgs8_(2|->id_reg_8)))) & REG16_TO_REG8: (1..5)*{id_reg_16} +-> (1..16)*{id_reg_8}*((1..16)*{id_reg_8}) & dom(REG16_TO_REG8) = (1..5)*{id_reg_16} & REG16_TO_REG8(1|->id_reg_16) = 5|->id_reg_8|->(6|->id_reg_8) & REG16_TO_REG8(2|->id_reg_16) = 9|->id_reg_8|->(10|->id_reg_8) & REG16_TO_REG8(3|->id_reg_16) = 13|->id_reg_8|->(14|->id_reg_8) & REG16_TO_REG8(5|->id_reg_16) = 1|->id_reg_8|->(2|->id_reg_8) & REG8_TO_REG16: (1..16)*{id_reg_8}*((1..16)*{id_reg_8}) +-> (1..5)*{id_reg_16} & REG8_TO_REG16 = REG16_TO_REG8~ & update_flag_reg: BIT*BIT*BIT*BIT*BIT*BIT +-> {2|->id_reg_8}*BYTE & dom(update_flag_reg) = BIT*BIT*BIT*BIT*BIT*BIT & update_flag_reg = %(s7$0,z6$0,h4$0,pv2$0,n_add_sub$0,c0$0).(s7$0: BIT & z6$0: BIT & h4$0: BIT & pv2$0: BIT & n_add_sub$0: BIT & c0$0: BIT | 2|->id_reg_8|->[c0$0,n_add_sub$0,pv2$0,1,h4$0,1,z6$0,s7$0]) & bv_ireg_plus_d: BV16*SCHAR +-> BV16 & dom(bv_ireg_plus_d) = BV16*SCHAR & bv_ireg_plus_d = %(ix_iy,desloc).(ix_iy: BV16 & desloc: SCHAR | ushort_bv16((bv16_ushort(ix_iy)+desloc) mod 65536)) & bv_9ireg_plus_d0: (BV16 --> BYTE)*BV16*SCHAR +-> BYTE & dom(bv_9ireg_plus_d0) = (BV16 --> BYTE)*BV16*SCHAR & bv_9ireg_plus_d0 = %(mem,ix_iy,desloc).(mem: BV16 +-> BYTE & dom(mem) = BV16 & ix_iy: BV16 & desloc: SCHAR | mem(bv_ireg_plus_d(ix_iy,desloc))) & cc_get: ((1..16)*{id_reg_8} --> BYTE)*(0..8) +-> BIT & dom(cc_get) = ((1..16)*{id_reg_8} --> BYTE)*(0..8) & rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & cc_get(rgs8_,0) = 1-bitget(rgs8_(2|->id_reg_8),6));
(rgs8_(2|->id_reg_8),6: dom(bitget));
("`Local hypotheses'" & (1..16)*{id_reg_8}: FIN(NATURAL*{id_reg_8}) & not((1..16)*{id_reg_8} = {}) & (1..5)*{id_reg_16}: FIN(NATURAL*{id_reg_16}) & not((1..5)*{id_reg_16} = {}) & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & dom(get_bv_reg16) = BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) & !(sp_,rgs8_,r1).(sp_: BV16 & rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & r1: (1..5)*{id_reg_16} => (r1 = 1|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(5|->id_reg_8),rgs8_(6|->id_reg_8))) & (r1 = 2|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(9|->id_reg_8),rgs8_(10|->id_reg_8))) & (r1 = 3|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(13|->id_reg_8),rgs8_(14|->id_reg_8))) & (r1 = 4|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = sp_) & (r1 = 5|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(1|->id_reg_8),rgs8_(2|->id_reg_8)))) & REG16_TO_REG8: (1..5)*{id_reg_16} +-> (1..16)*{id_reg_8}*((1..16)*{id_reg_8}) & dom(REG16_TO_REG8) = (1..5)*{id_reg_16} & REG16_TO_REG8(1|->id_reg_16) = 5|->id_reg_8|->(6|->id_reg_8) & REG16_TO_REG8(2|->id_reg_16) = 9|->id_reg_8|->(10|->id_reg_8) & REG16_TO_REG8(3|->id_reg_16) = 13|->id_reg_8|->(14|->id_reg_8) & REG16_TO_REG8(5|->id_reg_16) = 1|->id_reg_8|->(2|->id_reg_8) & REG8_TO_REG16: (1..16)*{id_reg_8}*((1..16)*{id_reg_8}) +-> (1..5)*{id_reg_16} & REG8_TO_REG16 = REG16_TO_REG8~ & update_flag_reg: BIT*BIT*BIT*BIT*BIT*BIT +-> {2|->id_reg_8}*BYTE & dom(update_flag_reg) = BIT*BIT*BIT*BIT*BIT*BIT & update_flag_reg = %(s7$0,z6$0,h4$0,pv2$0,n_add_sub$0,c0$0).(s7$0: BIT & z6$0: BIT & h4$0: BIT & pv2$0: BIT & n_add_sub$0: BIT & c0$0: BIT | 2|->id_reg_8|->[c0$0,n_add_sub$0,pv2$0,1,h4$0,1,z6$0,s7$0]) & bv_ireg_plus_d: BV16*SCHAR +-> BV16 & dom(bv_ireg_plus_d) = BV16*SCHAR & bv_ireg_plus_d = %(ix_iy,desloc).(ix_iy: BV16 & desloc: SCHAR | ushort_bv16((bv16_ushort(ix_iy)+desloc) mod 65536)) & bv_9ireg_plus_d0: (BV16 --> BYTE)*BV16*SCHAR +-> BYTE & dom(bv_9ireg_plus_d0) = (BV16 --> BYTE)*BV16*SCHAR & bv_9ireg_plus_d0 = %(mem,ix_iy,desloc).(mem: BV16 +-> BYTE & dom(mem) = BV16 & ix_iy: BV16 & desloc: SCHAR | mem(bv_ireg_plus_d(ix_iy,desloc))) & cc_get: ((1..16)*{id_reg_8} --> BYTE)*(0..8) +-> BIT & dom(cc_get) = ((1..16)*{id_reg_8} --> BYTE)*(0..8) & rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & cc_get(rgs8_,0) = 1-bitget(rgs8_(2|->id_reg_8),6) & cc_get(rgs8_,1) = bitget(rgs8_(2|->id_reg_8),6));
(rgs8_,2: dom(cc_get));
("`Local hypotheses'" & (1..16)*{id_reg_8}: FIN(NATURAL*{id_reg_8}) & not((1..16)*{id_reg_8} = {}) & (1..5)*{id_reg_16}: FIN(NATURAL*{id_reg_16}) & not((1..5)*{id_reg_16} = {}) & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & dom(get_bv_reg16) = BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) & !(sp_,rgs8_,r1).(sp_: BV16 & rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & r1: (1..5)*{id_reg_16} => (r1 = 1|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(5|->id_reg_8),rgs8_(6|->id_reg_8))) & (r1 = 2|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(9|->id_reg_8),rgs8_(10|->id_reg_8))) & (r1 = 3|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(13|->id_reg_8),rgs8_(14|->id_reg_8))) & (r1 = 4|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = sp_) & (r1 = 5|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(1|->id_reg_8),rgs8_(2|->id_reg_8)))) & REG16_TO_REG8: (1..5)*{id_reg_16} +-> (1..16)*{id_reg_8}*((1..16)*{id_reg_8}) & dom(REG16_TO_REG8) = (1..5)*{id_reg_16} & REG16_TO_REG8(1|->id_reg_16) = 5|->id_reg_8|->(6|->id_reg_8) & REG16_TO_REG8(2|->id_reg_16) = 9|->id_reg_8|->(10|->id_reg_8) & REG16_TO_REG8(3|->id_reg_16) = 13|->id_reg_8|->(14|->id_reg_8) & REG16_TO_REG8(5|->id_reg_16) = 1|->id_reg_8|->(2|->id_reg_8) & REG8_TO_REG16: (1..16)*{id_reg_8}*((1..16)*{id_reg_8}) +-> (1..5)*{id_reg_16} & REG8_TO_REG16 = REG16_TO_REG8~ & update_flag_reg: BIT*BIT*BIT*BIT*BIT*BIT +-> {2|->id_reg_8}*BYTE & dom(update_flag_reg) = BIT*BIT*BIT*BIT*BIT*BIT & update_flag_reg = %(s7$0,z6$0,h4$0,pv2$0,n_add_sub$0,c0$0).(s7$0: BIT & z6$0: BIT & h4$0: BIT & pv2$0: BIT & n_add_sub$0: BIT & c0$0: BIT | 2|->id_reg_8|->[c0$0,n_add_sub$0,pv2$0,1,h4$0,1,z6$0,s7$0]) & bv_ireg_plus_d: BV16*SCHAR +-> BV16 & dom(bv_ireg_plus_d) = BV16*SCHAR & bv_ireg_plus_d = %(ix_iy,desloc).(ix_iy: BV16 & desloc: SCHAR | ushort_bv16((bv16_ushort(ix_iy)+desloc) mod 65536)) & bv_9ireg_plus_d0: (BV16 --> BYTE)*BV16*SCHAR +-> BYTE & dom(bv_9ireg_plus_d0) = (BV16 --> BYTE)*BV16*SCHAR & bv_9ireg_plus_d0 = %(mem,ix_iy,desloc).(mem: BV16 +-> BYTE & dom(mem) = BV16 & ix_iy: BV16 & desloc: SCHAR | mem(bv_ireg_plus_d(ix_iy,desloc))) & cc_get: ((1..16)*{id_reg_8} --> BYTE)*(0..8) +-> BIT & dom(cc_get) = ((1..16)*{id_reg_8} --> BYTE)*(0..8) & rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & cc_get(rgs8_,0) = 1-bitget(rgs8_(2|->id_reg_8),6) & cc_get(rgs8_,1) = bitget(rgs8_(2|->id_reg_8),6));
(2|->id_reg_8: dom(rgs8_));
("`Local hypotheses'" & (1..16)*{id_reg_8}: FIN(NATURAL*{id_reg_8}) & not((1..16)*{id_reg_8} = {}) & (1..5)*{id_reg_16}: FIN(NATURAL*{id_reg_16}) & not((1..5)*{id_reg_16} = {}) & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & dom(get_bv_reg16) = BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) & !(sp_,rgs8_,r1).(sp_: BV16 & rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & r1: (1..5)*{id_reg_16} => (r1 = 1|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(5|->id_reg_8),rgs8_(6|->id_reg_8))) & (r1 = 2|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(9|->id_reg_8),rgs8_(10|->id_reg_8))) & (r1 = 3|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(13|->id_reg_8),rgs8_(14|->id_reg_8))) & (r1 = 4|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = sp_) & (r1 = 5|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(1|->id_reg_8),rgs8_(2|->id_reg_8)))) & REG16_TO_REG8: (1..5)*{id_reg_16} +-> (1..16)*{id_reg_8}*((1..16)*{id_reg_8}) & dom(REG16_TO_REG8) = (1..5)*{id_reg_16} & REG16_TO_REG8(1|->id_reg_16) = 5|->id_reg_8|->(6|->id_reg_8) & REG16_TO_REG8(2|->id_reg_16) = 9|->id_reg_8|->(10|->id_reg_8) & REG16_TO_REG8(3|->id_reg_16) = 13|->id_reg_8|->(14|->id_reg_8) & REG16_TO_REG8(5|->id_reg_16) = 1|->id_reg_8|->(2|->id_reg_8) & REG8_TO_REG16: (1..16)*{id_reg_8}*((1..16)*{id_reg_8}) +-> (1..5)*{id_reg_16} & REG8_TO_REG16 = REG16_TO_REG8~ & update_flag_reg: BIT*BIT*BIT*BIT*BIT*BIT +-> {2|->id_reg_8}*BYTE & dom(update_flag_reg) = BIT*BIT*BIT*BIT*BIT*BIT & update_flag_reg = %(s7$0,z6$0,h4$0,pv2$0,n_add_sub$0,c0$0).(s7$0: BIT & z6$0: BIT & h4$0: BIT & pv2$0: BIT & n_add_sub$0: BIT & c0$0: BIT | 2|->id_reg_8|->[c0$0,n_add_sub$0,pv2$0,1,h4$0,1,z6$0,s7$0]) & bv_ireg_plus_d: BV16*SCHAR +-> BV16 & dom(bv_ireg_plus_d) = BV16*SCHAR & bv_ireg_plus_d = %(ix_iy,desloc).(ix_iy: BV16 & desloc: SCHAR | ushort_bv16((bv16_ushort(ix_iy)+desloc) mod 65536)) & bv_9ireg_plus_d0: (BV16 --> BYTE)*BV16*SCHAR +-> BYTE & dom(bv_9ireg_plus_d0) = (BV16 --> BYTE)*BV16*SCHAR & bv_9ireg_plus_d0 = %(mem,ix_iy,desloc).(mem: BV16 +-> BYTE & dom(mem) = BV16 & ix_iy: BV16 & desloc: SCHAR | mem(bv_ireg_plus_d(ix_iy,desloc))) & cc_get: ((1..16)*{id_reg_8} --> BYTE)*(0..8) +-> BIT & dom(cc_get) = ((1..16)*{id_reg_8} --> BYTE)*(0..8) & rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & cc_get(rgs8_,0) = 1-bitget(rgs8_(2|->id_reg_8),6) & cc_get(rgs8_,1) = bitget(rgs8_(2|->id_reg_8),6));
(rgs8_(2|->id_reg_8),0: dom(bitget));
("`Local hypotheses'" & (1..16)*{id_reg_8}: FIN(NATURAL*{id_reg_8}) & not((1..16)*{id_reg_8} = {}) & (1..5)*{id_reg_16}: FIN(NATURAL*{id_reg_16}) & not((1..5)*{id_reg_16} = {}) & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & dom(get_bv_reg16) = BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) & !(sp_,rgs8_,r1).(sp_: BV16 & rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & r1: (1..5)*{id_reg_16} => (r1 = 1|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(5|->id_reg_8),rgs8_(6|->id_reg_8))) & (r1 = 2|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(9|->id_reg_8),rgs8_(10|->id_reg_8))) & (r1 = 3|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(13|->id_reg_8),rgs8_(14|->id_reg_8))) & (r1 = 4|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = sp_) & (r1 = 5|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(1|->id_reg_8),rgs8_(2|->id_reg_8)))) & REG16_TO_REG8: (1..5)*{id_reg_16} +-> (1..16)*{id_reg_8}*((1..16)*{id_reg_8}) & dom(REG16_TO_REG8) = (1..5)*{id_reg_16} & REG16_TO_REG8(1|->id_reg_16) = 5|->id_reg_8|->(6|->id_reg_8) & REG16_TO_REG8(2|->id_reg_16) = 9|->id_reg_8|->(10|->id_reg_8) & REG16_TO_REG8(3|->id_reg_16) = 13|->id_reg_8|->(14|->id_reg_8) & REG16_TO_REG8(5|->id_reg_16) = 1|->id_reg_8|->(2|->id_reg_8) & REG8_TO_REG16: (1..16)*{id_reg_8}*((1..16)*{id_reg_8}) +-> (1..5)*{id_reg_16} & REG8_TO_REG16 = REG16_TO_REG8~ & update_flag_reg: BIT*BIT*BIT*BIT*BIT*BIT +-> {2|->id_reg_8}*BYTE & dom(update_flag_reg) = BIT*BIT*BIT*BIT*BIT*BIT & update_flag_reg = %(s7$0,z6$0,h4$0,pv2$0,n_add_sub$0,c0$0).(s7$0: BIT & z6$0: BIT & h4$0: BIT & pv2$0: BIT & n_add_sub$0: BIT & c0$0: BIT | 2|->id_reg_8|->[c0$0,n_add_sub$0,pv2$0,1,h4$0,1,z6$0,s7$0]) & bv_ireg_plus_d: BV16*SCHAR +-> BV16 & dom(bv_ireg_plus_d) = BV16*SCHAR & bv_ireg_plus_d = %(ix_iy,desloc).(ix_iy: BV16 & desloc: SCHAR | ushort_bv16((bv16_ushort(ix_iy)+desloc) mod 65536)) & bv_9ireg_plus_d0: (BV16 --> BYTE)*BV16*SCHAR +-> BYTE & dom(bv_9ireg_plus_d0) = (BV16 --> BYTE)*BV16*SCHAR & bv_9ireg_plus_d0 = %(mem,ix_iy,desloc).(mem: BV16 +-> BYTE & dom(mem) = BV16 & ix_iy: BV16 & desloc: SCHAR | mem(bv_ireg_plus_d(ix_iy,desloc))) & cc_get: ((1..16)*{id_reg_8} --> BYTE)*(0..8) +-> BIT & dom(cc_get) = ((1..16)*{id_reg_8} --> BYTE)*(0..8) & rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & cc_get(rgs8_,0) = 1-bitget(rgs8_(2|->id_reg_8),6) & cc_get(rgs8_,1) = bitget(rgs8_(2|->id_reg_8),6) & cc_get(rgs8_,2) = 1-bitget(rgs8_(2|->id_reg_8),0));
(rgs8_,3: dom(cc_get));
("`Local hypotheses'" & (1..16)*{id_reg_8}: FIN(NATURAL*{id_reg_8}) & not((1..16)*{id_reg_8} = {}) & (1..5)*{id_reg_16}: FIN(NATURAL*{id_reg_16}) & not((1..5)*{id_reg_16} = {}) & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & dom(get_bv_reg16) = BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) & !(sp_,rgs8_,r1).(sp_: BV16 & rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & r1: (1..5)*{id_reg_16} => (r1 = 1|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(5|->id_reg_8),rgs8_(6|->id_reg_8))) & (r1 = 2|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(9|->id_reg_8),rgs8_(10|->id_reg_8))) & (r1 = 3|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(13|->id_reg_8),rgs8_(14|->id_reg_8))) & (r1 = 4|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = sp_) & (r1 = 5|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(1|->id_reg_8),rgs8_(2|->id_reg_8)))) & REG16_TO_REG8: (1..5)*{id_reg_16} +-> (1..16)*{id_reg_8}*((1..16)*{id_reg_8}) & dom(REG16_TO_REG8) = (1..5)*{id_reg_16} & REG16_TO_REG8(1|->id_reg_16) = 5|->id_reg_8|->(6|->id_reg_8) & REG16_TO_REG8(2|->id_reg_16) = 9|->id_reg_8|->(10|->id_reg_8) & REG16_TO_REG8(3|->id_reg_16) = 13|->id_reg_8|->(14|->id_reg_8) & REG16_TO_REG8(5|->id_reg_16) = 1|->id_reg_8|->(2|->id_reg_8) & REG8_TO_REG16: (1..16)*{id_reg_8}*((1..16)*{id_reg_8}) +-> (1..5)*{id_reg_16} & REG8_TO_REG16 = REG16_TO_REG8~ & update_flag_reg: BIT*BIT*BIT*BIT*BIT*BIT +-> {2|->id_reg_8}*BYTE & dom(update_flag_reg) = BIT*BIT*BIT*BIT*BIT*BIT & update_flag_reg = %(s7$0,z6$0,h4$0,pv2$0,n_add_sub$0,c0$0).(s7$0: BIT & z6$0: BIT & h4$0: BIT & pv2$0: BIT & n_add_sub$0: BIT & c0$0: BIT | 2|->id_reg_8|->[c0$0,n_add_sub$0,pv2$0,1,h4$0,1,z6$0,s7$0]) & bv_ireg_plus_d: BV16*SCHAR +-> BV16 & dom(bv_ireg_plus_d) = BV16*SCHAR & bv_ireg_plus_d = %(ix_iy,desloc).(ix_iy: BV16 & desloc: SCHAR | ushort_bv16((bv16_ushort(ix_iy)+desloc) mod 65536)) & bv_9ireg_plus_d0: (BV16 --> BYTE)*BV16*SCHAR +-> BYTE & dom(bv_9ireg_plus_d0) = (BV16 --> BYTE)*BV16*SCHAR & bv_9ireg_plus_d0 = %(mem,ix_iy,desloc).(mem: BV16 +-> BYTE & dom(mem) = BV16 & ix_iy: BV16 & desloc: SCHAR | mem(bv_ireg_plus_d(ix_iy,desloc))) & cc_get: ((1..16)*{id_reg_8} --> BYTE)*(0..8) +-> BIT & dom(cc_get) = ((1..16)*{id_reg_8} --> BYTE)*(0..8) & rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & cc_get(rgs8_,0) = 1-bitget(rgs8_(2|->id_reg_8),6) & cc_get(rgs8_,1) = bitget(rgs8_(2|->id_reg_8),6) & cc_get(rgs8_,2) = 1-bitget(rgs8_(2|->id_reg_8),0));
(2|->id_reg_8: dom(rgs8_));
("`Local hypotheses'" & (1..16)*{id_reg_8}: FIN(NATURAL*{id_reg_8}) & not((1..16)*{id_reg_8} = {}) & (1..5)*{id_reg_16}: FIN(NATURAL*{id_reg_16}) & not((1..5)*{id_reg_16} = {}) & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & dom(get_bv_reg16) = BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) & !(sp_,rgs8_,r1).(sp_: BV16 & rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & r1: (1..5)*{id_reg_16} => (r1 = 1|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(5|->id_reg_8),rgs8_(6|->id_reg_8))) & (r1 = 2|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(9|->id_reg_8),rgs8_(10|->id_reg_8))) & (r1 = 3|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(13|->id_reg_8),rgs8_(14|->id_reg_8))) & (r1 = 4|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = sp_) & (r1 = 5|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(1|->id_reg_8),rgs8_(2|->id_reg_8)))) & REG16_TO_REG8: (1..5)*{id_reg_16} +-> (1..16)*{id_reg_8}*((1..16)*{id_reg_8}) & dom(REG16_TO_REG8) = (1..5)*{id_reg_16} & REG16_TO_REG8(1|->id_reg_16) = 5|->id_reg_8|->(6|->id_reg_8) & REG16_TO_REG8(2|->id_reg_16) = 9|->id_reg_8|->(10|->id_reg_8) & REG16_TO_REG8(3|->id_reg_16) = 13|->id_reg_8|->(14|->id_reg_8) & REG16_TO_REG8(5|->id_reg_16) = 1|->id_reg_8|->(2|->id_reg_8) & REG8_TO_REG16: (1..16)*{id_reg_8}*((1..16)*{id_reg_8}) +-> (1..5)*{id_reg_16} & REG8_TO_REG16 = REG16_TO_REG8~ & update_flag_reg: BIT*BIT*BIT*BIT*BIT*BIT +-> {2|->id_reg_8}*BYTE & dom(update_flag_reg) = BIT*BIT*BIT*BIT*BIT*BIT & update_flag_reg = %(s7$0,z6$0,h4$0,pv2$0,n_add_sub$0,c0$0).(s7$0: BIT & z6$0: BIT & h4$0: BIT & pv2$0: BIT & n_add_sub$0: BIT & c0$0: BIT | 2|->id_reg_8|->[c0$0,n_add_sub$0,pv2$0,1,h4$0,1,z6$0,s7$0]) & bv_ireg_plus_d: BV16*SCHAR +-> BV16 & dom(bv_ireg_plus_d) = BV16*SCHAR & bv_ireg_plus_d = %(ix_iy,desloc).(ix_iy: BV16 & desloc: SCHAR | ushort_bv16((bv16_ushort(ix_iy)+desloc) mod 65536)) & bv_9ireg_plus_d0: (BV16 --> BYTE)*BV16*SCHAR +-> BYTE & dom(bv_9ireg_plus_d0) = (BV16 --> BYTE)*BV16*SCHAR & bv_9ireg_plus_d0 = %(mem,ix_iy,desloc).(mem: BV16 +-> BYTE & dom(mem) = BV16 & ix_iy: BV16 & desloc: SCHAR | mem(bv_ireg_plus_d(ix_iy,desloc))) & cc_get: ((1..16)*{id_reg_8} --> BYTE)*(0..8) +-> BIT & dom(cc_get) = ((1..16)*{id_reg_8} --> BYTE)*(0..8) & rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & cc_get(rgs8_,0) = 1-bitget(rgs8_(2|->id_reg_8),6) & cc_get(rgs8_,1) = bitget(rgs8_(2|->id_reg_8),6) & cc_get(rgs8_,2) = 1-bitget(rgs8_(2|->id_reg_8),0));
(rgs8_(2|->id_reg_8),0: dom(bitget));
("`Local hypotheses'" & (1..16)*{id_reg_8}: FIN(NATURAL*{id_reg_8}) & not((1..16)*{id_reg_8} = {}) & (1..5)*{id_reg_16}: FIN(NATURAL*{id_reg_16}) & not((1..5)*{id_reg_16} = {}) & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & dom(get_bv_reg16) = BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) & !(sp_,rgs8_,r1).(sp_: BV16 & rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & r1: (1..5)*{id_reg_16} => (r1 = 1|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(5|->id_reg_8),rgs8_(6|->id_reg_8))) & (r1 = 2|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(9|->id_reg_8),rgs8_(10|->id_reg_8))) & (r1 = 3|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(13|->id_reg_8),rgs8_(14|->id_reg_8))) & (r1 = 4|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = sp_) & (r1 = 5|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(1|->id_reg_8),rgs8_(2|->id_reg_8)))) & REG16_TO_REG8: (1..5)*{id_reg_16} +-> (1..16)*{id_reg_8}*((1..16)*{id_reg_8}) & dom(REG16_TO_REG8) = (1..5)*{id_reg_16} & REG16_TO_REG8(1|->id_reg_16) = 5|->id_reg_8|->(6|->id_reg_8) & REG16_TO_REG8(2|->id_reg_16) = 9|->id_reg_8|->(10|->id_reg_8) & REG16_TO_REG8(3|->id_reg_16) = 13|->id_reg_8|->(14|->id_reg_8) & REG16_TO_REG8(5|->id_reg_16) = 1|->id_reg_8|->(2|->id_reg_8) & REG8_TO_REG16: (1..16)*{id_reg_8}*((1..16)*{id_reg_8}) +-> (1..5)*{id_reg_16} & REG8_TO_REG16 = REG16_TO_REG8~ & update_flag_reg: BIT*BIT*BIT*BIT*BIT*BIT +-> {2|->id_reg_8}*BYTE & dom(update_flag_reg) = BIT*BIT*BIT*BIT*BIT*BIT & update_flag_reg = %(s7$0,z6$0,h4$0,pv2$0,n_add_sub$0,c0$0).(s7$0: BIT & z6$0: BIT & h4$0: BIT & pv2$0: BIT & n_add_sub$0: BIT & c0$0: BIT | 2|->id_reg_8|->[c0$0,n_add_sub$0,pv2$0,1,h4$0,1,z6$0,s7$0]) & bv_ireg_plus_d: BV16*SCHAR +-> BV16 & dom(bv_ireg_plus_d) = BV16*SCHAR & bv_ireg_plus_d = %(ix_iy,desloc).(ix_iy: BV16 & desloc: SCHAR | ushort_bv16((bv16_ushort(ix_iy)+desloc) mod 65536)) & bv_9ireg_plus_d0: (BV16 --> BYTE)*BV16*SCHAR +-> BYTE & dom(bv_9ireg_plus_d0) = (BV16 --> BYTE)*BV16*SCHAR & bv_9ireg_plus_d0 = %(mem,ix_iy,desloc).(mem: BV16 +-> BYTE & dom(mem) = BV16 & ix_iy: BV16 & desloc: SCHAR | mem(bv_ireg_plus_d(ix_iy,desloc))) & cc_get: ((1..16)*{id_reg_8} --> BYTE)*(0..8) +-> BIT & dom(cc_get) = ((1..16)*{id_reg_8} --> BYTE)*(0..8) & rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & cc_get(rgs8_,0) = 1-bitget(rgs8_(2|->id_reg_8),6) & cc_get(rgs8_,1) = bitget(rgs8_(2|->id_reg_8),6) & cc_get(rgs8_,2) = 1-bitget(rgs8_(2|->id_reg_8),0) & cc_get(rgs8_,3) = bitget(rgs8_(2|->id_reg_8),0));
(rgs8_,4: dom(cc_get));
("`Local hypotheses'" & (1..16)*{id_reg_8}: FIN(NATURAL*{id_reg_8}) & not((1..16)*{id_reg_8} = {}) & (1..5)*{id_reg_16}: FIN(NATURAL*{id_reg_16}) & not((1..5)*{id_reg_16} = {}) & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & dom(get_bv_reg16) = BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) & !(sp_,rgs8_,r1).(sp_: BV16 & rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & r1: (1..5)*{id_reg_16} => (r1 = 1|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(5|->id_reg_8),rgs8_(6|->id_reg_8))) & (r1 = 2|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(9|->id_reg_8),rgs8_(10|->id_reg_8))) & (r1 = 3|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(13|->id_reg_8),rgs8_(14|->id_reg_8))) & (r1 = 4|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = sp_) & (r1 = 5|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(1|->id_reg_8),rgs8_(2|->id_reg_8)))) & REG16_TO_REG8: (1..5)*{id_reg_16} +-> (1..16)*{id_reg_8}*((1..16)*{id_reg_8}) & dom(REG16_TO_REG8) = (1..5)*{id_reg_16} & REG16_TO_REG8(1|->id_reg_16) = 5|->id_reg_8|->(6|->id_reg_8) & REG16_TO_REG8(2|->id_reg_16) = 9|->id_reg_8|->(10|->id_reg_8) & REG16_TO_REG8(3|->id_reg_16) = 13|->id_reg_8|->(14|->id_reg_8) & REG16_TO_REG8(5|->id_reg_16) = 1|->id_reg_8|->(2|->id_reg_8) & REG8_TO_REG16: (1..16)*{id_reg_8}*((1..16)*{id_reg_8}) +-> (1..5)*{id_reg_16} & REG8_TO_REG16 = REG16_TO_REG8~ & update_flag_reg: BIT*BIT*BIT*BIT*BIT*BIT +-> {2|->id_reg_8}*BYTE & dom(update_flag_reg) = BIT*BIT*BIT*BIT*BIT*BIT & update_flag_reg = %(s7$0,z6$0,h4$0,pv2$0,n_add_sub$0,c0$0).(s7$0: BIT & z6$0: BIT & h4$0: BIT & pv2$0: BIT & n_add_sub$0: BIT & c0$0: BIT | 2|->id_reg_8|->[c0$0,n_add_sub$0,pv2$0,1,h4$0,1,z6$0,s7$0]) & bv_ireg_plus_d: BV16*SCHAR +-> BV16 & dom(bv_ireg_plus_d) = BV16*SCHAR & bv_ireg_plus_d = %(ix_iy,desloc).(ix_iy: BV16 & desloc: SCHAR | ushort_bv16((bv16_ushort(ix_iy)+desloc) mod 65536)) & bv_9ireg_plus_d0: (BV16 --> BYTE)*BV16*SCHAR +-> BYTE & dom(bv_9ireg_plus_d0) = (BV16 --> BYTE)*BV16*SCHAR & bv_9ireg_plus_d0 = %(mem,ix_iy,desloc).(mem: BV16 +-> BYTE & dom(mem) = BV16 & ix_iy: BV16 & desloc: SCHAR | mem(bv_ireg_plus_d(ix_iy,desloc))) & cc_get: ((1..16)*{id_reg_8} --> BYTE)*(0..8) +-> BIT & dom(cc_get) = ((1..16)*{id_reg_8} --> BYTE)*(0..8) & rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & cc_get(rgs8_,0) = 1-bitget(rgs8_(2|->id_reg_8),6) & cc_get(rgs8_,1) = bitget(rgs8_(2|->id_reg_8),6) & cc_get(rgs8_,2) = 1-bitget(rgs8_(2|->id_reg_8),0) & cc_get(rgs8_,3) = bitget(rgs8_(2|->id_reg_8),0));
(2|->id_reg_8: dom(rgs8_));
("`Local hypotheses'" & (1..16)*{id_reg_8}: FIN(NATURAL*{id_reg_8}) & not((1..16)*{id_reg_8} = {}) & (1..5)*{id_reg_16}: FIN(NATURAL*{id_reg_16}) & not((1..5)*{id_reg_16} = {}) & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & dom(get_bv_reg16) = BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) & !(sp_,rgs8_,r1).(sp_: BV16 & rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & r1: (1..5)*{id_reg_16} => (r1 = 1|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(5|->id_reg_8),rgs8_(6|->id_reg_8))) & (r1 = 2|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(9|->id_reg_8),rgs8_(10|->id_reg_8))) & (r1 = 3|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(13|->id_reg_8),rgs8_(14|->id_reg_8))) & (r1 = 4|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = sp_) & (r1 = 5|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(1|->id_reg_8),rgs8_(2|->id_reg_8)))) & REG16_TO_REG8: (1..5)*{id_reg_16} +-> (1..16)*{id_reg_8}*((1..16)*{id_reg_8}) & dom(REG16_TO_REG8) = (1..5)*{id_reg_16} & REG16_TO_REG8(1|->id_reg_16) = 5|->id_reg_8|->(6|->id_reg_8) & REG16_TO_REG8(2|->id_reg_16) = 9|->id_reg_8|->(10|->id_reg_8) & REG16_TO_REG8(3|->id_reg_16) = 13|->id_reg_8|->(14|->id_reg_8) & REG16_TO_REG8(5|->id_reg_16) = 1|->id_reg_8|->(2|->id_reg_8) & REG8_TO_REG16: (1..16)*{id_reg_8}*((1..16)*{id_reg_8}) +-> (1..5)*{id_reg_16} & REG8_TO_REG16 = REG16_TO_REG8~ & update_flag_reg: BIT*BIT*BIT*BIT*BIT*BIT +-> {2|->id_reg_8}*BYTE & dom(update_flag_reg) = BIT*BIT*BIT*BIT*BIT*BIT & update_flag_reg = %(s7$0,z6$0,h4$0,pv2$0,n_add_sub$0,c0$0).(s7$0: BIT & z6$0: BIT & h4$0: BIT & pv2$0: BIT & n_add_sub$0: BIT & c0$0: BIT | 2|->id_reg_8|->[c0$0,n_add_sub$0,pv2$0,1,h4$0,1,z6$0,s7$0]) & bv_ireg_plus_d: BV16*SCHAR +-> BV16 & dom(bv_ireg_plus_d) = BV16*SCHAR & bv_ireg_plus_d = %(ix_iy,desloc).(ix_iy: BV16 & desloc: SCHAR | ushort_bv16((bv16_ushort(ix_iy)+desloc) mod 65536)) & bv_9ireg_plus_d0: (BV16 --> BYTE)*BV16*SCHAR +-> BYTE & dom(bv_9ireg_plus_d0) = (BV16 --> BYTE)*BV16*SCHAR & bv_9ireg_plus_d0 = %(mem,ix_iy,desloc).(mem: BV16 +-> BYTE & dom(mem) = BV16 & ix_iy: BV16 & desloc: SCHAR | mem(bv_ireg_plus_d(ix_iy,desloc))) & cc_get: ((1..16)*{id_reg_8} --> BYTE)*(0..8) +-> BIT & dom(cc_get) = ((1..16)*{id_reg_8} --> BYTE)*(0..8) & rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & cc_get(rgs8_,0) = 1-bitget(rgs8_(2|->id_reg_8),6) & cc_get(rgs8_,1) = bitget(rgs8_(2|->id_reg_8),6) & cc_get(rgs8_,2) = 1-bitget(rgs8_(2|->id_reg_8),0) & cc_get(rgs8_,3) = bitget(rgs8_(2|->id_reg_8),0));
(rgs8_(2|->id_reg_8),2: dom(bitget));
("`Local hypotheses'" & (1..16)*{id_reg_8}: FIN(NATURAL*{id_reg_8}) & not((1..16)*{id_reg_8} = {}) & (1..5)*{id_reg_16}: FIN(NATURAL*{id_reg_16}) & not((1..5)*{id_reg_16} = {}) & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & dom(get_bv_reg16) = BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) & !(sp_,rgs8_,r1).(sp_: BV16 & rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & r1: (1..5)*{id_reg_16} => (r1 = 1|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(5|->id_reg_8),rgs8_(6|->id_reg_8))) & (r1 = 2|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(9|->id_reg_8),rgs8_(10|->id_reg_8))) & (r1 = 3|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(13|->id_reg_8),rgs8_(14|->id_reg_8))) & (r1 = 4|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = sp_) & (r1 = 5|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(1|->id_reg_8),rgs8_(2|->id_reg_8)))) & REG16_TO_REG8: (1..5)*{id_reg_16} +-> (1..16)*{id_reg_8}*((1..16)*{id_reg_8}) & dom(REG16_TO_REG8) = (1..5)*{id_reg_16} & REG16_TO_REG8(1|->id_reg_16) = 5|->id_reg_8|->(6|->id_reg_8) & REG16_TO_REG8(2|->id_reg_16) = 9|->id_reg_8|->(10|->id_reg_8) & REG16_TO_REG8(3|->id_reg_16) = 13|->id_reg_8|->(14|->id_reg_8) & REG16_TO_REG8(5|->id_reg_16) = 1|->id_reg_8|->(2|->id_reg_8) & REG8_TO_REG16: (1..16)*{id_reg_8}*((1..16)*{id_reg_8}) +-> (1..5)*{id_reg_16} & REG8_TO_REG16 = REG16_TO_REG8~ & update_flag_reg: BIT*BIT*BIT*BIT*BIT*BIT +-> {2|->id_reg_8}*BYTE & dom(update_flag_reg) = BIT*BIT*BIT*BIT*BIT*BIT & update_flag_reg = %(s7$0,z6$0,h4$0,pv2$0,n_add_sub$0,c0$0).(s7$0: BIT & z6$0: BIT & h4$0: BIT & pv2$0: BIT & n_add_sub$0: BIT & c0$0: BIT | 2|->id_reg_8|->[c0$0,n_add_sub$0,pv2$0,1,h4$0,1,z6$0,s7$0]) & bv_ireg_plus_d: BV16*SCHAR +-> BV16 & dom(bv_ireg_plus_d) = BV16*SCHAR & bv_ireg_plus_d = %(ix_iy,desloc).(ix_iy: BV16 & desloc: SCHAR | ushort_bv16((bv16_ushort(ix_iy)+desloc) mod 65536)) & bv_9ireg_plus_d0: (BV16 --> BYTE)*BV16*SCHAR +-> BYTE & dom(bv_9ireg_plus_d0) = (BV16 --> BYTE)*BV16*SCHAR & bv_9ireg_plus_d0 = %(mem,ix_iy,desloc).(mem: BV16 +-> BYTE & dom(mem) = BV16 & ix_iy: BV16 & desloc: SCHAR | mem(bv_ireg_plus_d(ix_iy,desloc))) & cc_get: ((1..16)*{id_reg_8} --> BYTE)*(0..8) +-> BIT & dom(cc_get) = ((1..16)*{id_reg_8} --> BYTE)*(0..8) & rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & cc_get(rgs8_,0) = 1-bitget(rgs8_(2|->id_reg_8),6) & cc_get(rgs8_,1) = bitget(rgs8_(2|->id_reg_8),6) & cc_get(rgs8_,2) = 1-bitget(rgs8_(2|->id_reg_8),0) & cc_get(rgs8_,3) = bitget(rgs8_(2|->id_reg_8),0) & cc_get(rgs8_,4) = 1-bitget(rgs8_(2|->id_reg_8),2));
(rgs8_,5: dom(cc_get));
("`Local hypotheses'" & (1..16)*{id_reg_8}: FIN(NATURAL*{id_reg_8}) & not((1..16)*{id_reg_8} = {}) & (1..5)*{id_reg_16}: FIN(NATURAL*{id_reg_16}) & not((1..5)*{id_reg_16} = {}) & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & dom(get_bv_reg16) = BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) & !(sp_,rgs8_,r1).(sp_: BV16 & rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & r1: (1..5)*{id_reg_16} => (r1 = 1|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(5|->id_reg_8),rgs8_(6|->id_reg_8))) & (r1 = 2|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(9|->id_reg_8),rgs8_(10|->id_reg_8))) & (r1 = 3|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(13|->id_reg_8),rgs8_(14|->id_reg_8))) & (r1 = 4|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = sp_) & (r1 = 5|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(1|->id_reg_8),rgs8_(2|->id_reg_8)))) & REG16_TO_REG8: (1..5)*{id_reg_16} +-> (1..16)*{id_reg_8}*((1..16)*{id_reg_8}) & dom(REG16_TO_REG8) = (1..5)*{id_reg_16} & REG16_TO_REG8(1|->id_reg_16) = 5|->id_reg_8|->(6|->id_reg_8) & REG16_TO_REG8(2|->id_reg_16) = 9|->id_reg_8|->(10|->id_reg_8) & REG16_TO_REG8(3|->id_reg_16) = 13|->id_reg_8|->(14|->id_reg_8) & REG16_TO_REG8(5|->id_reg_16) = 1|->id_reg_8|->(2|->id_reg_8) & REG8_TO_REG16: (1..16)*{id_reg_8}*((1..16)*{id_reg_8}) +-> (1..5)*{id_reg_16} & REG8_TO_REG16 = REG16_TO_REG8~ & update_flag_reg: BIT*BIT*BIT*BIT*BIT*BIT +-> {2|->id_reg_8}*BYTE & dom(update_flag_reg) = BIT*BIT*BIT*BIT*BIT*BIT & update_flag_reg = %(s7$0,z6$0,h4$0,pv2$0,n_add_sub$0,c0$0).(s7$0: BIT & z6$0: BIT & h4$0: BIT & pv2$0: BIT & n_add_sub$0: BIT & c0$0: BIT | 2|->id_reg_8|->[c0$0,n_add_sub$0,pv2$0,1,h4$0,1,z6$0,s7$0]) & bv_ireg_plus_d: BV16*SCHAR +-> BV16 & dom(bv_ireg_plus_d) = BV16*SCHAR & bv_ireg_plus_d = %(ix_iy,desloc).(ix_iy: BV16 & desloc: SCHAR | ushort_bv16((bv16_ushort(ix_iy)+desloc) mod 65536)) & bv_9ireg_plus_d0: (BV16 --> BYTE)*BV16*SCHAR +-> BYTE & dom(bv_9ireg_plus_d0) = (BV16 --> BYTE)*BV16*SCHAR & bv_9ireg_plus_d0 = %(mem,ix_iy,desloc).(mem: BV16 +-> BYTE & dom(mem) = BV16 & ix_iy: BV16 & desloc: SCHAR | mem(bv_ireg_plus_d(ix_iy,desloc))) & cc_get: ((1..16)*{id_reg_8} --> BYTE)*(0..8) +-> BIT & dom(cc_get) = ((1..16)*{id_reg_8} --> BYTE)*(0..8) & rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & cc_get(rgs8_,0) = 1-bitget(rgs8_(2|->id_reg_8),6) & cc_get(rgs8_,1) = bitget(rgs8_(2|->id_reg_8),6) & cc_get(rgs8_,2) = 1-bitget(rgs8_(2|->id_reg_8),0) & cc_get(rgs8_,3) = bitget(rgs8_(2|->id_reg_8),0) & cc_get(rgs8_,4) = 1-bitget(rgs8_(2|->id_reg_8),2));
(2|->id_reg_8: dom(rgs8_));
("`Local hypotheses'" & (1..16)*{id_reg_8}: FIN(NATURAL*{id_reg_8}) & not((1..16)*{id_reg_8} = {}) & (1..5)*{id_reg_16}: FIN(NATURAL*{id_reg_16}) & not((1..5)*{id_reg_16} = {}) & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & dom(get_bv_reg16) = BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) & !(sp_,rgs8_,r1).(sp_: BV16 & rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & r1: (1..5)*{id_reg_16} => (r1 = 1|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(5|->id_reg_8),rgs8_(6|->id_reg_8))) & (r1 = 2|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(9|->id_reg_8),rgs8_(10|->id_reg_8))) & (r1 = 3|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(13|->id_reg_8),rgs8_(14|->id_reg_8))) & (r1 = 4|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = sp_) & (r1 = 5|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(1|->id_reg_8),rgs8_(2|->id_reg_8)))) & REG16_TO_REG8: (1..5)*{id_reg_16} +-> (1..16)*{id_reg_8}*((1..16)*{id_reg_8}) & dom(REG16_TO_REG8) = (1..5)*{id_reg_16} & REG16_TO_REG8(1|->id_reg_16) = 5|->id_reg_8|->(6|->id_reg_8) & REG16_TO_REG8(2|->id_reg_16) = 9|->id_reg_8|->(10|->id_reg_8) & REG16_TO_REG8(3|->id_reg_16) = 13|->id_reg_8|->(14|->id_reg_8) & REG16_TO_REG8(5|->id_reg_16) = 1|->id_reg_8|->(2|->id_reg_8) & REG8_TO_REG16: (1..16)*{id_reg_8}*((1..16)*{id_reg_8}) +-> (1..5)*{id_reg_16} & REG8_TO_REG16 = REG16_TO_REG8~ & update_flag_reg: BIT*BIT*BIT*BIT*BIT*BIT +-> {2|->id_reg_8}*BYTE & dom(update_flag_reg) = BIT*BIT*BIT*BIT*BIT*BIT & update_flag_reg = %(s7$0,z6$0,h4$0,pv2$0,n_add_sub$0,c0$0).(s7$0: BIT & z6$0: BIT & h4$0: BIT & pv2$0: BIT & n_add_sub$0: BIT & c0$0: BIT | 2|->id_reg_8|->[c0$0,n_add_sub$0,pv2$0,1,h4$0,1,z6$0,s7$0]) & bv_ireg_plus_d: BV16*SCHAR +-> BV16 & dom(bv_ireg_plus_d) = BV16*SCHAR & bv_ireg_plus_d = %(ix_iy,desloc).(ix_iy: BV16 & desloc: SCHAR | ushort_bv16((bv16_ushort(ix_iy)+desloc) mod 65536)) & bv_9ireg_plus_d0: (BV16 --> BYTE)*BV16*SCHAR +-> BYTE & dom(bv_9ireg_plus_d0) = (BV16 --> BYTE)*BV16*SCHAR & bv_9ireg_plus_d0 = %(mem,ix_iy,desloc).(mem: BV16 +-> BYTE & dom(mem) = BV16 & ix_iy: BV16 & desloc: SCHAR | mem(bv_ireg_plus_d(ix_iy,desloc))) & cc_get: ((1..16)*{id_reg_8} --> BYTE)*(0..8) +-> BIT & dom(cc_get) = ((1..16)*{id_reg_8} --> BYTE)*(0..8) & rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & cc_get(rgs8_,0) = 1-bitget(rgs8_(2|->id_reg_8),6) & cc_get(rgs8_,1) = bitget(rgs8_(2|->id_reg_8),6) & cc_get(rgs8_,2) = 1-bitget(rgs8_(2|->id_reg_8),0) & cc_get(rgs8_,3) = bitget(rgs8_(2|->id_reg_8),0) & cc_get(rgs8_,4) = 1-bitget(rgs8_(2|->id_reg_8),2));
(rgs8_(2|->id_reg_8),2: dom(bitget));
("`Local hypotheses'" & (1..16)*{id_reg_8}: FIN(NATURAL*{id_reg_8}) & not((1..16)*{id_reg_8} = {}) & (1..5)*{id_reg_16}: FIN(NATURAL*{id_reg_16}) & not((1..5)*{id_reg_16} = {}) & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & dom(get_bv_reg16) = BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) & !(sp_,rgs8_,r1).(sp_: BV16 & rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & r1: (1..5)*{id_reg_16} => (r1 = 1|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(5|->id_reg_8),rgs8_(6|->id_reg_8))) & (r1 = 2|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(9|->id_reg_8),rgs8_(10|->id_reg_8))) & (r1 = 3|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(13|->id_reg_8),rgs8_(14|->id_reg_8))) & (r1 = 4|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = sp_) & (r1 = 5|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(1|->id_reg_8),rgs8_(2|->id_reg_8)))) & REG16_TO_REG8: (1..5)*{id_reg_16} +-> (1..16)*{id_reg_8}*((1..16)*{id_reg_8}) & dom(REG16_TO_REG8) = (1..5)*{id_reg_16} & REG16_TO_REG8(1|->id_reg_16) = 5|->id_reg_8|->(6|->id_reg_8) & REG16_TO_REG8(2|->id_reg_16) = 9|->id_reg_8|->(10|->id_reg_8) & REG16_TO_REG8(3|->id_reg_16) = 13|->id_reg_8|->(14|->id_reg_8) & REG16_TO_REG8(5|->id_reg_16) = 1|->id_reg_8|->(2|->id_reg_8) & REG8_TO_REG16: (1..16)*{id_reg_8}*((1..16)*{id_reg_8}) +-> (1..5)*{id_reg_16} & REG8_TO_REG16 = REG16_TO_REG8~ & update_flag_reg: BIT*BIT*BIT*BIT*BIT*BIT +-> {2|->id_reg_8}*BYTE & dom(update_flag_reg) = BIT*BIT*BIT*BIT*BIT*BIT & update_flag_reg = %(s7$0,z6$0,h4$0,pv2$0,n_add_sub$0,c0$0).(s7$0: BIT & z6$0: BIT & h4$0: BIT & pv2$0: BIT & n_add_sub$0: BIT & c0$0: BIT | 2|->id_reg_8|->[c0$0,n_add_sub$0,pv2$0,1,h4$0,1,z6$0,s7$0]) & bv_ireg_plus_d: BV16*SCHAR +-> BV16 & dom(bv_ireg_plus_d) = BV16*SCHAR & bv_ireg_plus_d = %(ix_iy,desloc).(ix_iy: BV16 & desloc: SCHAR | ushort_bv16((bv16_ushort(ix_iy)+desloc) mod 65536)) & bv_9ireg_plus_d0: (BV16 --> BYTE)*BV16*SCHAR +-> BYTE & dom(bv_9ireg_plus_d0) = (BV16 --> BYTE)*BV16*SCHAR & bv_9ireg_plus_d0 = %(mem,ix_iy,desloc).(mem: BV16 +-> BYTE & dom(mem) = BV16 & ix_iy: BV16 & desloc: SCHAR | mem(bv_ireg_plus_d(ix_iy,desloc))) & cc_get: ((1..16)*{id_reg_8} --> BYTE)*(0..8) +-> BIT & dom(cc_get) = ((1..16)*{id_reg_8} --> BYTE)*(0..8) & rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & cc_get(rgs8_,0) = 1-bitget(rgs8_(2|->id_reg_8),6) & cc_get(rgs8_,1) = bitget(rgs8_(2|->id_reg_8),6) & cc_get(rgs8_,2) = 1-bitget(rgs8_(2|->id_reg_8),0) & cc_get(rgs8_,3) = bitget(rgs8_(2|->id_reg_8),0) & cc_get(rgs8_,4) = 1-bitget(rgs8_(2|->id_reg_8),2) & cc_get(rgs8_,5) = bitget(rgs8_(2|->id_reg_8),2));
(rgs8_,6: dom(cc_get));
("`Local hypotheses'" & (1..16)*{id_reg_8}: FIN(NATURAL*{id_reg_8}) & not((1..16)*{id_reg_8} = {}) & (1..5)*{id_reg_16}: FIN(NATURAL*{id_reg_16}) & not((1..5)*{id_reg_16} = {}) & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & dom(get_bv_reg16) = BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) & !(sp_,rgs8_,r1).(sp_: BV16 & rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & r1: (1..5)*{id_reg_16} => (r1 = 1|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(5|->id_reg_8),rgs8_(6|->id_reg_8))) & (r1 = 2|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(9|->id_reg_8),rgs8_(10|->id_reg_8))) & (r1 = 3|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(13|->id_reg_8),rgs8_(14|->id_reg_8))) & (r1 = 4|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = sp_) & (r1 = 5|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(1|->id_reg_8),rgs8_(2|->id_reg_8)))) & REG16_TO_REG8: (1..5)*{id_reg_16} +-> (1..16)*{id_reg_8}*((1..16)*{id_reg_8}) & dom(REG16_TO_REG8) = (1..5)*{id_reg_16} & REG16_TO_REG8(1|->id_reg_16) = 5|->id_reg_8|->(6|->id_reg_8) & REG16_TO_REG8(2|->id_reg_16) = 9|->id_reg_8|->(10|->id_reg_8) & REG16_TO_REG8(3|->id_reg_16) = 13|->id_reg_8|->(14|->id_reg_8) & REG16_TO_REG8(5|->id_reg_16) = 1|->id_reg_8|->(2|->id_reg_8) & REG8_TO_REG16: (1..16)*{id_reg_8}*((1..16)*{id_reg_8}) +-> (1..5)*{id_reg_16} & REG8_TO_REG16 = REG16_TO_REG8~ & update_flag_reg: BIT*BIT*BIT*BIT*BIT*BIT +-> {2|->id_reg_8}*BYTE & dom(update_flag_reg) = BIT*BIT*BIT*BIT*BIT*BIT & update_flag_reg = %(s7$0,z6$0,h4$0,pv2$0,n_add_sub$0,c0$0).(s7$0: BIT & z6$0: BIT & h4$0: BIT & pv2$0: BIT & n_add_sub$0: BIT & c0$0: BIT | 2|->id_reg_8|->[c0$0,n_add_sub$0,pv2$0,1,h4$0,1,z6$0,s7$0]) & bv_ireg_plus_d: BV16*SCHAR +-> BV16 & dom(bv_ireg_plus_d) = BV16*SCHAR & bv_ireg_plus_d = %(ix_iy,desloc).(ix_iy: BV16 & desloc: SCHAR | ushort_bv16((bv16_ushort(ix_iy)+desloc) mod 65536)) & bv_9ireg_plus_d0: (BV16 --> BYTE)*BV16*SCHAR +-> BYTE & dom(bv_9ireg_plus_d0) = (BV16 --> BYTE)*BV16*SCHAR & bv_9ireg_plus_d0 = %(mem,ix_iy,desloc).(mem: BV16 +-> BYTE & dom(mem) = BV16 & ix_iy: BV16 & desloc: SCHAR | mem(bv_ireg_plus_d(ix_iy,desloc))) & cc_get: ((1..16)*{id_reg_8} --> BYTE)*(0..8) +-> BIT & dom(cc_get) = ((1..16)*{id_reg_8} --> BYTE)*(0..8) & rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & cc_get(rgs8_,0) = 1-bitget(rgs8_(2|->id_reg_8),6) & cc_get(rgs8_,1) = bitget(rgs8_(2|->id_reg_8),6) & cc_get(rgs8_,2) = 1-bitget(rgs8_(2|->id_reg_8),0) & cc_get(rgs8_,3) = bitget(rgs8_(2|->id_reg_8),0) & cc_get(rgs8_,4) = 1-bitget(rgs8_(2|->id_reg_8),2) & cc_get(rgs8_,5) = bitget(rgs8_(2|->id_reg_8),2));
(2|->id_reg_8: dom(rgs8_));
("`Local hypotheses'" & (1..16)*{id_reg_8}: FIN(NATURAL*{id_reg_8}) & not((1..16)*{id_reg_8} = {}) & (1..5)*{id_reg_16}: FIN(NATURAL*{id_reg_16}) & not((1..5)*{id_reg_16} = {}) & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & dom(get_bv_reg16) = BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) & !(sp_,rgs8_,r1).(sp_: BV16 & rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & r1: (1..5)*{id_reg_16} => (r1 = 1|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(5|->id_reg_8),rgs8_(6|->id_reg_8))) & (r1 = 2|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(9|->id_reg_8),rgs8_(10|->id_reg_8))) & (r1 = 3|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(13|->id_reg_8),rgs8_(14|->id_reg_8))) & (r1 = 4|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = sp_) & (r1 = 5|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(1|->id_reg_8),rgs8_(2|->id_reg_8)))) & REG16_TO_REG8: (1..5)*{id_reg_16} +-> (1..16)*{id_reg_8}*((1..16)*{id_reg_8}) & dom(REG16_TO_REG8) = (1..5)*{id_reg_16} & REG16_TO_REG8(1|->id_reg_16) = 5|->id_reg_8|->(6|->id_reg_8) & REG16_TO_REG8(2|->id_reg_16) = 9|->id_reg_8|->(10|->id_reg_8) & REG16_TO_REG8(3|->id_reg_16) = 13|->id_reg_8|->(14|->id_reg_8) & REG16_TO_REG8(5|->id_reg_16) = 1|->id_reg_8|->(2|->id_reg_8) & REG8_TO_REG16: (1..16)*{id_reg_8}*((1..16)*{id_reg_8}) +-> (1..5)*{id_reg_16} & REG8_TO_REG16 = REG16_TO_REG8~ & update_flag_reg: BIT*BIT*BIT*BIT*BIT*BIT +-> {2|->id_reg_8}*BYTE & dom(update_flag_reg) = BIT*BIT*BIT*BIT*BIT*BIT & update_flag_reg = %(s7$0,z6$0,h4$0,pv2$0,n_add_sub$0,c0$0).(s7$0: BIT & z6$0: BIT & h4$0: BIT & pv2$0: BIT & n_add_sub$0: BIT & c0$0: BIT | 2|->id_reg_8|->[c0$0,n_add_sub$0,pv2$0,1,h4$0,1,z6$0,s7$0]) & bv_ireg_plus_d: BV16*SCHAR +-> BV16 & dom(bv_ireg_plus_d) = BV16*SCHAR & bv_ireg_plus_d = %(ix_iy,desloc).(ix_iy: BV16 & desloc: SCHAR | ushort_bv16((bv16_ushort(ix_iy)+desloc) mod 65536)) & bv_9ireg_plus_d0: (BV16 --> BYTE)*BV16*SCHAR +-> BYTE & dom(bv_9ireg_plus_d0) = (BV16 --> BYTE)*BV16*SCHAR & bv_9ireg_plus_d0 = %(mem,ix_iy,desloc).(mem: BV16 +-> BYTE & dom(mem) = BV16 & ix_iy: BV16 & desloc: SCHAR | mem(bv_ireg_plus_d(ix_iy,desloc))) & cc_get: ((1..16)*{id_reg_8} --> BYTE)*(0..8) +-> BIT & dom(cc_get) = ((1..16)*{id_reg_8} --> BYTE)*(0..8) & rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & cc_get(rgs8_,0) = 1-bitget(rgs8_(2|->id_reg_8),6) & cc_get(rgs8_,1) = bitget(rgs8_(2|->id_reg_8),6) & cc_get(rgs8_,2) = 1-bitget(rgs8_(2|->id_reg_8),0) & cc_get(rgs8_,3) = bitget(rgs8_(2|->id_reg_8),0) & cc_get(rgs8_,4) = 1-bitget(rgs8_(2|->id_reg_8),2) & cc_get(rgs8_,5) = bitget(rgs8_(2|->id_reg_8),2));
(rgs8_(2|->id_reg_8),7: dom(bitget));
("`Local hypotheses'" & (1..16)*{id_reg_8}: FIN(NATURAL*{id_reg_8}) & not((1..16)*{id_reg_8} = {}) & (1..5)*{id_reg_16}: FIN(NATURAL*{id_reg_16}) & not((1..5)*{id_reg_16} = {}) & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & dom(get_bv_reg16) = BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) & !(sp_,rgs8_,r1).(sp_: BV16 & rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & r1: (1..5)*{id_reg_16} => (r1 = 1|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(5|->id_reg_8),rgs8_(6|->id_reg_8))) & (r1 = 2|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(9|->id_reg_8),rgs8_(10|->id_reg_8))) & (r1 = 3|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(13|->id_reg_8),rgs8_(14|->id_reg_8))) & (r1 = 4|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = sp_) & (r1 = 5|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(1|->id_reg_8),rgs8_(2|->id_reg_8)))) & REG16_TO_REG8: (1..5)*{id_reg_16} +-> (1..16)*{id_reg_8}*((1..16)*{id_reg_8}) & dom(REG16_TO_REG8) = (1..5)*{id_reg_16} & REG16_TO_REG8(1|->id_reg_16) = 5|->id_reg_8|->(6|->id_reg_8) & REG16_TO_REG8(2|->id_reg_16) = 9|->id_reg_8|->(10|->id_reg_8) & REG16_TO_REG8(3|->id_reg_16) = 13|->id_reg_8|->(14|->id_reg_8) & REG16_TO_REG8(5|->id_reg_16) = 1|->id_reg_8|->(2|->id_reg_8) & REG8_TO_REG16: (1..16)*{id_reg_8}*((1..16)*{id_reg_8}) +-> (1..5)*{id_reg_16} & REG8_TO_REG16 = REG16_TO_REG8~ & update_flag_reg: BIT*BIT*BIT*BIT*BIT*BIT +-> {2|->id_reg_8}*BYTE & dom(update_flag_reg) = BIT*BIT*BIT*BIT*BIT*BIT & update_flag_reg = %(s7$0,z6$0,h4$0,pv2$0,n_add_sub$0,c0$0).(s7$0: BIT & z6$0: BIT & h4$0: BIT & pv2$0: BIT & n_add_sub$0: BIT & c0$0: BIT | 2|->id_reg_8|->[c0$0,n_add_sub$0,pv2$0,1,h4$0,1,z6$0,s7$0]) & bv_ireg_plus_d: BV16*SCHAR +-> BV16 & dom(bv_ireg_plus_d) = BV16*SCHAR & bv_ireg_plus_d = %(ix_iy,desloc).(ix_iy: BV16 & desloc: SCHAR | ushort_bv16((bv16_ushort(ix_iy)+desloc) mod 65536)) & bv_9ireg_plus_d0: (BV16 --> BYTE)*BV16*SCHAR +-> BYTE & dom(bv_9ireg_plus_d0) = (BV16 --> BYTE)*BV16*SCHAR & bv_9ireg_plus_d0 = %(mem,ix_iy,desloc).(mem: BV16 +-> BYTE & dom(mem) = BV16 & ix_iy: BV16 & desloc: SCHAR | mem(bv_ireg_plus_d(ix_iy,desloc))) & cc_get: ((1..16)*{id_reg_8} --> BYTE)*(0..8) +-> BIT & dom(cc_get) = ((1..16)*{id_reg_8} --> BYTE)*(0..8) & rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & cc_get(rgs8_,0) = 1-bitget(rgs8_(2|->id_reg_8),6) & cc_get(rgs8_,1) = bitget(rgs8_(2|->id_reg_8),6) & cc_get(rgs8_,2) = 1-bitget(rgs8_(2|->id_reg_8),0) & cc_get(rgs8_,3) = bitget(rgs8_(2|->id_reg_8),0) & cc_get(rgs8_,4) = 1-bitget(rgs8_(2|->id_reg_8),2) & cc_get(rgs8_,5) = bitget(rgs8_(2|->id_reg_8),2) & cc_get(rgs8_,6) = 1-bitget(rgs8_(2|->id_reg_8),7));
(rgs8_,7: dom(cc_get));
("`Local hypotheses'" & (1..16)*{id_reg_8}: FIN(NATURAL*{id_reg_8}) & not((1..16)*{id_reg_8} = {}) & (1..5)*{id_reg_16}: FIN(NATURAL*{id_reg_16}) & not((1..5)*{id_reg_16} = {}) & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & dom(get_bv_reg16) = BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) & !(sp_,rgs8_,r1).(sp_: BV16 & rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & r1: (1..5)*{id_reg_16} => (r1 = 1|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(5|->id_reg_8),rgs8_(6|->id_reg_8))) & (r1 = 2|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(9|->id_reg_8),rgs8_(10|->id_reg_8))) & (r1 = 3|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(13|->id_reg_8),rgs8_(14|->id_reg_8))) & (r1 = 4|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = sp_) & (r1 = 5|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(1|->id_reg_8),rgs8_(2|->id_reg_8)))) & REG16_TO_REG8: (1..5)*{id_reg_16} +-> (1..16)*{id_reg_8}*((1..16)*{id_reg_8}) & dom(REG16_TO_REG8) = (1..5)*{id_reg_16} & REG16_TO_REG8(1|->id_reg_16) = 5|->id_reg_8|->(6|->id_reg_8) & REG16_TO_REG8(2|->id_reg_16) = 9|->id_reg_8|->(10|->id_reg_8) & REG16_TO_REG8(3|->id_reg_16) = 13|->id_reg_8|->(14|->id_reg_8) & REG16_TO_REG8(5|->id_reg_16) = 1|->id_reg_8|->(2|->id_reg_8) & REG8_TO_REG16: (1..16)*{id_reg_8}*((1..16)*{id_reg_8}) +-> (1..5)*{id_reg_16} & REG8_TO_REG16 = REG16_TO_REG8~ & update_flag_reg: BIT*BIT*BIT*BIT*BIT*BIT +-> {2|->id_reg_8}*BYTE & dom(update_flag_reg) = BIT*BIT*BIT*BIT*BIT*BIT & update_flag_reg = %(s7$0,z6$0,h4$0,pv2$0,n_add_sub$0,c0$0).(s7$0: BIT & z6$0: BIT & h4$0: BIT & pv2$0: BIT & n_add_sub$0: BIT & c0$0: BIT | 2|->id_reg_8|->[c0$0,n_add_sub$0,pv2$0,1,h4$0,1,z6$0,s7$0]) & bv_ireg_plus_d: BV16*SCHAR +-> BV16 & dom(bv_ireg_plus_d) = BV16*SCHAR & bv_ireg_plus_d = %(ix_iy,desloc).(ix_iy: BV16 & desloc: SCHAR | ushort_bv16((bv16_ushort(ix_iy)+desloc) mod 65536)) & bv_9ireg_plus_d0: (BV16 --> BYTE)*BV16*SCHAR +-> BYTE & dom(bv_9ireg_plus_d0) = (BV16 --> BYTE)*BV16*SCHAR & bv_9ireg_plus_d0 = %(mem,ix_iy,desloc).(mem: BV16 +-> BYTE & dom(mem) = BV16 & ix_iy: BV16 & desloc: SCHAR | mem(bv_ireg_plus_d(ix_iy,desloc))) & cc_get: ((1..16)*{id_reg_8} --> BYTE)*(0..8) +-> BIT & dom(cc_get) = ((1..16)*{id_reg_8} --> BYTE)*(0..8) & rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & cc_get(rgs8_,0) = 1-bitget(rgs8_(2|->id_reg_8),6) & cc_get(rgs8_,1) = bitget(rgs8_(2|->id_reg_8),6) & cc_get(rgs8_,2) = 1-bitget(rgs8_(2|->id_reg_8),0) & cc_get(rgs8_,3) = bitget(rgs8_(2|->id_reg_8),0) & cc_get(rgs8_,4) = 1-bitget(rgs8_(2|->id_reg_8),2) & cc_get(rgs8_,5) = bitget(rgs8_(2|->id_reg_8),2) & cc_get(rgs8_,6) = 1-bitget(rgs8_(2|->id_reg_8),7));
(2|->id_reg_8: dom(rgs8_));
("`Local hypotheses'" & (1..16)*{id_reg_8}: FIN(NATURAL*{id_reg_8}) & not((1..16)*{id_reg_8} = {}) & (1..5)*{id_reg_16}: FIN(NATURAL*{id_reg_16}) & not((1..5)*{id_reg_16} = {}) & get_bv_reg16: BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) +-> BV16 & dom(get_bv_reg16) = BV16*((1..16)*{id_reg_8} --> BYTE)*((1..5)*{id_reg_16}) & !(sp_,rgs8_,r1).(sp_: BV16 & rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & r1: (1..5)*{id_reg_16} => (r1 = 1|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(5|->id_reg_8),rgs8_(6|->id_reg_8))) & (r1 = 2|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(9|->id_reg_8),rgs8_(10|->id_reg_8))) & (r1 = 3|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(13|->id_reg_8),rgs8_(14|->id_reg_8))) & (r1 = 4|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = sp_) & (r1 = 5|->id_reg_16 => get_bv_reg16(sp_,rgs8_,r1) = byte_bv16(rgs8_(1|->id_reg_8),rgs8_(2|->id_reg_8)))) & REG16_TO_REG8: (1..5)*{id_reg_16} +-> (1..16)*{id_reg_8}*((1..16)*{id_reg_8}) & dom(REG16_TO_REG8) = (1..5)*{id_reg_16} & REG16_TO_REG8(1|->id_reg_16) = 5|->id_reg_8|->(6|->id_reg_8) & REG16_TO_REG8(2|->id_reg_16) = 9|->id_reg_8|->(10|->id_reg_8) & REG16_TO_REG8(3|->id_reg_16) = 13|->id_reg_8|->(14|->id_reg_8) & REG16_TO_REG8(5|->id_reg_16) = 1|->id_reg_8|->(2|->id_reg_8) & REG8_TO_REG16: (1..16)*{id_reg_8}*((1..16)*{id_reg_8}) +-> (1..5)*{id_reg_16} & REG8_TO_REG16 = REG16_TO_REG8~ & update_flag_reg: BIT*BIT*BIT*BIT*BIT*BIT +-> {2|->id_reg_8}*BYTE & dom(update_flag_reg) = BIT*BIT*BIT*BIT*BIT*BIT & update_flag_reg = %(s7$0,z6$0,h4$0,pv2$0,n_add_sub$0,c0$0).(s7$0: BIT & z6$0: BIT & h4$0: BIT & pv2$0: BIT & n_add_sub$0: BIT & c0$0: BIT | 2|->id_reg_8|->[c0$0,n_add_sub$0,pv2$0,1,h4$0,1,z6$0,s7$0]) & bv_ireg_plus_d: BV16*SCHAR +-> BV16 & dom(bv_ireg_plus_d) = BV16*SCHAR & bv_ireg_plus_d = %(ix_iy,desloc).(ix_iy: BV16 & desloc: SCHAR | ushort_bv16((bv16_ushort(ix_iy)+desloc) mod 65536)) & bv_9ireg_plus_d0: (BV16 --> BYTE)*BV16*SCHAR +-> BYTE & dom(bv_9ireg_plus_d0) = (BV16 --> BYTE)*BV16*SCHAR & bv_9ireg_plus_d0 = %(mem,ix_iy,desloc).(mem: BV16 +-> BYTE & dom(mem) = BV16 & ix_iy: BV16 & desloc: SCHAR | mem(bv_ireg_plus_d(ix_iy,desloc))) & cc_get: ((1..16)*{id_reg_8} --> BYTE)*(0..8) +-> BIT & dom(cc_get) = ((1..16)*{id_reg_8} --> BYTE)*(0..8) & rgs8_: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8_) = (1..16)*{id_reg_8} & cc_get(rgs8_,0) = 1-bitget(rgs8_(2|->id_reg_8),6) & cc_get(rgs8_,1) = bitget(rgs8_(2|->id_reg_8),6) & cc_get(rgs8_,2) = 1-bitget(rgs8_(2|->id_reg_8),0) & cc_get(rgs8_,3) = bitget(rgs8_(2|->id_reg_8),0) & cc_get(rgs8_,4) = 1-bitget(rgs8_(2|->id_reg_8),2) & cc_get(rgs8_,5) = bitget(rgs8_(2|->id_reg_8),2) & cc_get(rgs8_,6) = 1-bitget(rgs8_(2|->id_reg_8),7));
(rgs8_(2|->id_reg_8),7: dom(bitget));
("`Local hypotheses'" & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT);
(5|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT);
(6|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT);
(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT);
(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)): dom(mem));
("`Local hypotheses'" & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE);
(0: dom(schar_byte));
("`Local hypotheses'" & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE);
(5|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE);
(6|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE);
(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE);
(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)): dom(mem));
("`Local hypotheses'" & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE);
(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): dom(byte_bv16));
("`Local hypotheses'" & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE);
(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))): dom(mem));
("`Local hypotheses'" & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE);
(9|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE);
(10|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE);
(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE);
(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)): dom(mem));
("`Local hypotheses'" & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE);
(0: dom(schar_byte));
("`Local hypotheses'" & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE);
(9|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE);
(10|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE);
(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE);
(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)): dom(mem));
("`Local hypotheses'" & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE);
(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): dom(byte_bv16));
("`Local hypotheses'" & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE);
(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))): dom(mem));
("`Local hypotheses'" & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE);
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE);
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE);
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE);
(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)): dom(mem));
("`Local hypotheses'" & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE);
(0: dom(schar_byte));
("`Local hypotheses'" & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE);
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE);
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE);
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE);
(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)): dom(mem));
("`Local hypotheses'" & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE);
(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): dom(byte_bv16));
("`Local hypotheses'" & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE);
(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))): dom(mem));
("`Local hypotheses'" & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE);
(1|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE);
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE);
(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE);
(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8)): dom(mem));
("`Local hypotheses'" & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE);
(0: dom(schar_byte));
("`Local hypotheses'" & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE);
(1|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE);
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE);
(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE);
(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8)): dom(mem));
("`Local hypotheses'" & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE);
(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): dom(byte_bv16));
("`Local hypotheses'" & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE);
(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8)))): dom(mem));
("`Local hypotheses'" & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT);
(b1,b2,b3,b4,b5,b6: dom(update_flag_reg));
("`Local hypotheses'" & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & !(b1,b2,b3,b4,b5,b6).(b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT => update_flag_reg(b1,b2,b3,b4,b5,b6): {2|->id_reg_8}*BYTE) & !xx.(xx: (1..16)*{id_reg_8} +-> BYTE & dom(xx) = (1..16)*{id_reg_8} => rgs8<+xx: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+xx) = (1..16)*{id_reg_8}) & !(xx,xxr).(xx: (1..16)*{id_reg_8} & xxr: BYTE => rgs8<+{xx|->xxr}: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+{xx|->xxr}) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & not(xx = yy) => rgs8<+({xx|->xxr}\/{yy|->yyr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & not(xx = yy) & not(xx = zz) & not(yy = zz) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(yy = zz) & not(yy = vv) & not(zz = vv) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(zz = vv) & not(zz = ww) & not(vv = ww) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(vv = ww) & not(vv = aa) & not(ww = aa) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar,bb,bbr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & bb: (1..16)*{id_reg_8} & bbr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(xx = bb) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(yy = bb) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(zz = bb) & not(vv = ww) & not(vv = aa) & not(vv = bb) & not(ww = aa) & not(ww = bb) & not(aa = bb) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr})) = (1..16)*{id_reg_8}) & ran(bv_ireg_plus_d) = BV16 & dd: SCHAR);
(ix,dd: dom(bv_ireg_plus_d));
("`Local hypotheses'" & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & !(b1,b2,b3,b4,b5,b6).(b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT => update_flag_reg(b1,b2,b3,b4,b5,b6): {2|->id_reg_8}*BYTE) & !xx.(xx: (1..16)*{id_reg_8} +-> BYTE & dom(xx) = (1..16)*{id_reg_8} => rgs8<+xx: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+xx) = (1..16)*{id_reg_8}) & !(xx,xxr).(xx: (1..16)*{id_reg_8} & xxr: BYTE => rgs8<+{xx|->xxr}: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+{xx|->xxr}) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & not(xx = yy) => rgs8<+({xx|->xxr}\/{yy|->yyr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & not(xx = yy) & not(xx = zz) & not(yy = zz) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(yy = zz) & not(yy = vv) & not(zz = vv) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(zz = vv) & not(zz = ww) & not(vv = ww) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(vv = ww) & not(vv = aa) & not(ww = aa) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar,bb,bbr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & bb: (1..16)*{id_reg_8} & bbr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(xx = bb) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(yy = bb) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(zz = bb) & not(vv = ww) & not(vv = aa) & not(vv = bb) & not(ww = aa) & not(ww = bb) & not(aa = bb) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr})) = (1..16)*{id_reg_8}) & ran(bv_ireg_plus_d) = BV16 & !dd.(dd: SCHAR => bv_ireg_plus_d(ix,dd): BV16) & dd: SCHAR);
(iy,dd: dom(bv_ireg_plus_d));
("`Local hypotheses'" & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & !(b1,b2,b3,b4,b5,b6).(b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT => update_flag_reg(b1,b2,b3,b4,b5,b6): {2|->id_reg_8}*BYTE) & !xx.(xx: (1..16)*{id_reg_8} +-> BYTE & dom(xx) = (1..16)*{id_reg_8} => rgs8<+xx: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+xx) = (1..16)*{id_reg_8}) & !(xx,xxr).(xx: (1..16)*{id_reg_8} & xxr: BYTE => rgs8<+{xx|->xxr}: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+{xx|->xxr}) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & not(xx = yy) => rgs8<+({xx|->xxr}\/{yy|->yyr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & not(xx = yy) & not(xx = zz) & not(yy = zz) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(yy = zz) & not(yy = vv) & not(zz = vv) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(zz = vv) & not(zz = ww) & not(vv = ww) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(vv = ww) & not(vv = aa) & not(ww = aa) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar,bb,bbr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & bb: (1..16)*{id_reg_8} & bbr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(xx = bb) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(yy = bb) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(zz = bb) & not(vv = ww) & not(vv = aa) & not(vv = bb) & not(ww = aa) & not(ww = bb) & not(aa = bb) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr})) = (1..16)*{id_reg_8}) & ran(bv_ireg_plus_d) = BV16 & !dd.(dd: SCHAR => bv_ireg_plus_d(ix,dd): BV16) & !dd.(dd: SCHAR => bv_ireg_plus_d(iy,dd): BV16) & ran(bv_9ireg_plus_d0) = BYTE & dd: SCHAR);
(mem,ix,dd: dom(bv_9ireg_plus_d0));
("`Local hypotheses'" & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & !(b1,b2,b3,b4,b5,b6).(b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT => update_flag_reg(b1,b2,b3,b4,b5,b6): {2|->id_reg_8}*BYTE) & !xx.(xx: (1..16)*{id_reg_8} +-> BYTE & dom(xx) = (1..16)*{id_reg_8} => rgs8<+xx: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+xx) = (1..16)*{id_reg_8}) & !(xx,xxr).(xx: (1..16)*{id_reg_8} & xxr: BYTE => rgs8<+{xx|->xxr}: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+{xx|->xxr}) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & not(xx = yy) => rgs8<+({xx|->xxr}\/{yy|->yyr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & not(xx = yy) & not(xx = zz) & not(yy = zz) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(yy = zz) & not(yy = vv) & not(zz = vv) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(zz = vv) & not(zz = ww) & not(vv = ww) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(vv = ww) & not(vv = aa) & not(ww = aa) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar,bb,bbr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & bb: (1..16)*{id_reg_8} & bbr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(xx = bb) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(yy = bb) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(zz = bb) & not(vv = ww) & not(vv = aa) & not(vv = bb) & not(ww = aa) & not(ww = bb) & not(aa = bb) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr})) = (1..16)*{id_reg_8}) & ran(bv_ireg_plus_d) = BV16 & !dd.(dd: SCHAR => bv_ireg_plus_d(ix,dd): BV16) & !dd.(dd: SCHAR => bv_ireg_plus_d(iy,dd): BV16) & ran(bv_9ireg_plus_d0) = BYTE & !dd.(dd: SCHAR => bv_9ireg_plus_d0(mem,ix,dd): BYTE) & dd: SCHAR);
(mem,iy,dd: dom(bv_9ireg_plus_d0));
("`Local hypotheses'" & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & !(b1,b2,b3,b4,b5,b6).(b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT => update_flag_reg(b1,b2,b3,b4,b5,b6): {2|->id_reg_8}*BYTE) & !xx.(xx: (1..16)*{id_reg_8} +-> BYTE & dom(xx) = (1..16)*{id_reg_8} => rgs8<+xx: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+xx) = (1..16)*{id_reg_8}) & !(xx,xxr).(xx: (1..16)*{id_reg_8} & xxr: BYTE => rgs8<+{xx|->xxr}: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+{xx|->xxr}) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & not(xx = yy) => rgs8<+({xx|->xxr}\/{yy|->yyr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & not(xx = yy) & not(xx = zz) & not(yy = zz) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(yy = zz) & not(yy = vv) & not(zz = vv) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(zz = vv) & not(zz = ww) & not(vv = ww) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(vv = ww) & not(vv = aa) & not(ww = aa) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar,bb,bbr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & bb: (1..16)*{id_reg_8} & bbr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(xx = bb) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(yy = bb) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(zz = bb) & not(vv = ww) & not(vv = aa) & not(vv = bb) & not(ww = aa) & not(ww = bb) & not(aa = bb) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr})) = (1..16)*{id_reg_8}) & ran(bv_ireg_plus_d) = BV16 & !dd.(dd: SCHAR => bv_ireg_plus_d(ix,dd): BV16) & !dd.(dd: SCHAR => bv_ireg_plus_d(iy,dd): BV16) & ran(bv_9ireg_plus_d0) = BYTE & !dd.(dd: SCHAR => bv_9ireg_plus_d0(mem,ix,dd): BYTE) & !dd.(dd: SCHAR => bv_9ireg_plus_d0(mem,iy,dd): BYTE));
(5|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & !(b1,b2,b3,b4,b5,b6).(b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT => update_flag_reg(b1,b2,b3,b4,b5,b6): {2|->id_reg_8}*BYTE) & !xx.(xx: (1..16)*{id_reg_8} +-> BYTE & dom(xx) = (1..16)*{id_reg_8} => rgs8<+xx: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+xx) = (1..16)*{id_reg_8}) & !(xx,xxr).(xx: (1..16)*{id_reg_8} & xxr: BYTE => rgs8<+{xx|->xxr}: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+{xx|->xxr}) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & not(xx = yy) => rgs8<+({xx|->xxr}\/{yy|->yyr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & not(xx = yy) & not(xx = zz) & not(yy = zz) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(yy = zz) & not(yy = vv) & not(zz = vv) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(zz = vv) & not(zz = ww) & not(vv = ww) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(vv = ww) & not(vv = aa) & not(ww = aa) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar,bb,bbr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & bb: (1..16)*{id_reg_8} & bbr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(xx = bb) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(yy = bb) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(zz = bb) & not(vv = ww) & not(vv = aa) & not(vv = bb) & not(ww = aa) & not(ww = bb) & not(aa = bb) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr})) = (1..16)*{id_reg_8}) & ran(bv_ireg_plus_d) = BV16 & !dd.(dd: SCHAR => bv_ireg_plus_d(ix,dd): BV16) & !dd.(dd: SCHAR => bv_ireg_plus_d(iy,dd): BV16) & ran(bv_9ireg_plus_d0) = BYTE & !dd.(dd: SCHAR => bv_9ireg_plus_d0(mem,ix,dd): BYTE) & !dd.(dd: SCHAR => bv_9ireg_plus_d0(mem,iy,dd): BYTE));
(6|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & !(b1,b2,b3,b4,b5,b6).(b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT => update_flag_reg(b1,b2,b3,b4,b5,b6): {2|->id_reg_8}*BYTE) & !xx.(xx: (1..16)*{id_reg_8} +-> BYTE & dom(xx) = (1..16)*{id_reg_8} => rgs8<+xx: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+xx) = (1..16)*{id_reg_8}) & !(xx,xxr).(xx: (1..16)*{id_reg_8} & xxr: BYTE => rgs8<+{xx|->xxr}: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+{xx|->xxr}) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & not(xx = yy) => rgs8<+({xx|->xxr}\/{yy|->yyr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & not(xx = yy) & not(xx = zz) & not(yy = zz) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(yy = zz) & not(yy = vv) & not(zz = vv) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(zz = vv) & not(zz = ww) & not(vv = ww) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(vv = ww) & not(vv = aa) & not(ww = aa) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar,bb,bbr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & bb: (1..16)*{id_reg_8} & bbr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(xx = bb) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(yy = bb) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(zz = bb) & not(vv = ww) & not(vv = aa) & not(vv = bb) & not(ww = aa) & not(ww = bb) & not(aa = bb) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr})) = (1..16)*{id_reg_8}) & ran(bv_ireg_plus_d) = BV16 & !dd.(dd: SCHAR => bv_ireg_plus_d(ix,dd): BV16) & !dd.(dd: SCHAR => bv_ireg_plus_d(iy,dd): BV16) & ran(bv_9ireg_plus_d0) = BYTE & !dd.(dd: SCHAR => bv_9ireg_plus_d0(mem,ix,dd): BYTE) & !dd.(dd: SCHAR => bv_9ireg_plus_d0(mem,iy,dd): BYTE));
(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & !(b1,b2,b3,b4,b5,b6).(b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT => update_flag_reg(b1,b2,b3,b4,b5,b6): {2|->id_reg_8}*BYTE) & !xx.(xx: (1..16)*{id_reg_8} +-> BYTE & dom(xx) = (1..16)*{id_reg_8} => rgs8<+xx: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+xx) = (1..16)*{id_reg_8}) & !(xx,xxr).(xx: (1..16)*{id_reg_8} & xxr: BYTE => rgs8<+{xx|->xxr}: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+{xx|->xxr}) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & not(xx = yy) => rgs8<+({xx|->xxr}\/{yy|->yyr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & not(xx = yy) & not(xx = zz) & not(yy = zz) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(yy = zz) & not(yy = vv) & not(zz = vv) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(zz = vv) & not(zz = ww) & not(vv = ww) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(vv = ww) & not(vv = aa) & not(ww = aa) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar,bb,bbr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & bb: (1..16)*{id_reg_8} & bbr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(xx = bb) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(yy = bb) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(zz = bb) & not(vv = ww) & not(vv = aa) & not(vv = bb) & not(ww = aa) & not(ww = bb) & not(aa = bb) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr})) = (1..16)*{id_reg_8}) & ran(bv_ireg_plus_d) = BV16 & !dd.(dd: SCHAR => bv_ireg_plus_d(ix,dd): BV16) & !dd.(dd: SCHAR => bv_ireg_plus_d(iy,dd): BV16) & ran(bv_9ireg_plus_d0) = BYTE & !dd.(dd: SCHAR => bv_9ireg_plus_d0(mem,ix,dd): BYTE) & !dd.(dd: SCHAR => bv_9ireg_plus_d0(mem,iy,dd): BYTE) & byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)): BV16);
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & !(b1,b2,b3,b4,b5,b6).(b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT => update_flag_reg(b1,b2,b3,b4,b5,b6): {2|->id_reg_8}*BYTE) & !xx.(xx: (1..16)*{id_reg_8} +-> BYTE & dom(xx) = (1..16)*{id_reg_8} => rgs8<+xx: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+xx) = (1..16)*{id_reg_8}) & !(xx,xxr).(xx: (1..16)*{id_reg_8} & xxr: BYTE => rgs8<+{xx|->xxr}: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+{xx|->xxr}) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & not(xx = yy) => rgs8<+({xx|->xxr}\/{yy|->yyr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & not(xx = yy) & not(xx = zz) & not(yy = zz) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(yy = zz) & not(yy = vv) & not(zz = vv) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(zz = vv) & not(zz = ww) & not(vv = ww) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(vv = ww) & not(vv = aa) & not(ww = aa) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar,bb,bbr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & bb: (1..16)*{id_reg_8} & bbr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(xx = bb) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(yy = bb) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(zz = bb) & not(vv = ww) & not(vv = aa) & not(vv = bb) & not(ww = aa) & not(ww = bb) & not(aa = bb) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr})) = (1..16)*{id_reg_8}) & ran(bv_ireg_plus_d) = BV16 & !dd.(dd: SCHAR => bv_ireg_plus_d(ix,dd): BV16) & !dd.(dd: SCHAR => bv_ireg_plus_d(iy,dd): BV16) & ran(bv_9ireg_plus_d0) = BYTE & !dd.(dd: SCHAR => bv_9ireg_plus_d0(mem,ix,dd): BYTE) & !dd.(dd: SCHAR => bv_9ireg_plus_d0(mem,iy,dd): BYTE) & byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)): BV16);
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & !(b1,b2,b3,b4,b5,b6).(b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT => update_flag_reg(b1,b2,b3,b4,b5,b6): {2|->id_reg_8}*BYTE) & !xx.(xx: (1..16)*{id_reg_8} +-> BYTE & dom(xx) = (1..16)*{id_reg_8} => rgs8<+xx: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+xx) = (1..16)*{id_reg_8}) & !(xx,xxr).(xx: (1..16)*{id_reg_8} & xxr: BYTE => rgs8<+{xx|->xxr}: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+{xx|->xxr}) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & not(xx = yy) => rgs8<+({xx|->xxr}\/{yy|->yyr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & not(xx = yy) & not(xx = zz) & not(yy = zz) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(yy = zz) & not(yy = vv) & not(zz = vv) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(zz = vv) & not(zz = ww) & not(vv = ww) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(vv = ww) & not(vv = aa) & not(ww = aa) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar,bb,bbr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & bb: (1..16)*{id_reg_8} & bbr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(xx = bb) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(yy = bb) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(zz = bb) & not(vv = ww) & not(vv = aa) & not(vv = bb) & not(ww = aa) & not(ww = bb) & not(aa = bb) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr})) = (1..16)*{id_reg_8}) & ran(bv_ireg_plus_d) = BV16 & !dd.(dd: SCHAR => bv_ireg_plus_d(ix,dd): BV16) & !dd.(dd: SCHAR => bv_ireg_plus_d(iy,dd): BV16) & ran(bv_9ireg_plus_d0) = BYTE & !dd.(dd: SCHAR => bv_9ireg_plus_d0(mem,ix,dd): BYTE) & !dd.(dd: SCHAR => bv_9ireg_plus_d0(mem,iy,dd): BYTE) & byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)): BV16);
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & !(b1,b2,b3,b4,b5,b6).(b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT => update_flag_reg(b1,b2,b3,b4,b5,b6): {2|->id_reg_8}*BYTE) & !xx.(xx: (1..16)*{id_reg_8} +-> BYTE & dom(xx) = (1..16)*{id_reg_8} => rgs8<+xx: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+xx) = (1..16)*{id_reg_8}) & !(xx,xxr).(xx: (1..16)*{id_reg_8} & xxr: BYTE => rgs8<+{xx|->xxr}: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+{xx|->xxr}) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & not(xx = yy) => rgs8<+({xx|->xxr}\/{yy|->yyr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & not(xx = yy) & not(xx = zz) & not(yy = zz) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(yy = zz) & not(yy = vv) & not(zz = vv) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(zz = vv) & not(zz = ww) & not(vv = ww) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(vv = ww) & not(vv = aa) & not(ww = aa) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar,bb,bbr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & bb: (1..16)*{id_reg_8} & bbr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(xx = bb) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(yy = bb) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(zz = bb) & not(vv = ww) & not(vv = aa) & not(vv = bb) & not(ww = aa) & not(ww = bb) & not(aa = bb) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr})) = (1..16)*{id_reg_8}) & ran(bv_ireg_plus_d) = BV16 & !dd.(dd: SCHAR => bv_ireg_plus_d(ix,dd): BV16) & !dd.(dd: SCHAR => bv_ireg_plus_d(iy,dd): BV16) & ran(bv_9ireg_plus_d0) = BYTE & !dd.(dd: SCHAR => bv_9ireg_plus_d0(mem,ix,dd): BYTE) & !dd.(dd: SCHAR => bv_9ireg_plus_d0(mem,iy,dd): BYTE) & byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)): BV16 & byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)): BV16);
(9|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & !(b1,b2,b3,b4,b5,b6).(b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT => update_flag_reg(b1,b2,b3,b4,b5,b6): {2|->id_reg_8}*BYTE) & !xx.(xx: (1..16)*{id_reg_8} +-> BYTE & dom(xx) = (1..16)*{id_reg_8} => rgs8<+xx: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+xx) = (1..16)*{id_reg_8}) & !(xx,xxr).(xx: (1..16)*{id_reg_8} & xxr: BYTE => rgs8<+{xx|->xxr}: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+{xx|->xxr}) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & not(xx = yy) => rgs8<+({xx|->xxr}\/{yy|->yyr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & not(xx = yy) & not(xx = zz) & not(yy = zz) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(yy = zz) & not(yy = vv) & not(zz = vv) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(zz = vv) & not(zz = ww) & not(vv = ww) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(vv = ww) & not(vv = aa) & not(ww = aa) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar,bb,bbr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & bb: (1..16)*{id_reg_8} & bbr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(xx = bb) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(yy = bb) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(zz = bb) & not(vv = ww) & not(vv = aa) & not(vv = bb) & not(ww = aa) & not(ww = bb) & not(aa = bb) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr})) = (1..16)*{id_reg_8}) & ran(bv_ireg_plus_d) = BV16 & !dd.(dd: SCHAR => bv_ireg_plus_d(ix,dd): BV16) & !dd.(dd: SCHAR => bv_ireg_plus_d(iy,dd): BV16) & ran(bv_9ireg_plus_d0) = BYTE & !dd.(dd: SCHAR => bv_9ireg_plus_d0(mem,ix,dd): BYTE) & !dd.(dd: SCHAR => bv_9ireg_plus_d0(mem,iy,dd): BYTE) & byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)): BV16 & byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)): BV16);
(10|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & !(b1,b2,b3,b4,b5,b6).(b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT => update_flag_reg(b1,b2,b3,b4,b5,b6): {2|->id_reg_8}*BYTE) & !xx.(xx: (1..16)*{id_reg_8} +-> BYTE & dom(xx) = (1..16)*{id_reg_8} => rgs8<+xx: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+xx) = (1..16)*{id_reg_8}) & !(xx,xxr).(xx: (1..16)*{id_reg_8} & xxr: BYTE => rgs8<+{xx|->xxr}: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+{xx|->xxr}) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & not(xx = yy) => rgs8<+({xx|->xxr}\/{yy|->yyr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & not(xx = yy) & not(xx = zz) & not(yy = zz) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(yy = zz) & not(yy = vv) & not(zz = vv) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(zz = vv) & not(zz = ww) & not(vv = ww) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(vv = ww) & not(vv = aa) & not(ww = aa) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar,bb,bbr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & bb: (1..16)*{id_reg_8} & bbr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(xx = bb) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(yy = bb) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(zz = bb) & not(vv = ww) & not(vv = aa) & not(vv = bb) & not(ww = aa) & not(ww = bb) & not(aa = bb) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr})) = (1..16)*{id_reg_8}) & ran(bv_ireg_plus_d) = BV16 & !dd.(dd: SCHAR => bv_ireg_plus_d(ix,dd): BV16) & !dd.(dd: SCHAR => bv_ireg_plus_d(iy,dd): BV16) & ran(bv_9ireg_plus_d0) = BYTE & !dd.(dd: SCHAR => bv_9ireg_plus_d0(mem,ix,dd): BYTE) & !dd.(dd: SCHAR => bv_9ireg_plus_d0(mem,iy,dd): BYTE) & byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)): BV16 & byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)): BV16);
(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & !(b1,b2,b3,b4,b5,b6).(b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT => update_flag_reg(b1,b2,b3,b4,b5,b6): {2|->id_reg_8}*BYTE) & !xx.(xx: (1..16)*{id_reg_8} +-> BYTE & dom(xx) = (1..16)*{id_reg_8} => rgs8<+xx: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+xx) = (1..16)*{id_reg_8}) & !(xx,xxr).(xx: (1..16)*{id_reg_8} & xxr: BYTE => rgs8<+{xx|->xxr}: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+{xx|->xxr}) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & not(xx = yy) => rgs8<+({xx|->xxr}\/{yy|->yyr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & not(xx = yy) & not(xx = zz) & not(yy = zz) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(yy = zz) & not(yy = vv) & not(zz = vv) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(zz = vv) & not(zz = ww) & not(vv = ww) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(vv = ww) & not(vv = aa) & not(ww = aa) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar,bb,bbr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & bb: (1..16)*{id_reg_8} & bbr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(xx = bb) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(yy = bb) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(zz = bb) & not(vv = ww) & not(vv = aa) & not(vv = bb) & not(ww = aa) & not(ww = bb) & not(aa = bb) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr})) = (1..16)*{id_reg_8}) & ran(bv_ireg_plus_d) = BV16 & !dd.(dd: SCHAR => bv_ireg_plus_d(ix,dd): BV16) & !dd.(dd: SCHAR => bv_ireg_plus_d(iy,dd): BV16) & ran(bv_9ireg_plus_d0) = BYTE & !dd.(dd: SCHAR => bv_9ireg_plus_d0(mem,ix,dd): BYTE) & !dd.(dd: SCHAR => bv_9ireg_plus_d0(mem,iy,dd): BYTE) & byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)): BV16 & byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)): BV16 & byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)): BV16);
(1|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & !(b1,b2,b3,b4,b5,b6).(b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT => update_flag_reg(b1,b2,b3,b4,b5,b6): {2|->id_reg_8}*BYTE) & !xx.(xx: (1..16)*{id_reg_8} +-> BYTE & dom(xx) = (1..16)*{id_reg_8} => rgs8<+xx: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+xx) = (1..16)*{id_reg_8}) & !(xx,xxr).(xx: (1..16)*{id_reg_8} & xxr: BYTE => rgs8<+{xx|->xxr}: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+{xx|->xxr}) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & not(xx = yy) => rgs8<+({xx|->xxr}\/{yy|->yyr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & not(xx = yy) & not(xx = zz) & not(yy = zz) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(yy = zz) & not(yy = vv) & not(zz = vv) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(zz = vv) & not(zz = ww) & not(vv = ww) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(vv = ww) & not(vv = aa) & not(ww = aa) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar,bb,bbr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & bb: (1..16)*{id_reg_8} & bbr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(xx = bb) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(yy = bb) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(zz = bb) & not(vv = ww) & not(vv = aa) & not(vv = bb) & not(ww = aa) & not(ww = bb) & not(aa = bb) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr})) = (1..16)*{id_reg_8}) & ran(bv_ireg_plus_d) = BV16 & !dd.(dd: SCHAR => bv_ireg_plus_d(ix,dd): BV16) & !dd.(dd: SCHAR => bv_ireg_plus_d(iy,dd): BV16) & ran(bv_9ireg_plus_d0) = BYTE & !dd.(dd: SCHAR => bv_9ireg_plus_d0(mem,ix,dd): BYTE) & !dd.(dd: SCHAR => bv_9ireg_plus_d0(mem,iy,dd): BYTE) & byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)): BV16 & byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)): BV16 & byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)): BV16);
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & !(b1,b2,b3,b4,b5,b6).(b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT => update_flag_reg(b1,b2,b3,b4,b5,b6): {2|->id_reg_8}*BYTE) & !xx.(xx: (1..16)*{id_reg_8} +-> BYTE & dom(xx) = (1..16)*{id_reg_8} => rgs8<+xx: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+xx) = (1..16)*{id_reg_8}) & !(xx,xxr).(xx: (1..16)*{id_reg_8} & xxr: BYTE => rgs8<+{xx|->xxr}: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+{xx|->xxr}) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & not(xx = yy) => rgs8<+({xx|->xxr}\/{yy|->yyr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & not(xx = yy) & not(xx = zz) & not(yy = zz) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(yy = zz) & not(yy = vv) & not(zz = vv) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(zz = vv) & not(zz = ww) & not(vv = ww) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(vv = ww) & not(vv = aa) & not(ww = aa) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar,bb,bbr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & bb: (1..16)*{id_reg_8} & bbr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(xx = bb) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(yy = bb) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(zz = bb) & not(vv = ww) & not(vv = aa) & not(vv = bb) & not(ww = aa) & not(ww = bb) & not(aa = bb) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr})) = (1..16)*{id_reg_8}) & ran(bv_ireg_plus_d) = BV16 & !dd.(dd: SCHAR => bv_ireg_plus_d(ix,dd): BV16) & !dd.(dd: SCHAR => bv_ireg_plus_d(iy,dd): BV16) & ran(bv_9ireg_plus_d0) = BYTE & !dd.(dd: SCHAR => bv_9ireg_plus_d0(mem,ix,dd): BYTE) & !dd.(dd: SCHAR => bv_9ireg_plus_d0(mem,iy,dd): BYTE) & byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)): BV16 & byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)): BV16 & byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)): BV16);
(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & !(b1,b2,b3,b4,b5,b6).(b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT => update_flag_reg(b1,b2,b3,b4,b5,b6): {2|->id_reg_8}*BYTE) & !xx.(xx: (1..16)*{id_reg_8} +-> BYTE & dom(xx) = (1..16)*{id_reg_8} => rgs8<+xx: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+xx) = (1..16)*{id_reg_8}) & !(xx,xxr).(xx: (1..16)*{id_reg_8} & xxr: BYTE => rgs8<+{xx|->xxr}: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+{xx|->xxr}) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & not(xx = yy) => rgs8<+({xx|->xxr}\/{yy|->yyr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & not(xx = yy) & not(xx = zz) & not(yy = zz) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(yy = zz) & not(yy = vv) & not(zz = vv) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(zz = vv) & not(zz = ww) & not(vv = ww) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(vv = ww) & not(vv = aa) & not(ww = aa) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar,bb,bbr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & bb: (1..16)*{id_reg_8} & bbr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(xx = bb) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(yy = bb) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(zz = bb) & not(vv = ww) & not(vv = aa) & not(vv = bb) & not(ww = aa) & not(ww = bb) & not(aa = bb) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr})) = (1..16)*{id_reg_8}) & ran(bv_ireg_plus_d) = BV16 & !dd.(dd: SCHAR => bv_ireg_plus_d(ix,dd): BV16) & !dd.(dd: SCHAR => bv_ireg_plus_d(iy,dd): BV16) & ran(bv_9ireg_plus_d0) = BYTE & !dd.(dd: SCHAR => bv_9ireg_plus_d0(mem,ix,dd): BYTE) & !dd.(dd: SCHAR => bv_9ireg_plus_d0(mem,iy,dd): BYTE) & byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)): BV16 & byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)): BV16 & byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)): BV16 & byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8)): BV16);
(5|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & !(b1,b2,b3,b4,b5,b6).(b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT => update_flag_reg(b1,b2,b3,b4,b5,b6): {2|->id_reg_8}*BYTE) & !xx.(xx: (1..16)*{id_reg_8} +-> BYTE & dom(xx) = (1..16)*{id_reg_8} => rgs8<+xx: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+xx) = (1..16)*{id_reg_8}) & !(xx,xxr).(xx: (1..16)*{id_reg_8} & xxr: BYTE => rgs8<+{xx|->xxr}: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+{xx|->xxr}) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & not(xx = yy) => rgs8<+({xx|->xxr}\/{yy|->yyr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & not(xx = yy) & not(xx = zz) & not(yy = zz) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(yy = zz) & not(yy = vv) & not(zz = vv) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(zz = vv) & not(zz = ww) & not(vv = ww) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(vv = ww) & not(vv = aa) & not(ww = aa) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar,bb,bbr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & bb: (1..16)*{id_reg_8} & bbr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(xx = bb) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(yy = bb) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(zz = bb) & not(vv = ww) & not(vv = aa) & not(vv = bb) & not(ww = aa) & not(ww = bb) & not(aa = bb) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr})) = (1..16)*{id_reg_8}) & ran(bv_ireg_plus_d) = BV16 & !dd.(dd: SCHAR => bv_ireg_plus_d(ix,dd): BV16) & !dd.(dd: SCHAR => bv_ireg_plus_d(iy,dd): BV16) & ran(bv_9ireg_plus_d0) = BYTE & !dd.(dd: SCHAR => bv_9ireg_plus_d0(mem,ix,dd): BYTE) & !dd.(dd: SCHAR => bv_9ireg_plus_d0(mem,iy,dd): BYTE) & byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)): BV16 & byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)): BV16 & byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)): BV16 & byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8)): BV16);
(6|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & !(b1,b2,b3,b4,b5,b6).(b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT => update_flag_reg(b1,b2,b3,b4,b5,b6): {2|->id_reg_8}*BYTE) & !xx.(xx: (1..16)*{id_reg_8} +-> BYTE & dom(xx) = (1..16)*{id_reg_8} => rgs8<+xx: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+xx) = (1..16)*{id_reg_8}) & !(xx,xxr).(xx: (1..16)*{id_reg_8} & xxr: BYTE => rgs8<+{xx|->xxr}: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+{xx|->xxr}) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & not(xx = yy) => rgs8<+({xx|->xxr}\/{yy|->yyr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & not(xx = yy) & not(xx = zz) & not(yy = zz) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(yy = zz) & not(yy = vv) & not(zz = vv) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(zz = vv) & not(zz = ww) & not(vv = ww) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(vv = ww) & not(vv = aa) & not(ww = aa) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar,bb,bbr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & bb: (1..16)*{id_reg_8} & bbr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(xx = bb) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(yy = bb) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(zz = bb) & not(vv = ww) & not(vv = aa) & not(vv = bb) & not(ww = aa) & not(ww = bb) & not(aa = bb) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr})) = (1..16)*{id_reg_8}) & ran(bv_ireg_plus_d) = BV16 & !dd.(dd: SCHAR => bv_ireg_plus_d(ix,dd): BV16) & !dd.(dd: SCHAR => bv_ireg_plus_d(iy,dd): BV16) & ran(bv_9ireg_plus_d0) = BYTE & !dd.(dd: SCHAR => bv_9ireg_plus_d0(mem,ix,dd): BYTE) & !dd.(dd: SCHAR => bv_9ireg_plus_d0(mem,iy,dd): BYTE) & byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)): BV16 & byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)): BV16 & byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)): BV16 & byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8)): BV16);
(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & !(b1,b2,b3,b4,b5,b6).(b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT => update_flag_reg(b1,b2,b3,b4,b5,b6): {2|->id_reg_8}*BYTE) & !xx.(xx: (1..16)*{id_reg_8} +-> BYTE & dom(xx) = (1..16)*{id_reg_8} => rgs8<+xx: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+xx) = (1..16)*{id_reg_8}) & !(xx,xxr).(xx: (1..16)*{id_reg_8} & xxr: BYTE => rgs8<+{xx|->xxr}: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+{xx|->xxr}) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & not(xx = yy) => rgs8<+({xx|->xxr}\/{yy|->yyr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & not(xx = yy) & not(xx = zz) & not(yy = zz) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(yy = zz) & not(yy = vv) & not(zz = vv) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(zz = vv) & not(zz = ww) & not(vv = ww) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(vv = ww) & not(vv = aa) & not(ww = aa) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar,bb,bbr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & bb: (1..16)*{id_reg_8} & bbr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(xx = bb) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(yy = bb) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(zz = bb) & not(vv = ww) & not(vv = aa) & not(vv = bb) & not(ww = aa) & not(ww = bb) & not(aa = bb) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr})) = (1..16)*{id_reg_8}) & ran(bv_ireg_plus_d) = BV16 & !dd.(dd: SCHAR => bv_ireg_plus_d(ix,dd): BV16) & !dd.(dd: SCHAR => bv_ireg_plus_d(iy,dd): BV16) & ran(bv_9ireg_plus_d0) = BYTE & !dd.(dd: SCHAR => bv_9ireg_plus_d0(mem,ix,dd): BYTE) & !dd.(dd: SCHAR => bv_9ireg_plus_d0(mem,iy,dd): BYTE) & byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)): BV16 & byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)): BV16 & byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)): BV16 & byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8)): BV16);
(9|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & !(b1,b2,b3,b4,b5,b6).(b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT => update_flag_reg(b1,b2,b3,b4,b5,b6): {2|->id_reg_8}*BYTE) & !xx.(xx: (1..16)*{id_reg_8} +-> BYTE & dom(xx) = (1..16)*{id_reg_8} => rgs8<+xx: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+xx) = (1..16)*{id_reg_8}) & !(xx,xxr).(xx: (1..16)*{id_reg_8} & xxr: BYTE => rgs8<+{xx|->xxr}: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+{xx|->xxr}) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & not(xx = yy) => rgs8<+({xx|->xxr}\/{yy|->yyr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & not(xx = yy) & not(xx = zz) & not(yy = zz) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(yy = zz) & not(yy = vv) & not(zz = vv) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(zz = vv) & not(zz = ww) & not(vv = ww) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(vv = ww) & not(vv = aa) & not(ww = aa) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar,bb,bbr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & bb: (1..16)*{id_reg_8} & bbr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(xx = bb) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(yy = bb) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(zz = bb) & not(vv = ww) & not(vv = aa) & not(vv = bb) & not(ww = aa) & not(ww = bb) & not(aa = bb) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr})) = (1..16)*{id_reg_8}) & ran(bv_ireg_plus_d) = BV16 & !dd.(dd: SCHAR => bv_ireg_plus_d(ix,dd): BV16) & !dd.(dd: SCHAR => bv_ireg_plus_d(iy,dd): BV16) & ran(bv_9ireg_plus_d0) = BYTE & !dd.(dd: SCHAR => bv_9ireg_plus_d0(mem,ix,dd): BYTE) & !dd.(dd: SCHAR => bv_9ireg_plus_d0(mem,iy,dd): BYTE) & byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)): BV16 & byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)): BV16 & byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)): BV16 & byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8)): BV16);
(10|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & !(b1,b2,b3,b4,b5,b6).(b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT => update_flag_reg(b1,b2,b3,b4,b5,b6): {2|->id_reg_8}*BYTE) & !xx.(xx: (1..16)*{id_reg_8} +-> BYTE & dom(xx) = (1..16)*{id_reg_8} => rgs8<+xx: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+xx) = (1..16)*{id_reg_8}) & !(xx,xxr).(xx: (1..16)*{id_reg_8} & xxr: BYTE => rgs8<+{xx|->xxr}: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+{xx|->xxr}) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & not(xx = yy) => rgs8<+({xx|->xxr}\/{yy|->yyr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & not(xx = yy) & not(xx = zz) & not(yy = zz) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(yy = zz) & not(yy = vv) & not(zz = vv) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(zz = vv) & not(zz = ww) & not(vv = ww) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(vv = ww) & not(vv = aa) & not(ww = aa) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar,bb,bbr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & bb: (1..16)*{id_reg_8} & bbr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(xx = bb) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(yy = bb) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(zz = bb) & not(vv = ww) & not(vv = aa) & not(vv = bb) & not(ww = aa) & not(ww = bb) & not(aa = bb) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr})) = (1..16)*{id_reg_8}) & ran(bv_ireg_plus_d) = BV16 & !dd.(dd: SCHAR => bv_ireg_plus_d(ix,dd): BV16) & !dd.(dd: SCHAR => bv_ireg_plus_d(iy,dd): BV16) & ran(bv_9ireg_plus_d0) = BYTE & !dd.(dd: SCHAR => bv_9ireg_plus_d0(mem,ix,dd): BYTE) & !dd.(dd: SCHAR => bv_9ireg_plus_d0(mem,iy,dd): BYTE) & byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)): BV16 & byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)): BV16 & byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)): BV16 & byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8)): BV16);
(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & !(b1,b2,b3,b4,b5,b6).(b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT => update_flag_reg(b1,b2,b3,b4,b5,b6): {2|->id_reg_8}*BYTE) & !xx.(xx: (1..16)*{id_reg_8} +-> BYTE & dom(xx) = (1..16)*{id_reg_8} => rgs8<+xx: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+xx) = (1..16)*{id_reg_8}) & !(xx,xxr).(xx: (1..16)*{id_reg_8} & xxr: BYTE => rgs8<+{xx|->xxr}: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+{xx|->xxr}) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & not(xx = yy) => rgs8<+({xx|->xxr}\/{yy|->yyr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & not(xx = yy) & not(xx = zz) & not(yy = zz) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(yy = zz) & not(yy = vv) & not(zz = vv) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(zz = vv) & not(zz = ww) & not(vv = ww) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(vv = ww) & not(vv = aa) & not(ww = aa) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar,bb,bbr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & bb: (1..16)*{id_reg_8} & bbr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(xx = bb) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(yy = bb) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(zz = bb) & not(vv = ww) & not(vv = aa) & not(vv = bb) & not(ww = aa) & not(ww = bb) & not(aa = bb) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr})) = (1..16)*{id_reg_8}) & ran(bv_ireg_plus_d) = BV16 & !dd.(dd: SCHAR => bv_ireg_plus_d(ix,dd): BV16) & !dd.(dd: SCHAR => bv_ireg_plus_d(iy,dd): BV16) & ran(bv_9ireg_plus_d0) = BYTE & !dd.(dd: SCHAR => bv_9ireg_plus_d0(mem,ix,dd): BYTE) & !dd.(dd: SCHAR => bv_9ireg_plus_d0(mem,iy,dd): BYTE) & byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)): BV16 & byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)): BV16 & byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)): BV16 & byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8)): BV16);
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & !(b1,b2,b3,b4,b5,b6).(b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT => update_flag_reg(b1,b2,b3,b4,b5,b6): {2|->id_reg_8}*BYTE) & !xx.(xx: (1..16)*{id_reg_8} +-> BYTE & dom(xx) = (1..16)*{id_reg_8} => rgs8<+xx: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+xx) = (1..16)*{id_reg_8}) & !(xx,xxr).(xx: (1..16)*{id_reg_8} & xxr: BYTE => rgs8<+{xx|->xxr}: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+{xx|->xxr}) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & not(xx = yy) => rgs8<+({xx|->xxr}\/{yy|->yyr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & not(xx = yy) & not(xx = zz) & not(yy = zz) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(yy = zz) & not(yy = vv) & not(zz = vv) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(zz = vv) & not(zz = ww) & not(vv = ww) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(vv = ww) & not(vv = aa) & not(ww = aa) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar,bb,bbr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & bb: (1..16)*{id_reg_8} & bbr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(xx = bb) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(yy = bb) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(zz = bb) & not(vv = ww) & not(vv = aa) & not(vv = bb) & not(ww = aa) & not(ww = bb) & not(aa = bb) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr})) = (1..16)*{id_reg_8}) & ran(bv_ireg_plus_d) = BV16 & !dd.(dd: SCHAR => bv_ireg_plus_d(ix,dd): BV16) & !dd.(dd: SCHAR => bv_ireg_plus_d(iy,dd): BV16) & ran(bv_9ireg_plus_d0) = BYTE & !dd.(dd: SCHAR => bv_9ireg_plus_d0(mem,ix,dd): BYTE) & !dd.(dd: SCHAR => bv_9ireg_plus_d0(mem,iy,dd): BYTE) & byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)): BV16 & byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)): BV16 & byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)): BV16 & byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8)): BV16);
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & !(b1,b2,b3,b4,b5,b6).(b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT => update_flag_reg(b1,b2,b3,b4,b5,b6): {2|->id_reg_8}*BYTE) & !xx.(xx: (1..16)*{id_reg_8} +-> BYTE & dom(xx) = (1..16)*{id_reg_8} => rgs8<+xx: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+xx) = (1..16)*{id_reg_8}) & !(xx,xxr).(xx: (1..16)*{id_reg_8} & xxr: BYTE => rgs8<+{xx|->xxr}: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+{xx|->xxr}) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & not(xx = yy) => rgs8<+({xx|->xxr}\/{yy|->yyr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & not(xx = yy) & not(xx = zz) & not(yy = zz) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(yy = zz) & not(yy = vv) & not(zz = vv) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(zz = vv) & not(zz = ww) & not(vv = ww) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(vv = ww) & not(vv = aa) & not(ww = aa) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar,bb,bbr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & bb: (1..16)*{id_reg_8} & bbr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(xx = bb) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(yy = bb) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(zz = bb) & not(vv = ww) & not(vv = aa) & not(vv = bb) & not(ww = aa) & not(ww = bb) & not(aa = bb) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr})) = (1..16)*{id_reg_8}) & ran(bv_ireg_plus_d) = BV16 & !dd.(dd: SCHAR => bv_ireg_plus_d(ix,dd): BV16) & !dd.(dd: SCHAR => bv_ireg_plus_d(iy,dd): BV16) & ran(bv_9ireg_plus_d0) = BYTE & !dd.(dd: SCHAR => bv_9ireg_plus_d0(mem,ix,dd): BYTE) & !dd.(dd: SCHAR => bv_9ireg_plus_d0(mem,iy,dd): BYTE) & byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)): BV16 & byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)): BV16 & byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)): BV16 & byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8)): BV16);
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & !(b1,b2,b3,b4,b5,b6).(b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT => update_flag_reg(b1,b2,b3,b4,b5,b6): {2|->id_reg_8}*BYTE) & !xx.(xx: (1..16)*{id_reg_8} +-> BYTE & dom(xx) = (1..16)*{id_reg_8} => rgs8<+xx: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+xx) = (1..16)*{id_reg_8}) & !(xx,xxr).(xx: (1..16)*{id_reg_8} & xxr: BYTE => rgs8<+{xx|->xxr}: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+{xx|->xxr}) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & not(xx = yy) => rgs8<+({xx|->xxr}\/{yy|->yyr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & not(xx = yy) & not(xx = zz) & not(yy = zz) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(yy = zz) & not(yy = vv) & not(zz = vv) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(zz = vv) & not(zz = ww) & not(vv = ww) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(vv = ww) & not(vv = aa) & not(ww = aa) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar,bb,bbr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & bb: (1..16)*{id_reg_8} & bbr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(xx = bb) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(yy = bb) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(zz = bb) & not(vv = ww) & not(vv = aa) & not(vv = bb) & not(ww = aa) & not(ww = bb) & not(aa = bb) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr})) = (1..16)*{id_reg_8}) & ran(bv_ireg_plus_d) = BV16 & !dd.(dd: SCHAR => bv_ireg_plus_d(ix,dd): BV16) & !dd.(dd: SCHAR => bv_ireg_plus_d(iy,dd): BV16) & ran(bv_9ireg_plus_d0) = BYTE & !dd.(dd: SCHAR => bv_9ireg_plus_d0(mem,ix,dd): BYTE) & !dd.(dd: SCHAR => bv_9ireg_plus_d0(mem,iy,dd): BYTE) & byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)): BV16 & byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)): BV16 & byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)): BV16 & byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8)): BV16);
(1|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & !(b1,b2,b3,b4,b5,b6).(b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT => update_flag_reg(b1,b2,b3,b4,b5,b6): {2|->id_reg_8}*BYTE) & !xx.(xx: (1..16)*{id_reg_8} +-> BYTE & dom(xx) = (1..16)*{id_reg_8} => rgs8<+xx: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+xx) = (1..16)*{id_reg_8}) & !(xx,xxr).(xx: (1..16)*{id_reg_8} & xxr: BYTE => rgs8<+{xx|->xxr}: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+{xx|->xxr}) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & not(xx = yy) => rgs8<+({xx|->xxr}\/{yy|->yyr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & not(xx = yy) & not(xx = zz) & not(yy = zz) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(yy = zz) & not(yy = vv) & not(zz = vv) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(zz = vv) & not(zz = ww) & not(vv = ww) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(vv = ww) & not(vv = aa) & not(ww = aa) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar,bb,bbr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & bb: (1..16)*{id_reg_8} & bbr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(xx = bb) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(yy = bb) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(zz = bb) & not(vv = ww) & not(vv = aa) & not(vv = bb) & not(ww = aa) & not(ww = bb) & not(aa = bb) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr})) = (1..16)*{id_reg_8}) & ran(bv_ireg_plus_d) = BV16 & !dd.(dd: SCHAR => bv_ireg_plus_d(ix,dd): BV16) & !dd.(dd: SCHAR => bv_ireg_plus_d(iy,dd): BV16) & ran(bv_9ireg_plus_d0) = BYTE & !dd.(dd: SCHAR => bv_9ireg_plus_d0(mem,ix,dd): BYTE) & !dd.(dd: SCHAR => bv_9ireg_plus_d0(mem,iy,dd): BYTE) & byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)): BV16 & byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)): BV16 & byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)): BV16 & byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8)): BV16);
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & !(b1,b2,b3,b4,b5,b6).(b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT => update_flag_reg(b1,b2,b3,b4,b5,b6): {2|->id_reg_8}*BYTE) & !xx.(xx: (1..16)*{id_reg_8} +-> BYTE & dom(xx) = (1..16)*{id_reg_8} => rgs8<+xx: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+xx) = (1..16)*{id_reg_8}) & !(xx,xxr).(xx: (1..16)*{id_reg_8} & xxr: BYTE => rgs8<+{xx|->xxr}: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+{xx|->xxr}) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & not(xx = yy) => rgs8<+({xx|->xxr}\/{yy|->yyr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & not(xx = yy) & not(xx = zz) & not(yy = zz) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(yy = zz) & not(yy = vv) & not(zz = vv) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(zz = vv) & not(zz = ww) & not(vv = ww) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(vv = ww) & not(vv = aa) & not(ww = aa) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar,bb,bbr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & bb: (1..16)*{id_reg_8} & bbr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(xx = bb) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(yy = bb) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(zz = bb) & not(vv = ww) & not(vv = aa) & not(vv = bb) & not(ww = aa) & not(ww = bb) & not(aa = bb) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr})) = (1..16)*{id_reg_8}) & ran(bv_ireg_plus_d) = BV16 & !dd.(dd: SCHAR => bv_ireg_plus_d(ix,dd): BV16) & !dd.(dd: SCHAR => bv_ireg_plus_d(iy,dd): BV16) & ran(bv_9ireg_plus_d0) = BYTE & !dd.(dd: SCHAR => bv_9ireg_plus_d0(mem,ix,dd): BYTE) & !dd.(dd: SCHAR => bv_9ireg_plus_d0(mem,iy,dd): BYTE) & byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)): BV16 & byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)): BV16 & byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)): BV16 & byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8)): BV16);
(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & !(b1,b2,b3,b4,b5,b6).(b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT => update_flag_reg(b1,b2,b3,b4,b5,b6): {2|->id_reg_8}*BYTE) & !xx.(xx: (1..16)*{id_reg_8} +-> BYTE & dom(xx) = (1..16)*{id_reg_8} => rgs8<+xx: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+xx) = (1..16)*{id_reg_8}) & !(xx,xxr).(xx: (1..16)*{id_reg_8} & xxr: BYTE => rgs8<+{xx|->xxr}: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+{xx|->xxr}) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & not(xx = yy) => rgs8<+({xx|->xxr}\/{yy|->yyr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & not(xx = yy) & not(xx = zz) & not(yy = zz) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(yy = zz) & not(yy = vv) & not(zz = vv) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(zz = vv) & not(zz = ww) & not(vv = ww) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(vv = ww) & not(vv = aa) & not(ww = aa) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar,bb,bbr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & bb: (1..16)*{id_reg_8} & bbr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(xx = bb) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(yy = bb) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(zz = bb) & not(vv = ww) & not(vv = aa) & not(vv = bb) & not(ww = aa) & not(ww = bb) & not(aa = bb) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr})) = (1..16)*{id_reg_8}) & ran(bv_ireg_plus_d) = BV16 & !dd.(dd: SCHAR => bv_ireg_plus_d(ix,dd): BV16) & !dd.(dd: SCHAR => bv_ireg_plus_d(iy,dd): BV16) & ran(bv_9ireg_plus_d0) = BYTE & !dd.(dd: SCHAR => bv_9ireg_plus_d0(mem,ix,dd): BYTE) & !dd.(dd: SCHAR => bv_9ireg_plus_d0(mem,iy,dd): BYTE) & byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)): BV16 & byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)): BV16 & byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)): BV16 & byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8)): BV16);
(5|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & !(b1,b2,b3,b4,b5,b6).(b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT => update_flag_reg(b1,b2,b3,b4,b5,b6): {2|->id_reg_8}*BYTE) & !xx.(xx: (1..16)*{id_reg_8} +-> BYTE & dom(xx) = (1..16)*{id_reg_8} => rgs8<+xx: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+xx) = (1..16)*{id_reg_8}) & !(xx,xxr).(xx: (1..16)*{id_reg_8} & xxr: BYTE => rgs8<+{xx|->xxr}: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+{xx|->xxr}) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & not(xx = yy) => rgs8<+({xx|->xxr}\/{yy|->yyr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & not(xx = yy) & not(xx = zz) & not(yy = zz) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(yy = zz) & not(yy = vv) & not(zz = vv) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(zz = vv) & not(zz = ww) & not(vv = ww) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(vv = ww) & not(vv = aa) & not(ww = aa) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar,bb,bbr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & bb: (1..16)*{id_reg_8} & bbr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(xx = bb) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(yy = bb) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(zz = bb) & not(vv = ww) & not(vv = aa) & not(vv = bb) & not(ww = aa) & not(ww = bb) & not(aa = bb) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr})) = (1..16)*{id_reg_8}) & ran(bv_ireg_plus_d) = BV16 & !dd.(dd: SCHAR => bv_ireg_plus_d(ix,dd): BV16) & !dd.(dd: SCHAR => bv_ireg_plus_d(iy,dd): BV16) & ran(bv_9ireg_plus_d0) = BYTE & !dd.(dd: SCHAR => bv_9ireg_plus_d0(mem,ix,dd): BYTE) & !dd.(dd: SCHAR => bv_9ireg_plus_d0(mem,iy,dd): BYTE) & byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)): BV16 & byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)): BV16 & byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)): BV16 & byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8)): BV16);
(6|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & !(b1,b2,b3,b4,b5,b6).(b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT => update_flag_reg(b1,b2,b3,b4,b5,b6): {2|->id_reg_8}*BYTE) & !xx.(xx: (1..16)*{id_reg_8} +-> BYTE & dom(xx) = (1..16)*{id_reg_8} => rgs8<+xx: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+xx) = (1..16)*{id_reg_8}) & !(xx,xxr).(xx: (1..16)*{id_reg_8} & xxr: BYTE => rgs8<+{xx|->xxr}: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+{xx|->xxr}) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & not(xx = yy) => rgs8<+({xx|->xxr}\/{yy|->yyr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & not(xx = yy) & not(xx = zz) & not(yy = zz) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(yy = zz) & not(yy = vv) & not(zz = vv) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(zz = vv) & not(zz = ww) & not(vv = ww) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(vv = ww) & not(vv = aa) & not(ww = aa) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar,bb,bbr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & bb: (1..16)*{id_reg_8} & bbr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(xx = bb) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(yy = bb) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(zz = bb) & not(vv = ww) & not(vv = aa) & not(vv = bb) & not(ww = aa) & not(ww = bb) & not(aa = bb) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr})) = (1..16)*{id_reg_8}) & ran(bv_ireg_plus_d) = BV16 & !dd.(dd: SCHAR => bv_ireg_plus_d(ix,dd): BV16) & !dd.(dd: SCHAR => bv_ireg_plus_d(iy,dd): BV16) & ran(bv_9ireg_plus_d0) = BYTE & !dd.(dd: SCHAR => bv_9ireg_plus_d0(mem,ix,dd): BYTE) & !dd.(dd: SCHAR => bv_9ireg_plus_d0(mem,iy,dd): BYTE) & byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)): BV16 & byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)): BV16 & byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)): BV16 & byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8)): BV16);
(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & !(b1,b2,b3,b4,b5,b6).(b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT => update_flag_reg(b1,b2,b3,b4,b5,b6): {2|->id_reg_8}*BYTE) & !xx.(xx: (1..16)*{id_reg_8} +-> BYTE & dom(xx) = (1..16)*{id_reg_8} => rgs8<+xx: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+xx) = (1..16)*{id_reg_8}) & !(xx,xxr).(xx: (1..16)*{id_reg_8} & xxr: BYTE => rgs8<+{xx|->xxr}: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+{xx|->xxr}) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & not(xx = yy) => rgs8<+({xx|->xxr}\/{yy|->yyr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & not(xx = yy) & not(xx = zz) & not(yy = zz) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(yy = zz) & not(yy = vv) & not(zz = vv) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(zz = vv) & not(zz = ww) & not(vv = ww) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(vv = ww) & not(vv = aa) & not(ww = aa) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar,bb,bbr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & bb: (1..16)*{id_reg_8} & bbr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(xx = bb) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(yy = bb) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(zz = bb) & not(vv = ww) & not(vv = aa) & not(vv = bb) & not(ww = aa) & not(ww = bb) & not(aa = bb) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr})) = (1..16)*{id_reg_8}) & ran(bv_ireg_plus_d) = BV16 & !dd.(dd: SCHAR => bv_ireg_plus_d(ix,dd): BV16) & !dd.(dd: SCHAR => bv_ireg_plus_d(iy,dd): BV16) & ran(bv_9ireg_plus_d0) = BYTE & !dd.(dd: SCHAR => bv_9ireg_plus_d0(mem,ix,dd): BYTE) & !dd.(dd: SCHAR => bv_9ireg_plus_d0(mem,iy,dd): BYTE) & byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)): BV16 & byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)): BV16 & byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)): BV16 & byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8)): BV16 & dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16);
(5|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & !(b1,b2,b3,b4,b5,b6).(b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT => update_flag_reg(b1,b2,b3,b4,b5,b6): {2|->id_reg_8}*BYTE) & !xx.(xx: (1..16)*{id_reg_8} +-> BYTE & dom(xx) = (1..16)*{id_reg_8} => rgs8<+xx: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+xx) = (1..16)*{id_reg_8}) & !(xx,xxr).(xx: (1..16)*{id_reg_8} & xxr: BYTE => rgs8<+{xx|->xxr}: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+{xx|->xxr}) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & not(xx = yy) => rgs8<+({xx|->xxr}\/{yy|->yyr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & not(xx = yy) & not(xx = zz) & not(yy = zz) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(yy = zz) & not(yy = vv) & not(zz = vv) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(zz = vv) & not(zz = ww) & not(vv = ww) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(vv = ww) & not(vv = aa) & not(ww = aa) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar,bb,bbr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & bb: (1..16)*{id_reg_8} & bbr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(xx = bb) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(yy = bb) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(zz = bb) & not(vv = ww) & not(vv = aa) & not(vv = bb) & not(ww = aa) & not(ww = bb) & not(aa = bb) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr})) = (1..16)*{id_reg_8}) & ran(bv_ireg_plus_d) = BV16 & !dd.(dd: SCHAR => bv_ireg_plus_d(ix,dd): BV16) & !dd.(dd: SCHAR => bv_ireg_plus_d(iy,dd): BV16) & ran(bv_9ireg_plus_d0) = BYTE & !dd.(dd: SCHAR => bv_9ireg_plus_d0(mem,ix,dd): BYTE) & !dd.(dd: SCHAR => bv_9ireg_plus_d0(mem,iy,dd): BYTE) & byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)): BV16 & byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)): BV16 & byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)): BV16 & byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8)): BV16 & dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16);
(6|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & !(b1,b2,b3,b4,b5,b6).(b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT => update_flag_reg(b1,b2,b3,b4,b5,b6): {2|->id_reg_8}*BYTE) & !xx.(xx: (1..16)*{id_reg_8} +-> BYTE & dom(xx) = (1..16)*{id_reg_8} => rgs8<+xx: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+xx) = (1..16)*{id_reg_8}) & !(xx,xxr).(xx: (1..16)*{id_reg_8} & xxr: BYTE => rgs8<+{xx|->xxr}: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+{xx|->xxr}) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & not(xx = yy) => rgs8<+({xx|->xxr}\/{yy|->yyr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & not(xx = yy) & not(xx = zz) & not(yy = zz) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(yy = zz) & not(yy = vv) & not(zz = vv) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(zz = vv) & not(zz = ww) & not(vv = ww) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(vv = ww) & not(vv = aa) & not(ww = aa) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar,bb,bbr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & bb: (1..16)*{id_reg_8} & bbr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(xx = bb) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(yy = bb) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(zz = bb) & not(vv = ww) & not(vv = aa) & not(vv = bb) & not(ww = aa) & not(ww = bb) & not(aa = bb) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr})) = (1..16)*{id_reg_8}) & ran(bv_ireg_plus_d) = BV16 & !dd.(dd: SCHAR => bv_ireg_plus_d(ix,dd): BV16) & !dd.(dd: SCHAR => bv_ireg_plus_d(iy,dd): BV16) & ran(bv_9ireg_plus_d0) = BYTE & !dd.(dd: SCHAR => bv_9ireg_plus_d0(mem,ix,dd): BYTE) & !dd.(dd: SCHAR => bv_9ireg_plus_d0(mem,iy,dd): BYTE) & byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)): BV16 & byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)): BV16 & byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)): BV16 & byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8)): BV16 & dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16);
(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & !(b1,b2,b3,b4,b5,b6).(b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT => update_flag_reg(b1,b2,b3,b4,b5,b6): {2|->id_reg_8}*BYTE) & !xx.(xx: (1..16)*{id_reg_8} +-> BYTE & dom(xx) = (1..16)*{id_reg_8} => rgs8<+xx: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+xx) = (1..16)*{id_reg_8}) & !(xx,xxr).(xx: (1..16)*{id_reg_8} & xxr: BYTE => rgs8<+{xx|->xxr}: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+{xx|->xxr}) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & not(xx = yy) => rgs8<+({xx|->xxr}\/{yy|->yyr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & not(xx = yy) & not(xx = zz) & not(yy = zz) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(yy = zz) & not(yy = vv) & not(zz = vv) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(zz = vv) & not(zz = ww) & not(vv = ww) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(vv = ww) & not(vv = aa) & not(ww = aa) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar,bb,bbr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & bb: (1..16)*{id_reg_8} & bbr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(xx = bb) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(yy = bb) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(zz = bb) & not(vv = ww) & not(vv = aa) & not(vv = bb) & not(ww = aa) & not(ww = bb) & not(aa = bb) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr})) = (1..16)*{id_reg_8}) & ran(bv_ireg_plus_d) = BV16 & !dd.(dd: SCHAR => bv_ireg_plus_d(ix,dd): BV16) & !dd.(dd: SCHAR => bv_ireg_plus_d(iy,dd): BV16) & ran(bv_9ireg_plus_d0) = BYTE & !dd.(dd: SCHAR => bv_9ireg_plus_d0(mem,ix,dd): BYTE) & !dd.(dd: SCHAR => bv_9ireg_plus_d0(mem,iy,dd): BYTE) & byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)): BV16 & byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)): BV16 & byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)): BV16 & byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8)): BV16 & dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16);
(9|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & !(b1,b2,b3,b4,b5,b6).(b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT => update_flag_reg(b1,b2,b3,b4,b5,b6): {2|->id_reg_8}*BYTE) & !xx.(xx: (1..16)*{id_reg_8} +-> BYTE & dom(xx) = (1..16)*{id_reg_8} => rgs8<+xx: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+xx) = (1..16)*{id_reg_8}) & !(xx,xxr).(xx: (1..16)*{id_reg_8} & xxr: BYTE => rgs8<+{xx|->xxr}: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+{xx|->xxr}) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & not(xx = yy) => rgs8<+({xx|->xxr}\/{yy|->yyr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & not(xx = yy) & not(xx = zz) & not(yy = zz) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(yy = zz) & not(yy = vv) & not(zz = vv) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(zz = vv) & not(zz = ww) & not(vv = ww) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(vv = ww) & not(vv = aa) & not(ww = aa) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar,bb,bbr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & bb: (1..16)*{id_reg_8} & bbr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(xx = bb) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(yy = bb) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(zz = bb) & not(vv = ww) & not(vv = aa) & not(vv = bb) & not(ww = aa) & not(ww = bb) & not(aa = bb) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr})) = (1..16)*{id_reg_8}) & ran(bv_ireg_plus_d) = BV16 & !dd.(dd: SCHAR => bv_ireg_plus_d(ix,dd): BV16) & !dd.(dd: SCHAR => bv_ireg_plus_d(iy,dd): BV16) & ran(bv_9ireg_plus_d0) = BYTE & !dd.(dd: SCHAR => bv_9ireg_plus_d0(mem,ix,dd): BYTE) & !dd.(dd: SCHAR => bv_9ireg_plus_d0(mem,iy,dd): BYTE) & byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)): BV16 & byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)): BV16 & byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)): BV16 & byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8)): BV16 & dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16);
(10|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & !(b1,b2,b3,b4,b5,b6).(b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT => update_flag_reg(b1,b2,b3,b4,b5,b6): {2|->id_reg_8}*BYTE) & !xx.(xx: (1..16)*{id_reg_8} +-> BYTE & dom(xx) = (1..16)*{id_reg_8} => rgs8<+xx: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+xx) = (1..16)*{id_reg_8}) & !(xx,xxr).(xx: (1..16)*{id_reg_8} & xxr: BYTE => rgs8<+{xx|->xxr}: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+{xx|->xxr}) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & not(xx = yy) => rgs8<+({xx|->xxr}\/{yy|->yyr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & not(xx = yy) & not(xx = zz) & not(yy = zz) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(yy = zz) & not(yy = vv) & not(zz = vv) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(zz = vv) & not(zz = ww) & not(vv = ww) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(vv = ww) & not(vv = aa) & not(ww = aa) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar,bb,bbr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & bb: (1..16)*{id_reg_8} & bbr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(xx = bb) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(yy = bb) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(zz = bb) & not(vv = ww) & not(vv = aa) & not(vv = bb) & not(ww = aa) & not(ww = bb) & not(aa = bb) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr})) = (1..16)*{id_reg_8}) & ran(bv_ireg_plus_d) = BV16 & !dd.(dd: SCHAR => bv_ireg_plus_d(ix,dd): BV16) & !dd.(dd: SCHAR => bv_ireg_plus_d(iy,dd): BV16) & ran(bv_9ireg_plus_d0) = BYTE & !dd.(dd: SCHAR => bv_9ireg_plus_d0(mem,ix,dd): BYTE) & !dd.(dd: SCHAR => bv_9ireg_plus_d0(mem,iy,dd): BYTE) & byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)): BV16 & byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)): BV16 & byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)): BV16 & byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8)): BV16 & dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16);
(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & !(b1,b2,b3,b4,b5,b6).(b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT => update_flag_reg(b1,b2,b3,b4,b5,b6): {2|->id_reg_8}*BYTE) & !xx.(xx: (1..16)*{id_reg_8} +-> BYTE & dom(xx) = (1..16)*{id_reg_8} => rgs8<+xx: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+xx) = (1..16)*{id_reg_8}) & !(xx,xxr).(xx: (1..16)*{id_reg_8} & xxr: BYTE => rgs8<+{xx|->xxr}: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+{xx|->xxr}) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & not(xx = yy) => rgs8<+({xx|->xxr}\/{yy|->yyr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & not(xx = yy) & not(xx = zz) & not(yy = zz) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(yy = zz) & not(yy = vv) & not(zz = vv) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(zz = vv) & not(zz = ww) & not(vv = ww) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(vv = ww) & not(vv = aa) & not(ww = aa) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar,bb,bbr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & bb: (1..16)*{id_reg_8} & bbr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(xx = bb) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(yy = bb) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(zz = bb) & not(vv = ww) & not(vv = aa) & not(vv = bb) & not(ww = aa) & not(ww = bb) & not(aa = bb) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr})) = (1..16)*{id_reg_8}) & ran(bv_ireg_plus_d) = BV16 & !dd.(dd: SCHAR => bv_ireg_plus_d(ix,dd): BV16) & !dd.(dd: SCHAR => bv_ireg_plus_d(iy,dd): BV16) & ran(bv_9ireg_plus_d0) = BYTE & !dd.(dd: SCHAR => bv_9ireg_plus_d0(mem,ix,dd): BYTE) & !dd.(dd: SCHAR => bv_9ireg_plus_d0(mem,iy,dd): BYTE) & byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)): BV16 & byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)): BV16 & byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)): BV16 & byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8)): BV16 & dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BV16);
(9|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & !(b1,b2,b3,b4,b5,b6).(b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT => update_flag_reg(b1,b2,b3,b4,b5,b6): {2|->id_reg_8}*BYTE) & !xx.(xx: (1..16)*{id_reg_8} +-> BYTE & dom(xx) = (1..16)*{id_reg_8} => rgs8<+xx: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+xx) = (1..16)*{id_reg_8}) & !(xx,xxr).(xx: (1..16)*{id_reg_8} & xxr: BYTE => rgs8<+{xx|->xxr}: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+{xx|->xxr}) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & not(xx = yy) => rgs8<+({xx|->xxr}\/{yy|->yyr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & not(xx = yy) & not(xx = zz) & not(yy = zz) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(yy = zz) & not(yy = vv) & not(zz = vv) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(zz = vv) & not(zz = ww) & not(vv = ww) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(vv = ww) & not(vv = aa) & not(ww = aa) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar,bb,bbr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & bb: (1..16)*{id_reg_8} & bbr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(xx = bb) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(yy = bb) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(zz = bb) & not(vv = ww) & not(vv = aa) & not(vv = bb) & not(ww = aa) & not(ww = bb) & not(aa = bb) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr})) = (1..16)*{id_reg_8}) & ran(bv_ireg_plus_d) = BV16 & !dd.(dd: SCHAR => bv_ireg_plus_d(ix,dd): BV16) & !dd.(dd: SCHAR => bv_ireg_plus_d(iy,dd): BV16) & ran(bv_9ireg_plus_d0) = BYTE & !dd.(dd: SCHAR => bv_9ireg_plus_d0(mem,ix,dd): BYTE) & !dd.(dd: SCHAR => bv_9ireg_plus_d0(mem,iy,dd): BYTE) & byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)): BV16 & byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)): BV16 & byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)): BV16 & byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8)): BV16 & dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BV16);
(10|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & !(b1,b2,b3,b4,b5,b6).(b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT => update_flag_reg(b1,b2,b3,b4,b5,b6): {2|->id_reg_8}*BYTE) & !xx.(xx: (1..16)*{id_reg_8} +-> BYTE & dom(xx) = (1..16)*{id_reg_8} => rgs8<+xx: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+xx) = (1..16)*{id_reg_8}) & !(xx,xxr).(xx: (1..16)*{id_reg_8} & xxr: BYTE => rgs8<+{xx|->xxr}: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+{xx|->xxr}) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & not(xx = yy) => rgs8<+({xx|->xxr}\/{yy|->yyr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & not(xx = yy) & not(xx = zz) & not(yy = zz) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(yy = zz) & not(yy = vv) & not(zz = vv) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(zz = vv) & not(zz = ww) & not(vv = ww) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(vv = ww) & not(vv = aa) & not(ww = aa) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar,bb,bbr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & bb: (1..16)*{id_reg_8} & bbr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(xx = bb) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(yy = bb) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(zz = bb) & not(vv = ww) & not(vv = aa) & not(vv = bb) & not(ww = aa) & not(ww = bb) & not(aa = bb) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr})) = (1..16)*{id_reg_8}) & ran(bv_ireg_plus_d) = BV16 & !dd.(dd: SCHAR => bv_ireg_plus_d(ix,dd): BV16) & !dd.(dd: SCHAR => bv_ireg_plus_d(iy,dd): BV16) & ran(bv_9ireg_plus_d0) = BYTE & !dd.(dd: SCHAR => bv_9ireg_plus_d0(mem,ix,dd): BYTE) & !dd.(dd: SCHAR => bv_9ireg_plus_d0(mem,iy,dd): BYTE) & byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)): BV16 & byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)): BV16 & byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)): BV16 & byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8)): BV16 & dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BV16);
(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & !(b1,b2,b3,b4,b5,b6).(b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT => update_flag_reg(b1,b2,b3,b4,b5,b6): {2|->id_reg_8}*BYTE) & !xx.(xx: (1..16)*{id_reg_8} +-> BYTE & dom(xx) = (1..16)*{id_reg_8} => rgs8<+xx: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+xx) = (1..16)*{id_reg_8}) & !(xx,xxr).(xx: (1..16)*{id_reg_8} & xxr: BYTE => rgs8<+{xx|->xxr}: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+{xx|->xxr}) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & not(xx = yy) => rgs8<+({xx|->xxr}\/{yy|->yyr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & not(xx = yy) & not(xx = zz) & not(yy = zz) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(yy = zz) & not(yy = vv) & not(zz = vv) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(zz = vv) & not(zz = ww) & not(vv = ww) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(vv = ww) & not(vv = aa) & not(ww = aa) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar,bb,bbr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & bb: (1..16)*{id_reg_8} & bbr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(xx = bb) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(yy = bb) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(zz = bb) & not(vv = ww) & not(vv = aa) & not(vv = bb) & not(ww = aa) & not(ww = bb) & not(aa = bb) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr})) = (1..16)*{id_reg_8}) & ran(bv_ireg_plus_d) = BV16 & !dd.(dd: SCHAR => bv_ireg_plus_d(ix,dd): BV16) & !dd.(dd: SCHAR => bv_ireg_plus_d(iy,dd): BV16) & ran(bv_9ireg_plus_d0) = BYTE & !dd.(dd: SCHAR => bv_9ireg_plus_d0(mem,ix,dd): BYTE) & !dd.(dd: SCHAR => bv_9ireg_plus_d0(mem,iy,dd): BYTE) & byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)): BV16 & byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)): BV16 & byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)): BV16 & byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8)): BV16 & dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BV16);
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & !(b1,b2,b3,b4,b5,b6).(b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT => update_flag_reg(b1,b2,b3,b4,b5,b6): {2|->id_reg_8}*BYTE) & !xx.(xx: (1..16)*{id_reg_8} +-> BYTE & dom(xx) = (1..16)*{id_reg_8} => rgs8<+xx: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+xx) = (1..16)*{id_reg_8}) & !(xx,xxr).(xx: (1..16)*{id_reg_8} & xxr: BYTE => rgs8<+{xx|->xxr}: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+{xx|->xxr}) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & not(xx = yy) => rgs8<+({xx|->xxr}\/{yy|->yyr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & not(xx = yy) & not(xx = zz) & not(yy = zz) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(yy = zz) & not(yy = vv) & not(zz = vv) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(zz = vv) & not(zz = ww) & not(vv = ww) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(vv = ww) & not(vv = aa) & not(ww = aa) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar,bb,bbr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & bb: (1..16)*{id_reg_8} & bbr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(xx = bb) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(yy = bb) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(zz = bb) & not(vv = ww) & not(vv = aa) & not(vv = bb) & not(ww = aa) & not(ww = bb) & not(aa = bb) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr})) = (1..16)*{id_reg_8}) & ran(bv_ireg_plus_d) = BV16 & !dd.(dd: SCHAR => bv_ireg_plus_d(ix,dd): BV16) & !dd.(dd: SCHAR => bv_ireg_plus_d(iy,dd): BV16) & ran(bv_9ireg_plus_d0) = BYTE & !dd.(dd: SCHAR => bv_9ireg_plus_d0(mem,ix,dd): BYTE) & !dd.(dd: SCHAR => bv_9ireg_plus_d0(mem,iy,dd): BYTE) & byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)): BV16 & byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)): BV16 & byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)): BV16 & byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8)): BV16 & dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BV16);
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & !(b1,b2,b3,b4,b5,b6).(b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT => update_flag_reg(b1,b2,b3,b4,b5,b6): {2|->id_reg_8}*BYTE) & !xx.(xx: (1..16)*{id_reg_8} +-> BYTE & dom(xx) = (1..16)*{id_reg_8} => rgs8<+xx: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+xx) = (1..16)*{id_reg_8}) & !(xx,xxr).(xx: (1..16)*{id_reg_8} & xxr: BYTE => rgs8<+{xx|->xxr}: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+{xx|->xxr}) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & not(xx = yy) => rgs8<+({xx|->xxr}\/{yy|->yyr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & not(xx = yy) & not(xx = zz) & not(yy = zz) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(yy = zz) & not(yy = vv) & not(zz = vv) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(zz = vv) & not(zz = ww) & not(vv = ww) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(vv = ww) & not(vv = aa) & not(ww = aa) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar,bb,bbr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & bb: (1..16)*{id_reg_8} & bbr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(xx = bb) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(yy = bb) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(zz = bb) & not(vv = ww) & not(vv = aa) & not(vv = bb) & not(ww = aa) & not(ww = bb) & not(aa = bb) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr})) = (1..16)*{id_reg_8}) & ran(bv_ireg_plus_d) = BV16 & !dd.(dd: SCHAR => bv_ireg_plus_d(ix,dd): BV16) & !dd.(dd: SCHAR => bv_ireg_plus_d(iy,dd): BV16) & ran(bv_9ireg_plus_d0) = BYTE & !dd.(dd: SCHAR => bv_9ireg_plus_d0(mem,ix,dd): BYTE) & !dd.(dd: SCHAR => bv_9ireg_plus_d0(mem,iy,dd): BYTE) & byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)): BV16 & byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)): BV16 & byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)): BV16 & byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8)): BV16 & dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BV16);
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & !(b1,b2,b3,b4,b5,b6).(b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT => update_flag_reg(b1,b2,b3,b4,b5,b6): {2|->id_reg_8}*BYTE) & !xx.(xx: (1..16)*{id_reg_8} +-> BYTE & dom(xx) = (1..16)*{id_reg_8} => rgs8<+xx: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+xx) = (1..16)*{id_reg_8}) & !(xx,xxr).(xx: (1..16)*{id_reg_8} & xxr: BYTE => rgs8<+{xx|->xxr}: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+{xx|->xxr}) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & not(xx = yy) => rgs8<+({xx|->xxr}\/{yy|->yyr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & not(xx = yy) & not(xx = zz) & not(yy = zz) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(yy = zz) & not(yy = vv) & not(zz = vv) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(zz = vv) & not(zz = ww) & not(vv = ww) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(vv = ww) & not(vv = aa) & not(ww = aa) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar,bb,bbr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & bb: (1..16)*{id_reg_8} & bbr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(xx = bb) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(yy = bb) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(zz = bb) & not(vv = ww) & not(vv = aa) & not(vv = bb) & not(ww = aa) & not(ww = bb) & not(aa = bb) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr})) = (1..16)*{id_reg_8}) & ran(bv_ireg_plus_d) = BV16 & !dd.(dd: SCHAR => bv_ireg_plus_d(ix,dd): BV16) & !dd.(dd: SCHAR => bv_ireg_plus_d(iy,dd): BV16) & ran(bv_9ireg_plus_d0) = BYTE & !dd.(dd: SCHAR => bv_9ireg_plus_d0(mem,ix,dd): BYTE) & !dd.(dd: SCHAR => bv_9ireg_plus_d0(mem,iy,dd): BYTE) & byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)): BV16 & byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)): BV16 & byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)): BV16 & byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8)): BV16 & dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BV16);
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & !(b1,b2,b3,b4,b5,b6).(b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT => update_flag_reg(b1,b2,b3,b4,b5,b6): {2|->id_reg_8}*BYTE) & !xx.(xx: (1..16)*{id_reg_8} +-> BYTE & dom(xx) = (1..16)*{id_reg_8} => rgs8<+xx: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+xx) = (1..16)*{id_reg_8}) & !(xx,xxr).(xx: (1..16)*{id_reg_8} & xxr: BYTE => rgs8<+{xx|->xxr}: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+{xx|->xxr}) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & not(xx = yy) => rgs8<+({xx|->xxr}\/{yy|->yyr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & not(xx = yy) & not(xx = zz) & not(yy = zz) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(yy = zz) & not(yy = vv) & not(zz = vv) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(zz = vv) & not(zz = ww) & not(vv = ww) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(vv = ww) & not(vv = aa) & not(ww = aa) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar,bb,bbr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & bb: (1..16)*{id_reg_8} & bbr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(xx = bb) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(yy = bb) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(zz = bb) & not(vv = ww) & not(vv = aa) & not(vv = bb) & not(ww = aa) & not(ww = bb) & not(aa = bb) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr})) = (1..16)*{id_reg_8}) & ran(bv_ireg_plus_d) = BV16 & !dd.(dd: SCHAR => bv_ireg_plus_d(ix,dd): BV16) & !dd.(dd: SCHAR => bv_ireg_plus_d(iy,dd): BV16) & ran(bv_9ireg_plus_d0) = BYTE & !dd.(dd: SCHAR => bv_9ireg_plus_d0(mem,ix,dd): BYTE) & !dd.(dd: SCHAR => bv_9ireg_plus_d0(mem,iy,dd): BYTE) & byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)): BV16 & byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)): BV16 & byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)): BV16 & byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8)): BV16 & dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BV16);
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & !(b1,b2,b3,b4,b5,b6).(b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT => update_flag_reg(b1,b2,b3,b4,b5,b6): {2|->id_reg_8}*BYTE) & !xx.(xx: (1..16)*{id_reg_8} +-> BYTE & dom(xx) = (1..16)*{id_reg_8} => rgs8<+xx: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+xx) = (1..16)*{id_reg_8}) & !(xx,xxr).(xx: (1..16)*{id_reg_8} & xxr: BYTE => rgs8<+{xx|->xxr}: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+{xx|->xxr}) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & not(xx = yy) => rgs8<+({xx|->xxr}\/{yy|->yyr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & not(xx = yy) & not(xx = zz) & not(yy = zz) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(yy = zz) & not(yy = vv) & not(zz = vv) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(zz = vv) & not(zz = ww) & not(vv = ww) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(vv = ww) & not(vv = aa) & not(ww = aa) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar,bb,bbr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & bb: (1..16)*{id_reg_8} & bbr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(xx = bb) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(yy = bb) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(zz = bb) & not(vv = ww) & not(vv = aa) & not(vv = bb) & not(ww = aa) & not(ww = bb) & not(aa = bb) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr})) = (1..16)*{id_reg_8}) & ran(bv_ireg_plus_d) = BV16 & !dd.(dd: SCHAR => bv_ireg_plus_d(ix,dd): BV16) & !dd.(dd: SCHAR => bv_ireg_plus_d(iy,dd): BV16) & ran(bv_9ireg_plus_d0) = BYTE & !dd.(dd: SCHAR => bv_9ireg_plus_d0(mem,ix,dd): BYTE) & !dd.(dd: SCHAR => bv_9ireg_plus_d0(mem,iy,dd): BYTE) & byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)): BV16 & byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)): BV16 & byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)): BV16 & byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8)): BV16 & dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BV16);
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & !(b1,b2,b3,b4,b5,b6).(b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT => update_flag_reg(b1,b2,b3,b4,b5,b6): {2|->id_reg_8}*BYTE) & !xx.(xx: (1..16)*{id_reg_8} +-> BYTE & dom(xx) = (1..16)*{id_reg_8} => rgs8<+xx: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+xx) = (1..16)*{id_reg_8}) & !(xx,xxr).(xx: (1..16)*{id_reg_8} & xxr: BYTE => rgs8<+{xx|->xxr}: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+{xx|->xxr}) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & not(xx = yy) => rgs8<+({xx|->xxr}\/{yy|->yyr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & not(xx = yy) & not(xx = zz) & not(yy = zz) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(yy = zz) & not(yy = vv) & not(zz = vv) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(zz = vv) & not(zz = ww) & not(vv = ww) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(vv = ww) & not(vv = aa) & not(ww = aa) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar,bb,bbr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & bb: (1..16)*{id_reg_8} & bbr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(xx = bb) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(yy = bb) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(zz = bb) & not(vv = ww) & not(vv = aa) & not(vv = bb) & not(ww = aa) & not(ww = bb) & not(aa = bb) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr})) = (1..16)*{id_reg_8}) & ran(bv_ireg_plus_d) = BV16 & !dd.(dd: SCHAR => bv_ireg_plus_d(ix,dd): BV16) & !dd.(dd: SCHAR => bv_ireg_plus_d(iy,dd): BV16) & ran(bv_9ireg_plus_d0) = BYTE & !dd.(dd: SCHAR => bv_9ireg_plus_d0(mem,ix,dd): BYTE) & !dd.(dd: SCHAR => bv_9ireg_plus_d0(mem,iy,dd): BYTE) & byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)): BV16 & byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)): BV16 & byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)): BV16 & byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8)): BV16 & dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BV16 & dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BV16);
(0,bv16_ushort(sp),1: dom(add16USHORT));
("`Local hypotheses'" & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & !(b1,b2,b3,b4,b5,b6).(b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT => update_flag_reg(b1,b2,b3,b4,b5,b6): {2|->id_reg_8}*BYTE) & !xx.(xx: (1..16)*{id_reg_8} +-> BYTE & dom(xx) = (1..16)*{id_reg_8} => rgs8<+xx: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+xx) = (1..16)*{id_reg_8}) & !(xx,xxr).(xx: (1..16)*{id_reg_8} & xxr: BYTE => rgs8<+{xx|->xxr}: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+{xx|->xxr}) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & not(xx = yy) => rgs8<+({xx|->xxr}\/{yy|->yyr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & not(xx = yy) & not(xx = zz) & not(yy = zz) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(yy = zz) & not(yy = vv) & not(zz = vv) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(zz = vv) & not(zz = ww) & not(vv = ww) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(vv = ww) & not(vv = aa) & not(ww = aa) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar,bb,bbr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & bb: (1..16)*{id_reg_8} & bbr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(xx = bb) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(yy = bb) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(zz = bb) & not(vv = ww) & not(vv = aa) & not(vv = bb) & not(ww = aa) & not(ww = bb) & not(aa = bb) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr})) = (1..16)*{id_reg_8}) & ran(bv_ireg_plus_d) = BV16 & !dd.(dd: SCHAR => bv_ireg_plus_d(ix,dd): BV16) & !dd.(dd: SCHAR => bv_ireg_plus_d(iy,dd): BV16) & ran(bv_9ireg_plus_d0) = BYTE & !dd.(dd: SCHAR => bv_9ireg_plus_d0(mem,ix,dd): BYTE) & !dd.(dd: SCHAR => bv_9ireg_plus_d0(mem,iy,dd): BYTE) & byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)): BV16 & byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)): BV16 & byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)): BV16 & byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8)): BV16 & dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BV16 & dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BV16);
(add16USHORT(0,bv16_ushort(sp),1): dom(ushort_bv16));
("`Local hypotheses'" & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & !(b1,b2,b3,b4,b5,b6).(b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT => update_flag_reg(b1,b2,b3,b4,b5,b6): {2|->id_reg_8}*BYTE) & !xx.(xx: (1..16)*{id_reg_8} +-> BYTE & dom(xx) = (1..16)*{id_reg_8} => rgs8<+xx: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+xx) = (1..16)*{id_reg_8}) & !(xx,xxr).(xx: (1..16)*{id_reg_8} & xxr: BYTE => rgs8<+{xx|->xxr}: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+{xx|->xxr}) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & not(xx = yy) => rgs8<+({xx|->xxr}\/{yy|->yyr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & not(xx = yy) & not(xx = zz) & not(yy = zz) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(yy = zz) & not(yy = vv) & not(zz = vv) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(zz = vv) & not(zz = ww) & not(vv = ww) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(vv = ww) & not(vv = aa) & not(ww = aa) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar,bb,bbr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & bb: (1..16)*{id_reg_8} & bbr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(xx = bb) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(yy = bb) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(zz = bb) & not(vv = ww) & not(vv = aa) & not(vv = bb) & not(ww = aa) & not(ww = bb) & not(aa = bb) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr})) = (1..16)*{id_reg_8}) & ran(bv_ireg_plus_d) = BV16 & !dd.(dd: SCHAR => bv_ireg_plus_d(ix,dd): BV16) & !dd.(dd: SCHAR => bv_ireg_plus_d(iy,dd): BV16) & ran(bv_9ireg_plus_d0) = BYTE & !dd.(dd: SCHAR => bv_9ireg_plus_d0(mem,ix,dd): BYTE) & !dd.(dd: SCHAR => bv_9ireg_plus_d0(mem,iy,dd): BYTE) & byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)): BV16 & byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)): BV16 & byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)): BV16 & byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8)): BV16 & dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BV16 & dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BV16 & ushort_bv16(add16USHORT(0,bv16_ushort(sp),1)): BV16);
(0,bv16_ushort(sp),2: dom(add16USHORT));
("`Local hypotheses'" & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & !(b1,b2,b3,b4,b5,b6).(b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT => update_flag_reg(b1,b2,b3,b4,b5,b6): {2|->id_reg_8}*BYTE) & !xx.(xx: (1..16)*{id_reg_8} +-> BYTE & dom(xx) = (1..16)*{id_reg_8} => rgs8<+xx: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+xx) = (1..16)*{id_reg_8}) & !(xx,xxr).(xx: (1..16)*{id_reg_8} & xxr: BYTE => rgs8<+{xx|->xxr}: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+{xx|->xxr}) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & not(xx = yy) => rgs8<+({xx|->xxr}\/{yy|->yyr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & not(xx = yy) & not(xx = zz) & not(yy = zz) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(yy = zz) & not(yy = vv) & not(zz = vv) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(zz = vv) & not(zz = ww) & not(vv = ww) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(vv = ww) & not(vv = aa) & not(ww = aa) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar,bb,bbr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & bb: (1..16)*{id_reg_8} & bbr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(xx = bb) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(yy = bb) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(zz = bb) & not(vv = ww) & not(vv = aa) & not(vv = bb) & not(ww = aa) & not(ww = bb) & not(aa = bb) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr})) = (1..16)*{id_reg_8}) & ran(bv_ireg_plus_d) = BV16 & !dd.(dd: SCHAR => bv_ireg_plus_d(ix,dd): BV16) & !dd.(dd: SCHAR => bv_ireg_plus_d(iy,dd): BV16) & ran(bv_9ireg_plus_d0) = BYTE & !dd.(dd: SCHAR => bv_9ireg_plus_d0(mem,ix,dd): BYTE) & !dd.(dd: SCHAR => bv_9ireg_plus_d0(mem,iy,dd): BYTE) & byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)): BV16 & byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)): BV16 & byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)): BV16 & byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8)): BV16 & dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BV16 & dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BV16 & ushort_bv16(add16USHORT(0,bv16_ushort(sp),1)): BV16);
(add16USHORT(0,bv16_ushort(sp),2): dom(ushort_bv16));
("`Local hypotheses'" & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & !(b1,b2,b3,b4,b5,b6).(b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT => update_flag_reg(b1,b2,b3,b4,b5,b6): {2|->id_reg_8}*BYTE) & !xx.(xx: (1..16)*{id_reg_8} +-> BYTE & dom(xx) = (1..16)*{id_reg_8} => rgs8<+xx: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+xx) = (1..16)*{id_reg_8}) & !(xx,xxr).(xx: (1..16)*{id_reg_8} & xxr: BYTE => rgs8<+{xx|->xxr}: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+{xx|->xxr}) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & not(xx = yy) => rgs8<+({xx|->xxr}\/{yy|->yyr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & not(xx = yy) & not(xx = zz) & not(yy = zz) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(yy = zz) & not(yy = vv) & not(zz = vv) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(zz = vv) & not(zz = ww) & not(vv = ww) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(vv = ww) & not(vv = aa) & not(ww = aa) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar,bb,bbr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & bb: (1..16)*{id_reg_8} & bbr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(xx = bb) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(yy = bb) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(zz = bb) & not(vv = ww) & not(vv = aa) & not(vv = bb) & not(ww = aa) & not(ww = bb) & not(aa = bb) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr})) = (1..16)*{id_reg_8}) & ran(bv_ireg_plus_d) = BV16 & !dd.(dd: SCHAR => bv_ireg_plus_d(ix,dd): BV16) & !dd.(dd: SCHAR => bv_ireg_plus_d(iy,dd): BV16) & ran(bv_9ireg_plus_d0) = BYTE & !dd.(dd: SCHAR => bv_9ireg_plus_d0(mem,ix,dd): BYTE) & !dd.(dd: SCHAR => bv_9ireg_plus_d0(mem,iy,dd): BYTE) & byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)): BV16 & byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)): BV16 & byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)): BV16 & byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8)): BV16 & dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BV16 & dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BV16 & ushort_bv16(add16USHORT(0,bv16_ushort(sp),1)): BV16 & ushort_bv16(add16USHORT(0,bv16_ushort(sp),2)): BV16);
(0,bv16_ushort(sp),1: dom(sub16USHORT));
("`Local hypotheses'" & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & !(b1,b2,b3,b4,b5,b6).(b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT => update_flag_reg(b1,b2,b3,b4,b5,b6): {2|->id_reg_8}*BYTE) & !xx.(xx: (1..16)*{id_reg_8} +-> BYTE & dom(xx) = (1..16)*{id_reg_8} => rgs8<+xx: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+xx) = (1..16)*{id_reg_8}) & !(xx,xxr).(xx: (1..16)*{id_reg_8} & xxr: BYTE => rgs8<+{xx|->xxr}: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+{xx|->xxr}) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & not(xx = yy) => rgs8<+({xx|->xxr}\/{yy|->yyr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & not(xx = yy) & not(xx = zz) & not(yy = zz) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(yy = zz) & not(yy = vv) & not(zz = vv) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(zz = vv) & not(zz = ww) & not(vv = ww) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(vv = ww) & not(vv = aa) & not(ww = aa) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar,bb,bbr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & bb: (1..16)*{id_reg_8} & bbr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(xx = bb) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(yy = bb) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(zz = bb) & not(vv = ww) & not(vv = aa) & not(vv = bb) & not(ww = aa) & not(ww = bb) & not(aa = bb) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr})) = (1..16)*{id_reg_8}) & ran(bv_ireg_plus_d) = BV16 & !dd.(dd: SCHAR => bv_ireg_plus_d(ix,dd): BV16) & !dd.(dd: SCHAR => bv_ireg_plus_d(iy,dd): BV16) & ran(bv_9ireg_plus_d0) = BYTE & !dd.(dd: SCHAR => bv_9ireg_plus_d0(mem,ix,dd): BYTE) & !dd.(dd: SCHAR => bv_9ireg_plus_d0(mem,iy,dd): BYTE) & byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)): BV16 & byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)): BV16 & byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)): BV16 & byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8)): BV16 & dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BV16 & dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BV16 & ushort_bv16(add16USHORT(0,bv16_ushort(sp),1)): BV16 & ushort_bv16(add16USHORT(0,bv16_ushort(sp),2)): BV16);
(sub16USHORT(0,bv16_ushort(sp),1): dom(ushort_bv16));
("`Local hypotheses'" & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & !(b1,b2,b3,b4,b5,b6).(b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT => update_flag_reg(b1,b2,b3,b4,b5,b6): {2|->id_reg_8}*BYTE) & !xx.(xx: (1..16)*{id_reg_8} +-> BYTE & dom(xx) = (1..16)*{id_reg_8} => rgs8<+xx: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+xx) = (1..16)*{id_reg_8}) & !(xx,xxr).(xx: (1..16)*{id_reg_8} & xxr: BYTE => rgs8<+{xx|->xxr}: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+{xx|->xxr}) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & not(xx = yy) => rgs8<+({xx|->xxr}\/{yy|->yyr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & not(xx = yy) & not(xx = zz) & not(yy = zz) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(yy = zz) & not(yy = vv) & not(zz = vv) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(zz = vv) & not(zz = ww) & not(vv = ww) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(vv = ww) & not(vv = aa) & not(ww = aa) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar,bb,bbr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & bb: (1..16)*{id_reg_8} & bbr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(xx = bb) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(yy = bb) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(zz = bb) & not(vv = ww) & not(vv = aa) & not(vv = bb) & not(ww = aa) & not(ww = bb) & not(aa = bb) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr})) = (1..16)*{id_reg_8}) & ran(bv_ireg_plus_d) = BV16 & !dd.(dd: SCHAR => bv_ireg_plus_d(ix,dd): BV16) & !dd.(dd: SCHAR => bv_ireg_plus_d(iy,dd): BV16) & ran(bv_9ireg_plus_d0) = BYTE & !dd.(dd: SCHAR => bv_9ireg_plus_d0(mem,ix,dd): BYTE) & !dd.(dd: SCHAR => bv_9ireg_plus_d0(mem,iy,dd): BYTE) & byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)): BV16 & byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)): BV16 & byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)): BV16 & byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8)): BV16 & dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BV16 & dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BV16 & ushort_bv16(add16USHORT(0,bv16_ushort(sp),1)): BV16 & ushort_bv16(add16USHORT(0,bv16_ushort(sp),2)): BV16 & ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1)): BV16);
(0,bv16_ushort(sp),2: dom(sub16USHORT));
("`Local hypotheses'" & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & !(b1,b2,b3,b4,b5,b6).(b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT => update_flag_reg(b1,b2,b3,b4,b5,b6): {2|->id_reg_8}*BYTE) & !xx.(xx: (1..16)*{id_reg_8} +-> BYTE & dom(xx) = (1..16)*{id_reg_8} => rgs8<+xx: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+xx) = (1..16)*{id_reg_8}) & !(xx,xxr).(xx: (1..16)*{id_reg_8} & xxr: BYTE => rgs8<+{xx|->xxr}: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+{xx|->xxr}) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & not(xx = yy) => rgs8<+({xx|->xxr}\/{yy|->yyr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & not(xx = yy) & not(xx = zz) & not(yy = zz) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(yy = zz) & not(yy = vv) & not(zz = vv) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(zz = vv) & not(zz = ww) & not(vv = ww) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(vv = ww) & not(vv = aa) & not(ww = aa) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar,bb,bbr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & bb: (1..16)*{id_reg_8} & bbr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(xx = bb) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(yy = bb) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(zz = bb) & not(vv = ww) & not(vv = aa) & not(vv = bb) & not(ww = aa) & not(ww = bb) & not(aa = bb) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr})) = (1..16)*{id_reg_8}) & ran(bv_ireg_plus_d) = BV16 & !dd.(dd: SCHAR => bv_ireg_plus_d(ix,dd): BV16) & !dd.(dd: SCHAR => bv_ireg_plus_d(iy,dd): BV16) & ran(bv_9ireg_plus_d0) = BYTE & !dd.(dd: SCHAR => bv_9ireg_plus_d0(mem,ix,dd): BYTE) & !dd.(dd: SCHAR => bv_9ireg_plus_d0(mem,iy,dd): BYTE) & byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)): BV16 & byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)): BV16 & byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)): BV16 & byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8)): BV16 & dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BV16 & dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BV16 & ushort_bv16(add16USHORT(0,bv16_ushort(sp),1)): BV16 & ushort_bv16(add16USHORT(0,bv16_ushort(sp),2)): BV16 & ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1)): BV16);
(sub16USHORT(0,bv16_ushort(sp),2): dom(ushort_bv16));
("`Local hypotheses'" & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & !(b1,b2,b3,b4,b5,b6).(b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT => update_flag_reg(b1,b2,b3,b4,b5,b6): {2|->id_reg_8}*BYTE) & !xx.(xx: (1..16)*{id_reg_8} +-> BYTE & dom(xx) = (1..16)*{id_reg_8} => rgs8<+xx: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+xx) = (1..16)*{id_reg_8}) & !(xx,xxr).(xx: (1..16)*{id_reg_8} & xxr: BYTE => rgs8<+{xx|->xxr}: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+{xx|->xxr}) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & not(xx = yy) => rgs8<+({xx|->xxr}\/{yy|->yyr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & not(xx = yy) & not(xx = zz) & not(yy = zz) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(yy = zz) & not(yy = vv) & not(zz = vv) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(zz = vv) & not(zz = ww) & not(vv = ww) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(vv = ww) & not(vv = aa) & not(ww = aa) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar,bb,bbr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & bb: (1..16)*{id_reg_8} & bbr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(xx = bb) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(yy = bb) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(zz = bb) & not(vv = ww) & not(vv = aa) & not(vv = bb) & not(ww = aa) & not(ww = bb) & not(aa = bb) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr})) = (1..16)*{id_reg_8}) & ran(bv_ireg_plus_d) = BV16 & !dd.(dd: SCHAR => bv_ireg_plus_d(ix,dd): BV16) & !dd.(dd: SCHAR => bv_ireg_plus_d(iy,dd): BV16) & ran(bv_9ireg_plus_d0) = BYTE & !dd.(dd: SCHAR => bv_9ireg_plus_d0(mem,ix,dd): BYTE) & !dd.(dd: SCHAR => bv_9ireg_plus_d0(mem,iy,dd): BYTE) & byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)): BV16 & byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)): BV16 & byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)): BV16 & byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8)): BV16 & dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BV16 & dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BV16 & ushort_bv16(add16USHORT(0,bv16_ushort(sp),1)): BV16 & ushort_bv16(add16USHORT(0,bv16_ushort(sp),2)): BV16 & ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1)): BV16 & ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2)): BV16);
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & !(b1,b2,b3,b4,b5,b6).(b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT => update_flag_reg(b1,b2,b3,b4,b5,b6): {2|->id_reg_8}*BYTE) & !xx.(xx: (1..16)*{id_reg_8} +-> BYTE & dom(xx) = (1..16)*{id_reg_8} => rgs8<+xx: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+xx) = (1..16)*{id_reg_8}) & !(xx,xxr).(xx: (1..16)*{id_reg_8} & xxr: BYTE => rgs8<+{xx|->xxr}: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+{xx|->xxr}) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & not(xx = yy) => rgs8<+({xx|->xxr}\/{yy|->yyr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & not(xx = yy) & not(xx = zz) & not(yy = zz) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(yy = zz) & not(yy = vv) & not(zz = vv) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(zz = vv) & not(zz = ww) & not(vv = ww) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(vv = ww) & not(vv = aa) & not(ww = aa) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar,bb,bbr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & bb: (1..16)*{id_reg_8} & bbr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(xx = bb) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(yy = bb) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(zz = bb) & not(vv = ww) & not(vv = aa) & not(vv = bb) & not(ww = aa) & not(ww = bb) & not(aa = bb) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr})) = (1..16)*{id_reg_8}) & ran(bv_ireg_plus_d) = BV16 & !dd.(dd: SCHAR => bv_ireg_plus_d(ix,dd): BV16) & !dd.(dd: SCHAR => bv_ireg_plus_d(iy,dd): BV16) & ran(bv_9ireg_plus_d0) = BYTE & !dd.(dd: SCHAR => bv_9ireg_plus_d0(mem,ix,dd): BYTE) & !dd.(dd: SCHAR => bv_9ireg_plus_d0(mem,iy,dd): BYTE) & byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)): BV16 & byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)): BV16 & byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)): BV16 & byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8)): BV16 & dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BV16 & dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BV16 & ushort_bv16(add16USHORT(0,bv16_ushort(sp),1)): BV16 & ushort_bv16(add16USHORT(0,bv16_ushort(sp),2)): BV16 & ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1)): BV16 & ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2)): BV16);
(rgs8(2|->id_reg_8),7: dom(bitget));
("`Local hypotheses'" & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & !(b1,b2,b3,b4,b5,b6).(b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT => update_flag_reg(b1,b2,b3,b4,b5,b6): {2|->id_reg_8}*BYTE) & !xx.(xx: (1..16)*{id_reg_8} +-> BYTE & dom(xx) = (1..16)*{id_reg_8} => rgs8<+xx: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+xx) = (1..16)*{id_reg_8}) & !(xx,xxr).(xx: (1..16)*{id_reg_8} & xxr: BYTE => rgs8<+{xx|->xxr}: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+{xx|->xxr}) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & not(xx = yy) => rgs8<+({xx|->xxr}\/{yy|->yyr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & not(xx = yy) & not(xx = zz) & not(yy = zz) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(yy = zz) & not(yy = vv) & not(zz = vv) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(zz = vv) & not(zz = ww) & not(vv = ww) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(vv = ww) & not(vv = aa) & not(ww = aa) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar,bb,bbr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & bb: (1..16)*{id_reg_8} & bbr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(xx = bb) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(yy = bb) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(zz = bb) & not(vv = ww) & not(vv = aa) & not(vv = bb) & not(ww = aa) & not(ww = bb) & not(aa = bb) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr})) = (1..16)*{id_reg_8}) & ran(bv_ireg_plus_d) = BV16 & !dd.(dd: SCHAR => bv_ireg_plus_d(ix,dd): BV16) & !dd.(dd: SCHAR => bv_ireg_plus_d(iy,dd): BV16) & ran(bv_9ireg_plus_d0) = BYTE & !dd.(dd: SCHAR => bv_9ireg_plus_d0(mem,ix,dd): BYTE) & !dd.(dd: SCHAR => bv_9ireg_plus_d0(mem,iy,dd): BYTE) & byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)): BV16 & byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)): BV16 & byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)): BV16 & byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8)): BV16 & dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BV16 & dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BV16 & ushort_bv16(add16USHORT(0,bv16_ushort(sp),1)): BV16 & ushort_bv16(add16USHORT(0,bv16_ushort(sp),2)): BV16 & ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1)): BV16 & ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2)): BV16 & bitget(rgs8(2|->id_reg_8),7): BIT);
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & !(b1,b2,b3,b4,b5,b6).(b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT => update_flag_reg(b1,b2,b3,b4,b5,b6): {2|->id_reg_8}*BYTE) & !xx.(xx: (1..16)*{id_reg_8} +-> BYTE & dom(xx) = (1..16)*{id_reg_8} => rgs8<+xx: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+xx) = (1..16)*{id_reg_8}) & !(xx,xxr).(xx: (1..16)*{id_reg_8} & xxr: BYTE => rgs8<+{xx|->xxr}: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+{xx|->xxr}) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & not(xx = yy) => rgs8<+({xx|->xxr}\/{yy|->yyr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & not(xx = yy) & not(xx = zz) & not(yy = zz) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(yy = zz) & not(yy = vv) & not(zz = vv) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(zz = vv) & not(zz = ww) & not(vv = ww) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(vv = ww) & not(vv = aa) & not(ww = aa) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar,bb,bbr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & bb: (1..16)*{id_reg_8} & bbr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(xx = bb) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(yy = bb) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(zz = bb) & not(vv = ww) & not(vv = aa) & not(vv = bb) & not(ww = aa) & not(ww = bb) & not(aa = bb) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr})) = (1..16)*{id_reg_8}) & ran(bv_ireg_plus_d) = BV16 & !dd.(dd: SCHAR => bv_ireg_plus_d(ix,dd): BV16) & !dd.(dd: SCHAR => bv_ireg_plus_d(iy,dd): BV16) & ran(bv_9ireg_plus_d0) = BYTE & !dd.(dd: SCHAR => bv_9ireg_plus_d0(mem,ix,dd): BYTE) & !dd.(dd: SCHAR => bv_9ireg_plus_d0(mem,iy,dd): BYTE) & byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)): BV16 & byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)): BV16 & byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)): BV16 & byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8)): BV16 & dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BV16 & dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BV16 & ushort_bv16(add16USHORT(0,bv16_ushort(sp),1)): BV16 & ushort_bv16(add16USHORT(0,bv16_ushort(sp),2)): BV16 & ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1)): BV16 & ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2)): BV16 & bitget(rgs8(2|->id_reg_8),7): BIT);
(rgs8(2|->id_reg_8),6: dom(bitget));
("`Local hypotheses'" & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & !(b1,b2,b3,b4,b5,b6).(b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT => update_flag_reg(b1,b2,b3,b4,b5,b6): {2|->id_reg_8}*BYTE) & !xx.(xx: (1..16)*{id_reg_8} +-> BYTE & dom(xx) = (1..16)*{id_reg_8} => rgs8<+xx: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+xx) = (1..16)*{id_reg_8}) & !(xx,xxr).(xx: (1..16)*{id_reg_8} & xxr: BYTE => rgs8<+{xx|->xxr}: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+{xx|->xxr}) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & not(xx = yy) => rgs8<+({xx|->xxr}\/{yy|->yyr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & not(xx = yy) & not(xx = zz) & not(yy = zz) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(yy = zz) & not(yy = vv) & not(zz = vv) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(zz = vv) & not(zz = ww) & not(vv = ww) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(vv = ww) & not(vv = aa) & not(ww = aa) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar,bb,bbr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & bb: (1..16)*{id_reg_8} & bbr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(xx = bb) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(yy = bb) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(zz = bb) & not(vv = ww) & not(vv = aa) & not(vv = bb) & not(ww = aa) & not(ww = bb) & not(aa = bb) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr})) = (1..16)*{id_reg_8}) & ran(bv_ireg_plus_d) = BV16 & !dd.(dd: SCHAR => bv_ireg_plus_d(ix,dd): BV16) & !dd.(dd: SCHAR => bv_ireg_plus_d(iy,dd): BV16) & ran(bv_9ireg_plus_d0) = BYTE & !dd.(dd: SCHAR => bv_9ireg_plus_d0(mem,ix,dd): BYTE) & !dd.(dd: SCHAR => bv_9ireg_plus_d0(mem,iy,dd): BYTE) & byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)): BV16 & byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)): BV16 & byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)): BV16 & byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8)): BV16 & dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BV16 & dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BV16 & ushort_bv16(add16USHORT(0,bv16_ushort(sp),1)): BV16 & ushort_bv16(add16USHORT(0,bv16_ushort(sp),2)): BV16 & ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1)): BV16 & ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2)): BV16 & bitget(rgs8(2|->id_reg_8),7): BIT & bitget(rgs8(2|->id_reg_8),6): BIT);
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & !(b1,b2,b3,b4,b5,b6).(b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT => update_flag_reg(b1,b2,b3,b4,b5,b6): {2|->id_reg_8}*BYTE) & !xx.(xx: (1..16)*{id_reg_8} +-> BYTE & dom(xx) = (1..16)*{id_reg_8} => rgs8<+xx: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+xx) = (1..16)*{id_reg_8}) & !(xx,xxr).(xx: (1..16)*{id_reg_8} & xxr: BYTE => rgs8<+{xx|->xxr}: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+{xx|->xxr}) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & not(xx = yy) => rgs8<+({xx|->xxr}\/{yy|->yyr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & not(xx = yy) & not(xx = zz) & not(yy = zz) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(yy = zz) & not(yy = vv) & not(zz = vv) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(zz = vv) & not(zz = ww) & not(vv = ww) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(vv = ww) & not(vv = aa) & not(ww = aa) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar,bb,bbr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & bb: (1..16)*{id_reg_8} & bbr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(xx = bb) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(yy = bb) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(zz = bb) & not(vv = ww) & not(vv = aa) & not(vv = bb) & not(ww = aa) & not(ww = bb) & not(aa = bb) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr})) = (1..16)*{id_reg_8}) & ran(bv_ireg_plus_d) = BV16 & !dd.(dd: SCHAR => bv_ireg_plus_d(ix,dd): BV16) & !dd.(dd: SCHAR => bv_ireg_plus_d(iy,dd): BV16) & ran(bv_9ireg_plus_d0) = BYTE & !dd.(dd: SCHAR => bv_9ireg_plus_d0(mem,ix,dd): BYTE) & !dd.(dd: SCHAR => bv_9ireg_plus_d0(mem,iy,dd): BYTE) & byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)): BV16 & byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)): BV16 & byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)): BV16 & byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8)): BV16 & dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BV16 & dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BV16 & ushort_bv16(add16USHORT(0,bv16_ushort(sp),1)): BV16 & ushort_bv16(add16USHORT(0,bv16_ushort(sp),2)): BV16 & ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1)): BV16 & ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2)): BV16 & bitget(rgs8(2|->id_reg_8),7): BIT & bitget(rgs8(2|->id_reg_8),6): BIT);
(rgs8(2|->id_reg_8),5: dom(bitget));
("`Local hypotheses'" & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & !(b1,b2,b3,b4,b5,b6).(b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT => update_flag_reg(b1,b2,b3,b4,b5,b6): {2|->id_reg_8}*BYTE) & !xx.(xx: (1..16)*{id_reg_8} +-> BYTE & dom(xx) = (1..16)*{id_reg_8} => rgs8<+xx: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+xx) = (1..16)*{id_reg_8}) & !(xx,xxr).(xx: (1..16)*{id_reg_8} & xxr: BYTE => rgs8<+{xx|->xxr}: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+{xx|->xxr}) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & not(xx = yy) => rgs8<+({xx|->xxr}\/{yy|->yyr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & not(xx = yy) & not(xx = zz) & not(yy = zz) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(yy = zz) & not(yy = vv) & not(zz = vv) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(zz = vv) & not(zz = ww) & not(vv = ww) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(vv = ww) & not(vv = aa) & not(ww = aa) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar,bb,bbr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & bb: (1..16)*{id_reg_8} & bbr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(xx = bb) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(yy = bb) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(zz = bb) & not(vv = ww) & not(vv = aa) & not(vv = bb) & not(ww = aa) & not(ww = bb) & not(aa = bb) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr})) = (1..16)*{id_reg_8}) & ran(bv_ireg_plus_d) = BV16 & !dd.(dd: SCHAR => bv_ireg_plus_d(ix,dd): BV16) & !dd.(dd: SCHAR => bv_ireg_plus_d(iy,dd): BV16) & ran(bv_9ireg_plus_d0) = BYTE & !dd.(dd: SCHAR => bv_9ireg_plus_d0(mem,ix,dd): BYTE) & !dd.(dd: SCHAR => bv_9ireg_plus_d0(mem,iy,dd): BYTE) & byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)): BV16 & byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)): BV16 & byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)): BV16 & byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8)): BV16 & dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BV16 & dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BV16 & ushort_bv16(add16USHORT(0,bv16_ushort(sp),1)): BV16 & ushort_bv16(add16USHORT(0,bv16_ushort(sp),2)): BV16 & ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1)): BV16 & ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2)): BV16 & bitget(rgs8(2|->id_reg_8),7): BIT & bitget(rgs8(2|->id_reg_8),6): BIT & bitget(rgs8(2|->id_reg_8),5): BIT);
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & !(b1,b2,b3,b4,b5,b6).(b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT => update_flag_reg(b1,b2,b3,b4,b5,b6): {2|->id_reg_8}*BYTE) & !xx.(xx: (1..16)*{id_reg_8} +-> BYTE & dom(xx) = (1..16)*{id_reg_8} => rgs8<+xx: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+xx) = (1..16)*{id_reg_8}) & !(xx,xxr).(xx: (1..16)*{id_reg_8} & xxr: BYTE => rgs8<+{xx|->xxr}: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+{xx|->xxr}) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & not(xx = yy) => rgs8<+({xx|->xxr}\/{yy|->yyr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & not(xx = yy) & not(xx = zz) & not(yy = zz) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(yy = zz) & not(yy = vv) & not(zz = vv) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(zz = vv) & not(zz = ww) & not(vv = ww) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(vv = ww) & not(vv = aa) & not(ww = aa) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar,bb,bbr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & bb: (1..16)*{id_reg_8} & bbr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(xx = bb) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(yy = bb) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(zz = bb) & not(vv = ww) & not(vv = aa) & not(vv = bb) & not(ww = aa) & not(ww = bb) & not(aa = bb) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr})) = (1..16)*{id_reg_8}) & ran(bv_ireg_plus_d) = BV16 & !dd.(dd: SCHAR => bv_ireg_plus_d(ix,dd): BV16) & !dd.(dd: SCHAR => bv_ireg_plus_d(iy,dd): BV16) & ran(bv_9ireg_plus_d0) = BYTE & !dd.(dd: SCHAR => bv_9ireg_plus_d0(mem,ix,dd): BYTE) & !dd.(dd: SCHAR => bv_9ireg_plus_d0(mem,iy,dd): BYTE) & byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)): BV16 & byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)): BV16 & byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)): BV16 & byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8)): BV16 & dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BV16 & dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BV16 & ushort_bv16(add16USHORT(0,bv16_ushort(sp),1)): BV16 & ushort_bv16(add16USHORT(0,bv16_ushort(sp),2)): BV16 & ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1)): BV16 & ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2)): BV16 & bitget(rgs8(2|->id_reg_8),7): BIT & bitget(rgs8(2|->id_reg_8),6): BIT & bitget(rgs8(2|->id_reg_8),5): BIT);
(rgs8(2|->id_reg_8),4: dom(bitget));
("`Local hypotheses'" & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & !(b1,b2,b3,b4,b5,b6).(b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT => update_flag_reg(b1,b2,b3,b4,b5,b6): {2|->id_reg_8}*BYTE) & !xx.(xx: (1..16)*{id_reg_8} +-> BYTE & dom(xx) = (1..16)*{id_reg_8} => rgs8<+xx: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+xx) = (1..16)*{id_reg_8}) & !(xx,xxr).(xx: (1..16)*{id_reg_8} & xxr: BYTE => rgs8<+{xx|->xxr}: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+{xx|->xxr}) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & not(xx = yy) => rgs8<+({xx|->xxr}\/{yy|->yyr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & not(xx = yy) & not(xx = zz) & not(yy = zz) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(yy = zz) & not(yy = vv) & not(zz = vv) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(zz = vv) & not(zz = ww) & not(vv = ww) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(vv = ww) & not(vv = aa) & not(ww = aa) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar,bb,bbr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & bb: (1..16)*{id_reg_8} & bbr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(xx = bb) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(yy = bb) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(zz = bb) & not(vv = ww) & not(vv = aa) & not(vv = bb) & not(ww = aa) & not(ww = bb) & not(aa = bb) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr})) = (1..16)*{id_reg_8}) & ran(bv_ireg_plus_d) = BV16 & !dd.(dd: SCHAR => bv_ireg_plus_d(ix,dd): BV16) & !dd.(dd: SCHAR => bv_ireg_plus_d(iy,dd): BV16) & ran(bv_9ireg_plus_d0) = BYTE & !dd.(dd: SCHAR => bv_9ireg_plus_d0(mem,ix,dd): BYTE) & !dd.(dd: SCHAR => bv_9ireg_plus_d0(mem,iy,dd): BYTE) & byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)): BV16 & byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)): BV16 & byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)): BV16 & byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8)): BV16 & dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BV16 & dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BV16 & ushort_bv16(add16USHORT(0,bv16_ushort(sp),1)): BV16 & ushort_bv16(add16USHORT(0,bv16_ushort(sp),2)): BV16 & ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1)): BV16 & ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2)): BV16 & bitget(rgs8(2|->id_reg_8),7): BIT & bitget(rgs8(2|->id_reg_8),6): BIT & bitget(rgs8(2|->id_reg_8),5): BIT & bitget(rgs8(2|->id_reg_8),4): BIT);
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & !(b1,b2,b3,b4,b5,b6).(b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT => update_flag_reg(b1,b2,b3,b4,b5,b6): {2|->id_reg_8}*BYTE) & !xx.(xx: (1..16)*{id_reg_8} +-> BYTE & dom(xx) = (1..16)*{id_reg_8} => rgs8<+xx: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+xx) = (1..16)*{id_reg_8}) & !(xx,xxr).(xx: (1..16)*{id_reg_8} & xxr: BYTE => rgs8<+{xx|->xxr}: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+{xx|->xxr}) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & not(xx = yy) => rgs8<+({xx|->xxr}\/{yy|->yyr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & not(xx = yy) & not(xx = zz) & not(yy = zz) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(yy = zz) & not(yy = vv) & not(zz = vv) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(zz = vv) & not(zz = ww) & not(vv = ww) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(vv = ww) & not(vv = aa) & not(ww = aa) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar,bb,bbr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & bb: (1..16)*{id_reg_8} & bbr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(xx = bb) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(yy = bb) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(zz = bb) & not(vv = ww) & not(vv = aa) & not(vv = bb) & not(ww = aa) & not(ww = bb) & not(aa = bb) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr})) = (1..16)*{id_reg_8}) & ran(bv_ireg_plus_d) = BV16 & !dd.(dd: SCHAR => bv_ireg_plus_d(ix,dd): BV16) & !dd.(dd: SCHAR => bv_ireg_plus_d(iy,dd): BV16) & ran(bv_9ireg_plus_d0) = BYTE & !dd.(dd: SCHAR => bv_9ireg_plus_d0(mem,ix,dd): BYTE) & !dd.(dd: SCHAR => bv_9ireg_plus_d0(mem,iy,dd): BYTE) & byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)): BV16 & byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)): BV16 & byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)): BV16 & byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8)): BV16 & dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BV16 & dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BV16 & ushort_bv16(add16USHORT(0,bv16_ushort(sp),1)): BV16 & ushort_bv16(add16USHORT(0,bv16_ushort(sp),2)): BV16 & ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1)): BV16 & ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2)): BV16 & bitget(rgs8(2|->id_reg_8),7): BIT & bitget(rgs8(2|->id_reg_8),6): BIT & bitget(rgs8(2|->id_reg_8),5): BIT & bitget(rgs8(2|->id_reg_8),4): BIT);
(rgs8(2|->id_reg_8),3: dom(bitget));
("`Local hypotheses'" & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & !(b1,b2,b3,b4,b5,b6).(b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT => update_flag_reg(b1,b2,b3,b4,b5,b6): {2|->id_reg_8}*BYTE) & !xx.(xx: (1..16)*{id_reg_8} +-> BYTE & dom(xx) = (1..16)*{id_reg_8} => rgs8<+xx: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+xx) = (1..16)*{id_reg_8}) & !(xx,xxr).(xx: (1..16)*{id_reg_8} & xxr: BYTE => rgs8<+{xx|->xxr}: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+{xx|->xxr}) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & not(xx = yy) => rgs8<+({xx|->xxr}\/{yy|->yyr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & not(xx = yy) & not(xx = zz) & not(yy = zz) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(yy = zz) & not(yy = vv) & not(zz = vv) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(zz = vv) & not(zz = ww) & not(vv = ww) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(vv = ww) & not(vv = aa) & not(ww = aa) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar,bb,bbr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & bb: (1..16)*{id_reg_8} & bbr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(xx = bb) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(yy = bb) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(zz = bb) & not(vv = ww) & not(vv = aa) & not(vv = bb) & not(ww = aa) & not(ww = bb) & not(aa = bb) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr})) = (1..16)*{id_reg_8}) & ran(bv_ireg_plus_d) = BV16 & !dd.(dd: SCHAR => bv_ireg_plus_d(ix,dd): BV16) & !dd.(dd: SCHAR => bv_ireg_plus_d(iy,dd): BV16) & ran(bv_9ireg_plus_d0) = BYTE & !dd.(dd: SCHAR => bv_9ireg_plus_d0(mem,ix,dd): BYTE) & !dd.(dd: SCHAR => bv_9ireg_plus_d0(mem,iy,dd): BYTE) & byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)): BV16 & byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)): BV16 & byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)): BV16 & byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8)): BV16 & dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BV16 & dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BV16 & ushort_bv16(add16USHORT(0,bv16_ushort(sp),1)): BV16 & ushort_bv16(add16USHORT(0,bv16_ushort(sp),2)): BV16 & ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1)): BV16 & ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2)): BV16 & bitget(rgs8(2|->id_reg_8),7): BIT & bitget(rgs8(2|->id_reg_8),6): BIT & bitget(rgs8(2|->id_reg_8),5): BIT & bitget(rgs8(2|->id_reg_8),4): BIT & bitget(rgs8(2|->id_reg_8),3): BIT);
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & !(b1,b2,b3,b4,b5,b6).(b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT => update_flag_reg(b1,b2,b3,b4,b5,b6): {2|->id_reg_8}*BYTE) & !xx.(xx: (1..16)*{id_reg_8} +-> BYTE & dom(xx) = (1..16)*{id_reg_8} => rgs8<+xx: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+xx) = (1..16)*{id_reg_8}) & !(xx,xxr).(xx: (1..16)*{id_reg_8} & xxr: BYTE => rgs8<+{xx|->xxr}: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+{xx|->xxr}) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & not(xx = yy) => rgs8<+({xx|->xxr}\/{yy|->yyr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & not(xx = yy) & not(xx = zz) & not(yy = zz) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(yy = zz) & not(yy = vv) & not(zz = vv) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(zz = vv) & not(zz = ww) & not(vv = ww) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(vv = ww) & not(vv = aa) & not(ww = aa) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar,bb,bbr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & bb: (1..16)*{id_reg_8} & bbr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(xx = bb) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(yy = bb) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(zz = bb) & not(vv = ww) & not(vv = aa) & not(vv = bb) & not(ww = aa) & not(ww = bb) & not(aa = bb) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr})) = (1..16)*{id_reg_8}) & ran(bv_ireg_plus_d) = BV16 & !dd.(dd: SCHAR => bv_ireg_plus_d(ix,dd): BV16) & !dd.(dd: SCHAR => bv_ireg_plus_d(iy,dd): BV16) & ran(bv_9ireg_plus_d0) = BYTE & !dd.(dd: SCHAR => bv_9ireg_plus_d0(mem,ix,dd): BYTE) & !dd.(dd: SCHAR => bv_9ireg_plus_d0(mem,iy,dd): BYTE) & byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)): BV16 & byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)): BV16 & byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)): BV16 & byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8)): BV16 & dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BV16 & dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BV16 & ushort_bv16(add16USHORT(0,bv16_ushort(sp),1)): BV16 & ushort_bv16(add16USHORT(0,bv16_ushort(sp),2)): BV16 & ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1)): BV16 & ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2)): BV16 & bitget(rgs8(2|->id_reg_8),7): BIT & bitget(rgs8(2|->id_reg_8),6): BIT & bitget(rgs8(2|->id_reg_8),5): BIT & bitget(rgs8(2|->id_reg_8),4): BIT & bitget(rgs8(2|->id_reg_8),3): BIT);
(rgs8(2|->id_reg_8),2: dom(bitget));
("`Local hypotheses'" & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & !(b1,b2,b3,b4,b5,b6).(b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT => update_flag_reg(b1,b2,b3,b4,b5,b6): {2|->id_reg_8}*BYTE) & !xx.(xx: (1..16)*{id_reg_8} +-> BYTE & dom(xx) = (1..16)*{id_reg_8} => rgs8<+xx: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+xx) = (1..16)*{id_reg_8}) & !(xx,xxr).(xx: (1..16)*{id_reg_8} & xxr: BYTE => rgs8<+{xx|->xxr}: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+{xx|->xxr}) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & not(xx = yy) => rgs8<+({xx|->xxr}\/{yy|->yyr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & not(xx = yy) & not(xx = zz) & not(yy = zz) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(yy = zz) & not(yy = vv) & not(zz = vv) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(zz = vv) & not(zz = ww) & not(vv = ww) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(vv = ww) & not(vv = aa) & not(ww = aa) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar,bb,bbr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & bb: (1..16)*{id_reg_8} & bbr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(xx = bb) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(yy = bb) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(zz = bb) & not(vv = ww) & not(vv = aa) & not(vv = bb) & not(ww = aa) & not(ww = bb) & not(aa = bb) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr})) = (1..16)*{id_reg_8}) & ran(bv_ireg_plus_d) = BV16 & !dd.(dd: SCHAR => bv_ireg_plus_d(ix,dd): BV16) & !dd.(dd: SCHAR => bv_ireg_plus_d(iy,dd): BV16) & ran(bv_9ireg_plus_d0) = BYTE & !dd.(dd: SCHAR => bv_9ireg_plus_d0(mem,ix,dd): BYTE) & !dd.(dd: SCHAR => bv_9ireg_plus_d0(mem,iy,dd): BYTE) & byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)): BV16 & byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)): BV16 & byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)): BV16 & byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8)): BV16 & dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BV16 & dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BV16 & ushort_bv16(add16USHORT(0,bv16_ushort(sp),1)): BV16 & ushort_bv16(add16USHORT(0,bv16_ushort(sp),2)): BV16 & ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1)): BV16 & ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2)): BV16 & bitget(rgs8(2|->id_reg_8),7): BIT & bitget(rgs8(2|->id_reg_8),6): BIT & bitget(rgs8(2|->id_reg_8),5): BIT & bitget(rgs8(2|->id_reg_8),4): BIT & bitget(rgs8(2|->id_reg_8),3): BIT & bitget(rgs8(2|->id_reg_8),2): BIT);
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & !(b1,b2,b3,b4,b5,b6).(b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT => update_flag_reg(b1,b2,b3,b4,b5,b6): {2|->id_reg_8}*BYTE) & !xx.(xx: (1..16)*{id_reg_8} +-> BYTE & dom(xx) = (1..16)*{id_reg_8} => rgs8<+xx: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+xx) = (1..16)*{id_reg_8}) & !(xx,xxr).(xx: (1..16)*{id_reg_8} & xxr: BYTE => rgs8<+{xx|->xxr}: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+{xx|->xxr}) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & not(xx = yy) => rgs8<+({xx|->xxr}\/{yy|->yyr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & not(xx = yy) & not(xx = zz) & not(yy = zz) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(yy = zz) & not(yy = vv) & not(zz = vv) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(zz = vv) & not(zz = ww) & not(vv = ww) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(vv = ww) & not(vv = aa) & not(ww = aa) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar,bb,bbr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & bb: (1..16)*{id_reg_8} & bbr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(xx = bb) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(yy = bb) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(zz = bb) & not(vv = ww) & not(vv = aa) & not(vv = bb) & not(ww = aa) & not(ww = bb) & not(aa = bb) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr})) = (1..16)*{id_reg_8}) & ran(bv_ireg_plus_d) = BV16 & !dd.(dd: SCHAR => bv_ireg_plus_d(ix,dd): BV16) & !dd.(dd: SCHAR => bv_ireg_plus_d(iy,dd): BV16) & ran(bv_9ireg_plus_d0) = BYTE & !dd.(dd: SCHAR => bv_9ireg_plus_d0(mem,ix,dd): BYTE) & !dd.(dd: SCHAR => bv_9ireg_plus_d0(mem,iy,dd): BYTE) & byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)): BV16 & byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)): BV16 & byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)): BV16 & byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8)): BV16 & dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BV16 & dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BV16 & ushort_bv16(add16USHORT(0,bv16_ushort(sp),1)): BV16 & ushort_bv16(add16USHORT(0,bv16_ushort(sp),2)): BV16 & ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1)): BV16 & ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2)): BV16 & bitget(rgs8(2|->id_reg_8),7): BIT & bitget(rgs8(2|->id_reg_8),6): BIT & bitget(rgs8(2|->id_reg_8),5): BIT & bitget(rgs8(2|->id_reg_8),4): BIT & bitget(rgs8(2|->id_reg_8),3): BIT & bitget(rgs8(2|->id_reg_8),2): BIT);
(rgs8(2|->id_reg_8),1: dom(bitget));
("`Local hypotheses'" & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & !(b1,b2,b3,b4,b5,b6).(b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT => update_flag_reg(b1,b2,b3,b4,b5,b6): {2|->id_reg_8}*BYTE) & !xx.(xx: (1..16)*{id_reg_8} +-> BYTE & dom(xx) = (1..16)*{id_reg_8} => rgs8<+xx: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+xx) = (1..16)*{id_reg_8}) & !(xx,xxr).(xx: (1..16)*{id_reg_8} & xxr: BYTE => rgs8<+{xx|->xxr}: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+{xx|->xxr}) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & not(xx = yy) => rgs8<+({xx|->xxr}\/{yy|->yyr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & not(xx = yy) & not(xx = zz) & not(yy = zz) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(yy = zz) & not(yy = vv) & not(zz = vv) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(zz = vv) & not(zz = ww) & not(vv = ww) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(vv = ww) & not(vv = aa) & not(ww = aa) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar,bb,bbr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & bb: (1..16)*{id_reg_8} & bbr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(xx = bb) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(yy = bb) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(zz = bb) & not(vv = ww) & not(vv = aa) & not(vv = bb) & not(ww = aa) & not(ww = bb) & not(aa = bb) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr})) = (1..16)*{id_reg_8}) & ran(bv_ireg_plus_d) = BV16 & !dd.(dd: SCHAR => bv_ireg_plus_d(ix,dd): BV16) & !dd.(dd: SCHAR => bv_ireg_plus_d(iy,dd): BV16) & ran(bv_9ireg_plus_d0) = BYTE & !dd.(dd: SCHAR => bv_9ireg_plus_d0(mem,ix,dd): BYTE) & !dd.(dd: SCHAR => bv_9ireg_plus_d0(mem,iy,dd): BYTE) & byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)): BV16 & byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)): BV16 & byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)): BV16 & byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8)): BV16 & dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BV16 & dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BV16 & ushort_bv16(add16USHORT(0,bv16_ushort(sp),1)): BV16 & ushort_bv16(add16USHORT(0,bv16_ushort(sp),2)): BV16 & ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1)): BV16 & ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2)): BV16 & bitget(rgs8(2|->id_reg_8),7): BIT & bitget(rgs8(2|->id_reg_8),6): BIT & bitget(rgs8(2|->id_reg_8),5): BIT & bitget(rgs8(2|->id_reg_8),4): BIT & bitget(rgs8(2|->id_reg_8),3): BIT & bitget(rgs8(2|->id_reg_8),2): BIT & bitget(rgs8(2|->id_reg_8),1): BIT);
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & !(b1,b2,b3,b4,b5,b6).(b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT => update_flag_reg(b1,b2,b3,b4,b5,b6): {2|->id_reg_8}*BYTE) & !xx.(xx: (1..16)*{id_reg_8} +-> BYTE & dom(xx) = (1..16)*{id_reg_8} => rgs8<+xx: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+xx) = (1..16)*{id_reg_8}) & !(xx,xxr).(xx: (1..16)*{id_reg_8} & xxr: BYTE => rgs8<+{xx|->xxr}: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+{xx|->xxr}) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & not(xx = yy) => rgs8<+({xx|->xxr}\/{yy|->yyr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & not(xx = yy) & not(xx = zz) & not(yy = zz) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(yy = zz) & not(yy = vv) & not(zz = vv) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(zz = vv) & not(zz = ww) & not(vv = ww) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(vv = ww) & not(vv = aa) & not(ww = aa) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar,bb,bbr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & bb: (1..16)*{id_reg_8} & bbr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(xx = bb) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(yy = bb) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(zz = bb) & not(vv = ww) & not(vv = aa) & not(vv = bb) & not(ww = aa) & not(ww = bb) & not(aa = bb) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr})) = (1..16)*{id_reg_8}) & ran(bv_ireg_plus_d) = BV16 & !dd.(dd: SCHAR => bv_ireg_plus_d(ix,dd): BV16) & !dd.(dd: SCHAR => bv_ireg_plus_d(iy,dd): BV16) & ran(bv_9ireg_plus_d0) = BYTE & !dd.(dd: SCHAR => bv_9ireg_plus_d0(mem,ix,dd): BYTE) & !dd.(dd: SCHAR => bv_9ireg_plus_d0(mem,iy,dd): BYTE) & byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)): BV16 & byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)): BV16 & byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)): BV16 & byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8)): BV16 & dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BV16 & dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BV16 & ushort_bv16(add16USHORT(0,bv16_ushort(sp),1)): BV16 & ushort_bv16(add16USHORT(0,bv16_ushort(sp),2)): BV16 & ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1)): BV16 & ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2)): BV16 & bitget(rgs8(2|->id_reg_8),7): BIT & bitget(rgs8(2|->id_reg_8),6): BIT & bitget(rgs8(2|->id_reg_8),5): BIT & bitget(rgs8(2|->id_reg_8),4): BIT & bitget(rgs8(2|->id_reg_8),3): BIT & bitget(rgs8(2|->id_reg_8),2): BIT & bitget(rgs8(2|->id_reg_8),1): BIT);
(rgs8(2|->id_reg_8),0: dom(bitget));
("`Local hypotheses'" & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & !(b1,b2,b3,b4,b5,b6).(b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT => update_flag_reg(b1,b2,b3,b4,b5,b6): {2|->id_reg_8}*BYTE) & !xx.(xx: (1..16)*{id_reg_8} +-> BYTE & dom(xx) = (1..16)*{id_reg_8} => rgs8<+xx: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+xx) = (1..16)*{id_reg_8}) & !(xx,xxr).(xx: (1..16)*{id_reg_8} & xxr: BYTE => rgs8<+{xx|->xxr}: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+{xx|->xxr}) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & not(xx = yy) => rgs8<+({xx|->xxr}\/{yy|->yyr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & not(xx = yy) & not(xx = zz) & not(yy = zz) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(yy = zz) & not(yy = vv) & not(zz = vv) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(zz = vv) & not(zz = ww) & not(vv = ww) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(vv = ww) & not(vv = aa) & not(ww = aa) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar,bb,bbr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & bb: (1..16)*{id_reg_8} & bbr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(xx = bb) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(yy = bb) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(zz = bb) & not(vv = ww) & not(vv = aa) & not(vv = bb) & not(ww = aa) & not(ww = bb) & not(aa = bb) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr})) = (1..16)*{id_reg_8}) & ran(bv_ireg_plus_d) = BV16 & !dd.(dd: SCHAR => bv_ireg_plus_d(ix,dd): BV16) & !dd.(dd: SCHAR => bv_ireg_plus_d(iy,dd): BV16) & ran(bv_9ireg_plus_d0) = BYTE & !dd.(dd: SCHAR => bv_9ireg_plus_d0(mem,ix,dd): BYTE) & !dd.(dd: SCHAR => bv_9ireg_plus_d0(mem,iy,dd): BYTE) & byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)): BV16 & byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)): BV16 & byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)): BV16 & byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8)): BV16 & dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BV16 & dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BV16 & ushort_bv16(add16USHORT(0,bv16_ushort(sp),1)): BV16 & ushort_bv16(add16USHORT(0,bv16_ushort(sp),2)): BV16 & ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1)): BV16 & ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2)): BV16 & bitget(rgs8(2|->id_reg_8),7): BIT & bitget(rgs8(2|->id_reg_8),6): BIT & bitget(rgs8(2|->id_reg_8),5): BIT & bitget(rgs8(2|->id_reg_8),4): BIT & bitget(rgs8(2|->id_reg_8),3): BIT & bitget(rgs8(2|->id_reg_8),2): BIT & bitget(rgs8(2|->id_reg_8),1): BIT & bitget(rgs8(2|->id_reg_8),0): BIT);
(6|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & !(b1,b2,b3,b4,b5,b6).(b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT => update_flag_reg(b1,b2,b3,b4,b5,b6): {2|->id_reg_8}*BYTE) & !xx.(xx: (1..16)*{id_reg_8} +-> BYTE & dom(xx) = (1..16)*{id_reg_8} => rgs8<+xx: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+xx) = (1..16)*{id_reg_8}) & !(xx,xxr).(xx: (1..16)*{id_reg_8} & xxr: BYTE => rgs8<+{xx|->xxr}: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+{xx|->xxr}) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & not(xx = yy) => rgs8<+({xx|->xxr}\/{yy|->yyr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & not(xx = yy) & not(xx = zz) & not(yy = zz) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(yy = zz) & not(yy = vv) & not(zz = vv) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(zz = vv) & not(zz = ww) & not(vv = ww) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(vv = ww) & not(vv = aa) & not(ww = aa) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar,bb,bbr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & bb: (1..16)*{id_reg_8} & bbr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(xx = bb) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(yy = bb) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(zz = bb) & not(vv = ww) & not(vv = aa) & not(vv = bb) & not(ww = aa) & not(ww = bb) & not(aa = bb) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr})) = (1..16)*{id_reg_8}) & ran(bv_ireg_plus_d) = BV16 & !dd.(dd: SCHAR => bv_ireg_plus_d(ix,dd): BV16) & !dd.(dd: SCHAR => bv_ireg_plus_d(iy,dd): BV16) & ran(bv_9ireg_plus_d0) = BYTE & !dd.(dd: SCHAR => bv_9ireg_plus_d0(mem,ix,dd): BYTE) & !dd.(dd: SCHAR => bv_9ireg_plus_d0(mem,iy,dd): BYTE) & byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)): BV16 & byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)): BV16 & byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)): BV16 & byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8)): BV16 & dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BV16 & dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BV16 & ushort_bv16(add16USHORT(0,bv16_ushort(sp),1)): BV16 & ushort_bv16(add16USHORT(0,bv16_ushort(sp),2)): BV16 & ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1)): BV16 & ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2)): BV16 & bitget(rgs8(2|->id_reg_8),7): BIT & bitget(rgs8(2|->id_reg_8),6): BIT & bitget(rgs8(2|->id_reg_8),5): BIT & bitget(rgs8(2|->id_reg_8),4): BIT & bitget(rgs8(2|->id_reg_8),3): BIT & bitget(rgs8(2|->id_reg_8),2): BIT & bitget(rgs8(2|->id_reg_8),1): BIT & bitget(rgs8(2|->id_reg_8),0): BIT);
(rgs8(6|->id_reg_8): dom(io_ports));
("`Local hypotheses'" & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & !(b1,b2,b3,b4,b5,b6).(b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT => update_flag_reg(b1,b2,b3,b4,b5,b6): {2|->id_reg_8}*BYTE) & !xx.(xx: (1..16)*{id_reg_8} +-> BYTE & dom(xx) = (1..16)*{id_reg_8} => rgs8<+xx: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+xx) = (1..16)*{id_reg_8}) & !(xx,xxr).(xx: (1..16)*{id_reg_8} & xxr: BYTE => rgs8<+{xx|->xxr}: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+{xx|->xxr}) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & not(xx = yy) => rgs8<+({xx|->xxr}\/{yy|->yyr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & not(xx = yy) & not(xx = zz) & not(yy = zz) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(yy = zz) & not(yy = vv) & not(zz = vv) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(zz = vv) & not(zz = ww) & not(vv = ww) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(vv = ww) & not(vv = aa) & not(ww = aa) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar,bb,bbr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & bb: (1..16)*{id_reg_8} & bbr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(xx = bb) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(yy = bb) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(zz = bb) & not(vv = ww) & not(vv = aa) & not(vv = bb) & not(ww = aa) & not(ww = bb) & not(aa = bb) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr})) = (1..16)*{id_reg_8}) & ran(bv_ireg_plus_d) = BV16 & !dd.(dd: SCHAR => bv_ireg_plus_d(ix,dd): BV16) & !dd.(dd: SCHAR => bv_ireg_plus_d(iy,dd): BV16) & ran(bv_9ireg_plus_d0) = BYTE & !dd.(dd: SCHAR => bv_9ireg_plus_d0(mem,ix,dd): BYTE) & !dd.(dd: SCHAR => bv_9ireg_plus_d0(mem,iy,dd): BYTE) & byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)): BV16 & byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)): BV16 & byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)): BV16 & byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8)): BV16 & dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BV16 & dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BV16 & ushort_bv16(add16USHORT(0,bv16_ushort(sp),1)): BV16 & ushort_bv16(add16USHORT(0,bv16_ushort(sp),2)): BV16 & ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1)): BV16 & ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2)): BV16 & bitget(rgs8(2|->id_reg_8),7): BIT & bitget(rgs8(2|->id_reg_8),6): BIT & bitget(rgs8(2|->id_reg_8),5): BIT & bitget(rgs8(2|->id_reg_8),4): BIT & bitget(rgs8(2|->id_reg_8),3): BIT & bitget(rgs8(2|->id_reg_8),2): BIT & bitget(rgs8(2|->id_reg_8),1): BIT & bitget(rgs8(2|->id_reg_8),0): BIT & io_ports(rgs8(6|->id_reg_8)): BYTE);
(5|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & ran(rgs8): POW(BYTE) & instruction_next(pc): USHORT & mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))))): BYTE & mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))): BYTE & mem(byte_bv16(schar_byte(0),mem(byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8))))): BYTE & mem(sp): BYTE & mem(ix): BYTE & mem(iy): BYTE & update_refresh_reg(r_): BYTE & ran(update_flag_reg): POW({2|->id_reg_8}*BYTE) & !(b1,b2,b3,b4,b5,b6).(b1: BIT & b2: BIT & b3: BIT & b4: BIT & b5: BIT & b6: BIT => update_flag_reg(b1,b2,b3,b4,b5,b6): {2|->id_reg_8}*BYTE) & !xx.(xx: (1..16)*{id_reg_8} +-> BYTE & dom(xx) = (1..16)*{id_reg_8} => rgs8<+xx: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+xx) = (1..16)*{id_reg_8}) & !(xx,xxr).(xx: (1..16)*{id_reg_8} & xxr: BYTE => rgs8<+{xx|->xxr}: (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+{xx|->xxr}) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & not(xx = yy) => rgs8<+({xx|->xxr}\/{yy|->yyr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & not(xx = yy) & not(xx = zz) & not(yy = zz) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(yy = zz) & not(yy = vv) & not(zz = vv) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(zz = vv) & not(zz = ww) & not(vv = ww) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(vv = ww) & not(vv = aa) & not(ww = aa) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar})) = (1..16)*{id_reg_8}) & !(xx,xxr,yy,yyr,zz,zzr,vv,vvr,ww,wwr,aa,aar,bb,bbr).(xx: (1..16)*{id_reg_8} & xxr: BYTE & yy: (1..16)*{id_reg_8} & yyr: BYTE & zz: (1..16)*{id_reg_8} & zzr: BYTE & vv: (1..16)*{id_reg_8} & vvr: BYTE & ww: (1..16)*{id_reg_8} & wwr: BYTE & aa: (1..16)*{id_reg_8} & aar: BYTE & bb: (1..16)*{id_reg_8} & bbr: BYTE & not(xx = yy) & not(xx = zz) & not(xx = vv) & not(xx = ww) & not(xx = aa) & not(xx = bb) & not(yy = zz) & not(yy = vv) & not(yy = ww) & not(yy = aa) & not(yy = bb) & not(zz = vv) & not(zz = ww) & not(zz = aa) & not(zz = bb) & not(vv = ww) & not(vv = aa) & not(vv = bb) & not(ww = aa) & not(ww = bb) & not(aa = bb) => rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr}): (1..16)*{id_reg_8} +-> BYTE & dom(rgs8<+({xx|->xxr}\/{yy|->yyr}\/{zz|->zzr}\/{vv|->vvr}\/{ww|->wwr}\/{aa|->aar}\/{bb|->bbr})) = (1..16)*{id_reg_8}) & ran(bv_ireg_plus_d) = BV16 & !dd.(dd: SCHAR => bv_ireg_plus_d(ix,dd): BV16) & !dd.(dd: SCHAR => bv_ireg_plus_d(iy,dd): BV16) & ran(bv_9ireg_plus_d0) = BYTE & !dd.(dd: SCHAR => bv_9ireg_plus_d0(mem,ix,dd): BYTE) & !dd.(dd: SCHAR => bv_9ireg_plus_d0(mem,iy,dd): BYTE) & byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)): BV16 & byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)): BV16 & byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)): BV16 & byte_bv16(rgs8(1|->id_reg_8),rgs8(2|->id_reg_8)): BV16 & dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): BV16 & dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): BV16 & inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BV16 & dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): BV16 & ushort_bv16(add16USHORT(0,bv16_ushort(sp),1)): BV16 & ushort_bv16(add16USHORT(0,bv16_ushort(sp),2)): BV16 & ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1)): BV16 & ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2)): BV16 & bitget(rgs8(2|->id_reg_8),7): BIT & bitget(rgs8(2|->id_reg_8),6): BIT & bitget(rgs8(2|->id_reg_8),5): BIT & bitget(rgs8(2|->id_reg_8),4): BIT & bitget(rgs8(2|->id_reg_8),3): BIT & bitget(rgs8(2|->id_reg_8),2): BIT & bitget(rgs8(2|->id_reg_8),1): BIT & bitget(rgs8(2|->id_reg_8),0): BIT & io_ports(rgs8(6|->id_reg_8)): BYTE);
(rgs8(5|->id_reg_8): dom(dec));
("`Local hypotheses'" & mem$0: BV16 +-> BYTE & dom(mem$0) = BV16);
(0: dom(uchar_byte));
("`LD_r_r_ preconditions in previous components'" & btrue);
("`LD_r_r_ preconditions in this component'" & rr: (1..16)*{id_reg_8} & rr_: (1..16)*{id_reg_8});
("`LD_r_n_ preconditions in previous components'" & btrue);
("`LD_r_n_ preconditions in this component'" & rr: (1..16)*{id_reg_8} & n0: SCHAR);
("`LD_r_9HL0 preconditions in previous components'" & btrue);
("`LD_r_9HL0 preconditions in this component'" & rr: (1..16)*{id_reg_8});
("`Local hypotheses'" & address: BV16);
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & address: BV16);
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & address: BV16);
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`LD_r_9IX_d0 preconditions in previous components'" & btrue);
("`LD_r_9IX_d0 preconditions in this component'" & rr: (1..16)*{id_reg_8} & desloc: SCHAR);
("`Local hypotheses'" & btrue);
(mem,ix,desloc: dom(bv_9ireg_plus_d0));
("`LD_r_9IY_d0 preconditions in previous components'" & btrue);
("`LD_r_9IY_d0 preconditions in this component'" & rr: (1..16)*{id_reg_8} & desloc: SCHAR);
("`Local hypotheses'" & btrue);
(mem,iy,desloc: dom(bv_9ireg_plus_d0));
("`LD_9HL0_r preconditions in previous components'" & btrue);
("`LD_9HL0_r preconditions in this component'" & rr: (1..16)*{id_reg_8} & bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): DATA_R_ADR);
("`Local hypotheses'" & btrue);
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & rgs8(rr): BYTE);
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & rgs8(rr): BYTE);
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & rgs8(rr): BYTE);
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & rgs8(rr): BYTE & bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): PROGRAM_R_ADR);
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & rgs8(rr): BYTE & bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): PROGRAM_R_ADR);
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & rgs8(rr): BYTE & bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): PROGRAM_R_ADR);
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & rr: (1..16)*{id_reg_8});
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & rr: (1..16)*{id_reg_8});
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & rr: (1..16)*{id_reg_8});
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`LD_9IX_d0_r preconditions in previous components'" & btrue);
("`LD_9IX_d0_r preconditions in this component'" & desloc: SCHAR & rr: (1..16)*{id_reg_8} & bv16_ushort(bv_ireg_plus_d(ix,desloc)): DATA_R_ADR);
("`Local hypotheses'" & btrue);
(ix,desloc: dom(bv_ireg_plus_d));
("`Local hypotheses'" & bv_ireg_plus_d(ix,desloc): BV16 & rgs8(rr): BYTE);
(ix,desloc: dom(bv_ireg_plus_d));
("`Local hypotheses'" & bv_ireg_plus_d(ix,desloc): BV16 & rgs8(rr): BYTE & bv16_ushort(bv_ireg_plus_d(ix,desloc)): PROGRAM_R_ADR);
(ix,desloc: dom(bv_ireg_plus_d));
("`Local hypotheses'" & desloc: SCHAR & rr: (1..16)*{id_reg_8});
(ix,desloc: dom(bv_ireg_plus_d));
("`Local hypotheses'" & desloc: SCHAR & rr: (1..16)*{id_reg_8});
(bv_ireg_plus_d(ix,desloc): dom(bv16_ushort));
("`LD_9IY_d0_r preconditions in previous components'" & btrue);
("`LD_9IY_d0_r preconditions in this component'" & desloc: SCHAR & rr: (1..16)*{id_reg_8} & bv16_ushort(bv_ireg_plus_d(iy,desloc)): DATA_R_ADR);
("`Local hypotheses'" & btrue);
(iy,desloc: dom(bv_ireg_plus_d));
("`Local hypotheses'" & bv_ireg_plus_d(iy,desloc): BV16 & rgs8(rr): BYTE);
(iy,desloc: dom(bv_ireg_plus_d));
("`Local hypotheses'" & bv_ireg_plus_d(iy,desloc): BV16 & rgs8(rr): BYTE & bv16_ushort(bv_ireg_plus_d(iy,desloc)): PROGRAM_R_ADR);
(iy,desloc: dom(bv_ireg_plus_d));
("`Local hypotheses'" & desloc: SCHAR & rr: (1..16)*{id_reg_8});
(iy,desloc: dom(bv_ireg_plus_d));
("`Local hypotheses'" & desloc: SCHAR & rr: (1..16)*{id_reg_8});
(bv_ireg_plus_d(iy,desloc): dom(bv16_ushort));
("`LD_9HL0_n preconditions in previous components'" & btrue);
("`LD_9HL0_n preconditions in this component'" & n0: SCHAR & bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): DATA_R_ADR);
("`Local hypotheses'" & btrue);
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & schar_byte(n0): BYTE);
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & schar_byte(n0): BYTE);
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & schar_byte(n0): BYTE);
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & schar_byte(n0): BYTE & bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): PROGRAM_R_ADR);
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & schar_byte(n0): BYTE & bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): PROGRAM_R_ADR);
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & schar_byte(n0): BYTE & bv16_ushort(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8))): PROGRAM_R_ADR);
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & n0: SCHAR);
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & n0: SCHAR);
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & n0: SCHAR);
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`LD_9IX_d0_n preconditions in previous components'" & btrue);
("`LD_9IX_d0_n preconditions in this component'" & desloc: SCHAR & n0: SCHAR & bv16_ushort(bv_ireg_plus_d(ix,desloc)): DATA_R_ADR);
("`Local hypotheses'" & btrue);
(ix,desloc: dom(bv_ireg_plus_d));
("`Local hypotheses'" & bv_ireg_plus_d(ix,desloc): BV16 & schar_byte(n0): BYTE);
(ix,desloc: dom(bv_ireg_plus_d));
("`Local hypotheses'" & bv_ireg_plus_d(ix,desloc): BV16 & schar_byte(n0): BYTE & bv16_ushort(bv_ireg_plus_d(ix,desloc)): PROGRAM_R_ADR);
(ix,desloc: dom(bv_ireg_plus_d));
("`Local hypotheses'" & desloc: SCHAR & n0: SCHAR);
(ix,desloc: dom(bv_ireg_plus_d));
("`Local hypotheses'" & desloc: SCHAR & n0: SCHAR);
(bv_ireg_plus_d(ix,desloc): dom(bv16_ushort));
("`LD_9IY_d0_n preconditions in previous components'" & btrue);
("`LD_9IY_d0_n preconditions in this component'" & desloc: SCHAR & n0: SCHAR & bv16_ushort(bv_ireg_plus_d(iy,desloc)): DATA_R_ADR);
("`Local hypotheses'" & btrue);
(iy,desloc: dom(bv_ireg_plus_d));
("`Local hypotheses'" & bv_ireg_plus_d(iy,desloc): BV16 & schar_byte(n0): BYTE);
(iy,desloc: dom(bv_ireg_plus_d));
("`Local hypotheses'" & bv_ireg_plus_d(iy,desloc): BV16 & schar_byte(n0): BYTE & bv16_ushort(bv_ireg_plus_d(iy,desloc)): PROGRAM_R_ADR);
(iy,desloc: dom(bv_ireg_plus_d));
("`Local hypotheses'" & desloc: SCHAR & n0: SCHAR);
(iy,desloc: dom(bv_ireg_plus_d));
("`Local hypotheses'" & desloc: SCHAR & n0: SCHAR);
(bv_ireg_plus_d(iy,desloc): dom(bv16_ushort));
("`LD_A_9BC0 preconditions in previous components'" & btrue);
("`LD_A_9BC0 preconditions in this component'" & btrue);
("`Local hypotheses'" & btrue);
(5|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(6|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8): dom(byte_bv16));
("`LD_A_9DE0 preconditions in previous components'" & btrue);
("`LD_A_9DE0 preconditions in this component'" & btrue);
("`Local hypotheses'" & btrue);
(9|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(10|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8): dom(byte_bv16));
("`LD_A_9nn0 preconditions in previous components'" & btrue);
("`LD_A_9nn0 preconditions in this component'" & nn: USHORT);
("`Local hypotheses'" & btrue);
(ushort_bv16(nn): dom(mem));
("`LD_9BC0_A preconditions in previous components'" & btrue);
("`LD_9BC0_A preconditions in this component'" & bv16_ushort(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): DATA_R_ADR);
("`Local hypotheses'" & btrue);
(5|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(6|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & btrue);
(1|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & rgs8(1|->id_reg_8): BYTE);
(5|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & rgs8(1|->id_reg_8): BYTE);
(6|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & rgs8(1|->id_reg_8): BYTE);
(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & rgs8(1|->id_reg_8): BYTE & bv16_ushort(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): PROGRAM_R_ADR);
(5|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & rgs8(1|->id_reg_8): BYTE & bv16_ushort(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): PROGRAM_R_ADR);
(6|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & rgs8(1|->id_reg_8): BYTE & bv16_ushort(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): PROGRAM_R_ADR);
(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & rgs8(1|->id_reg_8): BYTE & bv16_ushort(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))): PROGRAM_R_ADR);
(1|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(5|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(6|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8): dom(byte_bv16));
("`LD_9DE0_A preconditions in previous components'" & btrue);
("`LD_9DE0_A preconditions in this component'" & bv16_ushort(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): DATA_R_ADR);
("`Local hypotheses'" & btrue);
(9|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(10|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & btrue);
(1|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & rgs8(1|->id_reg_8): BYTE);
(9|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & rgs8(1|->id_reg_8): BYTE);
(10|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & rgs8(1|->id_reg_8): BYTE);
(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & rgs8(1|->id_reg_8): BYTE & bv16_ushort(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): PROGRAM_R_ADR);
(9|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & rgs8(1|->id_reg_8): BYTE & bv16_ushort(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): PROGRAM_R_ADR);
(10|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & rgs8(1|->id_reg_8): BYTE & bv16_ushort(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): PROGRAM_R_ADR);
(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & rgs8(1|->id_reg_8): BYTE & bv16_ushort(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): PROGRAM_R_ADR);
(1|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(9|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(10|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8): dom(byte_bv16));
("`LD_9nn0_A preconditions in previous components'" & btrue);
("`LD_9nn0_A preconditions in this component'" & nn: USHORT & nn: DATA_R_ADR);
("`Local hypotheses'" & ushort_bv16(nn): BV16);
(1|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & ushort_bv16(nn): BV16 & rgs8(1|->id_reg_8): BYTE & bv16_ushort(ushort_bv16(nn)): PROGRAM_R_ADR);
(1|->id_reg_8: dom(rgs8));
("`LD_A_I preconditions in previous components'" & btrue);
("`LD_A_I preconditions in this component'" & btrue);
("`Local hypotheses'" & btrue);
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(rgs8(2|->id_reg_8),0: dom(bitget));
("`Local hypotheses'" & btrue);
(is_negative(i_),is_zero(i_),0,iff2,0,bitget(rgs8(2|->id_reg_8),0): dom(update_flag_reg));
("`LD_A_R preconditions in previous components'" & btrue);
("`LD_A_R preconditions in this component'" & btrue);
("`Local hypotheses'" & btrue);
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(rgs8(2|->id_reg_8),0: dom(bitget));
("`Local hypotheses'" & btrue);
(is_negative(r_),is_zero(r_),0,iff2,0,bitget(rgs8(2|->id_reg_8),0): dom(update_flag_reg));
("`LD_I_A preconditions in previous components'" & btrue);
("`LD_I_A preconditions in this component'" & btrue);
("`Local hypotheses'" & btrue);
(1|->id_reg_8: dom(rgs8));
("`LD_R_A preconditions in previous components'" & btrue);
("`LD_R_A preconditions in this component'" & btrue);
("`Local hypotheses'" & btrue);
(1|->id_reg_8: dom(rgs8));
("`LD_dd_nn preconditions in previous components'" & btrue);
("`LD_dd_nn preconditions in this component'" & dd: (1..5)*{id_reg_16} & nn: USHORT & not(dd = 5|->id_reg_16));
("`Local hypotheses'" & not(dd = 4|->id_reg_16) & rh: (1..16)*{id_reg_8} & rl: (1..16)*{id_reg_8} & w1: BYTE & w2: BYTE & rh,rl = REG16_TO_REG8(dd) & not(rh = rl));
(ushort_bv16(nn): dom(bv16_byte));
("`LD_IX_nn preconditions in previous components'" & btrue);
("`LD_IX_nn preconditions in this component'" & nn: USHORT);
("`LD_IY_nn preconditions in previous components'" & btrue);
("`LD_IY_nn preconditions in this component'" & nn: USHORT);
("`LD_HL_9nn0 preconditions in previous components'" & btrue);
("`LD_HL_9nn0 preconditions in this component'" & nn: USHORT);
("`Local hypotheses'" & btrue);
(ushort_bv16(nn): dom(mem));
("`Local hypotheses'" & btrue);
(0,nn,1: dom(add16USHORT));
("`Local hypotheses'" & btrue);
(add16USHORT(0,nn,1): dom(ushort_bv16));
("`Local hypotheses'" & btrue);
(ushort_bv16(add16USHORT(0,nn,1)): dom(mem));
("`LD_dd_9nn0 preconditions in previous components'" & btrue);
("`LD_dd_9nn0 preconditions in this component'" & dd: (1..5)*{id_reg_16} & nn: USHORT & not(dd = 5|->id_reg_16));
("`Local hypotheses'" & dd = 4|->id_reg_16);
(0,nn,1: dom(add16USHORT));
("`Local hypotheses'" & dd = 4|->id_reg_16);
(add16USHORT(0,nn,1): dom(ushort_bv16));
("`Local hypotheses'" & dd = 4|->id_reg_16);
(ushort_bv16(add16USHORT(0,nn,1)): dom(mem));
("`Local hypotheses'" & dd = 4|->id_reg_16);
(ushort_bv16(nn): dom(mem));
("`Local hypotheses'" & dd = 4|->id_reg_16);
(mem(ushort_bv16(add16USHORT(0,nn,1))),mem(ushort_bv16(nn)): dom(byte_bv16));
("`Local hypotheses'" & not(dd = 4|->id_reg_16) & rh: (1..16)*{id_reg_8} & rl: (1..16)*{id_reg_8} & w1: BYTE & w2: BYTE & rh,rl = REG16_TO_REG8(dd) & not(rh = rl));
(0,nn,1: dom(add16USHORT));
("`Local hypotheses'" & not(dd = 4|->id_reg_16) & rh: (1..16)*{id_reg_8} & rl: (1..16)*{id_reg_8} & w1: BYTE & w2: BYTE & rh,rl = REG16_TO_REG8(dd) & not(rh = rl));
(add16USHORT(0,nn,1): dom(ushort_bv16));
("`Local hypotheses'" & not(dd = 4|->id_reg_16) & rh: (1..16)*{id_reg_8} & rl: (1..16)*{id_reg_8} & w1: BYTE & w2: BYTE & rh,rl = REG16_TO_REG8(dd) & not(rh = rl));
(ushort_bv16(add16USHORT(0,nn,1)): dom(mem));
("`Local hypotheses'" & not(dd = 4|->id_reg_16) & rh: (1..16)*{id_reg_8} & rl: (1..16)*{id_reg_8} & w1: BYTE & w2: BYTE & rh,rl = REG16_TO_REG8(dd) & not(rh = rl) & w1 = mem(ushort_bv16(add16USHORT(0,nn,1))));
(ushort_bv16(nn): dom(mem));
("`LD_IX_9nn0 preconditions in previous components'" & btrue);
("`LD_IX_9nn0 preconditions in this component'" & nn: USHORT);
("`Local hypotheses'" & btrue);
(0,nn,1: dom(add16USHORT));
("`Local hypotheses'" & btrue);
(add16USHORT(0,nn,1): dom(ushort_bv16));
("`Local hypotheses'" & btrue);
(ushort_bv16(add16USHORT(0,nn,1)): dom(mem));
("`Local hypotheses'" & btrue);
(ushort_bv16(nn): dom(mem));
("`Local hypotheses'" & btrue);
(mem(ushort_bv16(add16USHORT(0,nn,1))),mem(ushort_bv16(nn)): dom(byte_bv16));
("`LD_IY_9nn0 preconditions in previous components'" & btrue);
("`LD_IY_9nn0 preconditions in this component'" & nn: USHORT);
("`Local hypotheses'" & btrue);
(0,nn,1: dom(add16USHORT));
("`Local hypotheses'" & btrue);
(add16USHORT(0,nn,1): dom(ushort_bv16));
("`Local hypotheses'" & btrue);
(ushort_bv16(add16USHORT(0,nn,1)): dom(mem));
("`Local hypotheses'" & btrue);
(ushort_bv16(nn): dom(mem));
("`Local hypotheses'" & btrue);
(mem(ushort_bv16(add16USHORT(0,nn,1))),mem(ushort_bv16(nn)): dom(byte_bv16));
("`LD_9nn0_HL preconditions in previous components'" & btrue);
("`LD_9nn0_HL preconditions in this component'" & nn: USHORT & nn: DATA_R_ADR & add16USHORT(0,nn,1): DATA_R_ADR);
("`Local hypotheses'" & btrue);
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(0,nn,1: dom(add16USHORT));
("`Local hypotheses'" & btrue);
(add16USHORT(0,nn,1): dom(ushort_bv16));
("`Local hypotheses'" & btrue);
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & {ushort_bv16(add16USHORT(0,nn,1))|->rgs8(13|->id_reg_8)}\/{ushort_bv16(nn)|->rgs8(14|->id_reg_8)}: BV16 +-> BYTE & dom({ushort_bv16(add16USHORT(0,nn,1))|->rgs8(13|->id_reg_8)}\/{ushort_bv16(nn)|->rgs8(14|->id_reg_8)}) = BV16);
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & {ushort_bv16(add16USHORT(0,nn,1))|->rgs8(13|->id_reg_8)}\/{ushort_bv16(nn)|->rgs8(14|->id_reg_8)}: BV16 +-> BYTE & dom({ushort_bv16(add16USHORT(0,nn,1))|->rgs8(13|->id_reg_8)}\/{ushort_bv16(nn)|->rgs8(14|->id_reg_8)}) = BV16);
(0,nn,1: dom(add16USHORT));
("`Local hypotheses'" & {ushort_bv16(add16USHORT(0,nn,1))|->rgs8(13|->id_reg_8)}\/{ushort_bv16(nn)|->rgs8(14|->id_reg_8)}: BV16 +-> BYTE & dom({ushort_bv16(add16USHORT(0,nn,1))|->rgs8(13|->id_reg_8)}\/{ushort_bv16(nn)|->rgs8(14|->id_reg_8)}) = BV16);
(add16USHORT(0,nn,1): dom(ushort_bv16));
("`Local hypotheses'" & {ushort_bv16(add16USHORT(0,nn,1))|->rgs8(13|->id_reg_8)}\/{ushort_bv16(nn)|->rgs8(14|->id_reg_8)}: BV16 +-> BYTE & dom({ushort_bv16(add16USHORT(0,nn,1))|->rgs8(13|->id_reg_8)}\/{ushort_bv16(nn)|->rgs8(14|->id_reg_8)}) = BV16);
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & {ushort_bv16(add16USHORT(0,nn,1))|->rgs8(13|->id_reg_8)}\/{ushort_bv16(nn)|->rgs8(14|->id_reg_8)}: BV16 +-> BYTE & dom({ushort_bv16(add16USHORT(0,nn,1))|->rgs8(13|->id_reg_8)}\/{ushort_bv16(nn)|->rgs8(14|->id_reg_8)}) = BV16 & elem: dom({ushort_bv16(add16USHORT(0,nn,1))|->rgs8(13|->id_reg_8)}\/{ushort_bv16(nn)|->rgs8(14|->id_reg_8)}));
(elem: dom(bv16_ushort));
("`Local hypotheses'" & {ushort_bv16(add16USHORT(0,nn,1))|->rgs8(13|->id_reg_8)}\/{ushort_bv16(nn)|->rgs8(14|->id_reg_8)}: BV16 +-> BYTE & dom({ushort_bv16(add16USHORT(0,nn,1))|->rgs8(13|->id_reg_8)}\/{ushort_bv16(nn)|->rgs8(14|->id_reg_8)}) = BV16 & !elem.(elem: dom({ushort_bv16(add16USHORT(0,nn,1))|->rgs8(13|->id_reg_8)}\/{ushort_bv16(nn)|->rgs8(14|->id_reg_8)}) => bv16_ushort(elem): PROGRAM_R_ADR));
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & {ushort_bv16(add16USHORT(0,nn,1))|->rgs8(13|->id_reg_8)}\/{ushort_bv16(nn)|->rgs8(14|->id_reg_8)}: BV16 +-> BYTE & dom({ushort_bv16(add16USHORT(0,nn,1))|->rgs8(13|->id_reg_8)}\/{ushort_bv16(nn)|->rgs8(14|->id_reg_8)}) = BV16 & !elem.(elem: dom({ushort_bv16(add16USHORT(0,nn,1))|->rgs8(13|->id_reg_8)}\/{ushort_bv16(nn)|->rgs8(14|->id_reg_8)}) => bv16_ushort(elem): PROGRAM_R_ADR));
(0,nn,1: dom(add16USHORT));
("`Local hypotheses'" & {ushort_bv16(add16USHORT(0,nn,1))|->rgs8(13|->id_reg_8)}\/{ushort_bv16(nn)|->rgs8(14|->id_reg_8)}: BV16 +-> BYTE & dom({ushort_bv16(add16USHORT(0,nn,1))|->rgs8(13|->id_reg_8)}\/{ushort_bv16(nn)|->rgs8(14|->id_reg_8)}) = BV16 & !elem.(elem: dom({ushort_bv16(add16USHORT(0,nn,1))|->rgs8(13|->id_reg_8)}\/{ushort_bv16(nn)|->rgs8(14|->id_reg_8)}) => bv16_ushort(elem): PROGRAM_R_ADR));
(add16USHORT(0,nn,1): dom(ushort_bv16));
("`Local hypotheses'" & {ushort_bv16(add16USHORT(0,nn,1))|->rgs8(13|->id_reg_8)}\/{ushort_bv16(nn)|->rgs8(14|->id_reg_8)}: BV16 +-> BYTE & dom({ushort_bv16(add16USHORT(0,nn,1))|->rgs8(13|->id_reg_8)}\/{ushort_bv16(nn)|->rgs8(14|->id_reg_8)}) = BV16 & !elem.(elem: dom({ushort_bv16(add16USHORT(0,nn,1))|->rgs8(13|->id_reg_8)}\/{ushort_bv16(nn)|->rgs8(14|->id_reg_8)}) => bv16_ushort(elem): PROGRAM_R_ADR));
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & nn: USHORT & nn: DATA_R_ADR);
(0,nn,1: dom(add16USHORT));
("`LD_9nn0_dd preconditions in previous components'" & btrue);
("`LD_9nn0_dd preconditions in this component'" & dd: (1..5)*{id_reg_16} & not(dd = 5|->id_reg_16) & nn: USHORT & nn: DATA_R_ADR & add16USHORT(0,nn,1): DATA_R_ADR);
("`Local hypotheses'" & dd = 4|->id_reg_16 & vh: BYTE & vl: BYTE & bv16_byte(sp) = vh|->vl);
(0,nn,1: dom(add16USHORT));
("`Local hypotheses'" & dd = 4|->id_reg_16 & vh: BYTE & vl: BYTE & bv16_byte(sp) = vh|->vl);
(add16USHORT(0,nn,1): dom(ushort_bv16));
("`Local hypotheses'" & dd = 4|->id_reg_16 & vh: BYTE & vl: BYTE & bv16_byte(sp) = vh|->vl & not(ushort_bv16(add16USHORT(0,nn,1)) = ushort_bv16(nn)));
(0,nn,1: dom(add16USHORT));
("`Local hypotheses'" & dd = 4|->id_reg_16 & vh: BYTE & vl: BYTE & bv16_byte(sp) = vh|->vl & not(ushort_bv16(add16USHORT(0,nn,1)) = ushort_bv16(nn)));
(add16USHORT(0,nn,1): dom(ushort_bv16));
("`Local hypotheses'" & dd = 4|->id_reg_16 & vh: BYTE & vl: BYTE & bv16_byte(sp) = vh|->vl & not(ushort_bv16(add16USHORT(0,nn,1)) = ushort_bv16(nn)) & {ushort_bv16(add16USHORT(0,nn,1))|->vh}\/{ushort_bv16(nn)|->vl}: BV16 +-> BYTE & dom({ushort_bv16(add16USHORT(0,nn,1))|->vh}\/{ushort_bv16(nn)|->vl}) = BV16);
(0,nn,1: dom(add16USHORT));
("`Local hypotheses'" & dd = 4|->id_reg_16 & vh: BYTE & vl: BYTE & bv16_byte(sp) = vh|->vl & not(ushort_bv16(add16USHORT(0,nn,1)) = ushort_bv16(nn)) & {ushort_bv16(add16USHORT(0,nn,1))|->vh}\/{ushort_bv16(nn)|->vl}: BV16 +-> BYTE & dom({ushort_bv16(add16USHORT(0,nn,1))|->vh}\/{ushort_bv16(nn)|->vl}) = BV16);
(add16USHORT(0,nn,1): dom(ushort_bv16));
("`Local hypotheses'" & dd = 4|->id_reg_16 & vh: BYTE & vl: BYTE & bv16_byte(sp) = vh|->vl & not(ushort_bv16(add16USHORT(0,nn,1)) = ushort_bv16(nn)) & {ushort_bv16(add16USHORT(0,nn,1))|->vh}\/{ushort_bv16(nn)|->vl}: BV16 +-> BYTE & dom({ushort_bv16(add16USHORT(0,nn,1))|->vh}\/{ushort_bv16(nn)|->vl}) = BV16 & elem: dom({ushort_bv16(add16USHORT(0,nn,1))|->vh}\/{ushort_bv16(nn)|->vl}));
(elem: dom(bv16_ushort));
("`Local hypotheses'" & dd = 4|->id_reg_16 & vh: BYTE & vl: BYTE & bv16_byte(sp) = vh|->vl & not(ushort_bv16(add16USHORT(0,nn,1)) = ushort_bv16(nn)) & {ushort_bv16(add16USHORT(0,nn,1))|->vh}\/{ushort_bv16(nn)|->vl}: BV16 +-> BYTE & dom({ushort_bv16(add16USHORT(0,nn,1))|->vh}\/{ushort_bv16(nn)|->vl}) = BV16 & !elem.(elem: dom({ushort_bv16(add16USHORT(0,nn,1))|->vh}\/{ushort_bv16(nn)|->vl}) => bv16_ushort(elem): PROGRAM_R_ADR));
(0,nn,1: dom(add16USHORT));
("`Local hypotheses'" & dd = 4|->id_reg_16 & vh: BYTE & vl: BYTE & bv16_byte(sp) = vh|->vl & not(ushort_bv16(add16USHORT(0,nn,1)) = ushort_bv16(nn)) & {ushort_bv16(add16USHORT(0,nn,1))|->vh}\/{ushort_bv16(nn)|->vl}: BV16 +-> BYTE & dom({ushort_bv16(add16USHORT(0,nn,1))|->vh}\/{ushort_bv16(nn)|->vl}) = BV16 & !elem.(elem: dom({ushort_bv16(add16USHORT(0,nn,1))|->vh}\/{ushort_bv16(nn)|->vl}) => bv16_ushort(elem): PROGRAM_R_ADR));
(add16USHORT(0,nn,1): dom(ushort_bv16));
("`Local hypotheses'" & not(dd = 4|->id_reg_16) & rh: (1..16)*{id_reg_8} & rl: (1..16)*{id_reg_8} & w1: SCHAR & w2: BYTE & rh,rl = REG16_TO_REG8(dd) & not(rh = rl));
(0,nn,1: dom(add16USHORT));
("`Local hypotheses'" & not(dd = 4|->id_reg_16) & rh: (1..16)*{id_reg_8} & rl: (1..16)*{id_reg_8} & w1: SCHAR & w2: BYTE & rh,rl = REG16_TO_REG8(dd) & not(rh = rl));
(add16USHORT(0,nn,1): dom(ushort_bv16));
("`Local hypotheses'" & not(dd = 4|->id_reg_16) & rh: (1..16)*{id_reg_8} & rl: (1..16)*{id_reg_8} & w1: SCHAR & w2: BYTE & rh,rl = REG16_TO_REG8(dd) & not(rh = rl) & {ushort_bv16(add16USHORT(0,nn,1))|->rgs8(rh)}\/{ushort_bv16(nn)|->rgs8(rl)}: BV16 +-> BYTE & dom({ushort_bv16(add16USHORT(0,nn,1))|->rgs8(rh)}\/{ushort_bv16(nn)|->rgs8(rl)}) = BV16);
(0,nn,1: dom(add16USHORT));
("`Local hypotheses'" & not(dd = 4|->id_reg_16) & rh: (1..16)*{id_reg_8} & rl: (1..16)*{id_reg_8} & w1: SCHAR & w2: BYTE & rh,rl = REG16_TO_REG8(dd) & not(rh = rl) & {ushort_bv16(add16USHORT(0,nn,1))|->rgs8(rh)}\/{ushort_bv16(nn)|->rgs8(rl)}: BV16 +-> BYTE & dom({ushort_bv16(add16USHORT(0,nn,1))|->rgs8(rh)}\/{ushort_bv16(nn)|->rgs8(rl)}) = BV16);
(add16USHORT(0,nn,1): dom(ushort_bv16));
("`Local hypotheses'" & not(dd = 4|->id_reg_16) & rh: (1..16)*{id_reg_8} & rl: (1..16)*{id_reg_8} & w1: SCHAR & w2: BYTE & rh,rl = REG16_TO_REG8(dd) & not(rh = rl) & {ushort_bv16(add16USHORT(0,nn,1))|->rgs8(rh)}\/{ushort_bv16(nn)|->rgs8(rl)}: BV16 +-> BYTE & dom({ushort_bv16(add16USHORT(0,nn,1))|->rgs8(rh)}\/{ushort_bv16(nn)|->rgs8(rl)}) = BV16 & elem: dom({ushort_bv16(add16USHORT(0,nn,1))|->rgs8(rh)}\/{ushort_bv16(nn)|->rgs8(rl)}));
(elem: dom(bv16_ushort));
("`Local hypotheses'" & not(dd = 4|->id_reg_16) & rh: (1..16)*{id_reg_8} & rl: (1..16)*{id_reg_8} & w1: SCHAR & w2: BYTE & rh,rl = REG16_TO_REG8(dd) & not(rh = rl) & {ushort_bv16(add16USHORT(0,nn,1))|->rgs8(rh)}\/{ushort_bv16(nn)|->rgs8(rl)}: BV16 +-> BYTE & dom({ushort_bv16(add16USHORT(0,nn,1))|->rgs8(rh)}\/{ushort_bv16(nn)|->rgs8(rl)}) = BV16 & !elem.(elem: dom({ushort_bv16(add16USHORT(0,nn,1))|->rgs8(rh)}\/{ushort_bv16(nn)|->rgs8(rl)}) => bv16_ushort(elem): PROGRAM_R_ADR));
(0,nn,1: dom(add16USHORT));
("`Local hypotheses'" & not(dd = 4|->id_reg_16) & rh: (1..16)*{id_reg_8} & rl: (1..16)*{id_reg_8} & w1: SCHAR & w2: BYTE & rh,rl = REG16_TO_REG8(dd) & not(rh = rl) & {ushort_bv16(add16USHORT(0,nn,1))|->rgs8(rh)}\/{ushort_bv16(nn)|->rgs8(rl)}: BV16 +-> BYTE & dom({ushort_bv16(add16USHORT(0,nn,1))|->rgs8(rh)}\/{ushort_bv16(nn)|->rgs8(rl)}) = BV16 & !elem.(elem: dom({ushort_bv16(add16USHORT(0,nn,1))|->rgs8(rh)}\/{ushort_bv16(nn)|->rgs8(rl)}) => bv16_ushort(elem): PROGRAM_R_ADR));
(add16USHORT(0,nn,1): dom(ushort_bv16));
("`Local hypotheses'" & dd: (1..5)*{id_reg_16} & not(dd = 5|->id_reg_16) & nn: USHORT & nn: DATA_R_ADR);
(0,nn,1: dom(add16USHORT));
("`LD_9nn0_IX preconditions in previous components'" & btrue);
("`LD_9nn0_IX preconditions in this component'" & nn: USHORT & nn: DATA_R_ADR & add16USHORT(0,nn,1): DATA_R_ADR);
("`Local hypotheses'" & h_ix: BYTE & l_ix: BYTE & h_ix,l_ix = bv16_byte(ix));
(0,nn,1: dom(add16USHORT));
("`Local hypotheses'" & h_ix: BYTE & l_ix: BYTE & h_ix,l_ix = bv16_byte(ix));
(add16USHORT(0,nn,1): dom(ushort_bv16));
("`Local hypotheses'" & h_ix: BYTE & l_ix: BYTE & h_ix,l_ix = bv16_byte(ix) & {ushort_bv16(add16USHORT(0,nn,1))|->h_ix}\/{ushort_bv16(nn)|->l_ix}: BV16 +-> BYTE & dom({ushort_bv16(add16USHORT(0,nn,1))|->h_ix}\/{ushort_bv16(nn)|->l_ix}) = BV16);
(0,nn,1: dom(add16USHORT));
("`Local hypotheses'" & h_ix: BYTE & l_ix: BYTE & h_ix,l_ix = bv16_byte(ix) & {ushort_bv16(add16USHORT(0,nn,1))|->h_ix}\/{ushort_bv16(nn)|->l_ix}: BV16 +-> BYTE & dom({ushort_bv16(add16USHORT(0,nn,1))|->h_ix}\/{ushort_bv16(nn)|->l_ix}) = BV16);
(add16USHORT(0,nn,1): dom(ushort_bv16));
("`Local hypotheses'" & h_ix: BYTE & l_ix: BYTE & h_ix,l_ix = bv16_byte(ix) & {ushort_bv16(add16USHORT(0,nn,1))|->h_ix}\/{ushort_bv16(nn)|->l_ix}: BV16 +-> BYTE & dom({ushort_bv16(add16USHORT(0,nn,1))|->h_ix}\/{ushort_bv16(nn)|->l_ix}) = BV16 & elem: dom({ushort_bv16(add16USHORT(0,nn,1))|->h_ix}\/{ushort_bv16(nn)|->l_ix}));
(elem: dom(bv16_ushort));
("`Local hypotheses'" & h_ix: BYTE & l_ix: BYTE & h_ix,l_ix = bv16_byte(ix) & {ushort_bv16(add16USHORT(0,nn,1))|->h_ix}\/{ushort_bv16(nn)|->l_ix}: BV16 +-> BYTE & dom({ushort_bv16(add16USHORT(0,nn,1))|->h_ix}\/{ushort_bv16(nn)|->l_ix}) = BV16 & !elem.(elem: dom({ushort_bv16(add16USHORT(0,nn,1))|->h_ix}\/{ushort_bv16(nn)|->l_ix}) => bv16_ushort(elem): PROGRAM_R_ADR));
(0,nn,1: dom(add16USHORT));
("`Local hypotheses'" & h_ix: BYTE & l_ix: BYTE & h_ix,l_ix = bv16_byte(ix) & {ushort_bv16(add16USHORT(0,nn,1))|->h_ix}\/{ushort_bv16(nn)|->l_ix}: BV16 +-> BYTE & dom({ushort_bv16(add16USHORT(0,nn,1))|->h_ix}\/{ushort_bv16(nn)|->l_ix}) = BV16 & !elem.(elem: dom({ushort_bv16(add16USHORT(0,nn,1))|->h_ix}\/{ushort_bv16(nn)|->l_ix}) => bv16_ushort(elem): PROGRAM_R_ADR));
(add16USHORT(0,nn,1): dom(ushort_bv16));
("`Local hypotheses'" & nn: USHORT & nn: DATA_R_ADR);
(0,nn,1: dom(add16USHORT));
("`LD_9nn0_IY preconditions in previous components'" & btrue);
("`LD_9nn0_IY preconditions in this component'" & nn: USHORT & nn: DATA_R_ADR & add16USHORT(0,nn,1): DATA_R_ADR);
("`Local hypotheses'" & h_iy: BYTE & l_iy: BYTE & h_iy,l_iy = bv16_byte(iy));
(0,nn,1: dom(add16USHORT));
("`Local hypotheses'" & h_iy: BYTE & l_iy: BYTE & h_iy,l_iy = bv16_byte(iy));
(add16USHORT(0,nn,1): dom(ushort_bv16));
("`Local hypotheses'" & h_iy: BYTE & l_iy: BYTE & h_iy,l_iy = bv16_byte(iy) & {ushort_bv16(add16USHORT(0,nn,1))|->h_iy}\/{ushort_bv16(nn)|->l_iy}: BV16 +-> BYTE & dom({ushort_bv16(add16USHORT(0,nn,1))|->h_iy}\/{ushort_bv16(nn)|->l_iy}) = BV16);
(0,nn,1: dom(add16USHORT));
("`Local hypotheses'" & h_iy: BYTE & l_iy: BYTE & h_iy,l_iy = bv16_byte(iy) & {ushort_bv16(add16USHORT(0,nn,1))|->h_iy}\/{ushort_bv16(nn)|->l_iy}: BV16 +-> BYTE & dom({ushort_bv16(add16USHORT(0,nn,1))|->h_iy}\/{ushort_bv16(nn)|->l_iy}) = BV16);
(add16USHORT(0,nn,1): dom(ushort_bv16));
("`Local hypotheses'" & h_iy: BYTE & l_iy: BYTE & h_iy,l_iy = bv16_byte(iy) & {ushort_bv16(add16USHORT(0,nn,1))|->h_iy}\/{ushort_bv16(nn)|->l_iy}: BV16 +-> BYTE & dom({ushort_bv16(add16USHORT(0,nn,1))|->h_iy}\/{ushort_bv16(nn)|->l_iy}) = BV16 & elem: dom({ushort_bv16(add16USHORT(0,nn,1))|->h_iy}\/{ushort_bv16(nn)|->l_iy}));
(elem: dom(bv16_ushort));
("`Local hypotheses'" & h_iy: BYTE & l_iy: BYTE & h_iy,l_iy = bv16_byte(iy) & {ushort_bv16(add16USHORT(0,nn,1))|->h_iy}\/{ushort_bv16(nn)|->l_iy}: BV16 +-> BYTE & dom({ushort_bv16(add16USHORT(0,nn,1))|->h_iy}\/{ushort_bv16(nn)|->l_iy}) = BV16 & !elem.(elem: dom({ushort_bv16(add16USHORT(0,nn,1))|->h_iy}\/{ushort_bv16(nn)|->l_iy}) => bv16_ushort(elem): PROGRAM_R_ADR));
(0,nn,1: dom(add16USHORT));
("`Local hypotheses'" & h_iy: BYTE & l_iy: BYTE & h_iy,l_iy = bv16_byte(iy) & {ushort_bv16(add16USHORT(0,nn,1))|->h_iy}\/{ushort_bv16(nn)|->l_iy}: BV16 +-> BYTE & dom({ushort_bv16(add16USHORT(0,nn,1))|->h_iy}\/{ushort_bv16(nn)|->l_iy}) = BV16 & !elem.(elem: dom({ushort_bv16(add16USHORT(0,nn,1))|->h_iy}\/{ushort_bv16(nn)|->l_iy}) => bv16_ushort(elem): PROGRAM_R_ADR));
(add16USHORT(0,nn,1): dom(ushort_bv16));
("`Local hypotheses'" & nn: USHORT & nn: DATA_R_ADR);
(0,nn,1: dom(add16USHORT));
("`LD_SP_HL preconditions in previous components'" & btrue);
("`LD_SP_HL preconditions in this component'" & btrue);
("`Local hypotheses'" & btrue);
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`LD_SP_IX preconditions in previous components'" & btrue);
("`LD_SP_IX preconditions in this component'" & btrue);
("`LD_SP_IY preconditions in previous components'" & btrue);
("`LD_SP_IY preconditions in this component'" & btrue);
("`PUSH_qq preconditions in previous components'" & btrue);
("`PUSH_qq preconditions in this component'" & qq: (1..5)*{id_reg_16} & not(qq = 4|->id_reg_16));
("`Local hypotheses'" & qqh: (1..16)*{id_reg_8} & qql: (1..16)*{id_reg_8} & REG16_TO_REG8(qq) = qqh|->qql & not(qqh = qql));
(0,bv16_ushort(sp),1: dom(sub16USHORT));
("`Local hypotheses'" & qqh: (1..16)*{id_reg_8} & qql: (1..16)*{id_reg_8} & REG16_TO_REG8(qq) = qqh|->qql & not(qqh = qql));
(sub16USHORT(0,bv16_ushort(sp),1): dom(ushort_bv16));
("`Local hypotheses'" & qqh: (1..16)*{id_reg_8} & qql: (1..16)*{id_reg_8} & REG16_TO_REG8(qq) = qqh|->qql & not(qqh = qql));
(0,bv16_ushort(sp),2: dom(sub16USHORT));
("`Local hypotheses'" & qqh: (1..16)*{id_reg_8} & qql: (1..16)*{id_reg_8} & REG16_TO_REG8(qq) = qqh|->qql & not(qqh = qql));
(sub16USHORT(0,bv16_ushort(sp),2): dom(ushort_bv16));
("`Local hypotheses'" & qqh: (1..16)*{id_reg_8} & qql: (1..16)*{id_reg_8} & REG16_TO_REG8(qq) = qqh|->qql & not(qqh = qql) & dom({ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->rgs8(qql)}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->rgs8(qqh)}) = BV16 & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->rgs8(qql)}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->rgs8(qqh)}: BV16 +-> BYTE);
(0,bv16_ushort(sp),1: dom(sub16USHORT));
("`Local hypotheses'" & qqh: (1..16)*{id_reg_8} & qql: (1..16)*{id_reg_8} & REG16_TO_REG8(qq) = qqh|->qql & not(qqh = qql) & dom({ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->rgs8(qql)}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->rgs8(qqh)}) = BV16 & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->rgs8(qql)}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->rgs8(qqh)}: BV16 +-> BYTE);
(sub16USHORT(0,bv16_ushort(sp),1): dom(ushort_bv16));
("`Local hypotheses'" & qqh: (1..16)*{id_reg_8} & qql: (1..16)*{id_reg_8} & REG16_TO_REG8(qq) = qqh|->qql & not(qqh = qql) & dom({ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->rgs8(qql)}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->rgs8(qqh)}) = BV16 & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->rgs8(qql)}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->rgs8(qqh)}: BV16 +-> BYTE);
(0,bv16_ushort(sp),2: dom(sub16USHORT));
("`Local hypotheses'" & qqh: (1..16)*{id_reg_8} & qql: (1..16)*{id_reg_8} & REG16_TO_REG8(qq) = qqh|->qql & not(qqh = qql) & dom({ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->rgs8(qql)}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->rgs8(qqh)}) = BV16 & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->rgs8(qql)}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->rgs8(qqh)}: BV16 +-> BYTE);
(sub16USHORT(0,bv16_ushort(sp),2): dom(ushort_bv16));
("`Local hypotheses'" & qqh: (1..16)*{id_reg_8} & qql: (1..16)*{id_reg_8} & REG16_TO_REG8(qq) = qqh|->qql & not(qqh = qql) & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->rgs8(qql)}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->rgs8(qqh)}: BV16 +-> BYTE & dom({ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->rgs8(qql)}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->rgs8(qqh)}) = BV16 & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->rgs8(qql)}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->rgs8(qqh)}: BV16 +-> BYTE & dom({ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->rgs8(qql)}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->rgs8(qqh)}) = BV16);
(0,bv16_ushort(sp),1: dom(sub16USHORT));
("`Local hypotheses'" & qqh: (1..16)*{id_reg_8} & qql: (1..16)*{id_reg_8} & REG16_TO_REG8(qq) = qqh|->qql & not(qqh = qql) & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->rgs8(qql)}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->rgs8(qqh)}: BV16 +-> BYTE & dom({ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->rgs8(qql)}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->rgs8(qqh)}) = BV16 & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->rgs8(qql)}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->rgs8(qqh)}: BV16 +-> BYTE & dom({ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->rgs8(qql)}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->rgs8(qqh)}) = BV16);
(sub16USHORT(0,bv16_ushort(sp),1): dom(ushort_bv16));
("`Local hypotheses'" & qqh: (1..16)*{id_reg_8} & qql: (1..16)*{id_reg_8} & REG16_TO_REG8(qq) = qqh|->qql & not(qqh = qql) & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->rgs8(qql)}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->rgs8(qqh)}: BV16 +-> BYTE & dom({ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->rgs8(qql)}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->rgs8(qqh)}) = BV16 & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->rgs8(qql)}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->rgs8(qqh)}: BV16 +-> BYTE & dom({ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->rgs8(qql)}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->rgs8(qqh)}) = BV16);
(0,bv16_ushort(sp),2: dom(sub16USHORT));
("`Local hypotheses'" & qqh: (1..16)*{id_reg_8} & qql: (1..16)*{id_reg_8} & REG16_TO_REG8(qq) = qqh|->qql & not(qqh = qql) & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->rgs8(qql)}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->rgs8(qqh)}: BV16 +-> BYTE & dom({ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->rgs8(qql)}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->rgs8(qqh)}) = BV16 & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->rgs8(qql)}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->rgs8(qqh)}: BV16 +-> BYTE & dom({ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->rgs8(qql)}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->rgs8(qqh)}) = BV16);
(sub16USHORT(0,bv16_ushort(sp),2): dom(ushort_bv16));
("`Local hypotheses'" & qqh: (1..16)*{id_reg_8} & qql: (1..16)*{id_reg_8} & REG16_TO_REG8(qq) = qqh|->qql & not(qqh = qql) & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->rgs8(qql)}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->rgs8(qqh)}: BV16 +-> BYTE & dom({ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->rgs8(qql)}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->rgs8(qqh)}) = BV16 & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->rgs8(qql)}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->rgs8(qqh)}: BV16 +-> BYTE & dom({ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->rgs8(qql)}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->rgs8(qqh)}) = BV16 & elem: dom({ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->rgs8(qql)}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->rgs8(qqh)}));
(elem: dom(bv16_ushort));
("`Local hypotheses'" & qqh: (1..16)*{id_reg_8} & qql: (1..16)*{id_reg_8} & REG16_TO_REG8(qq) = qqh|->qql & not(qqh = qql) & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->rgs8(qql)}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->rgs8(qqh)}: BV16 +-> BYTE & dom({ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->rgs8(qql)}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->rgs8(qqh)}) = BV16 & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->rgs8(qql)}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->rgs8(qqh)}: BV16 +-> BYTE & dom({ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->rgs8(qql)}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->rgs8(qqh)}) = BV16 & !elem.(elem: dom({ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->rgs8(qql)}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->rgs8(qqh)}) => bv16_ushort(elem): STACK_R_ADR));
(0,bv16_ushort(sp),1: dom(sub16USHORT));
("`Local hypotheses'" & qqh: (1..16)*{id_reg_8} & qql: (1..16)*{id_reg_8} & REG16_TO_REG8(qq) = qqh|->qql & not(qqh = qql) & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->rgs8(qql)}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->rgs8(qqh)}: BV16 +-> BYTE & dom({ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->rgs8(qql)}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->rgs8(qqh)}) = BV16 & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->rgs8(qql)}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->rgs8(qqh)}: BV16 +-> BYTE & dom({ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->rgs8(qql)}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->rgs8(qqh)}) = BV16 & !elem.(elem: dom({ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->rgs8(qql)}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->rgs8(qqh)}) => bv16_ushort(elem): STACK_R_ADR));
(sub16USHORT(0,bv16_ushort(sp),1): dom(ushort_bv16));
("`Local hypotheses'" & qqh: (1..16)*{id_reg_8} & qql: (1..16)*{id_reg_8} & REG16_TO_REG8(qq) = qqh|->qql & not(qqh = qql) & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->rgs8(qql)}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->rgs8(qqh)}: BV16 +-> BYTE & dom({ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->rgs8(qql)}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->rgs8(qqh)}) = BV16 & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->rgs8(qql)}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->rgs8(qqh)}: BV16 +-> BYTE & dom({ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->rgs8(qql)}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->rgs8(qqh)}) = BV16 & !elem.(elem: dom({ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->rgs8(qql)}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->rgs8(qqh)}) => bv16_ushort(elem): STACK_R_ADR));
(0,bv16_ushort(sp),2: dom(sub16USHORT));
("`Local hypotheses'" & qqh: (1..16)*{id_reg_8} & qql: (1..16)*{id_reg_8} & REG16_TO_REG8(qq) = qqh|->qql & not(qqh = qql) & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->rgs8(qql)}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->rgs8(qqh)}: BV16 +-> BYTE & dom({ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->rgs8(qql)}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->rgs8(qqh)}) = BV16 & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->rgs8(qql)}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->rgs8(qqh)}: BV16 +-> BYTE & dom({ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->rgs8(qql)}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->rgs8(qqh)}) = BV16 & !elem.(elem: dom({ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->rgs8(qql)}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->rgs8(qqh)}) => bv16_ushort(elem): STACK_R_ADR));
(sub16USHORT(0,bv16_ushort(sp),2): dom(ushort_bv16));
("`Local hypotheses'" & qqh: (1..16)*{id_reg_8} & qql: (1..16)*{id_reg_8} & REG16_TO_REG8(qq) = qqh|->qql & not(qqh = qql) & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->rgs8(qql)}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->rgs8(qqh)}: BV16 +-> BYTE & dom({ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->rgs8(qql)}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->rgs8(qqh)}) = BV16 & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->rgs8(qql)}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->rgs8(qqh)}: BV16 +-> BYTE & dom({ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->rgs8(qql)}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->rgs8(qqh)}) = BV16 & !elem.(elem: dom({ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->rgs8(qql)}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->rgs8(qqh)}) => bv16_ushort(elem): STACK_R_ADR));
(0,bv16_ushort(sp),2: dom(sub16USHORT));
("`Local hypotheses'" & qqh: (1..16)*{id_reg_8} & qql: (1..16)*{id_reg_8} & REG16_TO_REG8(qq) = qqh|->qql & not(qqh = qql) & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->rgs8(qql)}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->rgs8(qqh)}: BV16 +-> BYTE & dom({ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->rgs8(qql)}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->rgs8(qqh)}) = BV16 & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->rgs8(qql)}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->rgs8(qqh)}: BV16 +-> BYTE & dom({ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->rgs8(qql)}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->rgs8(qqh)}) = BV16 & !elem.(elem: dom({ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->rgs8(qql)}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->rgs8(qqh)}) => bv16_ushort(elem): STACK_R_ADR));
(sub16USHORT(0,bv16_ushort(sp),2): dom(ushort_bv16));
("`PUSH_IX preconditions in previous components'" & btrue);
("`PUSH_IX preconditions in this component'" & btrue);
("`Local hypotheses'" & wh: BYTE & wl: BYTE & bv16_byte(ix) = wh|->wl);
(0,bv16_ushort(sp),1: dom(sub16USHORT));
("`Local hypotheses'" & wh: BYTE & wl: BYTE & bv16_byte(ix) = wh|->wl);
(sub16USHORT(0,bv16_ushort(sp),1): dom(ushort_bv16));
("`Local hypotheses'" & wh: BYTE & wl: BYTE & bv16_byte(ix) = wh|->wl);
(0,bv16_ushort(sp),2: dom(sub16USHORT));
("`Local hypotheses'" & wh: BYTE & wl: BYTE & bv16_byte(ix) = wh|->wl);
(sub16USHORT(0,bv16_ushort(sp),2): dom(ushort_bv16));
("`Local hypotheses'" & wh: BYTE & wl: BYTE & bv16_byte(ix) = wh|->wl & dom({ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->wl}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->wh}) = BV16 & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->wl}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->wh}: BV16 +-> BYTE);
(0,bv16_ushort(sp),1: dom(sub16USHORT));
("`Local hypotheses'" & wh: BYTE & wl: BYTE & bv16_byte(ix) = wh|->wl & dom({ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->wl}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->wh}) = BV16 & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->wl}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->wh}: BV16 +-> BYTE);
(sub16USHORT(0,bv16_ushort(sp),1): dom(ushort_bv16));
("`Local hypotheses'" & wh: BYTE & wl: BYTE & bv16_byte(ix) = wh|->wl & dom({ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->wl}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->wh}) = BV16 & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->wl}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->wh}: BV16 +-> BYTE);
(0,bv16_ushort(sp),2: dom(sub16USHORT));
("`Local hypotheses'" & wh: BYTE & wl: BYTE & bv16_byte(ix) = wh|->wl & dom({ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->wl}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->wh}) = BV16 & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->wl}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->wh}: BV16 +-> BYTE);
(sub16USHORT(0,bv16_ushort(sp),2): dom(ushort_bv16));
("`Local hypotheses'" & wh: BYTE & wl: BYTE & bv16_byte(ix) = wh|->wl & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->wl}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->wh}: BV16 +-> BYTE & dom({ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->wl}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->wh}) = BV16 & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->wl}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->wh}: BV16 +-> BYTE & dom({ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->wl}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->wh}) = BV16);
(0,bv16_ushort(sp),1: dom(sub16USHORT));
("`Local hypotheses'" & wh: BYTE & wl: BYTE & bv16_byte(ix) = wh|->wl & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->wl}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->wh}: BV16 +-> BYTE & dom({ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->wl}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->wh}) = BV16 & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->wl}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->wh}: BV16 +-> BYTE & dom({ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->wl}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->wh}) = BV16);
(sub16USHORT(0,bv16_ushort(sp),1): dom(ushort_bv16));
("`Local hypotheses'" & wh: BYTE & wl: BYTE & bv16_byte(ix) = wh|->wl & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->wl}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->wh}: BV16 +-> BYTE & dom({ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->wl}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->wh}) = BV16 & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->wl}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->wh}: BV16 +-> BYTE & dom({ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->wl}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->wh}) = BV16);
(0,bv16_ushort(sp),2: dom(sub16USHORT));
("`Local hypotheses'" & wh: BYTE & wl: BYTE & bv16_byte(ix) = wh|->wl & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->wl}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->wh}: BV16 +-> BYTE & dom({ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->wl}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->wh}) = BV16 & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->wl}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->wh}: BV16 +-> BYTE & dom({ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->wl}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->wh}) = BV16);
(sub16USHORT(0,bv16_ushort(sp),2): dom(ushort_bv16));
("`Local hypotheses'" & wh: BYTE & wl: BYTE & bv16_byte(ix) = wh|->wl & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->wl}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->wh}: BV16 +-> BYTE & dom({ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->wl}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->wh}) = BV16 & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->wl}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->wh}: BV16 +-> BYTE & dom({ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->wl}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->wh}) = BV16 & elem: dom({ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->wl}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->wh}));
(elem: dom(bv16_ushort));
("`Local hypotheses'" & wh: BYTE & wl: BYTE & bv16_byte(ix) = wh|->wl & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->wl}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->wh}: BV16 +-> BYTE & dom({ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->wl}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->wh}) = BV16 & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->wl}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->wh}: BV16 +-> BYTE & dom({ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->wl}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->wh}) = BV16 & !elem.(elem: dom({ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->wl}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->wh}) => bv16_ushort(elem): STACK_R_ADR));
(0,bv16_ushort(sp),1: dom(sub16USHORT));
("`Local hypotheses'" & wh: BYTE & wl: BYTE & bv16_byte(ix) = wh|->wl & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->wl}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->wh}: BV16 +-> BYTE & dom({ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->wl}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->wh}) = BV16 & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->wl}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->wh}: BV16 +-> BYTE & dom({ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->wl}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->wh}) = BV16 & !elem.(elem: dom({ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->wl}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->wh}) => bv16_ushort(elem): STACK_R_ADR));
(sub16USHORT(0,bv16_ushort(sp),1): dom(ushort_bv16));
("`Local hypotheses'" & wh: BYTE & wl: BYTE & bv16_byte(ix) = wh|->wl & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->wl}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->wh}: BV16 +-> BYTE & dom({ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->wl}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->wh}) = BV16 & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->wl}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->wh}: BV16 +-> BYTE & dom({ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->wl}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->wh}) = BV16 & !elem.(elem: dom({ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->wl}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->wh}) => bv16_ushort(elem): STACK_R_ADR));
(0,bv16_ushort(sp),2: dom(sub16USHORT));
("`Local hypotheses'" & wh: BYTE & wl: BYTE & bv16_byte(ix) = wh|->wl & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->wl}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->wh}: BV16 +-> BYTE & dom({ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->wl}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->wh}) = BV16 & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->wl}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->wh}: BV16 +-> BYTE & dom({ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->wl}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->wh}) = BV16 & !elem.(elem: dom({ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->wl}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->wh}) => bv16_ushort(elem): STACK_R_ADR));
(sub16USHORT(0,bv16_ushort(sp),2): dom(ushort_bv16));
("`Local hypotheses'" & wh: BYTE & wl: BYTE & bv16_byte(ix) = wh|->wl & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->wl}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->wh}: BV16 +-> BYTE & dom({ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->wl}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->wh}) = BV16 & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->wl}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->wh}: BV16 +-> BYTE & dom({ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->wl}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->wh}) = BV16 & !elem.(elem: dom({ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->wl}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->wh}) => bv16_ushort(elem): STACK_R_ADR));
(0,bv16_ushort(sp),2: dom(sub16USHORT));
("`Local hypotheses'" & wh: BYTE & wl: BYTE & bv16_byte(ix) = wh|->wl & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->wl}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->wh}: BV16 +-> BYTE & dom({ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->wl}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->wh}) = BV16 & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->wl}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->wh}: BV16 +-> BYTE & dom({ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->wl}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->wh}) = BV16 & !elem.(elem: dom({ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->wl}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->wh}) => bv16_ushort(elem): STACK_R_ADR));
(sub16USHORT(0,bv16_ushort(sp),2): dom(ushort_bv16));
("`PUSH_IY preconditions in previous components'" & btrue);
("`PUSH_IY preconditions in this component'" & btrue);
("`Local hypotheses'" & wh: BYTE & wl: BYTE & bv16_byte(iy) = wh|->wl);
(0,bv16_ushort(sp),1: dom(sub16USHORT));
("`Local hypotheses'" & wh: BYTE & wl: BYTE & bv16_byte(iy) = wh|->wl);
(sub16USHORT(0,bv16_ushort(sp),1): dom(ushort_bv16));
("`Local hypotheses'" & wh: BYTE & wl: BYTE & bv16_byte(iy) = wh|->wl);
(0,bv16_ushort(sp),2: dom(sub16USHORT));
("`Local hypotheses'" & wh: BYTE & wl: BYTE & bv16_byte(iy) = wh|->wl);
(sub16USHORT(0,bv16_ushort(sp),2): dom(ushort_bv16));
("`Local hypotheses'" & wh: BYTE & wl: BYTE & bv16_byte(iy) = wh|->wl & dom({ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->wl}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->wh}) = BV16 & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->wl}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->wh}: BV16 +-> BYTE);
(0,bv16_ushort(sp),1: dom(sub16USHORT));
("`Local hypotheses'" & wh: BYTE & wl: BYTE & bv16_byte(iy) = wh|->wl & dom({ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->wl}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->wh}) = BV16 & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->wl}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->wh}: BV16 +-> BYTE);
(sub16USHORT(0,bv16_ushort(sp),1): dom(ushort_bv16));
("`Local hypotheses'" & wh: BYTE & wl: BYTE & bv16_byte(iy) = wh|->wl & dom({ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->wl}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->wh}) = BV16 & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->wl}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->wh}: BV16 +-> BYTE);
(0,bv16_ushort(sp),2: dom(sub16USHORT));
("`Local hypotheses'" & wh: BYTE & wl: BYTE & bv16_byte(iy) = wh|->wl & dom({ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->wl}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->wh}) = BV16 & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->wl}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->wh}: BV16 +-> BYTE);
(sub16USHORT(0,bv16_ushort(sp),2): dom(ushort_bv16));
("`Local hypotheses'" & wh: BYTE & wl: BYTE & bv16_byte(iy) = wh|->wl & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->wl}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->wh}: BV16 +-> BYTE & dom({ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->wl}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->wh}) = BV16 & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->wl}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->wh}: BV16 +-> BYTE & dom({ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->wl}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->wh}) = BV16);
(0,bv16_ushort(sp),1: dom(sub16USHORT));
("`Local hypotheses'" & wh: BYTE & wl: BYTE & bv16_byte(iy) = wh|->wl & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->wl}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->wh}: BV16 +-> BYTE & dom({ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->wl}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->wh}) = BV16 & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->wl}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->wh}: BV16 +-> BYTE & dom({ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->wl}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->wh}) = BV16);
(sub16USHORT(0,bv16_ushort(sp),1): dom(ushort_bv16));
("`Local hypotheses'" & wh: BYTE & wl: BYTE & bv16_byte(iy) = wh|->wl & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->wl}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->wh}: BV16 +-> BYTE & dom({ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->wl}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->wh}) = BV16 & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->wl}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->wh}: BV16 +-> BYTE & dom({ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->wl}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->wh}) = BV16);
(0,bv16_ushort(sp),2: dom(sub16USHORT));
("`Local hypotheses'" & wh: BYTE & wl: BYTE & bv16_byte(iy) = wh|->wl & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->wl}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->wh}: BV16 +-> BYTE & dom({ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->wl}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->wh}) = BV16 & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->wl}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->wh}: BV16 +-> BYTE & dom({ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->wl}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->wh}) = BV16);
(sub16USHORT(0,bv16_ushort(sp),2): dom(ushort_bv16));
("`Local hypotheses'" & wh: BYTE & wl: BYTE & bv16_byte(iy) = wh|->wl & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->wl}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->wh}: BV16 +-> BYTE & dom({ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->wl}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->wh}) = BV16 & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->wl}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->wh}: BV16 +-> BYTE & dom({ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->wl}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->wh}) = BV16 & elem: dom({ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->wl}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->wh}));
(elem: dom(bv16_ushort));
("`Local hypotheses'" & wh: BYTE & wl: BYTE & bv16_byte(iy) = wh|->wl & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->wl}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->wh}: BV16 +-> BYTE & dom({ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->wl}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->wh}) = BV16 & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->wl}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->wh}: BV16 +-> BYTE & dom({ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->wl}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->wh}) = BV16 & !elem.(elem: dom({ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->wl}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->wh}) => bv16_ushort(elem): STACK_R_ADR));
(0,bv16_ushort(sp),1: dom(sub16USHORT));
("`Local hypotheses'" & wh: BYTE & wl: BYTE & bv16_byte(iy) = wh|->wl & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->wl}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->wh}: BV16 +-> BYTE & dom({ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->wl}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->wh}) = BV16 & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->wl}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->wh}: BV16 +-> BYTE & dom({ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->wl}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->wh}) = BV16 & !elem.(elem: dom({ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->wl}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->wh}) => bv16_ushort(elem): STACK_R_ADR));
(sub16USHORT(0,bv16_ushort(sp),1): dom(ushort_bv16));
("`Local hypotheses'" & wh: BYTE & wl: BYTE & bv16_byte(iy) = wh|->wl & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->wl}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->wh}: BV16 +-> BYTE & dom({ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->wl}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->wh}) = BV16 & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->wl}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->wh}: BV16 +-> BYTE & dom({ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->wl}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->wh}) = BV16 & !elem.(elem: dom({ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->wl}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->wh}) => bv16_ushort(elem): STACK_R_ADR));
(0,bv16_ushort(sp),2: dom(sub16USHORT));
("`Local hypotheses'" & wh: BYTE & wl: BYTE & bv16_byte(iy) = wh|->wl & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->wl}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->wh}: BV16 +-> BYTE & dom({ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->wl}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->wh}) = BV16 & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->wl}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->wh}: BV16 +-> BYTE & dom({ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->wl}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->wh}) = BV16 & !elem.(elem: dom({ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->wl}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->wh}) => bv16_ushort(elem): STACK_R_ADR));
(sub16USHORT(0,bv16_ushort(sp),2): dom(ushort_bv16));
("`Local hypotheses'" & wh: BYTE & wl: BYTE & bv16_byte(iy) = wh|->wl & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->wl}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->wh}: BV16 +-> BYTE & dom({ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->wl}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->wh}) = BV16 & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->wl}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->wh}: BV16 +-> BYTE & dom({ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->wl}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->wh}) = BV16 & !elem.(elem: dom({ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->wl}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->wh}) => bv16_ushort(elem): STACK_R_ADR));
(0,bv16_ushort(sp),2: dom(sub16USHORT));
("`Local hypotheses'" & wh: BYTE & wl: BYTE & bv16_byte(iy) = wh|->wl & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->wl}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->wh}: BV16 +-> BYTE & dom({ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->wl}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->wh}) = BV16 & {ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->wl}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->wh}: BV16 +-> BYTE & dom({ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->wl}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->wh}) = BV16 & !elem.(elem: dom({ushort_bv16(sub16USHORT(0,bv16_ushort(sp),2))|->wl}\/{ushort_bv16(sub16USHORT(0,bv16_ushort(sp),1))|->wh}) => bv16_ushort(elem): STACK_R_ADR));
(sub16USHORT(0,bv16_ushort(sp),2): dom(ushort_bv16));
("`POP_qq preconditions in previous components'" & btrue);
("`POP_qq preconditions in this component'" & qq: (1..5)*{id_reg_16} & not(qq = 4|->id_reg_16));
("`Local hypotheses'" & qqh: (1..16)*{id_reg_8} & qql: (1..16)*{id_reg_8} & REG16_TO_REG8(qq) = qqh|->qql & not(qqh = qql));
(0,bv16_ushort(sp),1: dom(add16USHORT));
("`Local hypotheses'" & qqh: (1..16)*{id_reg_8} & qql: (1..16)*{id_reg_8} & REG16_TO_REG8(qq) = qqh|->qql & not(qqh = qql));
(add16USHORT(0,bv16_ushort(sp),1): dom(ushort_bv16));
("`Local hypotheses'" & qqh: (1..16)*{id_reg_8} & qql: (1..16)*{id_reg_8} & REG16_TO_REG8(qq) = qqh|->qql & not(qqh = qql));
(0,bv16_ushort(sp),2: dom(add16USHORT));
("`Local hypotheses'" & qqh: (1..16)*{id_reg_8} & qql: (1..16)*{id_reg_8} & REG16_TO_REG8(qq) = qqh|->qql & not(qqh = qql));
(add16USHORT(0,bv16_ushort(sp),2): dom(ushort_bv16));
("`Local hypotheses'" & qqh: (1..16)*{id_reg_8} & qql: (1..16)*{id_reg_8} & REG16_TO_REG8(qq) = qqh|->qql & not(qqh = qql) & dom({qql|->mem(ushort_bv16(add16USHORT(0,bv16_ushort(sp),2)))}\/{qqh|->mem(ushort_bv16(add16USHORT(0,bv16_ushort(sp),1)))}) = (1..16)*{id_reg_8} & {qql|->mem(ushort_bv16(add16USHORT(0,bv16_ushort(sp),2)))}\/{qqh|->mem(ushort_bv16(add16USHORT(0,bv16_ushort(sp),1)))}: (1..16)*{id_reg_8} +-> BYTE);
(0,bv16_ushort(sp),1: dom(add16USHORT));
("`Local hypotheses'" & qqh: (1..16)*{id_reg_8} & qql: (1..16)*{id_reg_8} & REG16_TO_REG8(qq) = qqh|->qql & not(qqh = qql) & dom({qql|->mem(ushort_bv16(add16USHORT(0,bv16_ushort(sp),2)))}\/{qqh|->mem(ushort_bv16(add16USHORT(0,bv16_ushort(sp),1)))}) = (1..16)*{id_reg_8} & {qql|->mem(ushort_bv16(add16USHORT(0,bv16_ushort(sp),2)))}\/{qqh|->mem(ushort_bv16(add16USHORT(0,bv16_ushort(sp),1)))}: (1..16)*{id_reg_8} +-> BYTE);
(add16USHORT(0,bv16_ushort(sp),1): dom(ushort_bv16));
("`Local hypotheses'" & qqh: (1..16)*{id_reg_8} & qql: (1..16)*{id_reg_8} & REG16_TO_REG8(qq) = qqh|->qql & not(qqh = qql) & dom({qql|->mem(ushort_bv16(add16USHORT(0,bv16_ushort(sp),2)))}\/{qqh|->mem(ushort_bv16(add16USHORT(0,bv16_ushort(sp),1)))}) = (1..16)*{id_reg_8} & {qql|->mem(ushort_bv16(add16USHORT(0,bv16_ushort(sp),2)))}\/{qqh|->mem(ushort_bv16(add16USHORT(0,bv16_ushort(sp),1)))}: (1..16)*{id_reg_8} +-> BYTE);
(0,bv16_ushort(sp),2: dom(add16USHORT));
("`Local hypotheses'" & qqh: (1..16)*{id_reg_8} & qql: (1..16)*{id_reg_8} & REG16_TO_REG8(qq) = qqh|->qql & not(qqh = qql) & dom({qql|->mem(ushort_bv16(add16USHORT(0,bv16_ushort(sp),2)))}\/{qqh|->mem(ushort_bv16(add16USHORT(0,bv16_ushort(sp),1)))}) = (1..16)*{id_reg_8} & {qql|->mem(ushort_bv16(add16USHORT(0,bv16_ushort(sp),2)))}\/{qqh|->mem(ushort_bv16(add16USHORT(0,bv16_ushort(sp),1)))}: (1..16)*{id_reg_8} +-> BYTE);
(add16USHORT(0,bv16_ushort(sp),2): dom(ushort_bv16));
("`Local hypotheses'" & qqh: (1..16)*{id_reg_8} & qql: (1..16)*{id_reg_8} & REG16_TO_REG8(qq) = qqh|->qql & not(qqh = qql) & dom({qql|->mem(ushort_bv16(add16USHORT(0,bv16_ushort(sp),2)))}\/{qqh|->mem(ushort_bv16(add16USHORT(0,bv16_ushort(sp),1)))}) = (1..16)*{id_reg_8} & {qql|->mem(ushort_bv16(add16USHORT(0,bv16_ushort(sp),2)))}\/{qqh|->mem(ushort_bv16(add16USHORT(0,bv16_ushort(sp),1)))}: (1..16)*{id_reg_8} +-> BYTE);
(0,bv16_ushort(sp),2: dom(add16USHORT));
("`Local hypotheses'" & qqh: (1..16)*{id_reg_8} & qql: (1..16)*{id_reg_8} & REG16_TO_REG8(qq) = qqh|->qql & not(qqh = qql) & dom({qql|->mem(ushort_bv16(add16USHORT(0,bv16_ushort(sp),2)))}\/{qqh|->mem(ushort_bv16(add16USHORT(0,bv16_ushort(sp),1)))}) = (1..16)*{id_reg_8} & {qql|->mem(ushort_bv16(add16USHORT(0,bv16_ushort(sp),2)))}\/{qqh|->mem(ushort_bv16(add16USHORT(0,bv16_ushort(sp),1)))}: (1..16)*{id_reg_8} +-> BYTE);
(add16USHORT(0,bv16_ushort(sp),2): dom(ushort_bv16));
("`POP_IX preconditions in previous components'" & btrue);
("`POP_IX preconditions in this component'" & sp: BV16);
("`Local hypotheses'" & bv16: BV16);
(0,bv16_ushort(sp),1: dom(add16USHORT));
("`Local hypotheses'" & bv16: BV16);
(add16USHORT(0,bv16_ushort(sp),1): dom(ushort_bv16));
("`Local hypotheses'" & bv16: BV16);
(0,bv16_ushort(sp),2: dom(add16USHORT));
("`Local hypotheses'" & bv16: BV16);
(add16USHORT(0,bv16_ushort(sp),2): dom(ushort_bv16));
("`Local hypotheses'" & bv16: BV16);
(mem(ushort_bv16(add16USHORT(0,bv16_ushort(sp),1))),mem(ushort_bv16(add16USHORT(0,bv16_ushort(sp),2))): dom(byte_bv16));
("`Local hypotheses'" & bv16: BV16 & byte_bv16(mem(ushort_bv16(add16USHORT(0,bv16_ushort(sp),1))),mem(ushort_bv16(add16USHORT(0,bv16_ushort(sp),2)))) = bv16);
(0,bv16_ushort(sp),2: dom(add16USHORT));
("`Local hypotheses'" & bv16: BV16 & byte_bv16(mem(ushort_bv16(add16USHORT(0,bv16_ushort(sp),1))),mem(ushort_bv16(add16USHORT(0,bv16_ushort(sp),2)))) = bv16);
(add16USHORT(0,bv16_ushort(sp),2): dom(ushort_bv16));
("`POP_IY preconditions in previous components'" & btrue);
("`POP_IY preconditions in this component'" & sp: BV16);
("`Local hypotheses'" & bv16: BV16);
(0,bv16_ushort(sp),1: dom(add16USHORT));
("`Local hypotheses'" & bv16: BV16);
(add16USHORT(0,bv16_ushort(sp),1): dom(ushort_bv16));
("`Local hypotheses'" & bv16: BV16);
(0,bv16_ushort(sp),2: dom(add16USHORT));
("`Local hypotheses'" & bv16: BV16);
(add16USHORT(0,bv16_ushort(sp),2): dom(ushort_bv16));
("`Local hypotheses'" & bv16: BV16);
(mem(ushort_bv16(add16USHORT(0,bv16_ushort(sp),1))),mem(ushort_bv16(add16USHORT(0,bv16_ushort(sp),2))): dom(byte_bv16));
("`Local hypotheses'" & bv16: BV16 & byte_bv16(mem(ushort_bv16(add16USHORT(0,bv16_ushort(sp),1))),mem(ushort_bv16(add16USHORT(0,bv16_ushort(sp),2)))) = bv16);
(0,bv16_ushort(sp),2: dom(add16USHORT));
("`Local hypotheses'" & bv16: BV16 & byte_bv16(mem(ushort_bv16(add16USHORT(0,bv16_ushort(sp),1))),mem(ushort_bv16(add16USHORT(0,bv16_ushort(sp),2)))) = bv16);
(add16USHORT(0,bv16_ushort(sp),2): dom(ushort_bv16));
("`EX_DE_HL preconditions in previous components'" & btrue);
("`EX_DE_HL preconditions in this component'" & btrue);
("`Local hypotheses'" & btrue);
(10|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(9|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(13|->id_reg_8: dom(rgs8));
("`EX_AF_AF_ preconditions in previous components'" & btrue);
("`EX_AF_AF_ preconditions in this component'" & btrue);
("`Local hypotheses'" & btrue);
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(1|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(3|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(4|->id_reg_8: dom(rgs8));
("`EXX preconditions in previous components'" & btrue);
("`EXX preconditions in this component'" & btrue);
("`Local hypotheses'" & btrue);
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(10|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(9|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(6|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(5|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(16|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(15|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(12|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(11|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(8|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(7|->id_reg_8: dom(rgs8));
("`EX_9SP0_HL preconditions in previous components'" & btrue);
("`EX_9SP0_HL preconditions in this component'" & bv16_ushort(ushort_bv16(add16USHORT(0,bv16_ushort(sp),1))): STACK_R_ADR & bv16_ushort(sp): STACK_R_ADR);
("`Local hypotheses'" & btrue);
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(0,bv16_ushort(sp),1: dom(add16USHORT));
("`Local hypotheses'" & btrue);
(add16USHORT(0,bv16_ushort(sp),1): dom(ushort_bv16));
("`Local hypotheses'" & btrue);
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & {ushort_bv16(add16USHORT(0,bv16_ushort(sp),1))|->rgs8(13|->id_reg_8)}\/{sp|->rgs8(14|->id_reg_8)}: BV16 +-> BYTE & dom({ushort_bv16(add16USHORT(0,bv16_ushort(sp),1))|->rgs8(13|->id_reg_8)}\/{sp|->rgs8(14|->id_reg_8)}) = BV16);
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & {ushort_bv16(add16USHORT(0,bv16_ushort(sp),1))|->rgs8(13|->id_reg_8)}\/{sp|->rgs8(14|->id_reg_8)}: BV16 +-> BYTE & dom({ushort_bv16(add16USHORT(0,bv16_ushort(sp),1))|->rgs8(13|->id_reg_8)}\/{sp|->rgs8(14|->id_reg_8)}) = BV16);
(0,bv16_ushort(sp),1: dom(add16USHORT));
("`Local hypotheses'" & {ushort_bv16(add16USHORT(0,bv16_ushort(sp),1))|->rgs8(13|->id_reg_8)}\/{sp|->rgs8(14|->id_reg_8)}: BV16 +-> BYTE & dom({ushort_bv16(add16USHORT(0,bv16_ushort(sp),1))|->rgs8(13|->id_reg_8)}\/{sp|->rgs8(14|->id_reg_8)}) = BV16);
(add16USHORT(0,bv16_ushort(sp),1): dom(ushort_bv16));
("`Local hypotheses'" & {ushort_bv16(add16USHORT(0,bv16_ushort(sp),1))|->rgs8(13|->id_reg_8)}\/{sp|->rgs8(14|->id_reg_8)}: BV16 +-> BYTE & dom({ushort_bv16(add16USHORT(0,bv16_ushort(sp),1))|->rgs8(13|->id_reg_8)}\/{sp|->rgs8(14|->id_reg_8)}) = BV16);
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & {ushort_bv16(add16USHORT(0,bv16_ushort(sp),1))|->rgs8(13|->id_reg_8)}\/{sp|->rgs8(14|->id_reg_8)}: BV16 +-> BYTE & dom({ushort_bv16(add16USHORT(0,bv16_ushort(sp),1))|->rgs8(13|->id_reg_8)}\/{sp|->rgs8(14|->id_reg_8)}) = BV16 & elem: dom({ushort_bv16(add16USHORT(0,bv16_ushort(sp),1))|->rgs8(13|->id_reg_8)}\/{sp|->rgs8(14|->id_reg_8)}));
(elem: dom(bv16_ushort));
("`Local hypotheses'" & {ushort_bv16(add16USHORT(0,bv16_ushort(sp),1))|->rgs8(13|->id_reg_8)}\/{sp|->rgs8(14|->id_reg_8)}: BV16 +-> BYTE & dom({ushort_bv16(add16USHORT(0,bv16_ushort(sp),1))|->rgs8(13|->id_reg_8)}\/{sp|->rgs8(14|->id_reg_8)}) = BV16 & !elem.(elem: dom({ushort_bv16(add16USHORT(0,bv16_ushort(sp),1))|->rgs8(13|->id_reg_8)}\/{sp|->rgs8(14|->id_reg_8)}) => bv16_ushort(elem): STACK_R_ADR));
(0,bv16_ushort(sp),1: dom(add16USHORT));
("`Local hypotheses'" & {ushort_bv16(add16USHORT(0,bv16_ushort(sp),1))|->rgs8(13|->id_reg_8)}\/{sp|->rgs8(14|->id_reg_8)}: BV16 +-> BYTE & dom({ushort_bv16(add16USHORT(0,bv16_ushort(sp),1))|->rgs8(13|->id_reg_8)}\/{sp|->rgs8(14|->id_reg_8)}) = BV16 & !elem.(elem: dom({ushort_bv16(add16USHORT(0,bv16_ushort(sp),1))|->rgs8(13|->id_reg_8)}\/{sp|->rgs8(14|->id_reg_8)}) => bv16_ushort(elem): STACK_R_ADR));
(add16USHORT(0,bv16_ushort(sp),1): dom(ushort_bv16));
("`Local hypotheses'" & {ushort_bv16(add16USHORT(0,bv16_ushort(sp),1))|->rgs8(13|->id_reg_8)}\/{sp|->rgs8(14|->id_reg_8)}: BV16 +-> BYTE & dom({ushort_bv16(add16USHORT(0,bv16_ushort(sp),1))|->rgs8(13|->id_reg_8)}\/{sp|->rgs8(14|->id_reg_8)}) = BV16 & !elem.(elem: dom({ushort_bv16(add16USHORT(0,bv16_ushort(sp),1))|->rgs8(13|->id_reg_8)}\/{sp|->rgs8(14|->id_reg_8)}) => bv16_ushort(elem): STACK_R_ADR));
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & {ushort_bv16(add16USHORT(0,bv16_ushort(sp),1))|->rgs8(13|->id_reg_8)}\/{sp|->rgs8(14|->id_reg_8)}: BV16 +-> BYTE & dom({ushort_bv16(add16USHORT(0,bv16_ushort(sp),1))|->rgs8(13|->id_reg_8)}\/{sp|->rgs8(14|->id_reg_8)}) = BV16 & !elem.(elem: dom({ushort_bv16(add16USHORT(0,bv16_ushort(sp),1))|->rgs8(13|->id_reg_8)}\/{sp|->rgs8(14|->id_reg_8)}) => bv16_ushort(elem): STACK_R_ADR));
(0,bv16_ushort(sp),1: dom(add16USHORT));
("`Local hypotheses'" & {ushort_bv16(add16USHORT(0,bv16_ushort(sp),1))|->rgs8(13|->id_reg_8)}\/{sp|->rgs8(14|->id_reg_8)}: BV16 +-> BYTE & dom({ushort_bv16(add16USHORT(0,bv16_ushort(sp),1))|->rgs8(13|->id_reg_8)}\/{sp|->rgs8(14|->id_reg_8)}) = BV16 & !elem.(elem: dom({ushort_bv16(add16USHORT(0,bv16_ushort(sp),1))|->rgs8(13|->id_reg_8)}\/{sp|->rgs8(14|->id_reg_8)}) => bv16_ushort(elem): STACK_R_ADR));
(add16USHORT(0,bv16_ushort(sp),1): dom(ushort_bv16));
("`Local hypotheses'" & {ushort_bv16(add16USHORT(0,bv16_ushort(sp),1))|->rgs8(13|->id_reg_8)}\/{sp|->rgs8(14|->id_reg_8)}: BV16 +-> BYTE & dom({ushort_bv16(add16USHORT(0,bv16_ushort(sp),1))|->rgs8(13|->id_reg_8)}\/{sp|->rgs8(14|->id_reg_8)}) = BV16 & !elem.(elem: dom({ushort_bv16(add16USHORT(0,bv16_ushort(sp),1))|->rgs8(13|->id_reg_8)}\/{sp|->rgs8(14|->id_reg_8)}) => bv16_ushort(elem): STACK_R_ADR));
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(0,bv16_ushort(sp),1: dom(add16USHORT));
("`Local hypotheses'" & btrue);
(add16USHORT(0,bv16_ushort(sp),1): dom(ushort_bv16));
("`EX_9SP0_IX preconditions in previous components'" & btrue);
("`EX_9SP0_IX preconditions in this component'" & bv16_ushort(ushort_bv16(add16USHORT(0,bv16_ushort(sp),1))): STACK_R_ADR & bv16_ushort(sp): STACK_R_ADR);
("`Local hypotheses'" & wh: BYTE & wl: BYTE & bv16_byte(ix) = wh|->wl);
(0,bv16_ushort(sp),1: dom(add16USHORT));
("`Local hypotheses'" & wh: BYTE & wl: BYTE & bv16_byte(ix) = wh|->wl);
(add16USHORT(0,bv16_ushort(sp),1): dom(ushort_bv16));
("`Local hypotheses'" & wh: BYTE & wl: BYTE & bv16_byte(ix) = wh|->wl & {ushort_bv16(add16USHORT(0,bv16_ushort(sp),1))|->wh}\/{sp|->wl}: BV16 +-> BYTE & dom({ushort_bv16(add16USHORT(0,bv16_ushort(sp),1))|->wh}\/{sp|->wl}) = BV16);
(0,bv16_ushort(sp),1: dom(add16USHORT));
("`Local hypotheses'" & wh: BYTE & wl: BYTE & bv16_byte(ix) = wh|->wl & {ushort_bv16(add16USHORT(0,bv16_ushort(sp),1))|->wh}\/{sp|->wl}: BV16 +-> BYTE & dom({ushort_bv16(add16USHORT(0,bv16_ushort(sp),1))|->wh}\/{sp|->wl}) = BV16);
(add16USHORT(0,bv16_ushort(sp),1): dom(ushort_bv16));
("`Local hypotheses'" & wh: BYTE & wl: BYTE & bv16_byte(ix) = wh|->wl & {ushort_bv16(add16USHORT(0,bv16_ushort(sp),1))|->wh}\/{sp|->wl}: BV16 +-> BYTE & dom({ushort_bv16(add16USHORT(0,bv16_ushort(sp),1))|->wh}\/{sp|->wl}) = BV16 & elem: dom({ushort_bv16(add16USHORT(0,bv16_ushort(sp),1))|->wh}\/{sp|->wl}));
(elem: dom(bv16_ushort));
("`Local hypotheses'" & wh: BYTE & wl: BYTE & bv16_byte(ix) = wh|->wl & {ushort_bv16(add16USHORT(0,bv16_ushort(sp),1))|->wh}\/{sp|->wl}: BV16 +-> BYTE & dom({ushort_bv16(add16USHORT(0,bv16_ushort(sp),1))|->wh}\/{sp|->wl}) = BV16 & !elem.(elem: dom({ushort_bv16(add16USHORT(0,bv16_ushort(sp),1))|->wh}\/{sp|->wl}) => bv16_ushort(elem): STACK_R_ADR));
(0,bv16_ushort(sp),1: dom(add16USHORT));
("`Local hypotheses'" & wh: BYTE & wl: BYTE & bv16_byte(ix) = wh|->wl & {ushort_bv16(add16USHORT(0,bv16_ushort(sp),1))|->wh}\/{sp|->wl}: BV16 +-> BYTE & dom({ushort_bv16(add16USHORT(0,bv16_ushort(sp),1))|->wh}\/{sp|->wl}) = BV16 & !elem.(elem: dom({ushort_bv16(add16USHORT(0,bv16_ushort(sp),1))|->wh}\/{sp|->wl}) => bv16_ushort(elem): STACK_R_ADR));
(add16USHORT(0,bv16_ushort(sp),1): dom(ushort_bv16));
("`Local hypotheses'" & wh: BYTE & wl: BYTE & bv16_byte(ix) = wh|->wl & {ushort_bv16(add16USHORT(0,bv16_ushort(sp),1))|->wh}\/{sp|->wl}: BV16 +-> BYTE & dom({ushort_bv16(add16USHORT(0,bv16_ushort(sp),1))|->wh}\/{sp|->wl}) = BV16 & !elem.(elem: dom({ushort_bv16(add16USHORT(0,bv16_ushort(sp),1))|->wh}\/{sp|->wl}) => bv16_ushort(elem): STACK_R_ADR));
(mem(ushort_bv16(add16USHORT(0,bv16_ushort(sp),1))),mem(sp): dom(byte_bv16));
("`Local hypotheses'" & wh: BYTE & wl: BYTE & bv16_byte(ix) = wh|->wl & {ushort_bv16(add16USHORT(0,bv16_ushort(sp),1))|->wh}\/{sp|->wl}: BV16 +-> BYTE & dom({ushort_bv16(add16USHORT(0,bv16_ushort(sp),1))|->wh}\/{sp|->wl}) = BV16 & !elem.(elem: dom({ushort_bv16(add16USHORT(0,bv16_ushort(sp),1))|->wh}\/{sp|->wl}) => bv16_ushort(elem): STACK_R_ADR));
(0,bv16_ushort(sp),1: dom(add16USHORT));
("`Local hypotheses'" & wh: BYTE & wl: BYTE & bv16_byte(ix) = wh|->wl & {ushort_bv16(add16USHORT(0,bv16_ushort(sp),1))|->wh}\/{sp|->wl}: BV16 +-> BYTE & dom({ushort_bv16(add16USHORT(0,bv16_ushort(sp),1))|->wh}\/{sp|->wl}) = BV16 & !elem.(elem: dom({ushort_bv16(add16USHORT(0,bv16_ushort(sp),1))|->wh}\/{sp|->wl}) => bv16_ushort(elem): STACK_R_ADR));
(add16USHORT(0,bv16_ushort(sp),1): dom(ushort_bv16));
("`Local hypotheses'" & btrue);
(0,bv16_ushort(sp),1: dom(add16USHORT));
("`Local hypotheses'" & btrue);
(add16USHORT(0,bv16_ushort(sp),1): dom(ushort_bv16));
("`EX_9SP0_IY preconditions in previous components'" & btrue);
("`EX_9SP0_IY preconditions in this component'" & bv16_ushort(ushort_bv16(add16USHORT(0,bv16_ushort(sp),1))): STACK_R_ADR & bv16_ushort(sp): STACK_R_ADR);
("`Local hypotheses'" & wh: BYTE & wl: BYTE & bv16_byte(iy) = wh|->wl);
(0,bv16_ushort(sp),1: dom(add16USHORT));
("`Local hypotheses'" & wh: BYTE & wl: BYTE & bv16_byte(iy) = wh|->wl);
(add16USHORT(0,bv16_ushort(sp),1): dom(ushort_bv16));
("`Local hypotheses'" & wh: BYTE & wl: BYTE & bv16_byte(iy) = wh|->wl & {ushort_bv16(add16USHORT(0,bv16_ushort(sp),1))|->wh}\/{sp|->wl}: BV16 +-> BYTE & dom({ushort_bv16(add16USHORT(0,bv16_ushort(sp),1))|->wh}\/{sp|->wl}) = BV16);
(0,bv16_ushort(sp),1: dom(add16USHORT));
("`Local hypotheses'" & wh: BYTE & wl: BYTE & bv16_byte(iy) = wh|->wl & {ushort_bv16(add16USHORT(0,bv16_ushort(sp),1))|->wh}\/{sp|->wl}: BV16 +-> BYTE & dom({ushort_bv16(add16USHORT(0,bv16_ushort(sp),1))|->wh}\/{sp|->wl}) = BV16);
(add16USHORT(0,bv16_ushort(sp),1): dom(ushort_bv16));
("`Local hypotheses'" & wh: BYTE & wl: BYTE & bv16_byte(iy) = wh|->wl & {ushort_bv16(add16USHORT(0,bv16_ushort(sp),1))|->wh}\/{sp|->wl}: BV16 +-> BYTE & dom({ushort_bv16(add16USHORT(0,bv16_ushort(sp),1))|->wh}\/{sp|->wl}) = BV16 & elem: dom({ushort_bv16(add16USHORT(0,bv16_ushort(sp),1))|->wh}\/{sp|->wl}));
(elem: dom(bv16_ushort));
("`Local hypotheses'" & wh: BYTE & wl: BYTE & bv16_byte(iy) = wh|->wl & {ushort_bv16(add16USHORT(0,bv16_ushort(sp),1))|->wh}\/{sp|->wl}: BV16 +-> BYTE & dom({ushort_bv16(add16USHORT(0,bv16_ushort(sp),1))|->wh}\/{sp|->wl}) = BV16 & !elem.(elem: dom({ushort_bv16(add16USHORT(0,bv16_ushort(sp),1))|->wh}\/{sp|->wl}) => bv16_ushort(elem): STACK_R_ADR));
(0,bv16_ushort(sp),1: dom(add16USHORT));
("`Local hypotheses'" & wh: BYTE & wl: BYTE & bv16_byte(iy) = wh|->wl & {ushort_bv16(add16USHORT(0,bv16_ushort(sp),1))|->wh}\/{sp|->wl}: BV16 +-> BYTE & dom({ushort_bv16(add16USHORT(0,bv16_ushort(sp),1))|->wh}\/{sp|->wl}) = BV16 & !elem.(elem: dom({ushort_bv16(add16USHORT(0,bv16_ushort(sp),1))|->wh}\/{sp|->wl}) => bv16_ushort(elem): STACK_R_ADR));
(add16USHORT(0,bv16_ushort(sp),1): dom(ushort_bv16));
("`Local hypotheses'" & wh: BYTE & wl: BYTE & bv16_byte(iy) = wh|->wl & {ushort_bv16(add16USHORT(0,bv16_ushort(sp),1))|->wh}\/{sp|->wl}: BV16 +-> BYTE & dom({ushort_bv16(add16USHORT(0,bv16_ushort(sp),1))|->wh}\/{sp|->wl}) = BV16 & !elem.(elem: dom({ushort_bv16(add16USHORT(0,bv16_ushort(sp),1))|->wh}\/{sp|->wl}) => bv16_ushort(elem): STACK_R_ADR));
(mem(ushort_bv16(add16USHORT(0,bv16_ushort(sp),1))),mem(sp): dom(byte_bv16));
("`Local hypotheses'" & wh: BYTE & wl: BYTE & bv16_byte(iy) = wh|->wl & {ushort_bv16(add16USHORT(0,bv16_ushort(sp),1))|->wh}\/{sp|->wl}: BV16 +-> BYTE & dom({ushort_bv16(add16USHORT(0,bv16_ushort(sp),1))|->wh}\/{sp|->wl}) = BV16 & !elem.(elem: dom({ushort_bv16(add16USHORT(0,bv16_ushort(sp),1))|->wh}\/{sp|->wl}) => bv16_ushort(elem): STACK_R_ADR));
(0,bv16_ushort(sp),1: dom(add16USHORT));
("`Local hypotheses'" & wh: BYTE & wl: BYTE & bv16_byte(iy) = wh|->wl & {ushort_bv16(add16USHORT(0,bv16_ushort(sp),1))|->wh}\/{sp|->wl}: BV16 +-> BYTE & dom({ushort_bv16(add16USHORT(0,bv16_ushort(sp),1))|->wh}\/{sp|->wl}) = BV16 & !elem.(elem: dom({ushort_bv16(add16USHORT(0,bv16_ushort(sp),1))|->wh}\/{sp|->wl}) => bv16_ushort(elem): STACK_R_ADR));
(add16USHORT(0,bv16_ushort(sp),1): dom(ushort_bv16));
("`Local hypotheses'" & btrue);
(0,bv16_ushort(sp),1: dom(add16USHORT));
("`Local hypotheses'" & btrue);
(add16USHORT(0,bv16_ushort(sp),1): dom(ushort_bv16));
("`LDI preconditions in previous components'" & btrue);
("`LDI preconditions in this component'" & bv16_ushort(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): DATA_R_ADR);
("`Local hypotheses'" & btrue);
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))));
(9|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))));
(10|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))));
(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))));
(5|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))));
(6|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))));
(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(9|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(10|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(9|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(10|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))) & bv16_ushort(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): PROGRAM_R_ADR);
(9|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))) & bv16_ushort(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): PROGRAM_R_ADR);
(10|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))) & bv16_ushort(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): PROGRAM_R_ADR);
(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))) & bv16_ushort(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): PROGRAM_R_ADR);
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))) & bv16_ushort(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): PROGRAM_R_ADR);
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))) & bv16_ushort(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): PROGRAM_R_ADR);
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))) & bv16_ushort(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): PROGRAM_R_ADR);
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))) & bv16_ushort(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): PROGRAM_R_ADR);
(rgs8(2|->id_reg_8),7: dom(bitget));
("`Local hypotheses'" & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))) & bv16_ushort(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): PROGRAM_R_ADR);
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))) & bv16_ushort(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): PROGRAM_R_ADR);
(rgs8(2|->id_reg_8),6: dom(bitget));
("`Local hypotheses'" & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))) & bv16_ushort(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): PROGRAM_R_ADR);
(5|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))) & bv16_ushort(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): PROGRAM_R_ADR);
(6|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))) & bv16_ushort(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): PROGRAM_R_ADR);
(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))) & bv16_ushort(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): PROGRAM_R_ADR);
(bv16_ushort(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))): dom(is_zero16USHORT));
("`Local hypotheses'" & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))) & bv16_ushort(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): PROGRAM_R_ADR);
(is_zero16USHORT(bv16_ushort(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): dom(bit_not));
("`Local hypotheses'" & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))) & bv16_ushort(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): PROGRAM_R_ADR);
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))) & bv16_ushort(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): PROGRAM_R_ADR);
(rgs8(2|->id_reg_8),0: dom(bitget));
("`Local hypotheses'" & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))) & bv16_ushort(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): PROGRAM_R_ADR);
(bitget(rgs8(2|->id_reg_8),7),bitget(rgs8(2|->id_reg_8),6),0,bit_not(is_zero16USHORT(bv16_ushort(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))))),0,bitget(rgs8(2|->id_reg_8),0): dom(update_flag_reg));
("`Local hypotheses'" & btrue);
(9|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(10|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8): dom(byte_bv16));
("`LDIR preconditions in previous components'" & btrue);
("`LDIR preconditions in this component'" & bv16_ushort(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): DATA_R_ADR);
("`Local hypotheses'" & btrue);
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))));
(9|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))));
(10|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))));
(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))));
(5|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))));
(6|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))));
(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(9|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(10|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(9|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(10|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))) & bv16_ushort(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): PROGRAM_R_ADR);
(9|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))) & bv16_ushort(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): PROGRAM_R_ADR);
(10|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))) & bv16_ushort(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): PROGRAM_R_ADR);
(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))) & bv16_ushort(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): PROGRAM_R_ADR);
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))) & bv16_ushort(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): PROGRAM_R_ADR);
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))) & bv16_ushort(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): PROGRAM_R_ADR);
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))) & bv16_ushort(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): PROGRAM_R_ADR);
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))) & bv16_ushort(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): PROGRAM_R_ADR);
(rgs8(2|->id_reg_8),7: dom(bitget));
("`Local hypotheses'" & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))) & bv16_ushort(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): PROGRAM_R_ADR);
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))) & bv16_ushort(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): PROGRAM_R_ADR);
(rgs8(2|->id_reg_8),6: dom(bitget));
("`Local hypotheses'" & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))) & bv16_ushort(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): PROGRAM_R_ADR);
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))) & bv16_ushort(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): PROGRAM_R_ADR);
(rgs8(2|->id_reg_8),0: dom(bitget));
("`Local hypotheses'" & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))) & bv16_ushort(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): PROGRAM_R_ADR);
(bitget(rgs8(2|->id_reg_8),7),bitget(rgs8(2|->id_reg_8),6),0,0,0,bitget(rgs8(2|->id_reg_8),0): dom(update_flag_reg));
("`Local hypotheses'" & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))) & bv16_ushort(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): PROGRAM_R_ADR);
(5|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))) & bv16_ushort(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): PROGRAM_R_ADR);
(6|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))) & bv16_ushort(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): PROGRAM_R_ADR);
(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))) & bv16_ushort(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): PROGRAM_R_ADR);
(bv16_ushort(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))): dom(is_zero16USHORT));
("`Local hypotheses'" & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))) & bv16_ushort(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): PROGRAM_R_ADR);
(5|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))) & bv16_ushort(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): PROGRAM_R_ADR);
(6|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))) & bv16_ushort(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): PROGRAM_R_ADR);
(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & hvn,lvn = bv16_byte(inc_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(inc_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))) & bv16_ushort(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): PROGRAM_R_ADR);
(bv16_ushort(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))): dom(is_zero16USHORT));
("`Local hypotheses'" & btrue);
(9|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(10|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8): dom(byte_bv16));
("`LDD preconditions in previous components'" & btrue);
("`LDD preconditions in this component'" & bv16_ushort(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): DATA_R_ADR);
("`Local hypotheses'" & btrue);
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))));
(9|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))));
(10|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))));
(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))));
(5|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))));
(6|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))));
(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(9|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(10|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(9|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(10|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))) & bv16_ushort(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): PROGRAM_R_ADR);
(9|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))) & bv16_ushort(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): PROGRAM_R_ADR);
(10|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))) & bv16_ushort(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): PROGRAM_R_ADR);
(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))) & bv16_ushort(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): PROGRAM_R_ADR);
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))) & bv16_ushort(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): PROGRAM_R_ADR);
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))) & bv16_ushort(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): PROGRAM_R_ADR);
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))) & bv16_ushort(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): PROGRAM_R_ADR);
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))) & bv16_ushort(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): PROGRAM_R_ADR);
(rgs8(2|->id_reg_8),7: dom(bitget));
("`Local hypotheses'" & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))) & bv16_ushort(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): PROGRAM_R_ADR);
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))) & bv16_ushort(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): PROGRAM_R_ADR);
(rgs8(2|->id_reg_8),6: dom(bitget));
("`Local hypotheses'" & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))) & bv16_ushort(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): PROGRAM_R_ADR);
(5|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))) & bv16_ushort(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): PROGRAM_R_ADR);
(6|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))) & bv16_ushort(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): PROGRAM_R_ADR);
(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))) & bv16_ushort(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): PROGRAM_R_ADR);
(bv16_ushort(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))): dom(is_zero16USHORT));
("`Local hypotheses'" & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))) & bv16_ushort(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): PROGRAM_R_ADR);
(is_zero16USHORT(bv16_ushort(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8))))): dom(bit_not));
("`Local hypotheses'" & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))) & bv16_ushort(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): PROGRAM_R_ADR);
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))) & bv16_ushort(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): PROGRAM_R_ADR);
(rgs8(2|->id_reg_8),0: dom(bitget));
("`Local hypotheses'" & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))) & bv16_ushort(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): PROGRAM_R_ADR);
(bitget(rgs8(2|->id_reg_8),7),bitget(rgs8(2|->id_reg_8),6),0,bit_not(is_zero16USHORT(bv16_ushort(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))))),0,bitget(rgs8(2|->id_reg_8),0): dom(update_flag_reg));
("`Local hypotheses'" & btrue);
(9|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(10|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8): dom(byte_bv16));
("`LDDR preconditions in previous components'" & btrue);
("`LDDR preconditions in this component'" & bv16_ushort(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): DATA_R_ADR);
("`Local hypotheses'" & btrue);
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))));
(9|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))));
(10|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))));
(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))));
(5|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))));
(6|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))));
(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(9|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(10|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(9|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(10|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))));
(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))) & bv16_ushort(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): PROGRAM_R_ADR);
(9|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))) & bv16_ushort(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): PROGRAM_R_ADR);
(10|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))) & bv16_ushort(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): PROGRAM_R_ADR);
(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))) & bv16_ushort(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): PROGRAM_R_ADR);
(13|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))) & bv16_ushort(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): PROGRAM_R_ADR);
(14|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))) & bv16_ushort(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): PROGRAM_R_ADR);
(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))) & bv16_ushort(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): PROGRAM_R_ADR);
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))) & bv16_ushort(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): PROGRAM_R_ADR);
(rgs8(2|->id_reg_8),7: dom(bitget));
("`Local hypotheses'" & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))) & bv16_ushort(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): PROGRAM_R_ADR);
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))) & bv16_ushort(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): PROGRAM_R_ADR);
(rgs8(2|->id_reg_8),6: dom(bitget));
("`Local hypotheses'" & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))) & bv16_ushort(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): PROGRAM_R_ADR);
(2|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))) & bv16_ushort(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): PROGRAM_R_ADR);
(rgs8(2|->id_reg_8),0: dom(bitget));
("`Local hypotheses'" & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))) & bv16_ushort(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): PROGRAM_R_ADR);
(bitget(rgs8(2|->id_reg_8),7),bitget(rgs8(2|->id_reg_8),6),0,0,0,bitget(rgs8(2|->id_reg_8),0): dom(update_flag_reg));
("`Local hypotheses'" & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))) & bv16_ushort(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): PROGRAM_R_ADR);
(5|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))) & bv16_ushort(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): PROGRAM_R_ADR);
(6|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))) & bv16_ushort(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): PROGRAM_R_ADR);
(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))) & bv16_ushort(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): PROGRAM_R_ADR);
(bv16_ushort(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))): dom(is_zero16USHORT));
("`Local hypotheses'" & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))) & bv16_ushort(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): PROGRAM_R_ADR);
(5|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))) & bv16_ushort(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): PROGRAM_R_ADR);
(6|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))) & bv16_ushort(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): PROGRAM_R_ADR);
(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8): dom(byte_bv16));
("`Local hypotheses'" & hvn,lvn = bv16_byte(dec_BV16(byte_bv16(rgs8(13|->id_reg_8),rgs8(14|->id_reg_8)))) & dvn,evn = bv16_byte(dec_BV16(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8)))) & bvn,cvn = bv16_byte(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))) & bv16_ushort(byte_bv16(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8))): PROGRAM_R_ADR);
(bv16_ushort(dec_BV16(byte_bv16(rgs8(5|->id_reg_8),rgs8(6|->id_reg_8)))): dom(is_zero16USHORT));
("`Local hypotheses'" & btrue);
(9|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(10|->id_reg_8: dom(rgs8));
("`Local hypotheses'" & btrue);
(rgs8(9|->id_reg_8),rgs8(10|->id_reg_8): dom(byte_bv16))

END
&

THEORY EnumerateX IS
(id_reg_8 == {a0,f0,f_0,a_0,b0,c0,b_0,c_0,d0,e0,d_0,e_0,h0,l0,h_0,l_0});
(id_reg_16 == {BC,DE,HL,SP,AF})

END
