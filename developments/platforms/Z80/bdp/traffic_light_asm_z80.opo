THEORY OPOBalanceX IS
  traffic_light_asm_z80,466;
  ValuesLemmas,1;
  InstanciatedConstraintsLemmas,0;
  AssertionLemmas,10;
  Initialisation,2;
  advance,453
END
&
THEORY OPOProofList IS
  _f(2) & _f(3) & _f(12) & _f(21) & advance.453,(_f(318) & _of(253) => _of(254));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.452,(_of(252) & _of(6) => _f(24));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.451,(_f(316) & _of(6) => _of(251));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.450,(_f(316) & _of(6) => _of(250));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.449,(_f(316) & _of(6) => _of(249));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.448,(_f(316) & _of(6) => _of(248));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.447,(_f(316) & _of(6) => _of(247));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.446,(_f(316) & _of(6) => _of(246));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.445,(_f(316) & _of(6) => _of(245));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.444,(_f(316) & _of(6) => _of(244));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.443,(_f(316) & _of(6) => _of(243));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.442,(_f(316) & _of(6) => _of(242));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.441,(_f(316) & _of(6) => _of(241));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.440,(_f(316) & _of(6) => _of(240));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.439,(_f(316) & _of(6) => _of(239));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.438,(_f(316) & _of(6) => _of(238));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.437,(_f(316) & _of(6) => _of(237));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.436,(_f(316) & _of(6) => _of(236));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.435,(_f(316) & _of(6) => _of(59));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.434,(_f(316) & _of(6) => _f(24));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.433,(_f(316) & _of(6) => _of(235));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.432,(_f(316) & _of(6) => _of(234));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.431,(_f(313) & _of(6) => _f(150));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.430,(_f(313) & _of(6) => _f(149));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.429,(_f(313) & _of(6) => _of(107));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.428,(_f(313) & _of(6) => _of(105));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.427,(_f(312) & _of(6) => _of(107));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.426,(_f(312) & _of(6) => _of(105));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.425,(_f(311) & _of(6) => _of(107));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.424,(_f(311) & _of(6) => _of(105));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.423,(_f(310) & _of(6) => _of(107));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.422,(_f(310) & _of(6) => _of(105));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.421,(_f(309) & _of(6) => _of(107));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.420,(_f(309) & _of(6) => _of(105));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.419,(_f(308) & _of(6) => _of(107));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.418,(_f(308) & _of(6) => _of(105));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.417,(_f(306) & _of(6) => _of(107));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.416,(_f(306) & _of(6) => _of(105));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.415,(_f(305) & _of(6) => _of(107));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.414,(_f(305) & _of(6) => _of(105));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.413,(_f(304) & _of(6) => _of(107));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.412,(_f(304) & _of(6) => _of(105));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.411,(_f(302) & _of(6) => _of(107));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.410,(_f(302) & _of(6) => _of(105));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.409,(_f(301) & _of(6) => _of(107));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.408,(_f(301) & _of(6) => _of(105));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.407,(_f(299) & _of(6) => _of(107));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.406,(_f(299) & _of(6) => _of(105));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.405,(_f(298) & _of(6) => _of(107));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.404,(_f(298) & _of(6) => _of(105));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.403,(_f(297) & _of(6) => _of(105));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.402,(_f(293) & _of(6) => _f(24));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.401,(_of(233) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.400,(_of(232) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.399,(_of(231) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.398,(_of(230) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.397,(_of(229) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.396,(_of(228) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.395,(_of(227) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.394,(_of(226) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.393,(_of(225) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.392,(_of(224) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.391,(_of(223) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.390,(_of(222) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.389,(_of(221) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.388,(_of(220) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.387,(_f(46) & _of(6) => _of(60));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.386,(_f(46) & _of(6) => _of(59));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.385,(_f(46) & _of(6) => _f(24));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.384,(_of(219) & _of(6) => _f(77));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.383,(_f(45) & _of(6) => _of(107));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.382,(_f(45) & _of(6) => _of(105));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.381,(_f(45) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.380,(_f(45) & _of(34) => _of(2));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.379,(_f(45) & _of(6) => _of(59));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.378,(_f(45) & _of(6) => _f(24));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.377,(_f(45) & _of(6) => _of(153));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.376,(_f(45) & _of(6) => _of(30));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.375,(_of(218) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.374,(_of(217) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.373,(_of(216) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.372,(_of(215) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.371,(_of(214) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.370,(_of(213) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.369,(_of(212) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.368,(_of(211) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.367,(_of(210) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.366,(_of(209) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.365,(_of(208) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.364,(_of(207) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.363,(_of(206) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.362,(_of(205) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.361,(_f(43) & _of(6) => _of(60));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.360,(_f(43) & _of(6) => _of(59));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.359,(_f(43) & _of(6) => _f(24));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.358,(_of(202) & _of(6) => _f(77));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.357,(_of(202) & _of(6) => _f(150));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.356,(_of(202) & _of(6) => _f(149));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.355,(_f(41) & _of(6) => _f(136));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.354,(_f(41) & _of(6) => _f(141));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.353,(_f(41) & _of(6) => _of(107));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.352,(_f(41) & _of(6) => _of(105));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.351,(_f(41) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.350,(_of(202) & _of(6) => _f(146));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.349,(_of(202) & _of(41) => _f(141));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.348,(_of(202) & _of(6) => _f(138));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.347,(_of(202) & _of(204) => _f(136));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.346,(_of(202) & _of(4) => _f(135));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.345,(_of(202) & _of(41) => _f(133));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.344,(_of(202) & _of(39) => _f(214));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.343,(_of(202) & _of(203) => _of(107));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.342,(_of(202) & _of(37) => _of(105));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.341,(_of(202) & _of(37) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.340,(_f(41) & _of(6) => _of(201));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.339,(_f(41) & _of(6) => _of(59));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.338,(_f(41) & _of(6) => _f(24));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.337,(_f(41) & _of(6) => _of(200));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.336,(_f(41) & _of(6) => _of(199));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.335,(_f(39) & _of(6) => _f(133));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.334,(_f(39) & _of(6) => _f(141));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.333,(_f(39) & _of(6) => _of(107));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.332,(_f(39) & _of(6) => _of(105));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.331,(_f(39) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.330,(_f(39) & _of(138) => _of(2));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.329,(_f(39) & _of(6) => _of(59));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.328,(_f(39) & _of(6) => _f(24));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.327,(_f(39) & _of(6) => _of(198));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.326,(_f(39) & _of(6) => _of(197));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.325,(_of(196) & _of(6) => _of(107));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.324,(_of(196) & _of(6) => _of(105));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.323,(_of(196) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.322,(_of(195) & _of(6) => _f(141));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.321,(_of(195) & _of(6) => _of(107));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.320,(_of(195) & _of(6) => _of(105));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.319,(_of(195) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.318,(_of(194) & _of(6) => _f(141));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.317,(_of(194) & _of(6) => _of(107));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.316,(_of(194) & _of(6) => _of(105));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.315,(_of(194) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.314,(_of(193) & _of(6) => _f(141));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.313,(_of(193) & _of(6) => _of(107));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.312,(_of(193) & _of(6) => _of(105));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.311,(_of(193) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.310,(_of(192) & _of(6) => _f(141));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.309,(_of(192) & _of(6) => _of(107));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.308,(_of(192) & _of(6) => _of(105));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.307,(_of(192) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.306,(_of(191) & _of(6) => _f(141));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.305,(_of(191) & _of(6) => _of(107));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.304,(_of(191) & _of(6) => _of(105));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.303,(_of(191) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.302,(_of(190) & _of(6) => _f(141));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.301,(_of(190) & _of(6) => _of(107));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.300,(_of(190) & _of(6) => _of(105));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.299,(_of(190) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.298,(_of(189) & _of(6) => _of(107));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.297,(_of(189) & _of(6) => _of(105));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.296,(_of(189) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.295,(_of(188) & _of(6) => _of(107));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.294,(_of(188) & _of(6) => _of(105));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.293,(_of(188) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.292,(_of(187) & _of(6) => _of(107));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.291,(_of(187) & _of(6) => _of(105));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.290,(_of(187) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.289,(_of(186) & _of(6) => _of(107));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.288,(_of(186) & _of(6) => _of(105));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.287,(_of(186) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.286,(_of(185) & _of(6) => _of(107));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.285,(_of(185) & _of(6) => _of(105));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.284,(_of(185) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.283,(_of(184) & _of(6) => _of(107));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.282,(_of(184) & _of(6) => _of(105));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.281,(_of(184) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.280,(_of(183) & _of(6) => _of(105));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.279,(_of(183) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.278,(_f(226) & _of(6) => _of(121));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.277,(_f(226) & _of(6) => _of(59));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.276,(_f(226) & _of(6) => _f(24));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.275,(_of(182) & _of(6) => _of(107));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.274,(_of(182) & _of(6) => _of(105));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.273,(_of(182) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.272,(_of(181) & _of(6) => _f(141));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.271,(_of(181) & _of(6) => _of(107));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.270,(_of(181) & _of(6) => _of(105));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.269,(_of(181) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.268,(_of(180) & _of(6) => _f(141));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.267,(_of(180) & _of(6) => _of(107));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.266,(_of(180) & _of(6) => _of(105));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.265,(_of(180) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.264,(_of(179) & _of(6) => _f(141));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.263,(_of(179) & _of(6) => _of(107));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.262,(_of(179) & _of(6) => _of(105));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.261,(_of(179) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.260,(_of(178) & _of(6) => _f(141));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.259,(_of(178) & _of(6) => _of(107));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.258,(_of(178) & _of(6) => _of(105));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.257,(_of(178) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.256,(_of(177) & _of(6) => _f(141));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.255,(_of(177) & _of(6) => _of(107));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.254,(_of(177) & _of(6) => _of(105));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.253,(_of(177) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.252,(_of(176) & _of(6) => _f(141));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.251,(_of(176) & _of(6) => _of(107));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.250,(_of(176) & _of(6) => _of(105));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.249,(_of(176) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.248,(_of(175) & _of(6) => _of(107));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.247,(_of(175) & _of(6) => _of(105));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.246,(_of(175) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.245,(_of(174) & _of(6) => _of(107));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.244,(_of(174) & _of(6) => _of(105));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.243,(_of(174) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.242,(_of(173) & _of(6) => _of(107));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.241,(_of(173) & _of(6) => _of(105));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.240,(_of(173) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.239,(_of(172) & _of(6) => _of(107));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.238,(_of(172) & _of(6) => _of(105));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.237,(_of(172) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.236,(_of(171) & _of(6) => _of(107));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.235,(_of(171) & _of(6) => _of(105));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.234,(_of(171) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.233,(_of(170) & _of(6) => _of(107));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.232,(_of(170) & _of(6) => _of(105));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.231,(_of(170) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.230,(_of(169) & _of(6) => _of(105));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.229,(_of(169) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.228,(_f(212) & _of(6) => _of(60));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.227,(_f(212) & _of(6) => _of(59));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.226,(_f(212) & _of(6) => _f(24));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.225,(_of(168) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.224,(_of(167) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.223,(_of(166) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.222,(_of(165) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.221,(_of(164) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.220,(_of(163) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.219,(_of(162) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.218,(_of(161) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.217,(_of(160) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.216,(_of(159) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.215,(_of(158) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.214,(_of(157) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.213,(_of(156) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.212,(_of(155) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.211,(_f(196) & _of(6) => _of(60));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.210,(_f(196) & _of(6) => _of(59));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.209,(_f(196) & _of(6) => _f(24));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.208,(_of(154) & _of(6) => _f(77));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.207,(_f(35) & _of(6) => _of(107));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.206,(_f(35) & _of(6) => _of(105));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.205,(_f(35) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.204,(_f(35) & _of(34) => _of(2));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.203,(_f(35) & _of(6) => _of(59));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.202,(_f(35) & _of(6) => _f(24));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.201,(_f(35) & _of(6) => _of(153));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.200,(_f(35) & _of(6) => _of(30));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.199,(_of(152) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.198,(_of(151) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.197,(_of(150) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.196,(_of(149) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.195,(_of(148) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.194,(_of(147) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.193,(_of(146) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.192,(_of(145) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.191,(_of(144) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.190,(_of(143) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.189,(_of(142) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.188,(_of(141) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.187,(_of(140) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.186,(_of(139) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.185,(_f(34) & _of(6) => _of(60));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.184,(_f(34) & _of(6) => _of(59));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.183,(_f(34) & _of(6) => _f(24));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.182,(_f(32) & _of(6) => _f(133));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.181,(_f(32) & _of(6) => _of(109));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.180,(_f(32) & _of(6) => _of(107));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.179,(_f(32) & _of(6) => _of(105));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.178,(_f(32) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.177,(_f(32) & _of(138) => _of(2));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.176,(_f(32) & _of(6) => _of(59));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.175,(_f(32) & _of(6) => _f(24));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.174,(_f(32) & _of(6) => _of(137));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.173,(_f(32) & _of(6) => _of(136));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.172,(_of(135) & _of(6) => _of(107));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.171,(_of(135) & _of(6) => _of(105));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.170,(_of(135) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.169,(_of(134) & _of(6) => _of(107));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.168,(_of(134) & _of(6) => _of(105));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.167,(_of(134) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.166,(_of(133) & _of(6) => _of(107));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.165,(_of(133) & _of(6) => _of(105));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.164,(_of(133) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.163,(_of(132) & _of(6) => _of(107));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.162,(_of(132) & _of(6) => _of(105));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.161,(_of(132) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.160,(_of(131) & _of(6) => _of(107));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.159,(_of(131) & _of(6) => _of(105));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.158,(_of(131) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.157,(_of(130) & _of(6) => _of(107));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.156,(_of(130) & _of(6) => _of(105));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.155,(_of(130) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.154,(_of(129) & _of(6) => _of(107));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.153,(_of(129) & _of(6) => _of(105));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.152,(_of(129) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.151,(_of(128) & _of(6) => _of(109));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.150,(_of(128) & _of(6) => _of(107));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.149,(_of(128) & _of(6) => _of(105));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.148,(_of(128) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.147,(_of(127) & _of(6) => _of(109));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.146,(_of(127) & _of(6) => _of(107));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.145,(_of(127) & _of(6) => _of(105));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.144,(_of(127) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.143,(_of(126) & _of(6) => _of(107));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.142,(_of(126) & _of(6) => _of(105));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.141,(_of(126) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.140,(_of(125) & _of(6) => _of(109));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.139,(_of(125) & _of(6) => _of(107));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.138,(_of(125) & _of(6) => _of(105));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.137,(_of(125) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.136,(_of(124) & _of(6) => _of(109));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.135,(_of(124) & _of(6) => _of(107));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.134,(_of(124) & _of(6) => _of(105));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.133,(_of(124) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.132,(_of(123) & _of(6) => _of(107));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.131,(_of(123) & _of(6) => _of(105));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.130,(_of(123) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.129,(_of(122) & _of(6) => _of(105));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.128,(_of(122) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.127,(_f(152) & _of(6) => _of(121));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.126,(_f(152) & _of(6) => _of(59));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.125,(_f(152) & _of(6) => _f(24));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.124,(_of(120) & _of(6) => _of(107));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.123,(_of(120) & _of(6) => _of(105));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.122,(_of(120) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.121,(_of(119) & _of(6) => _of(107));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.120,(_of(119) & _of(6) => _of(105));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.119,(_of(119) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.118,(_of(118) & _of(6) => _of(107));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.117,(_of(118) & _of(6) => _of(105));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.116,(_of(118) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.115,(_of(117) & _of(6) => _of(107));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.114,(_of(117) & _of(6) => _of(105));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.113,(_of(117) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.112,(_of(116) & _of(6) => _of(107));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.111,(_of(116) & _of(6) => _of(105));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.110,(_of(116) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.109,(_of(115) & _of(6) => _of(107));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.108,(_of(115) & _of(6) => _of(105));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.107,(_of(115) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.106,(_of(114) & _of(6) => _of(107));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.105,(_of(114) & _of(6) => _of(105));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.104,(_of(114) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.103,(_of(113) & _of(6) => _of(109));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.102,(_of(113) & _of(6) => _of(107));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.101,(_of(113) & _of(6) => _of(105));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.100,(_of(113) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.99,(_of(112) & _of(6) => _of(109));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.98,(_of(112) & _of(6) => _of(107));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.97,(_of(112) & _of(6) => _of(105));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.96,(_of(112) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.95,(_of(111) & _of(6) => _of(107));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.94,(_of(111) & _of(6) => _of(105));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.93,(_of(111) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.92,(_of(110) & _of(6) => _of(109));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.91,(_of(110) & _of(6) => _of(107));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.90,(_of(110) & _of(6) => _of(105));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.89,(_of(110) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.88,(_of(108) & _of(6) => _of(109));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.87,(_of(108) & _of(6) => _of(107));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.86,(_of(108) & _of(6) => _of(105));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.85,(_of(108) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.84,(_of(106) & _of(6) => _of(107));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.83,(_of(106) & _of(6) => _of(105));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.82,(_of(106) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.81,(_of(104) & _of(6) => _of(105));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.80,(_of(104) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.79,(_f(131) & _of(6) => _of(60));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.78,(_f(131) & _of(6) => _of(59));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.77,(_f(131) & _of(6) => _f(24));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.76,(_of(103) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.75,(_of(102) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.74,(_of(101) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.73,(_of(100) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.72,(_of(99) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.71,(_of(98) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.70,(_of(97) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.69,(_of(96) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.68,(_of(95) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.67,(_of(94) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.66,(_of(93) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.65,(_of(92) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.64,(_of(91) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.63,(_of(90) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.62,(_f(104) & _of(6) => _of(60));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.61,(_f(104) & _of(6) => _of(59));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.60,(_f(104) & _of(6) => _f(24));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.59,(_of(89) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.58,(_of(88) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.57,(_of(87) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.56,(_of(86) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.55,(_of(85) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.54,(_of(84) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.53,(_of(83) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.52,(_of(82) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.51,(_of(81) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.50,(_of(80) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.49,(_of(79) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.48,(_of(78) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.47,(_of(77) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.46,(_of(76) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.45,(_f(29) & _of(6) => _of(60));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.44,(_f(29) & _of(6) => _of(59));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.43,(_f(29) & _of(6) => _f(24));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.42,(_of(75) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.41,(_of(74) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.40,(_of(73) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.39,(_of(72) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.38,(_of(71) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.37,(_of(70) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.36,(_of(69) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.35,(_of(68) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.34,(_of(67) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.33,(_of(66) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.32,(_of(65) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.31,(_of(64) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.30,(_of(63) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.29,(_of(61) & _of(6) => _of(62));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.28,(_f(28) & _of(6) => _of(60));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.27,(_f(28) & _of(6) => _of(59));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.26,(_f(28) & _of(6) => _f(24));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.25,(_of(58) & _of(6) => _of(55));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.24,(_of(57) & _of(6) => _of(55));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.23,(_of(56) & _of(6) => _of(55));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.22,(_of(54) & _of(6) => _of(55));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.21,(_of(53) & _of(6) => _of(7));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.20,(_of(52) & _of(6) => _of(5));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.19,(_of(33) & _of(6) => _of(51));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.18,(_of(33) & _of(6) => _of(50));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.17,(_of(33) & _of(6) => _of(49));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.16,(_of(33) & _of(6) => _of(48));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.15,(_of(33) & _of(46) => _of(47));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.14,(_of(33) & _of(6) => _of(45));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.13,(_of(33) & _of(39) => _of(44));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.12,(_of(33) & _of(4) => _of(43));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.11,(_of(33) & _of(41) => _of(42));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.10,(_of(33) & _of(39) => _of(40));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.9,(_of(33) & _of(37) => _of(38));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.8,(_of(33) & _of(34) => _of(36));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.7,(_of(33) & _of(34) => _of(35));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.6,(_of(6) => _of(32));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.5,(_of(6) => _of(31));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.4,(_of(6) => _of(30));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.3,(_of(6) => _of(29));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.2,(_of(6) => _of(2));
  _f(2) & _f(3) & _f(12) & _f(21) & advance.1,(_of(28) => _of(2));
  _f(2) & _f(3) & _f(12) & AssertionLemmas.10,(_of(26) => _of(27));
  _f(2) & _f(3) & _f(12) & AssertionLemmas.9,(_of(24) => _of(25));
  _f(2) & _f(3) & _f(12) & AssertionLemmas.8,(_of(22) => _of(23));
  _f(2) & _f(3) & _f(12) & AssertionLemmas.7,(_of(20) => _of(21));
  _f(2) & _f(3) & _f(12) & AssertionLemmas.6,(_of(18) => _of(19));
  _f(2) & _f(3) & _f(12) & AssertionLemmas.5,(_of(16) => _of(17));
  _f(2) & _f(3) & _f(12) & AssertionLemmas.4,(_of(14) => _of(15));
  _f(2) & _f(3) & _f(12) & AssertionLemmas.3,(_of(12) => _of(13));
  _f(2) & _f(3) & _f(12) & AssertionLemmas.2,(_of(10) => _of(11));
  _f(2) & _f(3) & _f(12) & AssertionLemmas.1,(_of(8) => _of(9));
  _f(2) & _f(3) & Initialisation.2,(_f(4) & _of(6) => _of(7));
  _f(2) & _f(3) & Initialisation.1,(_of(3) & _of(4) => _of(5));
  _f(1) & ValuesLemmas.1,(_of(1) => _of(2))
END
&
THEORY OPOFormulas IS
  "`Check that the property (btrue) is preserved by the valuations - ref 5.2'";
  (btrue);
  ("`Local hypotheses'" & rgs8$0 : (1..18)*{id_register8} +-> WORD8 & dom(rgs8$0) = (1..18)*{id_register8} & ran(rgs8$0) = WORD8 & mem$0 : WORD16 +-> WORD8 & dom(mem$0) = WORD16 & pc$0 : WORD16 & sp$0 : WORD16 & ix$0 : WORD16 & iy$0 : WORD16 & stack$0 : WORD16 +-> WORD8 & dom(stack$0) = WORD16);
  "`Check preconditions of called operation, or While loop construction, or Assert predicates'" & "`Check preconditions of called operation, or While loop construction, or Assert predicates'";
  (h : id_register8);
  "`Check preconditions of called operation, or While loop construction, or Assert predicates'";
  (l : id_register8);
  "`Check assertion (INSTRUCTION_NEXT(9) = 10) deduction - ref 3.2, 4.2, 5.3'";
  (INSTRUCTION_NEXT(9) = 10);
  "`Check assertion (INSTRUCTION_NEXT(8) = 9) deduction - ref 3.2, 4.2, 5.3'";
  (INSTRUCTION_NEXT(8) = 9);
  "`Check assertion (INSTRUCTION_NEXT(7) = 8) deduction - ref 3.2, 4.2, 5.3'";
  (INSTRUCTION_NEXT(7) = 8);
  "`Check assertion (INSTRUCTION_NEXT(6) = 7) deduction - ref 3.2, 4.2, 5.3'";
  (INSTRUCTION_NEXT(6) = 7);
  "`Check assertion (INSTRUCTION_NEXT(5) = 6) deduction - ref 3.2, 4.2, 5.3'";
  (INSTRUCTION_NEXT(5) = 6);
  "`Check assertion (INSTRUCTION_NEXT(4) = 5) deduction - ref 3.2, 4.2, 5.3'";
  (INSTRUCTION_NEXT(4) = 5);
  "`Check assertion (INSTRUCTION_NEXT(3) = 4) deduction - ref 3.2, 4.2, 5.3'";
  (INSTRUCTION_NEXT(3) = 4);
  "`Check assertion (INSTRUCTION_NEXT(2) = 3) deduction - ref 3.2, 4.2, 5.3'";
  (INSTRUCTION_NEXT(2) = 3);
  "`Check assertion (INSTRUCTION_NEXT(1) = 2) deduction - ref 3.2, 4.2, 5.3'";
  (INSTRUCTION_NEXT(1) = 2);
  "`Check assertion (INSTRUCTION_NEXT(0) = 1) deduction - ref 3.2, 4.2, 5.3'";
  (INSTRUCTION_NEXT(0) = 1);
  "`Check precondition (btrue) deduction'";
  (0<=0);
  (0<=14);
  (mpmem$1(0) : 0..2);
  (0 = 0 => mpmem$1(0) = counter);
  ("`Local hypotheses'" & bfalse);
  "`Check preconditions of called operation, or While loop construction, or Assert predicates'" & "`Check preconditions of called operation, or While loop construction, or Assert predicates'" & "`Check preconditions of called operation, or While loop construction, or Assert predicates'" & "`Check preconditions of called operation, or While loop construction, or Assert predicates'" & "`Check preconditions of called operation, or While loop construction, or Assert predicates'" & "`Check preconditions of called operation, or While loop construction, or Assert predicates'" & "`Check preconditions of called operation, or While loop construction, or Assert predicates'" & "`Check preconditions of called operation, or While loop construction, or Assert predicates'" & "`Check preconditions of called operation, or While loop construction, or Assert predicates'" & "`Check preconditions of called operation, or While loop construction, or Assert predicates'" & "`Check preconditions of called operation, or While loop construction, or Assert predicates'" & "`Check preconditions of called operation, or While loop construction, or Assert predicates'" & "`Check preconditions of called operation, or While loop construction, or Assert predicates'" & "`Check preconditions of called operation, or While loop construction, or Assert predicates'";
  (mpmem$1(0) = counter);
  (mprgs8$1(h) = 0);
  "`Check preconditions of called operation, or While loop construction, or Assert predicates'" & "`Check preconditions of called operation, or While loop construction, or Assert predicates'" & "`Check preconditions of called operation, or While loop construction, or Assert predicates'" & "`Check preconditions of called operation, or While loop construction, or Assert predicates'" & "`Check preconditions of called operation, or While loop construction, or Assert predicates'" & "`Check preconditions of called operation, or While loop construction, or Assert predicates'" & "`Check preconditions of called operation, or While loop construction, or Assert predicates'" & "`Check preconditions of called operation, or While loop construction, or Assert predicates'" & "`Check preconditions of called operation, or While loop construction, or Assert predicates'" & "`Check preconditions of called operation, or While loop construction, or Assert predicates'" & "`Check preconditions of called operation, or While loop construction, or Assert predicates'" & "`Check preconditions of called operation, or While loop construction, or Assert predicates'" & "`Check preconditions of called operation, or While loop construction, or Assert predicates'";
  (mprgs8$1(l) = 0);
  "`Check preconditions of called operation, or While loop construction, or Assert predicates'" & "`Check preconditions of called operation, or While loop construction, or Assert predicates'" & "`Check preconditions of called operation, or While loop construction, or Assert predicates'" & "`Check preconditions of called operation, or While loop construction, or Assert predicates'";
  (bitget(mpmem$1(0),1) = bitget(mprgs8$1(f_),6));
  "`Check preconditions of called operation, or While loop construction, or Assert predicates'" & "`Check preconditions of called operation, or While loop construction, or Assert predicates'" & "`Check preconditions of called operation, or While loop construction, or Assert predicates'" & "`Check preconditions of called operation, or While loop construction, or Assert predicates'" & "`Check preconditions of called operation, or While loop construction, or Assert predicates'";
  (bitget(mprgs8$1(f_),6) = 0);
  (bitget(mpmem$1(0),1) = bitget(mprgs8$1(f_),1));
  (bitget(mprgs8$1(f_),6) = 1);
  (mprgs8$1(a) = 0);
  "`Check preconditions of called operation, or While loop construction, or Assert predicates'" & "`Check preconditions of called operation, or While loop construction, or Assert predicates'" & "`Check preconditions of called operation, or While loop construction, or Assert predicates'" & "`Check preconditions of called operation, or While loop construction, or Assert predicates'" & "`Check preconditions of called operation, or While loop construction, or Assert predicates'" & "`Check preconditions of called operation, or While loop construction, or Assert predicates'";
  (bitget(mpmem$1(0),0) = bitget(mprgs8$1(f_),6));
  (mprgs8$1(a) = 1);
  (bitget(mprgs8$1(f_),1) = 1);
  (mprgs8$1(a) = color_step(counter));
  (mpmem$1(0) = color_step(counter));
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & not(mppc$2 = 3) & not(mppc$2 = 2) & not(mppc$2 = 1) & mppc$2 = 0);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & not(mppc$2 = 3) & not(mppc$2 = 2) & mppc$2 = 1);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & mppc$2 = 5);
  (a : id_register8);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 8) & not(mppc$2 = 9) & not(mppc$2 = 10) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & mppc$2 = 11);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 8) & not(mppc$2 = 9) & not(mppc$2 = 10) & not(mppc$2 = 11) & not(mppc$2 = 12) & not(mppc$2 = 14) & mppc$2 = 13);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 8) & not(mppc$2 = 9) & not(mppc$2 = 10) & not(mppc$2 = 11) & not(mppc$2 = 12) & not(mppc$2 = 13) & mppc$2 = 14);
  (mpmem$2(0) : 0..2);
  (INSTRUCTION_NEXT(mppc$2) = 0 => mpmem$2(0) = counter);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & not(mppc$2 = 3) & not(mppc$2 = 2) & not(mppc$2 = 1) & mppc$2 = 0 & INSTRUCTION_NEXT(mppc$2) = 1);
  (mpmem$2(0) = counter);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & not(mppc$2 = 3) & not(mppc$2 = 2) & not(mppc$2 = 1) & mppc$2 = 0 & INSTRUCTION_NEXT(mppc$2) = 2);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & not(mppc$2 = 3) & not(mppc$2 = 2) & not(mppc$2 = 1) & mppc$2 = 0 & INSTRUCTION_NEXT(mppc$2) = 3);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & not(mppc$2 = 3) & not(mppc$2 = 2) & not(mppc$2 = 1) & mppc$2 = 0 & INSTRUCTION_NEXT(mppc$2) = 4);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & not(mppc$2 = 3) & not(mppc$2 = 2) & not(mppc$2 = 1) & mppc$2 = 0 & INSTRUCTION_NEXT(mppc$2) = 5);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & not(mppc$2 = 3) & not(mppc$2 = 2) & not(mppc$2 = 1) & mppc$2 = 0 & INSTRUCTION_NEXT(mppc$2) = 6);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & not(mppc$2 = 3) & not(mppc$2 = 2) & not(mppc$2 = 1) & mppc$2 = 0 & INSTRUCTION_NEXT(mppc$2) = 7);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & not(mppc$2 = 3) & not(mppc$2 = 2) & not(mppc$2 = 1) & mppc$2 = 0 & INSTRUCTION_NEXT(mppc$2) = 8);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & not(mppc$2 = 3) & not(mppc$2 = 2) & not(mppc$2 = 1) & mppc$2 = 0 & INSTRUCTION_NEXT(mppc$2) = 9);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & not(mppc$2 = 3) & not(mppc$2 = 2) & not(mppc$2 = 1) & mppc$2 = 0 & INSTRUCTION_NEXT(mppc$2) = 10);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & not(mppc$2 = 3) & not(mppc$2 = 2) & not(mppc$2 = 1) & mppc$2 = 0 & INSTRUCTION_NEXT(mppc$2) = 11);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & not(mppc$2 = 3) & not(mppc$2 = 2) & not(mppc$2 = 1) & mppc$2 = 0 & INSTRUCTION_NEXT(mppc$2) = 12);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & not(mppc$2 = 3) & not(mppc$2 = 2) & not(mppc$2 = 1) & mppc$2 = 0 & INSTRUCTION_NEXT(mppc$2) = 13);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & not(mppc$2 = 3) & not(mppc$2 = 2) & not(mppc$2 = 1) & mppc$2 = 0 & INSTRUCTION_NEXT(mppc$2) = 14);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & not(mppc$2 = 3) & not(mppc$2 = 2) & mppc$2 = 1 & INSTRUCTION_NEXT(mppc$2) = 1);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & not(mppc$2 = 3) & not(mppc$2 = 2) & mppc$2 = 1 & INSTRUCTION_NEXT(mppc$2) = 2);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & not(mppc$2 = 3) & not(mppc$2 = 2) & mppc$2 = 1 & INSTRUCTION_NEXT(mppc$2) = 3);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & not(mppc$2 = 3) & not(mppc$2 = 2) & mppc$2 = 1 & INSTRUCTION_NEXT(mppc$2) = 4);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & not(mppc$2 = 3) & not(mppc$2 = 2) & mppc$2 = 1 & INSTRUCTION_NEXT(mppc$2) = 5);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & not(mppc$2 = 3) & not(mppc$2 = 2) & mppc$2 = 1 & INSTRUCTION_NEXT(mppc$2) = 6);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & not(mppc$2 = 3) & not(mppc$2 = 2) & mppc$2 = 1 & INSTRUCTION_NEXT(mppc$2) = 7);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & not(mppc$2 = 3) & not(mppc$2 = 2) & mppc$2 = 1 & INSTRUCTION_NEXT(mppc$2) = 8);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & not(mppc$2 = 3) & not(mppc$2 = 2) & mppc$2 = 1 & INSTRUCTION_NEXT(mppc$2) = 9);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & not(mppc$2 = 3) & not(mppc$2 = 2) & mppc$2 = 1 & INSTRUCTION_NEXT(mppc$2) = 10);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & not(mppc$2 = 3) & not(mppc$2 = 2) & mppc$2 = 1 & INSTRUCTION_NEXT(mppc$2) = 11);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & not(mppc$2 = 3) & not(mppc$2 = 2) & mppc$2 = 1 & INSTRUCTION_NEXT(mppc$2) = 12);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & not(mppc$2 = 3) & not(mppc$2 = 2) & mppc$2 = 1 & INSTRUCTION_NEXT(mppc$2) = 13);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & not(mppc$2 = 3) & not(mppc$2 = 2) & mppc$2 = 1 & INSTRUCTION_NEXT(mppc$2) = 14);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & not(mppc$2 = 3) & address : WORD16 & ib : BIT & nw8 : BV8 & address = WORD8_TO_WORD16(mprgs8$2(13|->id_register8),mprgs8$2(14|->id_register8)) & ib = WORD8_TO_BV8(mpmem$2(address))(1) & nw8 = BV8_SET_BIT(WORD8_TO_BV8(mprgs8$2(3|->id_register8)),6,ib) & mppc$2 = 2 & INSTRUCTION_NEXT(mppc$2) = 1);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & not(mppc$2 = 3) & address : WORD16 & ib : BIT & nw8 : BV8 & address = WORD8_TO_WORD16(mprgs8$2(13|->id_register8),mprgs8$2(14|->id_register8)) & ib = WORD8_TO_BV8(mpmem$2(address))(1) & nw8 = BV8_SET_BIT(WORD8_TO_BV8(mprgs8$2(3|->id_register8)),6,ib) & mppc$2 = 2 & INSTRUCTION_NEXT(mppc$2) = 2);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & not(mppc$2 = 3) & address : WORD16 & ib : BIT & nw8 : BV8 & address = WORD8_TO_WORD16(mprgs8$2(13|->id_register8),mprgs8$2(14|->id_register8)) & ib = WORD8_TO_BV8(mpmem$2(address))(1) & nw8 = BV8_SET_BIT(WORD8_TO_BV8(mprgs8$2(3|->id_register8)),6,ib) & mppc$2 = 2 & INSTRUCTION_NEXT(mppc$2) = 3);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & not(mppc$2 = 3) & address : WORD16 & ib : BIT & nw8 : BV8 & address = WORD8_TO_WORD16(mprgs8$2(13|->id_register8),mprgs8$2(14|->id_register8)) & ib = WORD8_TO_BV8(mpmem$2(address))(1) & nw8 = BV8_SET_BIT(WORD8_TO_BV8(mprgs8$2(3|->id_register8)),6,ib) & mppc$2 = 2 & INSTRUCTION_NEXT(mppc$2) = 4);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & not(mppc$2 = 3) & address : WORD16 & ib : BIT & nw8 : BV8 & address = WORD8_TO_WORD16(mprgs8$2(13|->id_register8),mprgs8$2(14|->id_register8)) & ib = WORD8_TO_BV8(mpmem$2(address))(1) & nw8 = BV8_SET_BIT(WORD8_TO_BV8(mprgs8$2(3|->id_register8)),6,ib) & mppc$2 = 2 & INSTRUCTION_NEXT(mppc$2) = 5);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & not(mppc$2 = 3) & address : WORD16 & ib : BIT & nw8 : BV8 & address = WORD8_TO_WORD16(mprgs8$2(13|->id_register8),mprgs8$2(14|->id_register8)) & ib = WORD8_TO_BV8(mpmem$2(address))(1) & nw8 = BV8_SET_BIT(WORD8_TO_BV8(mprgs8$2(3|->id_register8)),6,ib) & mppc$2 = 2 & INSTRUCTION_NEXT(mppc$2) = 6);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & not(mppc$2 = 3) & address : WORD16 & ib : BIT & nw8 : BV8 & address = WORD8_TO_WORD16(mprgs8$2(13|->id_register8),mprgs8$2(14|->id_register8)) & ib = WORD8_TO_BV8(mpmem$2(address))(1) & nw8 = BV8_SET_BIT(WORD8_TO_BV8(mprgs8$2(3|->id_register8)),6,ib) & mppc$2 = 2 & INSTRUCTION_NEXT(mppc$2) = 7);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & not(mppc$2 = 3) & address : WORD16 & ib : BIT & nw8 : BV8 & address = WORD8_TO_WORD16(mprgs8$2(13|->id_register8),mprgs8$2(14|->id_register8)) & ib = WORD8_TO_BV8(mpmem$2(address))(1) & nw8 = BV8_SET_BIT(WORD8_TO_BV8(mprgs8$2(3|->id_register8)),6,ib) & mppc$2 = 2 & INSTRUCTION_NEXT(mppc$2) = 8);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & not(mppc$2 = 3) & address : WORD16 & ib : BIT & nw8 : BV8 & address = WORD8_TO_WORD16(mprgs8$2(13|->id_register8),mprgs8$2(14|->id_register8)) & ib = WORD8_TO_BV8(mpmem$2(address))(1) & nw8 = BV8_SET_BIT(WORD8_TO_BV8(mprgs8$2(3|->id_register8)),6,ib) & mppc$2 = 2 & INSTRUCTION_NEXT(mppc$2) = 9);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & not(mppc$2 = 3) & address : WORD16 & ib : BIT & nw8 : BV8 & address = WORD8_TO_WORD16(mprgs8$2(13|->id_register8),mprgs8$2(14|->id_register8)) & ib = WORD8_TO_BV8(mpmem$2(address))(1) & nw8 = BV8_SET_BIT(WORD8_TO_BV8(mprgs8$2(3|->id_register8)),6,ib) & mppc$2 = 2 & INSTRUCTION_NEXT(mppc$2) = 10);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & not(mppc$2 = 3) & address : WORD16 & ib : BIT & nw8 : BV8 & address = WORD8_TO_WORD16(mprgs8$2(13|->id_register8),mprgs8$2(14|->id_register8)) & ib = WORD8_TO_BV8(mpmem$2(address))(1) & nw8 = BV8_SET_BIT(WORD8_TO_BV8(mprgs8$2(3|->id_register8)),6,ib) & mppc$2 = 2 & INSTRUCTION_NEXT(mppc$2) = 11);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & not(mppc$2 = 3) & address : WORD16 & ib : BIT & nw8 : BV8 & address = WORD8_TO_WORD16(mprgs8$2(13|->id_register8),mprgs8$2(14|->id_register8)) & ib = WORD8_TO_BV8(mpmem$2(address))(1) & nw8 = BV8_SET_BIT(WORD8_TO_BV8(mprgs8$2(3|->id_register8)),6,ib) & mppc$2 = 2 & INSTRUCTION_NEXT(mppc$2) = 12);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & not(mppc$2 = 3) & address : WORD16 & ib : BIT & nw8 : BV8 & address = WORD8_TO_WORD16(mprgs8$2(13|->id_register8),mprgs8$2(14|->id_register8)) & ib = WORD8_TO_BV8(mpmem$2(address))(1) & nw8 = BV8_SET_BIT(WORD8_TO_BV8(mprgs8$2(3|->id_register8)),6,ib) & mppc$2 = 2 & INSTRUCTION_NEXT(mppc$2) = 13);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & not(mppc$2 = 3) & address : WORD16 & ib : BIT & nw8 : BV8 & address = WORD8_TO_WORD16(mprgs8$2(13|->id_register8),mprgs8$2(14|->id_register8)) & ib = WORD8_TO_BV8(mpmem$2(address))(1) & nw8 = BV8_SET_BIT(WORD8_TO_BV8(mprgs8$2(3|->id_register8)),6,ib) & mppc$2 = 2 & INSTRUCTION_NEXT(mppc$2) = 14);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & WORD8_TO_BV8(mprgs8$2(3|->id_register8))(6) = 0 & mppc$2 = 3 & INSTRUCTION_NEXT(mppc$2) = 1);
  (mprgs8$2(h) = 0);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & WORD8_TO_BV8(mprgs8$2(3|->id_register8))(6) = 0 & mppc$2 = 3 & INSTRUCTION_NEXT(mppc$2) = 2);
  (mprgs8$2(l) = 0);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & WORD8_TO_BV8(mprgs8$2(3|->id_register8))(6) = 0 & mppc$2 = 3 & INSTRUCTION_NEXT(mppc$2) = 3);
  (bitget(mpmem$2(0),1) = bitget(mprgs8$2(f_),6));
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & WORD8_TO_BV8(mprgs8$2(3|->id_register8))(6) = 0 & mppc$2 = 3 & INSTRUCTION_NEXT(mppc$2) = 4);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & WORD8_TO_BV8(mprgs8$2(3|->id_register8))(6) = 0 & mppc$2 = 3 & INSTRUCTION_NEXT(mppc$2) = 5);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & WORD8_TO_BV8(mprgs8$2(3|->id_register8))(6) = 0 & mppc$2 = 3 & INSTRUCTION_NEXT(mppc$2) = 6);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & WORD8_TO_BV8(mprgs8$2(3|->id_register8))(6) = 0 & mppc$2 = 3 & INSTRUCTION_NEXT(mppc$2) = 7);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & WORD8_TO_BV8(mprgs8$2(3|->id_register8))(6) = 0 & mppc$2 = 3 & INSTRUCTION_NEXT(mppc$2) = 8);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & WORD8_TO_BV8(mprgs8$2(3|->id_register8))(6) = 0 & mppc$2 = 3 & INSTRUCTION_NEXT(mppc$2) = 9);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & WORD8_TO_BV8(mprgs8$2(3|->id_register8))(6) = 0 & mppc$2 = 3 & INSTRUCTION_NEXT(mppc$2) = 10);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & WORD8_TO_BV8(mprgs8$2(3|->id_register8))(6) = 0 & mppc$2 = 3 & INSTRUCTION_NEXT(mppc$2) = 11);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & WORD8_TO_BV8(mprgs8$2(3|->id_register8))(6) = 0 & mppc$2 = 3 & INSTRUCTION_NEXT(mppc$2) = 12);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & WORD8_TO_BV8(mprgs8$2(3|->id_register8))(6) = 0 & mppc$2 = 3 & INSTRUCTION_NEXT(mppc$2) = 13);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & WORD8_TO_BV8(mprgs8$2(3|->id_register8))(6) = 0 & mppc$2 = 3 & INSTRUCTION_NEXT(mppc$2) = 14);
  (INSTRUCTION_NEXT(INSTRUCTION_NEXT(mppc$2)) = 0 => mpmem$2(0) = counter);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & not(WORD8_TO_BV8(mprgs8$2(3|->id_register8))(6) = 0) & mppc$2 = 3 & INSTRUCTION_NEXT(INSTRUCTION_NEXT(mppc$2)) = 1);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & not(WORD8_TO_BV8(mprgs8$2(3|->id_register8))(6) = 0) & mppc$2 = 3 & INSTRUCTION_NEXT(INSTRUCTION_NEXT(mppc$2)) = 2);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & not(WORD8_TO_BV8(mprgs8$2(3|->id_register8))(6) = 0) & mppc$2 = 3 & INSTRUCTION_NEXT(INSTRUCTION_NEXT(mppc$2)) = 3);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & not(WORD8_TO_BV8(mprgs8$2(3|->id_register8))(6) = 0) & mppc$2 = 3 & INSTRUCTION_NEXT(INSTRUCTION_NEXT(mppc$2)) = 4);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & not(WORD8_TO_BV8(mprgs8$2(3|->id_register8))(6) = 0) & mppc$2 = 3 & INSTRUCTION_NEXT(INSTRUCTION_NEXT(mppc$2)) = 5);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & not(WORD8_TO_BV8(mprgs8$2(3|->id_register8))(6) = 0) & mppc$2 = 3 & INSTRUCTION_NEXT(INSTRUCTION_NEXT(mppc$2)) = 6);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & not(WORD8_TO_BV8(mprgs8$2(3|->id_register8))(6) = 0) & mppc$2 = 3 & INSTRUCTION_NEXT(INSTRUCTION_NEXT(mppc$2)) = 7);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & not(WORD8_TO_BV8(mprgs8$2(3|->id_register8))(6) = 0) & mppc$2 = 3 & INSTRUCTION_NEXT(INSTRUCTION_NEXT(mppc$2)) = 8);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & not(WORD8_TO_BV8(mprgs8$2(3|->id_register8))(6) = 0) & mppc$2 = 3 & INSTRUCTION_NEXT(INSTRUCTION_NEXT(mppc$2)) = 9);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & not(WORD8_TO_BV8(mprgs8$2(3|->id_register8))(6) = 0) & mppc$2 = 3 & INSTRUCTION_NEXT(INSTRUCTION_NEXT(mppc$2)) = 10);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & not(WORD8_TO_BV8(mprgs8$2(3|->id_register8))(6) = 0) & mppc$2 = 3 & INSTRUCTION_NEXT(INSTRUCTION_NEXT(mppc$2)) = 11);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & not(WORD8_TO_BV8(mprgs8$2(3|->id_register8))(6) = 0) & mppc$2 = 3 & INSTRUCTION_NEXT(INSTRUCTION_NEXT(mppc$2)) = 12);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & not(WORD8_TO_BV8(mprgs8$2(3|->id_register8))(6) = 0) & mppc$2 = 3 & INSTRUCTION_NEXT(INSTRUCTION_NEXT(mppc$2)) = 13);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & not(mppc$2 = 5) & not(mppc$2 = 4) & not(WORD8_TO_BV8(mprgs8$2(3|->id_register8))(6) = 0) & mppc$2 = 3 & INSTRUCTION_NEXT(INSTRUCTION_NEXT(mppc$2)) = 14);
  (0<=7);
  (7<=14);
  "`Check preconditions of called operation, or While loop construction, or Assert predicates'" & "`Check preconditions of called operation, or While loop construction, or Assert predicates'" & "`Check preconditions of called operation, or While loop construction, or Assert predicates'" & "`Check preconditions of called operation, or While loop construction, or Assert predicates'" & "`Check preconditions of called operation, or While loop construction, or Assert predicates'" & "`Check preconditions of called operation, or While loop construction, or Assert predicates'" & "`Check preconditions of called operation, or While loop construction, or Assert predicates'" & "`Check preconditions of called operation, or While loop construction, or Assert predicates'" & "`Check preconditions of called operation, or While loop construction, or Assert predicates'" & "`Check preconditions of called operation, or While loop construction, or Assert predicates'" & "`Check preconditions of called operation, or While loop construction, or Assert predicates'" & "`Check preconditions of called operation, or While loop construction, or Assert predicates'" & "`Check preconditions of called operation, or While loop construction, or Assert predicates'" & "`Check preconditions of called operation, or While loop construction, or Assert predicates'" & "`Check preconditions of called operation, or While loop construction, or Assert predicates'";
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & mppc$2 = 5 & INSTRUCTION_NEXT(mppc$2) = 1);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & mppc$2 = 5 & INSTRUCTION_NEXT(mppc$2) = 2);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & mppc$2 = 5 & INSTRUCTION_NEXT(mppc$2) = 3);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & mppc$2 = 5 & INSTRUCTION_NEXT(mppc$2) = 4);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & mppc$2 = 5 & INSTRUCTION_NEXT(mppc$2) = 5);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & mppc$2 = 5 & INSTRUCTION_NEXT(mppc$2) = 6);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & mppc$2 = 5 & INSTRUCTION_NEXT(mppc$2) = 7);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & mppc$2 = 5 & INSTRUCTION_NEXT(mppc$2) = 8);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & mppc$2 = 5 & INSTRUCTION_NEXT(mppc$2) = 9);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & mppc$2 = 5 & INSTRUCTION_NEXT(mppc$2) = 10);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & mppc$2 = 5 & INSTRUCTION_NEXT(mppc$2) = 11);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & mppc$2 = 5 & INSTRUCTION_NEXT(mppc$2) = 12);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & mppc$2 = 5 & INSTRUCTION_NEXT(mppc$2) = 13);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & not(mppc$2 = 6) & mppc$2 = 5 & INSTRUCTION_NEXT(mppc$2) = 14);
  (14<=14);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & not(mppc$2 = 7) & mppc$2 = 6 & bfalse);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & address : WORD16 & ib : BIT & nw8 : BV8 & address = WORD8_TO_WORD16(mprgs8$2(13|->id_register8),mprgs8$2(14|->id_register8)) & ib = WORD8_TO_BV8(mpmem$2(address))(0) & nw8 = BV8_SET_BIT(WORD8_TO_BV8(mprgs8$2(3|->id_register8)),6,ib) & mppc$2 = 7 & INSTRUCTION_NEXT(mppc$2) = 1);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & address : WORD16 & ib : BIT & nw8 : BV8 & address = WORD8_TO_WORD16(mprgs8$2(13|->id_register8),mprgs8$2(14|->id_register8)) & ib = WORD8_TO_BV8(mpmem$2(address))(0) & nw8 = BV8_SET_BIT(WORD8_TO_BV8(mprgs8$2(3|->id_register8)),6,ib) & mppc$2 = 7 & INSTRUCTION_NEXT(mppc$2) = 2);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & address : WORD16 & ib : BIT & nw8 : BV8 & address = WORD8_TO_WORD16(mprgs8$2(13|->id_register8),mprgs8$2(14|->id_register8)) & ib = WORD8_TO_BV8(mpmem$2(address))(0) & nw8 = BV8_SET_BIT(WORD8_TO_BV8(mprgs8$2(3|->id_register8)),6,ib) & mppc$2 = 7 & INSTRUCTION_NEXT(mppc$2) = 3);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & address : WORD16 & ib : BIT & nw8 : BV8 & address = WORD8_TO_WORD16(mprgs8$2(13|->id_register8),mprgs8$2(14|->id_register8)) & ib = WORD8_TO_BV8(mpmem$2(address))(0) & nw8 = BV8_SET_BIT(WORD8_TO_BV8(mprgs8$2(3|->id_register8)),6,ib) & mppc$2 = 7 & INSTRUCTION_NEXT(mppc$2) = 4);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & address : WORD16 & ib : BIT & nw8 : BV8 & address = WORD8_TO_WORD16(mprgs8$2(13|->id_register8),mprgs8$2(14|->id_register8)) & ib = WORD8_TO_BV8(mpmem$2(address))(0) & nw8 = BV8_SET_BIT(WORD8_TO_BV8(mprgs8$2(3|->id_register8)),6,ib) & mppc$2 = 7 & INSTRUCTION_NEXT(mppc$2) = 5);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & address : WORD16 & ib : BIT & nw8 : BV8 & address = WORD8_TO_WORD16(mprgs8$2(13|->id_register8),mprgs8$2(14|->id_register8)) & ib = WORD8_TO_BV8(mpmem$2(address))(0) & nw8 = BV8_SET_BIT(WORD8_TO_BV8(mprgs8$2(3|->id_register8)),6,ib) & mppc$2 = 7 & INSTRUCTION_NEXT(mppc$2) = 6);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & address : WORD16 & ib : BIT & nw8 : BV8 & address = WORD8_TO_WORD16(mprgs8$2(13|->id_register8),mprgs8$2(14|->id_register8)) & ib = WORD8_TO_BV8(mpmem$2(address))(0) & nw8 = BV8_SET_BIT(WORD8_TO_BV8(mprgs8$2(3|->id_register8)),6,ib) & mppc$2 = 7 & INSTRUCTION_NEXT(mppc$2) = 7);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & address : WORD16 & ib : BIT & nw8 : BV8 & address = WORD8_TO_WORD16(mprgs8$2(13|->id_register8),mprgs8$2(14|->id_register8)) & ib = WORD8_TO_BV8(mpmem$2(address))(0) & nw8 = BV8_SET_BIT(WORD8_TO_BV8(mprgs8$2(3|->id_register8)),6,ib) & mppc$2 = 7 & INSTRUCTION_NEXT(mppc$2) = 8);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & address : WORD16 & ib : BIT & nw8 : BV8 & address = WORD8_TO_WORD16(mprgs8$2(13|->id_register8),mprgs8$2(14|->id_register8)) & ib = WORD8_TO_BV8(mpmem$2(address))(0) & nw8 = BV8_SET_BIT(WORD8_TO_BV8(mprgs8$2(3|->id_register8)),6,ib) & mppc$2 = 7 & INSTRUCTION_NEXT(mppc$2) = 9);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & address : WORD16 & ib : BIT & nw8 : BV8 & address = WORD8_TO_WORD16(mprgs8$2(13|->id_register8),mprgs8$2(14|->id_register8)) & ib = WORD8_TO_BV8(mpmem$2(address))(0) & nw8 = BV8_SET_BIT(WORD8_TO_BV8(mprgs8$2(3|->id_register8)),6,ib) & mppc$2 = 7 & INSTRUCTION_NEXT(mppc$2) = 10);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & address : WORD16 & ib : BIT & nw8 : BV8 & address = WORD8_TO_WORD16(mprgs8$2(13|->id_register8),mprgs8$2(14|->id_register8)) & ib = WORD8_TO_BV8(mpmem$2(address))(0) & nw8 = BV8_SET_BIT(WORD8_TO_BV8(mprgs8$2(3|->id_register8)),6,ib) & mppc$2 = 7 & INSTRUCTION_NEXT(mppc$2) = 11);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & address : WORD16 & ib : BIT & nw8 : BV8 & address = WORD8_TO_WORD16(mprgs8$2(13|->id_register8),mprgs8$2(14|->id_register8)) & ib = WORD8_TO_BV8(mpmem$2(address))(0) & nw8 = BV8_SET_BIT(WORD8_TO_BV8(mprgs8$2(3|->id_register8)),6,ib) & mppc$2 = 7 & INSTRUCTION_NEXT(mppc$2) = 12);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & address : WORD16 & ib : BIT & nw8 : BV8 & address = WORD8_TO_WORD16(mprgs8$2(13|->id_register8),mprgs8$2(14|->id_register8)) & ib = WORD8_TO_BV8(mpmem$2(address))(0) & nw8 = BV8_SET_BIT(WORD8_TO_BV8(mprgs8$2(3|->id_register8)),6,ib) & mppc$2 = 7 & INSTRUCTION_NEXT(mppc$2) = 13);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(mppc$2 = 8) & address : WORD16 & ib : BIT & nw8 : BV8 & address = WORD8_TO_WORD16(mprgs8$2(13|->id_register8),mprgs8$2(14|->id_register8)) & ib = WORD8_TO_BV8(mpmem$2(address))(0) & nw8 = BV8_SET_BIT(WORD8_TO_BV8(mprgs8$2(3|->id_register8)),6,ib) & mppc$2 = 7 & INSTRUCTION_NEXT(mppc$2) = 14);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & WORD8_TO_BV8(mprgs8$2(3|->id_register8))(6) = 0 & mppc$2 = 8 & INSTRUCTION_NEXT(mppc$2) = 1);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & WORD8_TO_BV8(mprgs8$2(3|->id_register8))(6) = 0 & mppc$2 = 8 & INSTRUCTION_NEXT(mppc$2) = 2);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & WORD8_TO_BV8(mprgs8$2(3|->id_register8))(6) = 0 & mppc$2 = 8 & INSTRUCTION_NEXT(mppc$2) = 3);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & WORD8_TO_BV8(mprgs8$2(3|->id_register8))(6) = 0 & mppc$2 = 8 & INSTRUCTION_NEXT(mppc$2) = 4);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & WORD8_TO_BV8(mprgs8$2(3|->id_register8))(6) = 0 & mppc$2 = 8 & INSTRUCTION_NEXT(mppc$2) = 5);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & WORD8_TO_BV8(mprgs8$2(3|->id_register8))(6) = 0 & mppc$2 = 8 & INSTRUCTION_NEXT(mppc$2) = 6);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & WORD8_TO_BV8(mprgs8$2(3|->id_register8))(6) = 0 & mppc$2 = 8 & INSTRUCTION_NEXT(mppc$2) = 7);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & WORD8_TO_BV8(mprgs8$2(3|->id_register8))(6) = 0 & mppc$2 = 8 & INSTRUCTION_NEXT(mppc$2) = 8);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & WORD8_TO_BV8(mprgs8$2(3|->id_register8))(6) = 0 & mppc$2 = 8 & INSTRUCTION_NEXT(mppc$2) = 9);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & WORD8_TO_BV8(mprgs8$2(3|->id_register8))(6) = 0 & mppc$2 = 8 & INSTRUCTION_NEXT(mppc$2) = 10);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & WORD8_TO_BV8(mprgs8$2(3|->id_register8))(6) = 0 & mppc$2 = 8 & INSTRUCTION_NEXT(mppc$2) = 11);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & WORD8_TO_BV8(mprgs8$2(3|->id_register8))(6) = 0 & mppc$2 = 8 & INSTRUCTION_NEXT(mppc$2) = 12);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & WORD8_TO_BV8(mprgs8$2(3|->id_register8))(6) = 0 & mppc$2 = 8 & INSTRUCTION_NEXT(mppc$2) = 13);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & WORD8_TO_BV8(mprgs8$2(3|->id_register8))(6) = 0 & mppc$2 = 8 & INSTRUCTION_NEXT(mppc$2) = 14);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(WORD8_TO_BV8(mprgs8$2(3|->id_register8))(6) = 0) & mppc$2 = 8 & INSTRUCTION_NEXT(INSTRUCTION_NEXT(mppc$2)) = 1);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(WORD8_TO_BV8(mprgs8$2(3|->id_register8))(6) = 0) & mppc$2 = 8 & INSTRUCTION_NEXT(INSTRUCTION_NEXT(mppc$2)) = 2);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(WORD8_TO_BV8(mprgs8$2(3|->id_register8))(6) = 0) & mppc$2 = 8 & INSTRUCTION_NEXT(INSTRUCTION_NEXT(mppc$2)) = 3);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(WORD8_TO_BV8(mprgs8$2(3|->id_register8))(6) = 0) & mppc$2 = 8 & INSTRUCTION_NEXT(INSTRUCTION_NEXT(mppc$2)) = 4);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(WORD8_TO_BV8(mprgs8$2(3|->id_register8))(6) = 0) & mppc$2 = 8 & INSTRUCTION_NEXT(INSTRUCTION_NEXT(mppc$2)) = 5);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(WORD8_TO_BV8(mprgs8$2(3|->id_register8))(6) = 0) & mppc$2 = 8 & INSTRUCTION_NEXT(INSTRUCTION_NEXT(mppc$2)) = 6);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(WORD8_TO_BV8(mprgs8$2(3|->id_register8))(6) = 0) & mppc$2 = 8 & INSTRUCTION_NEXT(INSTRUCTION_NEXT(mppc$2)) = 7);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(WORD8_TO_BV8(mprgs8$2(3|->id_register8))(6) = 0) & mppc$2 = 8 & INSTRUCTION_NEXT(INSTRUCTION_NEXT(mppc$2)) = 8);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(WORD8_TO_BV8(mprgs8$2(3|->id_register8))(6) = 0) & mppc$2 = 8 & INSTRUCTION_NEXT(INSTRUCTION_NEXT(mppc$2)) = 9);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(WORD8_TO_BV8(mprgs8$2(3|->id_register8))(6) = 0) & mppc$2 = 8 & INSTRUCTION_NEXT(INSTRUCTION_NEXT(mppc$2)) = 10);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(WORD8_TO_BV8(mprgs8$2(3|->id_register8))(6) = 0) & mppc$2 = 8 & INSTRUCTION_NEXT(INSTRUCTION_NEXT(mppc$2)) = 11);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(WORD8_TO_BV8(mprgs8$2(3|->id_register8))(6) = 0) & mppc$2 = 8 & INSTRUCTION_NEXT(INSTRUCTION_NEXT(mppc$2)) = 12);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(WORD8_TO_BV8(mprgs8$2(3|->id_register8))(6) = 0) & mppc$2 = 8 & INSTRUCTION_NEXT(INSTRUCTION_NEXT(mppc$2)) = 13);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & not(mppc$2 = 10) & not(mppc$2 = 9) & not(WORD8_TO_BV8(mprgs8$2(3|->id_register8))(6) = 0) & mppc$2 = 8 & INSTRUCTION_NEXT(INSTRUCTION_NEXT(mppc$2)) = 14);
  (0<=11);
  (11<=14);
  (0<=13);
  (13<=14);
  (13 = 0 => mpmem$2(0) = counter);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 8) & not(mppc$2 = 9) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & not(mppc$2 = 11) & mppc$2 = 10 & bfalse);
  "`Check preconditions of called operation, or While loop construction, or Assert predicates'" & "`Check preconditions of called operation, or While loop construction, or Assert predicates'" & "`Check preconditions of called operation, or While loop construction, or Assert predicates'" & "`Check preconditions of called operation, or While loop construction, or Assert predicates'" & "`Check preconditions of called operation, or While loop construction, or Assert predicates'" & "`Check preconditions of called operation, or While loop construction, or Assert predicates'" & "`Check preconditions of called operation, or While loop construction, or Assert predicates'" & "`Check preconditions of called operation, or While loop construction, or Assert predicates'" & "`Check preconditions of called operation, or While loop construction, or Assert predicates'" & "`Check preconditions of called operation, or While loop construction, or Assert predicates'" & "`Check preconditions of called operation, or While loop construction, or Assert predicates'" & "`Check preconditions of called operation, or While loop construction, or Assert predicates'";
  "`Check preconditions of called operation, or While loop construction, or Assert predicates'" & "`Check preconditions of called operation, or While loop construction, or Assert predicates'" & "`Check preconditions of called operation, or While loop construction, or Assert predicates'";
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 8) & not(mppc$2 = 9) & not(mppc$2 = 10) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & mppc$2 = 11 & INSTRUCTION_NEXT(mppc$2) = 1);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 8) & not(mppc$2 = 9) & not(mppc$2 = 10) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & mppc$2 = 11 & INSTRUCTION_NEXT(mppc$2) = 2);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 8) & not(mppc$2 = 9) & not(mppc$2 = 10) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & mppc$2 = 11 & INSTRUCTION_NEXT(mppc$2) = 3);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 8) & not(mppc$2 = 9) & not(mppc$2 = 10) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & mppc$2 = 11 & INSTRUCTION_NEXT(mppc$2) = 4);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 8) & not(mppc$2 = 9) & not(mppc$2 = 10) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & mppc$2 = 11 & INSTRUCTION_NEXT(mppc$2) = 5);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 8) & not(mppc$2 = 9) & not(mppc$2 = 10) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & mppc$2 = 11 & INSTRUCTION_NEXT(mppc$2) = 6);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 8) & not(mppc$2 = 9) & not(mppc$2 = 10) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & mppc$2 = 11 & INSTRUCTION_NEXT(mppc$2) = 7);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 8) & not(mppc$2 = 9) & not(mppc$2 = 10) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & mppc$2 = 11 & INSTRUCTION_NEXT(mppc$2) = 8);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 8) & not(mppc$2 = 9) & not(mppc$2 = 10) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & mppc$2 = 11 & INSTRUCTION_NEXT(mppc$2) = 9);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 8) & not(mppc$2 = 9) & not(mppc$2 = 10) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & mppc$2 = 11 & INSTRUCTION_NEXT(mppc$2) = 10);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 8) & not(mppc$2 = 9) & not(mppc$2 = 10) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & mppc$2 = 11 & INSTRUCTION_NEXT(mppc$2) = 11);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 8) & not(mppc$2 = 9) & not(mppc$2 = 10) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & mppc$2 = 11 & INSTRUCTION_NEXT(mppc$2) = 12);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 8) & not(mppc$2 = 9) & not(mppc$2 = 10) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & mppc$2 = 11 & INSTRUCTION_NEXT(mppc$2) = 13);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 8) & not(mppc$2 = 9) & not(mppc$2 = 10) & not(mppc$2 = 14) & not(mppc$2 = 13) & not(mppc$2 = 12) & mppc$2 = 11 & INSTRUCTION_NEXT(mppc$2) = 14);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 8) & not(mppc$2 = 9) & not(mppc$2 = 10) & not(mppc$2 = 11) & not(mppc$2 = 14) & not(mppc$2 = 13) & mppc$2 = 12 & bfalse);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 8) & not(mppc$2 = 9) & not(mppc$2 = 10) & not(mppc$2 = 11) & not(mppc$2 = 12) & not(mppc$2 = 14) & mppc$2 = 13 & INSTRUCTION_NEXT(mppc$2) = 1);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 8) & not(mppc$2 = 9) & not(mppc$2 = 10) & not(mppc$2 = 11) & not(mppc$2 = 12) & not(mppc$2 = 14) & mppc$2 = 13 & INSTRUCTION_NEXT(mppc$2) = 2);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 8) & not(mppc$2 = 9) & not(mppc$2 = 10) & not(mppc$2 = 11) & not(mppc$2 = 12) & not(mppc$2 = 14) & mppc$2 = 13 & INSTRUCTION_NEXT(mppc$2) = 3);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 8) & not(mppc$2 = 9) & not(mppc$2 = 10) & not(mppc$2 = 11) & not(mppc$2 = 12) & not(mppc$2 = 14) & mppc$2 = 13 & INSTRUCTION_NEXT(mppc$2) = 4);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 8) & not(mppc$2 = 9) & not(mppc$2 = 10) & not(mppc$2 = 11) & not(mppc$2 = 12) & not(mppc$2 = 14) & mppc$2 = 13 & INSTRUCTION_NEXT(mppc$2) = 5);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 8) & not(mppc$2 = 9) & not(mppc$2 = 10) & not(mppc$2 = 11) & not(mppc$2 = 12) & not(mppc$2 = 14) & mppc$2 = 13 & INSTRUCTION_NEXT(mppc$2) = 6);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 8) & not(mppc$2 = 9) & not(mppc$2 = 10) & not(mppc$2 = 11) & not(mppc$2 = 12) & not(mppc$2 = 14) & mppc$2 = 13 & INSTRUCTION_NEXT(mppc$2) = 7);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 8) & not(mppc$2 = 9) & not(mppc$2 = 10) & not(mppc$2 = 11) & not(mppc$2 = 12) & not(mppc$2 = 14) & mppc$2 = 13 & INSTRUCTION_NEXT(mppc$2) = 8);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 8) & not(mppc$2 = 9) & not(mppc$2 = 10) & not(mppc$2 = 11) & not(mppc$2 = 12) & not(mppc$2 = 14) & mppc$2 = 13 & INSTRUCTION_NEXT(mppc$2) = 9);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 8) & not(mppc$2 = 9) & not(mppc$2 = 10) & not(mppc$2 = 11) & not(mppc$2 = 12) & not(mppc$2 = 14) & mppc$2 = 13 & INSTRUCTION_NEXT(mppc$2) = 10);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 8) & not(mppc$2 = 9) & not(mppc$2 = 10) & not(mppc$2 = 11) & not(mppc$2 = 12) & not(mppc$2 = 14) & mppc$2 = 13 & INSTRUCTION_NEXT(mppc$2) = 11);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 8) & not(mppc$2 = 9) & not(mppc$2 = 10) & not(mppc$2 = 11) & not(mppc$2 = 12) & not(mppc$2 = 14) & mppc$2 = 13 & INSTRUCTION_NEXT(mppc$2) = 12);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 8) & not(mppc$2 = 9) & not(mppc$2 = 10) & not(mppc$2 = 11) & not(mppc$2 = 12) & not(mppc$2 = 14) & mppc$2 = 13 & INSTRUCTION_NEXT(mppc$2) = 13);
  ("`Local hypotheses'" & 0<=mppc$2 & mppc$2<=14 & 0<=mpsp$1 & mpmem$2(0) : 0..2 & (mppc$2 = 0 => mpmem$2(0) = counter) & (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0) & (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0) & (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1 & mprgs8$2(1|->id_register8) = 0) & (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6)) & (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0) & (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 0 & mprgs8$2(1|->id_register8) = 1) & (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(3|->id_register8),6) & bitget(mprgs8$2(3|->id_register8),6) = 1) & (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(13|->id_register8) = 0 & mprgs8$2(14|->id_register8) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(3|->id_register8),1) & bitget(mprgs8$2(3|->id_register8),1) = 1 & mprgs8$2(1|->id_register8) = color_step(counter)) & (mppc$2 = 15 => mpmem$2(0) = color_step(counter)) & mppc$2+1<=14 & not(mppc$2 = 0) & not(mppc$2 = 1) & not(mppc$2 = 2) & not(mppc$2 = 3) & not(mppc$2 = 4) & not(mppc$2 = 5) & not(mppc$2 = 6) & not(mppc$2 = 7) & not(mppc$2 = 8) & not(mppc$2 = 9) & not(mppc$2 = 10) & not(mppc$2 = 11) & not(mppc$2 = 12) & not(mppc$2 = 14) & mppc$2 = 13 & INSTRUCTION_NEXT(mppc$2) = 14);
  (0<=mppc$2);
  (mppc$2<=14);
  (mppc$2 = 0 => mpmem$2(0) = counter);
  (mppc$2 = 1 => mpmem$2(0) = counter & mprgs8$2(h) = 0);
  (mppc$2 = 2 => mpmem$2(0) = counter & mprgs8$2(h) = 0 & mprgs8$2(l) = 0);
  (mppc$2 = 3 => mpmem$2(0) = counter & mprgs8$2(h) = 0 & mprgs8$2(l) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(f_),6));
  (mppc$2 = 4 => mpmem$2(0) = counter & mprgs8$2(h) = 0 & mprgs8$2(l) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(f_),6) & bitget(mprgs8$2(f_),6) = 0);
  (mppc$2 = 5 => mpmem$2(0) = counter & mprgs8$2(h) = 0 & mprgs8$2(l) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(f_),1) & bitget(mprgs8$2(f_),6) = 1);
  (mppc$2 = 6 => mpmem$2(0) = counter & mprgs8$2(h) = 0 & mprgs8$2(l) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(f_),6) & bitget(mprgs8$2(f_),6) = 1 & mprgs8$2(a) = 0);
  (mppc$2 = 7 => mpmem$2(0) = counter & mprgs8$2(h) = 0 & mprgs8$2(l) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(f_),6) & bitget(mprgs8$2(f_),6) = 0);
  (mppc$2 = 8 => mpmem$2(0) = counter & mprgs8$2(h) = 0 & mprgs8$2(l) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(f_),6));
  (mppc$2 = 9 => mpmem$2(0) = counter & mprgs8$2(h) = 0 & mprgs8$2(l) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(f_),6) & bitget(mprgs8$2(f_),6) = 0);
  (mppc$2 = 10 => mpmem$2(0) = counter & mprgs8$2(h) = 0 & mprgs8$2(l) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(f_),6) & bitget(mprgs8$2(f_),6) = 1);
  (mppc$2 = 11 => mpmem$2(0) = counter & mprgs8$2(h) = 0 & mprgs8$2(l) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(f_),6) & bitget(mprgs8$2(f_),6) = 0);
  (mppc$2 = 12 => mpmem$2(0) = counter & mprgs8$2(h) = 0 & mprgs8$2(l) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(f_),6) & bitget(mprgs8$2(f_),6) = 0 & mprgs8$2(a) = 1);
  (mppc$2 = 13 => mpmem$2(0) = counter & mprgs8$2(h) = 0 & mprgs8$2(l) = 0 & bitget(mpmem$2(0),0) = bitget(mprgs8$2(f_),6) & bitget(mprgs8$2(f_),6) = 1);
  (mppc$2 = 14 => mpmem$2(0) = counter & mprgs8$2(h) = 0 & mprgs8$2(l) = 0 & bitget(mpmem$2(0),1) = bitget(mprgs8$2(f_),1) & bitget(mprgs8$2(f_),1) = 1 & mprgs8$2(a) = color_step(counter));
  (mppc$2 = 15 => mpmem$2(0) = color_step(counter));
  ("`Local hypotheses'" & not(mppcz$7777+1<=14) & 0<=mppcz$7777 & mppcz$7777<=14 & 0<=mpsp$1 & mpmemz$7777(0) : 0..2 & (mppcz$7777 = 0 => mpmemz$7777(0) = counter) & (mppcz$7777 = 1 => mpmemz$7777(0) = counter & mprgs8z$7777(13|->id_register8) = 0) & (mppcz$7777 = 2 => mpmemz$7777(0) = counter & mprgs8z$7777(13|->id_register8) = 0 & mprgs8z$7777(14|->id_register8) = 0) & (mppcz$7777 = 3 => mpmemz$7777(0) = counter & mprgs8z$7777(13|->id_register8) = 0 & mprgs8z$7777(14|->id_register8) = 0 & bitget(mpmemz$7777(0),1) = bitget(mprgs8z$7777(3|->id_register8),6)) & (mppcz$7777 = 4 => mpmemz$7777(0) = counter & mprgs8z$7777(13|->id_register8) = 0 & mprgs8z$7777(14|->id_register8) = 0 & bitget(mpmemz$7777(0),1) = bitget(mprgs8z$7777(3|->id_register8),6) & bitget(mprgs8z$7777(3|->id_register8),6) = 0) & (mppcz$7777 = 5 => mpmemz$7777(0) = counter & mprgs8z$7777(13|->id_register8) = 0 & mprgs8z$7777(14|->id_register8) = 0 & bitget(mpmemz$7777(0),1) = bitget(mprgs8z$7777(3|->id_register8),1) & bitget(mprgs8z$7777(3|->id_register8),6) = 1) & (mppcz$7777 = 6 => mpmemz$7777(0) = counter & mprgs8z$7777(13|->id_register8) = 0 & mprgs8z$7777(14|->id_register8) = 0 & bitget(mpmemz$7777(0),1) = bitget(mprgs8z$7777(3|->id_register8),6) & bitget(mprgs8z$7777(3|->id_register8),6) = 1 & mprgs8z$7777(1|->id_register8) = 0) & (mppcz$7777 = 7 => mpmemz$7777(0) = counter & mprgs8z$7777(13|->id_register8) = 0 & mprgs8z$7777(14|->id_register8) = 0 & bitget(mpmemz$7777(0),1) = bitget(mprgs8z$7777(3|->id_register8),6) & bitget(mprgs8z$7777(3|->id_register8),6) = 0) & (mppcz$7777 = 8 => mpmemz$7777(0) = counter & mprgs8z$7777(13|->id_register8) = 0 & mprgs8z$7777(14|->id_register8) = 0 & bitget(mpmemz$7777(0),0) = bitget(mprgs8z$7777(3|->id_register8),6)) & (mppcz$7777 = 9 => mpmemz$7777(0) = counter & mprgs8z$7777(13|->id_register8) = 0 & mprgs8z$7777(14|->id_register8) = 0 & bitget(mpmemz$7777(0),0) = bitget(mprgs8z$7777(3|->id_register8),6) & bitget(mprgs8z$7777(3|->id_register8),6) = 0) & (mppcz$7777 = 10 => mpmemz$7777(0) = counter & mprgs8z$7777(13|->id_register8) = 0 & mprgs8z$7777(14|->id_register8) = 0 & bitget(mpmemz$7777(0),0) = bitget(mprgs8z$7777(3|->id_register8),6) & bitget(mprgs8z$7777(3|->id_register8),6) = 1) & (mppcz$7777 = 11 => mpmemz$7777(0) = counter & mprgs8z$7777(13|->id_register8) = 0 & mprgs8z$7777(14|->id_register8) = 0 & bitget(mpmemz$7777(0),0) = bitget(mprgs8z$7777(3|->id_register8),6) & bitget(mprgs8z$7777(3|->id_register8),6) = 0) & (mppcz$7777 = 12 => mpmemz$7777(0) = counter & mprgs8z$7777(13|->id_register8) = 0 & mprgs8z$7777(14|->id_register8) = 0 & bitget(mpmemz$7777(0),0) = bitget(mprgs8z$7777(3|->id_register8),6) & bitget(mprgs8z$7777(3|->id_register8),6) = 0 & mprgs8z$7777(1|->id_register8) = 1) & (mppcz$7777 = 13 => mpmemz$7777(0) = counter & mprgs8z$7777(13|->id_register8) = 0 & mprgs8z$7777(14|->id_register8) = 0 & bitget(mpmemz$7777(0),0) = bitget(mprgs8z$7777(3|->id_register8),6) & bitget(mprgs8z$7777(3|->id_register8),6) = 1) & (mppcz$7777 = 14 => mpmemz$7777(0) = counter & mprgs8z$7777(13|->id_register8) = 0 & mprgs8z$7777(14|->id_register8) = 0 & bitget(mpmemz$7777(0),1) = bitget(mprgs8z$7777(3|->id_register8),1) & bitget(mprgs8z$7777(3|->id_register8),1) = 1 & mprgs8z$7777(1|->id_register8) = color_step(counter)) & (mppcz$7777 = 15 => mpmemz$7777(0) = color_step(counter)));
  "`Check that the invariant (mpmem(0) : 0..2) is preserved by the operation - ref 4.4, 5.5'";
  (mpmemz$7777(0) : 0..2)
END
&
THEORY Version IS
  POVersion(V3.8.3)(CLT == "V3.7.6")(local_op == OK)
END
