THEORY BalanceX IS
  BIT_VECTOR_DEFINITION,19,4,0,2,0,0,0;
  AssertionLemmas,19,4,0,2,0,0,0;
  Initialisation,0,0,0,0,0,0,0
END
&
THEORY ProofState IS
  Unproved;
  Unproved;
  Unproved;
  Unproved;
  Unproved;
  Unproved;
  Unproved;
  Unproved;
  Unproved;
  Unproved;
  Unproved;
  Unproved;
  Unproved;
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(0)
END
&
THEORY MethodList IS
  pr & pr & pr;
  eh(bv_xor) & ss & pr & pr & pr;
  eh(bv_xor) & pr & ah(bv_size(v1) = bv_size(v2)) & eh(bv_size) & pr;
  eh(bv_xor) & pr;
  eh(bv_or) & eh(bv_zero) & ss & pr & pr & pr;
  eh(bv_or) & ss & pr & fh(!(v1,v2,v3,indx$4).(v1: BIT_VECTOR & v2: BIT_VECTOR & v3: BIT_VECTOR & bv_size(v1) = bv_size(v2) & bv_size(v1) = bv_size(v3) & indx$4: 1..bv_size(v1) => bit_or(v1(indx$4),bit_or(v2(indx$4),v3(indx$4))) = bit_or(bit_or(v1(indx$4),v2(indx$4)),v3(indx$4)))) & pr & pr;
  pr & pr & pr & pr & ah(bit_or(v3(indx),bit_or(v1(indx),v2(indx))) = 1) & pr & dc(bit_or(v1(indx),v2(indx)) = 1) & dd & pr & dd & pr & dd & pr & pr;
  eh(bv_or) & ss & pr & ah(bv_size(v1) = bv_size(v2)) & pr & ah(bv_or = %(v1,v2).(v1: BIT_VECTOR & v2: BIT_VECTOR & bv_size(v1) = bv_size(v2) | %idx.(idx: 1..bv_size(v1) | bit_or(v1(idx),v2(idx))))) & pr & ah(bv_size(v1) = bv_size(v2)) & eh(bv_size) & pr & pr;
  eh(bv_or) & ah(!(b1,b2).(b1: 0..1 & b2: 0..1 & bit_or(b1,b2) = 0 => bit_or(b2,b1) = 0) & !(b1,b2).(b1: 0..1 & b2: 0..1 & bit_or(b1,b2) = 1 => bit_or(b2,b1) = 1) & !(b1,b2).(b1: 0..1 & b2: 0..1 => bit_or(b1,b2) = bit_or(b2,b1))) & pr & pr & pr & pr & pr & pr;
  eh(bv_or) & pr;
  eh(bv_one) & eh(bv_and) & ah(!b1.(b1: 0..1 => bit_and(b1,1) = b1)) & pr & pr & pr & pr;
  eh(bv_zero) & pr;
  pr & pr & pr & pr & pr & pr & pr;
  eh(bv_and) & ah(!(b1,b2).(b1: 0..1 & b2: 0..1 => bit_and(b1,b2) = bit_and(b2,b1))) & ss & ah(!(b1,b2).(b1: 0..1 & b2: 0..1 => bit_and(b1,b2) = bit_and(b2,b1))) & ss & ah(!(b1,b2).(b1: 0..1 & b2: 0..1 => bit_and(b1,b2) = bit_and(b2,b1))) & ss & pr;
  eh(bv_and) & eh(bv_size) & pr;
  eh(bv_sub) & eh(BV_INDX) & pr;
  eh(bv_catenate) & eh(bv_size) & pr;
  pr;
  pr
END
&
THEORY PassList IS
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?
END
&
THEORY ManForms 
END
&
THEORY Version IS
  POVersion(V3.8.3)(CLT == "V3.7.6")(genOPO == KO,local_op == OK);
  PRVersion("V3.3.3.p39")(CLT == "V3.7.6")
END
